
main.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000134  08000000  08000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .flashtext    00000000  08000134  08000134  000100e4  2**0
                  CONTENTS
  2 .text         0000179c  08000134  08000134  00008134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         000000e4  20000000  080018d0  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000588  200000e4  080019b4  000100e4  2**2
                  ALLOC
  5 ._usrstack    00000100  2000066c  08001f3c  000100e4  2**0
                  ALLOC
  6 .comment      00000020  00000000  00000000  000100e4  2**0
                  CONTENTS, READONLY
  7 .ARM.attributes 00000031  00000000  00000000  00010104  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e58  00000000  00000000  00010135  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00009ecb  00000000  00000000  00010f8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000023d2  00000000  00000000  0001ae58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000301b  00000000  00000000  0001d22a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001df8  00000000  00000000  00020248  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000037ad  00000000  00000000  00022040  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00005662  00000000  00000000  000257ed  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000e30  00000000  00000000  0002ae4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20005000 	andcs	r5, r0, r0
 8000004:	08000b1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp}
 8000008:	0800023f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r9}
 800000c:	08000241 	stmdaeq	r0, {r0, r6, r9}
 8000010:	08000243 	stmdaeq	r0, {r0, r1, r6, r9}
 8000014:	08000245 	stmdaeq	r0, {r0, r2, r6, r9}
 8000018:	08000247 	stmdaeq	r0, {r0, r1, r2, r6, r9}
	...
 800002c:	0800024b 	stmdaeq	r0, {r0, r1, r3, r6, r9}
 8000030:	08000249 	stmdaeq	r0, {r0, r3, r6, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	0800024d 	stmdaeq	r0, {r0, r2, r3, r6, r9}
 800003c:	08000251 	stmdaeq	r0, {r0, r4, r6, r9}
 8000040:	08000265 	stmdaeq	r0, {r0, r2, r5, r6, r9}
 8000044:	08000267 	stmdaeq	r0, {r0, r1, r2, r5, r6, r9}
 8000048:	08000269 	stmdaeq	r0, {r0, r3, r5, r6, r9}
 800004c:	0800026b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9}
 8000050:	0800026d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9}
 8000054:	0800026f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9}
 8000058:	08000271 	stmdaeq	r0, {r0, r4, r5, r6, r9}
 800005c:	08000273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9}
 8000060:	08000275 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9}
 8000064:	08000277 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r9}
 8000068:	08000279 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9}
	...
 8000088:	0800027b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r9}
 800008c:	0800027d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9}
 8000090:	0800027f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9}
 8000094:	08000283 	stmdaeq	r0, {r0, r1, r7, r9}
 8000098:	08000285 	stmdaeq	r0, {r0, r2, r7, r9}
 800009c:	08000287 	stmdaeq	r0, {r0, r1, r2, r7, r9}
 80000a0:	08000289 	stmdaeq	r0, {r0, r3, r7, r9}
 80000a4:	0800028b 	stmdaeq	r0, {r0, r1, r3, r7, r9}
 80000a8:	0800028d 	stmdaeq	r0, {r0, r2, r3, r7, r9}
 80000ac:	0800028f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r9}
 80000b0:	08000291 	stmdaeq	r0, {r0, r4, r7, r9}
 80000b4:	080002a5 	stmdaeq	r0, {r0, r2, r5, r7, r9}
 80000b8:	080002a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9}
 80000bc:	080002a9 	stmdaeq	r0, {r0, r3, r5, r7, r9}
 80000c0:	080002ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r9}
 80000c4:	080002ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9}
 80000c8:	080002af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9}
 80000cc:	080002b1 	stmdaeq	r0, {r0, r4, r5, r7, r9}
 80000d0:	080002b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9}
 80000d4:	080002b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9}
 80000d8:	080002b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9}
 80000dc:	080002f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9}
 80000e0:	080002f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9}
 80000e4:	080002f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9}
 80000e8:	080002fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9}
 80000ec:	080002fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9}
 80000f0:	080002ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r9}
 80000f4:	08000301 	stmdaeq	r0, {r0, r8, r9}
 80000f8:	08000303 	stmdaeq	r0, {r0, r1, r8, r9}
 80000fc:	08000305 	stmdaeq	r0, {r0, r2, r8, r9}
 8000100:	08000307 	stmdaeq	r0, {r0, r1, r2, r8, r9}
 8000104:	08000309 	stmdaeq	r0, {r0, r3, r8, r9}
 8000108:	0800030b 	stmdaeq	r0, {r0, r1, r3, r8, r9}
 800010c:	0800030d 	stmdaeq	r0, {r0, r2, r3, r8, r9}
 8000110:	0800030f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9}
 8000114:	08000311 	stmdaeq	r0, {r0, r4, r8, r9}
 8000118:	08000313 	stmdaeq	r0, {r0, r1, r4, r8, r9}
 800011c:	08000315 	stmdaeq	r0, {r0, r2, r4, r8, r9}
 8000120:	08000317 	stmdaeq	r0, {r0, r1, r2, r4, r8, r9}
 8000124:	08000319 	stmdaeq	r0, {r0, r3, r4, r8, r9}
 8000128:	0800031b 	stmdaeq	r0, {r0, r1, r3, r4, r8, r9}
 800012c:	0800031d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9}
 8000130:	0000f85f 	andeq	pc, r0, pc, asr r8	; <UNPREDICTABLE>

Disassembly of section .text:

08000134 <ClearTimeOutBuffer>:
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
 8000134:	4b01      	ldr	r3, [pc, #4]	; (800013c <ClearTimeOutBuffer+0x8>)
 8000136:	2200      	movs	r2, #0
 8000138:	601a      	str	r2, [r3, #0]
 800013a:	4770      	bx	lr
 800013c:	200000e4 	andcs	r0, r0, r4, ror #1

08000140 <Interrupt1ms>:
}

//For Dynamixel
void Interrupt1ms(void)
{
	gu32TimingCounter1ms++;
 8000140:	4b02      	ldr	r3, [pc, #8]	; (800014c <Interrupt1ms+0xc>)
 8000142:	681a      	ldr	r2, [r3, #0]
 8000144:	3201      	adds	r2, #1
 8000146:	601a      	str	r2, [r3, #0]
 8000148:	4770      	bx	lr
 800014a:	bf00      	nop
 800014c:	200000e4 	andcs	r0, r0, r4, ror #1

08000150 <USB_TxDString>:
    USB_TxDByte( bByte+'0');
}


void USB_TxDString(char *str)
{
 8000150:	b510      	push	{r4, lr}
 8000152:	1e44      	subs	r4, r0, #1
	int i;
	for(i=0; str[i] ; i++)
 8000154:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 8000158:	b110      	cbz	r0, 8000160 <USB_TxDString+0x10>
	{
		USB_TxDByte(str[i]);
 800015a:	f000 fb37 	bl	80007cc <USB_TxDByte>
 800015e:	e7f9      	b.n	8000154 <USB_TxDString+0x4>
	}
}
 8000160:	bd10      	pop	{r4, pc}
	...

08000164 <Delay>:
* Input          : nTime: specifies the delay time length, in milliseconds.
* Output         : None
* Return         : None
*******************************************************************************/
void Delay(u32 nTime)
{
 8000164:	b510      	push	{r4, lr}
 8000166:	4604      	mov	r4, r0
	/* Enable the SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Enable);
 8000168:	2001      	movs	r0, #1
 800016a:	f000 fcbf 	bl	8000aec <SysTick_CounterCmd>

	TimingDelay = nTime;
 800016e:	4b07      	ldr	r3, [pc, #28]	; (800018c <Delay+0x28>)
 8000170:	601c      	str	r4, [r3, #0]

	while(TimingDelay != 0);
 8000172:	681c      	ldr	r4, [r3, #0]
 8000174:	2c00      	cmp	r4, #0
 8000176:	d1fc      	bne.n	8000172 <Delay+0xe>

	/* Disable SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Disable);
 8000178:	f06f 0001 	mvn.w	r0, #1
 800017c:	f000 fcb6 	bl	8000aec <SysTick_CounterCmd>
	/* Clear SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Clear);
 8000180:	4620      	mov	r0, r4
}
 8000182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	while(TimingDelay != 0);

	/* Disable SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Disable);
	/* Clear SysTick Counter */
	SysTick_CounterCmd(SysTick_Counter_Clear);
 8000186:	f000 bcb1 	b.w	8000aec <SysTick_CounterCmd>
 800018a:	bf00      	nop
 800018c:	20000184 	andcs	r0, r0, r4, lsl #3

08000190 <RCC_Configuration>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_Configuration(void)
{
 8000190:	b513      	push	{r0, r1, r4, lr}
  /* RCC system reset(for debug purpose) */
  RCC_DeInit();
 8000192:	f000 fbef 	bl	8000974 <RCC_DeInit>

  /* Enable HSE */
    RCC_HSEConfig(RCC_HSE_ON);
 8000196:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 800019a:	f000 fc09 	bl	80009b0 <RCC_HSEConfig>

  /* Wait till HSE is ready */
    HSEStartUpStatus = RCC_WaitForHSEStartUp();
 800019e:	f000 fc89 	bl	8000ab4 <RCC_WaitForHSEStartUp>
 80001a2:	4b23      	ldr	r3, [pc, #140]	; (8000230 <RCC_Configuration+0xa0>)

  if(HSEStartUpStatus == SUCCESS)
 80001a4:	2801      	cmp	r0, #1

  /* Enable HSE */
    RCC_HSEConfig(RCC_HSE_ON);

  /* Wait till HSE is ready */
    HSEStartUpStatus = RCC_WaitForHSEStartUp();
 80001a6:	4604      	mov	r4, r0
 80001a8:	7018      	strb	r0, [r3, #0]

  if(HSEStartUpStatus == SUCCESS)
 80001aa:	d005      	beq.n	80001b8 <RCC_Configuration+0x28>
  }
	/* Enable peripheral clocks --------------------------------------------------*/
	//RCC_ADCCLKConfig(RCC_PCLK2_Div6);    // added 2012-05-10 jason

	/* Enable USART1, GPIOA, GPIOB, and AFIO clocks */ //add RCC_APB2Periph_GPIOC for USB_DISCONNECT pin by sm.lee 2012-08-13
	RCC_APB2PeriphClockCmd(	RCC_APB2Periph_USART1 |
 80001ac:	f244 001d 	movw	r0, #16413	; 0x401d
 80001b0:	2101      	movs	r1, #1
 80001b2:	f000 fc5f 	bl	8000a74 <RCC_APB2PeriphClockCmd>
 80001b6:	e028      	b.n	800020a <RCC_Configuration+0x7a>
    HSEStartUpStatus = RCC_WaitForHSEStartUp();

  if(HSEStartUpStatus == SUCCESS)
  {
    /* Enable Prefetch Buffer */
    FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
 80001b8:	2010      	movs	r0, #16
 80001ba:	f000 fb29 	bl	8000810 <FLASH_PrefetchBufferCmd>

    /* Flash 2 wait state */
    FLASH_SetLatency(FLASH_Latency_2);
 80001be:	2002      	movs	r0, #2
 80001c0:	f000 fb1a 	bl	80007f8 <FLASH_SetLatency>

    /* HCLK = SYSCLK */
    RCC_HCLKConfig(RCC_SYSCLK_Div1); 
 80001c4:	2000      	movs	r0, #0
 80001c6:	f000 fc31 	bl	8000a2c <RCC_HCLKConfig>
  
    /* PCLK2 = HCLK */
    RCC_PCLK2Config(RCC_HCLK_Div1); 
 80001ca:	2000      	movs	r0, #0
 80001cc:	f000 fc42 	bl	8000a54 <RCC_PCLK2Config>

    /* PCLK1 = HCLK/2 */
    RCC_PCLK1Config(RCC_HCLK_Div2);
 80001d0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80001d4:	f000 fc34 	bl	8000a40 <RCC_PCLK1Config>

    /* PLLCLK = 8MHz * 9 = 72 MHz */
    RCC_PLLConfig(RCC_PLLSource_HSE_Div1, RCC_PLLMul_9);
 80001d8:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 80001dc:	f44f 11e0 	mov.w	r1, #1835008	; 0x1c0000
 80001e0:	f000 fc02 	bl	80009e8 <RCC_PLLConfig>

    /* Enable PLL */ 
	RCC_PLLCmd(ENABLE);
 80001e4:	4620      	mov	r0, r4
 80001e6:	f000 fc09 	bl	80009fc <RCC_PLLCmd>

    /* Wait till PLL is ready */
    while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
 80001ea:	2039      	movs	r0, #57	; 0x39
 80001ec:	f000 fc4e 	bl	8000a8c <RCC_GetFlagStatus>
 80001f0:	2800      	cmp	r0, #0
 80001f2:	d0fa      	beq.n	80001ea <RCC_Configuration+0x5a>
    {
    }
    /* Select PLL as system clock source */
    RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
 80001f4:	2002      	movs	r0, #2
 80001f6:	f000 fc07 	bl	8000a08 <RCC_SYSCLKConfig>
    /* Select USBCLK source */
    RCC_USBCLKConfig(RCC_USBCLKSource_PLLCLK_1Div5);
 80001fa:	2000      	movs	r0, #0
 80001fc:	f000 fc34 	bl	8000a68 <RCC_USBCLKConfig>
    /* Wait till PLL is used as system clock source */
    while(RCC_GetSYSCLKSource() != 0x08)
 8000200:	f000 fc0c 	bl	8000a1c <RCC_GetSYSCLKSource>
 8000204:	2808      	cmp	r0, #8
 8000206:	d1fb      	bne.n	8000200 <RCC_Configuration+0x70>
 8000208:	e7d0      	b.n	80001ac <RCC_Configuration+0x1c>
						    ENABLE);

        while (1) {
            GPIO_InitTypeDef GPIO_InitStructure;
            GPIO_InitStructure.GPIO_Pin = PIN_LED;
            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 800020a:	2301      	movs	r3, #1
						    RCC_APB2Periph_AFIO,
						    ENABLE);

        while (1) {
            GPIO_InitTypeDef GPIO_InitStructure;
            GPIO_InitStructure.GPIO_Pin = PIN_LED;
 800020c:	2402      	movs	r4, #2
            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
 800020e:	f88d 3006 	strb.w	r3, [sp, #6]
            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
            GPIO_Init(PORT_LED, &GPIO_InitStructure);
 8000212:	a901      	add	r1, sp, #4

        while (1) {
            GPIO_InitTypeDef GPIO_InitStructure;
            GPIO_InitStructure.GPIO_Pin = PIN_LED;
            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 8000214:	2310      	movs	r3, #16
            GPIO_Init(PORT_LED, &GPIO_InitStructure);
 8000216:	4807      	ldr	r0, [pc, #28]	; (8000234 <RCC_Configuration+0xa4>)
						    RCC_APB2Periph_AFIO,
						    ENABLE);

        while (1) {
            GPIO_InitTypeDef GPIO_InitStructure;
            GPIO_InitStructure.GPIO_Pin = PIN_LED;
 8000218:	f8ad 4004 	strh.w	r4, [sp, #4]
            GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
            GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 800021c:	f88d 3007 	strb.w	r3, [sp, #7]
            GPIO_Init(PORT_LED, &GPIO_InitStructure);
 8000220:	f000 fb56 	bl	80008d0 <GPIO_Init>
            GPIO_SetBits(PORT_LED, PIN_LED);		// LED Off
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <RCC_Configuration+0xa4>)
 8000226:	4621      	mov	r1, r4
 8000228:	f000 fba0 	bl	800096c <GPIO_SetBits>
 800022c:	e7ed      	b.n	800020a <RCC_Configuration+0x7a>
 800022e:	bf00      	nop
 8000230:	20000180 	andcs	r0, r0, r0, lsl #3
 8000234:	40010c00 	andmi	r0, r1, r0, lsl #24

08000238 <main>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
int main(void)
{
 8000238:	b508      	push	{r3, lr}
	/* System Clocks Configuration */
	RCC_Configuration();
 800023a:	f7ff ffa9 	bl	8000190 <RCC_Configuration>

0800023e <NMIException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void NMIException(void)
{
 800023e:	4770      	bx	lr

08000240 <HardFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void HardFaultException(void)
{
 8000240:	4770      	bx	lr

08000242 <MemManageException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void MemManageException(void)
{
 8000242:	4770      	bx	lr

08000244 <BusFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void BusFaultException(void)
{
 8000244:	4770      	bx	lr

08000246 <UsageFaultException>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UsageFaultException(void)
{
 8000246:	4770      	bx	lr

08000248 <DebugMonitor>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DebugMonitor(void)
{
 8000248:	4770      	bx	lr

0800024a <SVCHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SVCHandler(void)
{
 800024a:	4770      	bx	lr

0800024c <PendSVC>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void PendSVC(void)
{
 800024c:	4770      	bx	lr
	...

08000250 <SysTickHandler>:
{

	//IWDG_ReloadCounter(); //if you want to prevent resetting system, enable this function and adjust the timing
	//TxDString("IWDG counter reset!");

	if (TimingDelay != 0x00)
 8000250:	4b03      	ldr	r3, [pc, #12]	; (8000260 <SysTickHandler+0x10>)
 8000252:	681a      	ldr	r2, [r3, #0]
 8000254:	b112      	cbz	r2, 800025c <SysTickHandler+0xc>
	{ 
		TimingDelay--;
 8000256:	681a      	ldr	r2, [r3, #0]
 8000258:	3a01      	subs	r2, #1
 800025a:	601a      	str	r2, [r3, #0]
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop
 8000260:	20000184 	andcs	r0, r0, r4, lsl #3

08000264 <WWDG_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void WWDG_IRQHandler(void)
{
 8000264:	4770      	bx	lr

08000266 <PVD_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void PVD_IRQHandler(void)
{
 8000266:	4770      	bx	lr

08000268 <TAMPER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TAMPER_IRQHandler(void)
{
 8000268:	4770      	bx	lr

0800026a <RTC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_IRQHandler(void)
{
 800026a:	4770      	bx	lr

0800026c <FLASH_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void FLASH_IRQHandler(void)
{
 800026c:	4770      	bx	lr

0800026e <RCC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_IRQHandler(void)
{
 800026e:	4770      	bx	lr

08000270 <EXTI0_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI0_IRQHandler(void)
{
 8000270:	4770      	bx	lr

08000272 <EXTI1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI1_IRQHandler(void)
{
 8000272:	4770      	bx	lr

08000274 <EXTI2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI2_IRQHandler(void)
{
 8000274:	4770      	bx	lr

08000276 <EXTI3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI3_IRQHandler(void)
{
 8000276:	4770      	bx	lr

08000278 <EXTI4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI4_IRQHandler(void)
{
 8000278:	4770      	bx	lr

0800027a <ADC1_2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void ADC1_2_IRQHandler(void)
{
 800027a:	4770      	bx	lr

0800027c <USB_HP_CAN_TX_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USB_HP_CAN_TX_IRQHandler(void)
{
 800027c:	4770      	bx	lr

0800027e <USB_LP_CAN_RX0_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USB_LP_CAN_RX0_IRQHandler(void)
{
	__USBCDC_ISR();
 800027e:	f000 b8fd 	b.w	800047c <__USBCDC_ISR>

08000282 <CAN_RX1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void CAN_RX1_IRQHandler(void)
{
 8000282:	4770      	bx	lr

08000284 <CAN_SCE_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void CAN_SCE_IRQHandler(void)
{
 8000284:	4770      	bx	lr

08000286 <EXTI9_5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI9_5_IRQHandler(void)
{
 8000286:	4770      	bx	lr

08000288 <TIM1_BRK_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
 8000288:	4770      	bx	lr

0800028a <TIM1_UP_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
 800028a:	4770      	bx	lr

0800028c <TIM1_TRG_COM_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
 800028c:	4770      	bx	lr

0800028e <TIM1_CC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
 800028e:	4770      	bx	lr

08000290 <TIM2_IRQHandler>:
extern u8 CheckTimeOut(void);
extern void Interrupt1ms(void);
extern vu32      gu32TimingCounter1ms, gw1msCounter;

void TIM2_IRQHandler(void)
{
 8000290:	b508      	push	{r3, lr}

	/* Clear TIM2 update interrupt */
		TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 8000292:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000296:	2101      	movs	r1, #1
 8000298:	f000 fc23 	bl	8000ae2 <TIM_ClearITPendingBit>

		/* Toggle Red */
		//LED(YELLOW);
		Interrupt1ms();

}
 800029c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	/* Clear TIM2 update interrupt */
		TIM_ClearITPendingBit(TIM2, TIM_IT_Update);

		/* Toggle Red */
		//LED(YELLOW);
		Interrupt1ms();
 80002a0:	f7ff bf4e 	b.w	8000140 <Interrupt1ms>

080002a4 <TIM3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM3_IRQHandler(void)
{
 80002a4:	4770      	bx	lr

080002a6 <TIM4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM4_IRQHandler(void)
{
 80002a6:	4770      	bx	lr

080002a8 <I2C1_EV_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
 80002a8:	4770      	bx	lr

080002aa <I2C1_ER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
 80002aa:	4770      	bx	lr

080002ac <I2C2_EV_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
 80002ac:	4770      	bx	lr

080002ae <I2C2_ER_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
 80002ae:	4770      	bx	lr

080002b0 <SPI1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI1_IRQHandler(void)
{
 80002b0:	4770      	bx	lr

080002b2 <SPI2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI2_IRQHandler(void)
{
 80002b2:	4770      	bx	lr

080002b4 <USART1_IRQHandler>:
* Return         : None
*******************************************************************************/
extern volatile u8 gwpUSARTBuffer[USART_BUFFER_SIZE+1];
extern volatile u16 gwUSARTWritePtr;
void USART1_IRQHandler(void)
{
 80002b4:	4770      	bx	lr
	...

080002b8 <USART2_IRQHandler>:


	//modified @new CM-900 for downloading 2012-07-24
	static u32 sr;
	/* Read one byte from the receive data register */
	gwpUSARTBuffer[(gwUSARTWritePtr++)&USART_BUFFER_SIZE] = USART_ReceiveData(USART2);
 80002b8:	4a0a      	ldr	r2, [pc, #40]	; (80002e4 <USART2_IRQHandler+0x2c>)
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART2_IRQHandler(void)
{
 80002ba:	b538      	push	{r3, r4, r5, lr}


	//modified @new CM-900 for downloading 2012-07-24
	static u32 sr;
	/* Read one byte from the receive data register */
	gwpUSARTBuffer[(gwUSARTWritePtr++)&USART_BUFFER_SIZE] = USART_ReceiveData(USART2);
 80002bc:	8813      	ldrh	r3, [r2, #0]
 80002be:	4c0a      	ldr	r4, [pc, #40]	; (80002e8 <USART2_IRQHandler+0x30>)
 80002c0:	b29b      	uxth	r3, r3
 80002c2:	1c59      	adds	r1, r3, #1
 80002c4:	b289      	uxth	r1, r1
 80002c6:	4620      	mov	r0, r4
 80002c8:	f3c3 0509 	ubfx	r5, r3, #0, #10
 80002cc:	8011      	strh	r1, [r2, #0]
 80002ce:	f000 fc21 	bl	8000b14 <USART_ReceiveData>
 80002d2:	4b06      	ldr	r3, [pc, #24]	; (80002ec <USART2_IRQHandler+0x34>)
 80002d4:	b2c0      	uxtb	r0, r0
 80002d6:	5558      	strb	r0, [r3, r5]
	sr = USART2->SR;
 80002d8:	8822      	ldrh	r2, [r4, #0]
 80002da:	4b05      	ldr	r3, [pc, #20]	; (80002f0 <USART2_IRQHandler+0x38>)
 80002dc:	b292      	uxth	r2, r2
 80002de:	601a      	str	r2, [r3, #0]
 80002e0:	bd38      	pop	{r3, r4, r5, pc}
 80002e2:	bf00      	nop
 80002e4:	20000188 	andcs	r0, r0, r8, lsl #3
 80002e8:	40004400 	andmi	r4, r0, r0, lsl #8
 80002ec:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80002f0:	20000158 	andcs	r0, r0, r8, asr r1

080002f4 <USART3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART3_IRQHandler(void)
{
 80002f4:	4770      	bx	lr

080002f6 <EXTI15_10_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
 80002f6:	4770      	bx	lr

080002f8 <RTCAlarm_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
 80002f8:	4770      	bx	lr

080002fa <USBWakeUp_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 80002fa:	4770      	bx	lr

080002fc <TIM8_BRK_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_BRK_IRQHandler(void)
{
 80002fc:	4770      	bx	lr

080002fe <TIM8_UP_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_UP_IRQHandler(void)
{
 80002fe:	4770      	bx	lr

08000300 <TIM8_TRG_COM_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_TRG_COM_IRQHandler(void)
{
 8000300:	4770      	bx	lr

08000302 <TIM8_CC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM8_CC_IRQHandler(void)
{
 8000302:	4770      	bx	lr

08000304 <ADC3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void ADC3_IRQHandler(void)
{
 8000304:	4770      	bx	lr

08000306 <FSMC_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void FSMC_IRQHandler(void)
{
 8000306:	4770      	bx	lr

08000308 <SDIO_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SDIO_IRQHandler(void)
{
 8000308:	4770      	bx	lr

0800030a <TIM5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM5_IRQHandler(void)
{
 800030a:	4770      	bx	lr

0800030c <SPI3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void SPI3_IRQHandler(void)
{
 800030c:	4770      	bx	lr

0800030e <UART4_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UART4_IRQHandler(void)
{
 800030e:	4770      	bx	lr

08000310 <UART5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void UART5_IRQHandler(void)
{
 8000310:	4770      	bx	lr

08000312 <TIM6_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM6_IRQHandler(void)
{
 8000312:	4770      	bx	lr

08000314 <TIM7_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void TIM7_IRQHandler(void)
{
 8000314:	4770      	bx	lr

08000316 <DMA2_Channel1_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel1_IRQHandler(void)
{
 8000316:	4770      	bx	lr

08000318 <DMA2_Channel2_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel2_IRQHandler(void)
{
 8000318:	4770      	bx	lr

0800031a <DMA2_Channel3_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel3_IRQHandler(void)
{
 800031a:	4770      	bx	lr

0800031c <DMA2_Channel4_5_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA2_Channel4_5_IRQHandler(void)
{
 800031c:	4770      	bx	lr

0800031e <EP1_IN_Callback>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void EP1_IN_Callback (void)
{
 800031e:	4770      	bx	lr

08000320 <WriteFlash64>:
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000324:	4b36      	ldr	r3, [pc, #216]	; (8000400 <WriteFlash64+0xe0>)
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 8000326:	b085      	sub	sp, #20

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000328:	781b      	ldrb	r3, [r3, #0]
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 800032a:	4604      	mov	r4, r0

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 800032c:	2b01      	cmp	r3, #1
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}


bool WriteFlash64(u8* RxBuffer, u16 RxCount ){
 800032e:	4688      	mov	r8, r1

	u16 lFlashCount;
	u8 lTheRestCount=0;
	volatile FLASH_Status FLASHStatus;

	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
 8000330:	d062      	beq.n	80003f8 <WriteFlash64+0xd8>
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);
 8000332:	f001 0603 	and.w	r6, r1, #3
 8000336:	f1c6 0604 	rsb	r6, r6, #4
 800033a:	b2f6      	uxtb	r6, r6

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 800033c:	2500      	movs	r5, #0
 800033e:	4545      	cmp	r5, r8
 8000340:	d24a      	bcs.n	80003d8 <WriteFlash64+0xb8>
		TxDByte(RxBuffer[lFlashCount]);
		TxDByte(RxBuffer[lFlashCount+1]);
		TxDByte(RxBuffer[lFlashCount+2]);
		TxDByte(RxBuffer[lFlashCount+3]);
#endif
		u32 data = (RxBuffer[lFlashCount+3]<<24)+(RxBuffer[lFlashCount+2]<<16)+(RxBuffer[lFlashCount+1]<<8)+RxBuffer[lFlashCount];
 8000342:	f105 0a02 	add.w	sl, r5, #2
 8000346:	f814 300a 	ldrb.w	r3, [r4, sl]
 800034a:	f105 0b03 	add.w	fp, r5, #3
 800034e:	f814 100b 	ldrb.w	r1, [r4, fp]
 8000352:	f105 0901 	add.w	r9, r5, #1
 8000356:	041b      	lsls	r3, r3, #16
 8000358:	eb03 6301 	add.w	r3, r3, r1, lsl #24
 800035c:	f814 1009 	ldrb.w	r1, [r4, r9]
		FLASHStatus = FLASH_ProgramWord(gwAddressPointer, data);
 8000360:	4f28      	ldr	r7, [pc, #160]	; (8000404 <WriteFlash64+0xe4>)
		TxDByte(RxBuffer[lFlashCount]);
		TxDByte(RxBuffer[lFlashCount+1]);
		TxDByte(RxBuffer[lFlashCount+2]);
		TxDByte(RxBuffer[lFlashCount+3]);
#endif
		u32 data = (RxBuffer[lFlashCount+3]<<24)+(RxBuffer[lFlashCount+2]<<16)+(RxBuffer[lFlashCount+1]<<8)+RxBuffer[lFlashCount];
 8000362:	eb03 2301 	add.w	r3, r3, r1, lsl #8
 8000366:	5d61      	ldrb	r1, [r4, r5]
 8000368:	1962      	adds	r2, r4, r5
 800036a:	440b      	add	r3, r1
		FLASHStatus = FLASH_ProgramWord(gwAddressPointer, data);
 800036c:	6838      	ldr	r0, [r7, #0]
 800036e:	4619      	mov	r1, r3
 8000370:	9201      	str	r2, [sp, #4]
 8000372:	9300      	str	r3, [sp, #0]
 8000374:	f000 fa88 	bl	8000888 <FLASH_ProgramWord>
 8000378:	f88d 000f 	strb.w	r0, [sp, #15]

		if( (*(vu32*)gwAddressPointer) != data )
 800037c:	6839      	ldr	r1, [r7, #0]
 800037e:	9b00      	ldr	r3, [sp, #0]
 8000380:	6809      	ldr	r1, [r1, #0]
 8000382:	9a01      	ldr	r2, [sp, #4]
 8000384:	4299      	cmp	r1, r3
 8000386:	d001      	beq.n	800038c <WriteFlash64+0x6c>
		{
			USB_TxDString("\r\n Download Failed!");
 8000388:	481f      	ldr	r0, [pc, #124]	; (8000408 <WriteFlash64+0xe8>)
 800038a:	e004      	b.n	8000396 <WriteFlash64+0x76>
			break;
		}

		if( gwAddressPointer > FLASH_END_ADDRESS )
 800038c:	6839      	ldr	r1, [r7, #0]
 800038e:	4b1f      	ldr	r3, [pc, #124]	; (800040c <WriteFlash64+0xec>)
 8000390:	4299      	cmp	r1, r3
 8000392:	d903      	bls.n	800039c <WriteFlash64+0x7c>
		{
			USB_TxDString("\r\n Download Overflow!");
 8000394:	481e      	ldr	r0, [pc, #120]	; (8000410 <WriteFlash64+0xf0>)
 8000396:	f7ff fedb 	bl	8000150 <USB_TxDString>
			break;
 800039a:	e01d      	b.n	80003d8 <WriteFlash64+0xb8>
		}

		if( FLASHStatus != FLASH_COMPLETE ) // flash writing error
 800039c:	f89d 300f 	ldrb.w	r3, [sp, #15]
 80003a0:	2b04      	cmp	r3, #4
 80003a2:	d001      	beq.n	80003a8 <WriteFlash64+0x88>
		{
			USB_TxDString("\r\n flash writing error!");
 80003a4:	481b      	ldr	r0, [pc, #108]	; (8000414 <WriteFlash64+0xf4>)
 80003a6:	e7f6      	b.n	8000396 <WriteFlash64+0x76>
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;
 80003a8:	683b      	ldr	r3, [r7, #0]
	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 80003aa:	3504      	adds	r5, #4
		if( FLASHStatus != FLASH_COMPLETE ) // flash writing error
		{
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;
 80003ac:	3304      	adds	r3, #4
 80003ae:	603b      	str	r3, [r7, #0]

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 80003b0:	f814 000a 	ldrb.w	r0, [r4, sl]
 80003b4:	f814 700b 	ldrb.w	r7, [r4, fp]
 80003b8:	4b17      	ldr	r3, [pc, #92]	; (8000418 <WriteFlash64+0xf8>)
 80003ba:	4407      	add	r7, r0
 80003bc:	f814 0009 	ldrb.w	r0, [r4, r9]
 80003c0:	6819      	ldr	r1, [r3, #0]
 80003c2:	4407      	add	r7, r0
 80003c4:	7810      	ldrb	r0, [r2, #0]
	if(gbIsFlashLock == TRUE) // If flash is lock, stop to write flash.
		return FALSE;

	lTheRestCount = 4 - (RxCount % 4);

	for(lFlashCount =0;lFlashCount < RxCount; lFlashCount += 4)
 80003c6:	b2ad      	uxth	r5, r5
			USB_TxDString("\r\n flash writing error!");
			break;
		}
		gwAddressPointer = gwAddressPointer + 4;

		gwCalculatedCheckSum += RxBuffer[lFlashCount+3]+RxBuffer[lFlashCount+2]+RxBuffer[lFlashCount+1]+RxBuffer[lFlashCount];
 80003c8:	183a      	adds	r2, r7, r0
 80003ca:	440a      	add	r2, r1
 80003cc:	601a      	str	r2, [r3, #0]
		//TxDString("loop CheckSum =");	TxDHex16(gwCalculatedCheckSum);	TxDString("\r\n");
		gwRxTotalCount+=4;
 80003ce:	4b13      	ldr	r3, [pc, #76]	; (800041c <WriteFlash64+0xfc>)
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	3204      	adds	r2, #4
 80003d4:	601a      	str	r2, [r3, #0]
 80003d6:	e7b2      	b.n	800033e <WriteFlash64+0x1e>

	}

	if(lTheRestCount != 4 ){
 80003d8:	2e04      	cmp	r6, #4
 80003da:	d00d      	beq.n	80003f8 <WriteFlash64+0xd8>
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
 80003dc:	4b0f      	ldr	r3, [pc, #60]	; (800041c <WriteFlash64+0xfc>)
 80003de:	681a      	ldr	r2, [r3, #0]
 80003e0:	1b92      	subs	r2, r2, r6
 80003e2:	601a      	str	r2, [r3, #0]
		while(lTheRestCount){
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 80003e4:	4b0c      	ldr	r3, [pc, #48]	; (8000418 <WriteFlash64+0xf8>)
 80003e6:	1baa      	subs	r2, r5, r6
 80003e8:	6819      	ldr	r1, [r3, #0]
 80003ea:	5ca2      	ldrb	r2, [r4, r2]
			//TxDString("gwCalculatedCheckSum =");	TxDHex16(gwCalculatedCheckSum);	TxDString("\r\n");
			lTheRestCount--;
 80003ec:	3e01      	subs	r6, #1
	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 80003ee:	1a8a      	subs	r2, r1, r2
	}

	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
 80003f0:	f016 06ff 	ands.w	r6, r6, #255	; 0xff
			//TxDString("checksum deviation=");	TxDHex16(lFlashCount-lTheRestCount);	TxDString("\r\n");
			gwCalculatedCheckSum = gwCalculatedCheckSum - RxBuffer[(lFlashCount - lTheRestCount)];
 80003f4:	601a      	str	r2, [r3, #0]
	}

	if(lTheRestCount != 4 ){
		//TxDString("lTheRestCount=");	TxDHex16(lTheRestCount);	TxDString("\r\n");
		gwRxTotalCount -= lTheRestCount;
		while(lTheRestCount){
 80003f6:	d1f5      	bne.n	80003e4 <WriteFlash64+0xc4>
			lTheRestCount--;
		}
	}

	return FALSE;
}
 80003f8:	2000      	movs	r0, #0
 80003fa:	b005      	add	sp, #20
 80003fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000400:	20000000 	andcs	r0, r0, r0
 8000404:	200000ec 	andcs	r0, r0, ip, ror #1
 8000408:	0800188d 	stmdaeq	r0, {r0, r2, r3, r7, fp, ip}
 800040c:	0800fbff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 8000410:	080018a1 	stmdaeq	r0, {r0, r5, r7, fp, ip}
 8000414:	080018b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, fp, ip}
 8000418:	200000f4 	strdcs	r0, [r0], -r4
 800041c:	200000f8 	strdcs	r0, [r0], -r8

08000420 <EP3_OUT_Callback>:
* Output         : None.
* Return         : None.
*******************************************************************************/
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{
 8000420:	b538      	push	{r3, r4, r5, lr}

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000422:	2003      	movs	r0, #3
 8000424:	4910      	ldr	r1, [pc, #64]	; (8000468 <EP3_OUT_Callback+0x48>)
 8000426:	f001 f91b 	bl	8001660 <USB_SIL_Read>

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 800042a:	4b10      	ldr	r3, [pc, #64]	; (800046c <EP3_OUT_Callback+0x4c>)
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 800042c:	4d10      	ldr	r5, [pc, #64]	; (8000470 <EP3_OUT_Callback+0x50>)

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 800042e:	781b      	ldrb	r3, [r3, #0]
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000430:	b280      	uxth	r0, r0

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000432:	2b01      	cmp	r3, #1
volatile u16 USB_Rx_Cnt =0;
void EP3_OUT_Callback(void)
{

	/* Get the received data buffer and update the counter */
	USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
 8000434:	8028      	strh	r0, [r5, #0]
 8000436:	4c0c      	ldr	r4, [pc, #48]	; (8000468 <EP3_OUT_Callback+0x48>)

//#ifdef DEBUG_ENABLE_BY_USART2
	//TxDString("[USB]USB_Rx_Cnt = ");	TxDHex16(USB_Rx_Cnt);	TxDString("\r\n");
//#endif

	if(gbFlashDownloadStart == TRUE){
 8000438:	d106      	bne.n	8000448 <EP3_OUT_Callback+0x28>
		ClearTimeOutBuffer();
 800043a:	f7ff fe7b 	bl	8000134 <ClearTimeOutBuffer>
		WriteFlash64(USB_Rx_Buffer, USB_Rx_Cnt);
 800043e:	8829      	ldrh	r1, [r5, #0]
 8000440:	4620      	mov	r0, r4
 8000442:	b289      	uxth	r1, r1
 8000444:	f7ff ff6c 	bl	8000320 <WriteFlash64>
	}

	gwpUSARTBuffer[gwUSARTWritePtr++&USART_BUFFER_SIZE] = USB_Rx_Buffer[0];
 8000448:	4a0a      	ldr	r2, [pc, #40]	; (8000474 <EP3_OUT_Callback+0x54>)
	//TxDString("gwUSARTWritePtr = ");	TxDHex32(gwpUSARTBuffer[gwUSARTWritePtr-1]);	TxDString("\r\n");

  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
 800044a:	2003      	movs	r0, #3
	if(gbFlashDownloadStart == TRUE){
		ClearTimeOutBuffer();
		WriteFlash64(USB_Rx_Buffer, USB_Rx_Cnt);
	}

	gwpUSARTBuffer[gwUSARTWritePtr++&USART_BUFFER_SIZE] = USB_Rx_Buffer[0];
 800044c:	8813      	ldrh	r3, [r2, #0]
 800044e:	b29b      	uxth	r3, r3
 8000450:	1c59      	adds	r1, r3, #1
 8000452:	b289      	uxth	r1, r1
 8000454:	8011      	strh	r1, [r2, #0]
 8000456:	7821      	ldrb	r1, [r4, #0]
 8000458:	4a07      	ldr	r2, [pc, #28]	; (8000478 <EP3_OUT_Callback+0x58>)
 800045a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800045e:	54d1      	strb	r1, [r2, r3]
  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
#endif /* STM32F10X_CL */
}
 8000460:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	//TxDString("gwUSARTWritePtr = ");	TxDHex32(gwpUSARTBuffer[gwUSARTWritePtr-1]);	TxDString("\r\n");

  
#ifndef STM32F10X_CL
	/* Enable the receive of data on EP3 */
	SetEPRxValid(ENDP3);
 8000464:	f001 b825 	b.w	80014b2 <SetEPRxValid>
 8000468:	200005f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800046c:	200000fc 	strdcs	r0, [r0], -ip
 8000470:	2000015c 	andcs	r0, r0, ip, asr r1
 8000474:	20000188 	andcs	r0, r0, r8, lsl #3
 8000478:	200001f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800047c <__USBCDC_ISR>:

#ifndef STM32F10X_CL

//USB_Istr()
void __USBCDC_ISR(void)
{
 800047c:	b538      	push	{r3, r4, r5, lr}

  wIstr = _GetISTR();
 800047e:	4c16      	ldr	r4, [pc, #88]	; (80004d8 <__USBCDC_ISR+0x5c>)
 8000480:	4d16      	ldr	r5, [pc, #88]	; (80004dc <__USBCDC_ISR+0x60>)
 8000482:	6823      	ldr	r3, [r4, #0]
 8000484:	b29b      	uxth	r3, r3
 8000486:	802b      	strh	r3, [r5, #0]


  if (wIstr & ISTR_SOF )
 8000488:	882b      	ldrh	r3, [r5, #0]
 800048a:	0598      	lsls	r0, r3, #22
 800048c:	d507      	bpl.n	800049e <__USBCDC_ISR+0x22>
#ifdef DEBUG
	  TxDString("SOF wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    _SetISTR((u16)CLR_SOF);
 800048e:	f64f 53ff 	movw	r3, #65023	; 0xfdff
 8000492:	6023      	str	r3, [r4, #0]
    bIntPackSOF++;
 8000494:	4b12      	ldr	r3, [pc, #72]	; (80004e0 <__USBCDC_ISR+0x64>)
 8000496:	781a      	ldrb	r2, [r3, #0]
 8000498:	3201      	adds	r2, #1
 800049a:	b2d2      	uxtb	r2, r2
 800049c:	701a      	strb	r2, [r3, #0]
#ifdef SOF_CALLBACK
    SOF_Callback();
#endif
  }
/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_CTR )
 800049e:	882b      	ldrh	r3, [r5, #0]
 80004a0:	b21b      	sxth	r3, r3
 80004a2:	2b00      	cmp	r3, #0
 80004a4:	da01      	bge.n	80004aa <__USBCDC_ISR+0x2e>
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    /* servicing of the endpoint correct transfer interrupt */
    /* clear of the CTR flag into the sub */
    CTR_LP(); //reply for device setup-request from Host
 80004a6:	f001 f8ed 	bl	8001684 <CTR_LP>
#ifdef CTR_CALLBACK
    //CTR_Callback();
#endif
  }
  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/  
  if (wIstr & ISTR_RESET)
 80004aa:	882b      	ldrh	r3, [r5, #0]
 80004ac:	0559      	lsls	r1, r3, #21
 80004ae:	d505      	bpl.n	80004bc <__USBCDC_ISR+0x40>
	  TxDString("RESET wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif

    _SetISTR((u16)CLR_RESET);
 80004b0:	f64f 33ff 	movw	r3, #64511	; 0xfbff
 80004b4:	6023      	str	r3, [r4, #0]
    Device_Property.Reset();
 80004b6:	4b0b      	ldr	r3, [pc, #44]	; (80004e4 <__USBCDC_ISR+0x68>)
 80004b8:	685b      	ldr	r3, [r3, #4]
 80004ba:	4798      	blx	r3
#ifdef RESET_CALLBACK
    RESET_Callback();
#endif
  }
/*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_DOVR )//& wInterrupt_Mask)
 80004bc:	882b      	ldrh	r3, [r5, #0]
 80004be:	045a      	lsls	r2, r3, #17
#ifdef DEBUG
	  TxDString("DOVR wIstr = ");
	  TxDHex16(wIstr);
	  TxDString("\r\n");
#endif
    _SetISTR((u16)CLR_DOVR);
 80004c0:	bf44      	itt	mi
 80004c2:	f64b 73ff 	movwmi	r3, #49151	; 0xbfff
 80004c6:	6023      	strmi	r3, [r4, #0]
#ifdef DOVR_CALLBACK
    DOVR_Callback();
#endif
  }
  /*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*/
  if (wIstr & ISTR_ERR)// & wInterrupt_Mask)
 80004c8:	882b      	ldrh	r3, [r5, #0]
 80004ca:	049b      	lsls	r3, r3, #18
	TxDString("ERR wIstr = ");
	TxDHex16(wIstr);
	TxDString("\r\n");
#endif

    _SetISTR((u16)CLR_ERR);
 80004cc:	bf44      	itt	mi
 80004ce:	f64d 73ff 	movwmi	r3, #57343	; 0xdfff
 80004d2:	6023      	strmi	r3, [r4, #0]
 80004d4:	bd38      	pop	{r3, r4, r5, pc}
 80004d6:	bf00      	nop
 80004d8:	40005c44 	andmi	r5, r0, r4, asr #24
 80004dc:	20000630 	andcs	r0, r0, r0, lsr r6
 80004e0:	20000164 	andcs	r0, r0, r4, ror #2
 80004e4:	2000005c 	andcs	r0, r0, ip, asr r0

080004e8 <Virtual_Com_Port_SetConfiguration>:
*******************************************************************************/
void Virtual_Com_Port_SetConfiguration(void)
{
  DEVICE_INFO *pInfo = &Device_Info;
  //TxDString("Virtual_Com_Port_SetConfiguration\r\n");
  if (pInfo->Current_Configuration != 0)
 80004e8:	4b03      	ldr	r3, [pc, #12]	; (80004f8 <Virtual_Com_Port_SetConfiguration+0x10>)
 80004ea:	7a9b      	ldrb	r3, [r3, #10]
 80004ec:	b113      	cbz	r3, 80004f4 <Virtual_Com_Port_SetConfiguration+0xc>
  {
    /* Device configured */
    bDeviceState = CONFIGURED;
 80004ee:	4b03      	ldr	r3, [pc, #12]	; (80004fc <Virtual_Com_Port_SetConfiguration+0x14>)
 80004f0:	2205      	movs	r2, #5
 80004f2:	601a      	str	r2, [r3, #0]
 80004f4:	4770      	bx	lr
 80004f6:	bf00      	nop
 80004f8:	20000640 	andcs	r0, r0, r0, asr #12
 80004fc:	20000170 	andcs	r0, r0, r0, ror r1

08000500 <Virtual_Com_Port_SetDeviceAddress>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_SetDeviceAddress (void)
{
  bDeviceState = ADDRESSED;
 8000500:	4b01      	ldr	r3, [pc, #4]	; (8000508 <Virtual_Com_Port_SetDeviceAddress+0x8>)
 8000502:	2204      	movs	r2, #4
 8000504:	601a      	str	r2, [r3, #0]
 8000506:	4770      	bx	lr
 8000508:	20000170 	andcs	r0, r0, r0, ror r1

0800050c <Virtual_Com_Port_Status_In>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Status_In(void)
{
  if (Request == SET_LINE_CODING)
 800050c:	4b03      	ldr	r3, [pc, #12]	; (800051c <Virtual_Com_Port_Status_In+0x10>)
 800050e:	781a      	ldrb	r2, [r3, #0]
 8000510:	2a20      	cmp	r2, #32
  {

    //USART_Config();
    //config changed
    Request = 0;
 8000512:	bf04      	itt	eq
 8000514:	2200      	moveq	r2, #0
 8000516:	701a      	strbeq	r2, [r3, #0]
 8000518:	4770      	bx	lr
 800051a:	bf00      	nop
 800051c:	20000168 	andcs	r0, r0, r8, ror #2

08000520 <Virtual_Com_Port_Status_Out>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Status_Out(void)
{
 8000520:	4770      	bx	lr
	...

08000524 <Virtual_Com_Port_Data_Setup>:
 // TxDString("Virtual_Com_Port_Data_Setup ->RequestNo = ");  TxDHex8(RequestNo);  TxDString("\r\n");
//#endif
  u8    *(*CopyRoutine)(u16);
  CopyRoutine = NULL;

  if (RequestNo == GET_LINE_CODING)
 8000524:	2821      	cmp	r0, #33	; 0x21
* Output         : None.
* Return         : USB_UNSUPPORT or USB_SUCCESS.
*******************************************************************************/
int comstatetemp=0;
RESULT Virtual_Com_Port_Data_Setup(u8 RequestNo)
{
 8000526:	b510      	push	{r4, lr}
 // TxDString("Virtual_Com_Port_Data_Setup ->RequestNo = ");  TxDHex8(RequestNo);  TxDString("\r\n");
//#endif
  u8    *(*CopyRoutine)(u16);
  CopyRoutine = NULL;

  if (RequestNo == GET_LINE_CODING)
 8000528:	d108      	bne.n	800053c <Virtual_Com_Port_Data_Setup+0x18>
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 800052a:	4b11      	ldr	r3, [pc, #68]	; (8000570 <Virtual_Com_Port_Data_Setup+0x4c>)
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	781b      	ldrb	r3, [r3, #0]
 8000530:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000534:	2b21      	cmp	r3, #33	; 0x21
 8000536:	d010      	beq.n	800055a <Virtual_Com_Port_Data_Setup+0x36>
    Request = SET_LINE_CODING;
  }

  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
 8000538:	2002      	movs	r0, #2
 800053a:	bd10      	pop	{r4, pc}
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
    {
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
 800053c:	2820      	cmp	r0, #32
 800053e:	d1fb      	bne.n	8000538 <Virtual_Com_Port_Data_Setup+0x14>
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000540:	4b0b      	ldr	r3, [pc, #44]	; (8000570 <Virtual_Com_Port_Data_Setup+0x4c>)
    {
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
    }
    Request = SET_LINE_CODING;
 8000542:	4a0c      	ldr	r2, [pc, #48]	; (8000574 <Virtual_Com_Port_Data_Setup+0x50>)
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	781b      	ldrb	r3, [r3, #0]
    {
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
    }
    Request = SET_LINE_CODING;
 8000548:	7010      	strb	r0, [r2, #0]
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
    }
  }
  else if (RequestNo == SET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 800054a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
{
//#ifdef DEBUG_ENABLE_BY_USART2
 // TxDString("Virtual_Com_Port_Data_Setup ->RequestNo = ");  TxDHex8(RequestNo);  TxDString("\r\n");
//#endif
  u8    *(*CopyRoutine)(u16);
  CopyRoutine = NULL;
 800054e:	2b21      	cmp	r3, #33	; 0x21
 8000550:	4b09      	ldr	r3, [pc, #36]	; (8000578 <Virtual_Com_Port_Data_Setup+0x54>)
 8000552:	bf18      	it	ne
 8000554:	2300      	movne	r3, #0
      CopyRoutine = Virtual_Com_Port_SetLineCoding;
    }
    Request = SET_LINE_CODING;
  }

  if (CopyRoutine == NULL)
 8000556:	b90b      	cbnz	r3, 800055c <Virtual_Com_Port_Data_Setup+0x38>
 8000558:	e7ee      	b.n	8000538 <Virtual_Com_Port_Data_Setup+0x14>

  if (RequestNo == GET_LINE_CODING)
  {
    if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
    {
      CopyRoutine = Virtual_Com_Port_GetLineCoding;
 800055a:	4b08      	ldr	r3, [pc, #32]	; (800057c <Virtual_Com_Port_Data_Setup+0x58>)
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 800055c:	4a04      	ldr	r2, [pc, #16]	; (8000570 <Virtual_Com_Port_Data_Setup+0x4c>)
  pInformation->Ctrl_Info.Usb_wOffset = 0;
 800055e:	2400      	movs	r4, #0
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8000560:	6812      	ldr	r2, [r2, #0]
  pInformation->Ctrl_Info.Usb_wOffset = 0;
  (*CopyRoutine)(0);
 8000562:	4620      	mov	r0, r4
  if (CopyRoutine == NULL)
  {
    return USB_UNSUPPORT;
  }

  pInformation->Ctrl_Info.CopyData = CopyRoutine;
 8000564:	6193      	str	r3, [r2, #24]
  pInformation->Ctrl_Info.Usb_wOffset = 0;
 8000566:	8254      	strh	r4, [r2, #18]
  (*CopyRoutine)(0);
 8000568:	4798      	blx	r3
  return USB_SUCCESS;
 800056a:	4620      	mov	r0, r4
}
 800056c:	bd10      	pop	{r4, pc}
 800056e:	bf00      	nop
 8000570:	20000660 	andcs	r0, r0, r0, ror #12
 8000574:	20000168 	andcs	r0, r0, r8, ror #2
 8000578:	080005cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl}
 800057c:	080005b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl}

08000580 <Virtual_Com_Port_NoData_Setup>:
	else if(new_signal == 0x0){
		gbFlashDownloadStart = TRUE;

	}
	(gbFlashDownloadStart ? TxDString("gbFlashDownloadStart is true\r\n") : TxDString("gbFlashDownloadStart is false\r\n"));*/
  if (Type_Recipient == (CLASS_REQUEST | INTERFACE_RECIPIENT))
 8000580:	4b07      	ldr	r3, [pc, #28]	; (80005a0 <Virtual_Com_Port_NoData_Setup+0x20>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	781b      	ldrb	r3, [r3, #0]
 8000586:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800058a:	2b21      	cmp	r3, #33	; 0x21
 800058c:	d106      	bne.n	800059c <Virtual_Com_Port_NoData_Setup+0x1c>
  {
    if (RequestNo == SET_COMM_FEATURE)
 800058e:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8000592:	2802      	cmp	r0, #2
    {
      return USB_SUCCESS;
    }
  }

  return USB_UNSUPPORT;
 8000594:	bf0c      	ite	eq
 8000596:	2000      	moveq	r0, #0
 8000598:	2002      	movne	r0, #2
 800059a:	4770      	bx	lr
 800059c:	2002      	movs	r0, #2
}
 800059e:	4770      	bx	lr
 80005a0:	20000660 	andcs	r0, r0, r0, ror #12

080005a4 <Virtual_Com_Port_Get_Interface_Setting>:
* Return         : The address of the string descriptors.
*******************************************************************************/
RESULT Virtual_Com_Port_Get_Interface_Setting(u8 Interface, u8 AlternateSetting)
{
  //TxDString("Virtual_Com_Port_Get_Interface_Setting\r\n");
  if (AlternateSetting > 0)
 80005a4:	b921      	cbnz	r1, 80005b0 <Virtual_Com_Port_Get_Interface_Setting+0xc>
  {
    return USB_UNSUPPORT;
 80005a6:	2802      	cmp	r0, #2
 80005a8:	bf34      	ite	cc
 80005aa:	2000      	movcc	r0, #0
 80005ac:	2002      	movcs	r0, #2
 80005ae:	4770      	bx	lr
 80005b0:	2002      	movs	r0, #2
  else if (Interface > 1)
  {
    return USB_UNSUPPORT;
  }
  return USB_SUCCESS;
}
 80005b2:	4770      	bx	lr

080005b4 <Virtual_Com_Port_GetLineCoding>:
			  //Delay(5000);
			  //NVIC_GenerateSystemReset();
			  //NVIC_GenerateCoreReset();
	//}

  if (Length == 0)
 80005b4:	b920      	cbnz	r0, 80005c0 <Virtual_Com_Port_GetLineCoding+0xc>
  {
    pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
 80005b6:	4b03      	ldr	r3, [pc, #12]	; (80005c4 <Virtual_Com_Port_GetLineCoding+0x10>)
 80005b8:	2208      	movs	r2, #8
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	821a      	strh	r2, [r3, #16]
    return NULL;
 80005be:	4770      	bx	lr
  }
  return(u8 *)&linecoding;
 80005c0:	4801      	ldr	r0, [pc, #4]	; (80005c8 <Virtual_Com_Port_GetLineCoding+0x14>)
}
 80005c2:	4770      	bx	lr
 80005c4:	20000660 	andcs	r0, r0, r0, ror #12
 80005c8:	20000054 	andcs	r0, r0, r4, asr r0

080005cc <Virtual_Com_Port_SetLineCoding>:
u8 *Virtual_Com_Port_SetLineCoding(u16 Length)
{
#ifdef DEBUG_ENABLE_BY_USART2
	TxDString("SetLineCoding bitrate = ");TxDHex32(linecoding.bitrate);  TxDString("\r\n");
#endif
   if(linecoding.bitrate == 0x4B0){
 80005cc:	4b07      	ldr	r3, [pc, #28]	; (80005ec <Virtual_Com_Port_SetLineCoding+0x20>)
 80005ce:	681b      	ldr	r3, [r3, #0]
 80005d0:	f5b3 6f96 	cmp.w	r3, #1200	; 0x4b0
 80005d4:	d102      	bne.n	80005dc <Virtual_Com_Port_SetLineCoding+0x10>
		  //TxDString("System reset operates!\r\n");
		  comstatetemp = 100;
 80005d6:	4b06      	ldr	r3, [pc, #24]	; (80005f0 <Virtual_Com_Port_SetLineCoding+0x24>)
 80005d8:	2264      	movs	r2, #100	; 0x64
 80005da:	605a      	str	r2, [r3, #4]
	}
  if (Length == 0)
 80005dc:	b920      	cbnz	r0, 80005e8 <Virtual_Com_Port_SetLineCoding+0x1c>
  {
    pInformation->Ctrl_Info.Usb_wLength = sizeof(linecoding);
 80005de:	4b05      	ldr	r3, [pc, #20]	; (80005f4 <Virtual_Com_Port_SetLineCoding+0x28>)
 80005e0:	2208      	movs	r2, #8
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	821a      	strh	r2, [r3, #16]
    return NULL;
 80005e6:	4770      	bx	lr
  }

  return(u8 *)&linecoding;
 80005e8:	4800      	ldr	r0, [pc, #0]	; (80005ec <Virtual_Com_Port_SetLineCoding+0x20>)
}
 80005ea:	4770      	bx	lr
 80005ec:	20000054 	andcs	r0, r0, r4, asr r0
 80005f0:	20000168 	andcs	r0, r0, r8, ror #2
 80005f4:	20000660 	andcs	r0, r0, r0, ror #12

080005f8 <Virtual_Com_Port_init>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_init(void)
{
 80005f8:	b510      	push	{r4, lr}

  /* Update the serial number string descriptor with the data from the unique
  ID*/
  Get_SerialNum();
 80005fa:	f000 f8c9 	bl	8000790 <Get_SerialNum>

  pInformation->Current_Configuration = 0;
 80005fe:	4b05      	ldr	r3, [pc, #20]	; (8000614 <Virtual_Com_Port_init+0x1c>)
 8000600:	2400      	movs	r4, #0
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	729c      	strb	r4, [r3, #10]

  /* Connect the device */
  PowerOn();
 8000606:	f000 f8a7 	bl	8000758 <PowerOn>

  /* Perform basic device initialization operations */
  USB_SIL_Init();
 800060a:	f001 f819 	bl	8001640 <USB_SIL_Init>

  bDeviceState = UNCONNECTED;
 800060e:	4b02      	ldr	r3, [pc, #8]	; (8000618 <Virtual_Com_Port_init+0x20>)
 8000610:	601c      	str	r4, [r3, #0]
 8000612:	bd10      	pop	{r4, pc}
 8000614:	20000660 	andcs	r0, r0, r0, ror #12
 8000618:	20000170 	andcs	r0, r0, r0, ror r1

0800061c <Virtual_Com_Port_Reset>:
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 800061c:	4b33      	ldr	r3, [pc, #204]	; (80006ec <Virtual_Com_Port_Reset+0xd0>)

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 800061e:	4a34      	ldr	r2, [pc, #208]	; (80006f0 <Virtual_Com_Port_Reset+0xd4>)
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000620:	681b      	ldr	r3, [r3, #0]

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 8000622:	79d2      	ldrb	r2, [r2, #7]
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
 8000624:	b510      	push	{r4, lr}
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 8000626:	2400      	movs	r4, #0

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];
 8000628:	725a      	strb	r2, [r3, #9]
* Return         : None.
*******************************************************************************/
void Virtual_Com_Port_Reset(void)
{
  /* Set Virtual_Com_Port DEVICE as not configured */
  pInformation->Current_Configuration = 0;
 800062a:	729c      	strb	r4, [r3, #10]

  /* Current Feature initialization */
  pInformation->Current_Feature = Virtual_Com_Port_ConfigDescriptor[7];

  /* Set Virtual_Com_Port DEVICE with the default Interface*/
  pInformation->Current_Interface = 0;
 800062c:	72dc      	strb	r4, [r3, #11]

  /* Init EP3 OUT as Bulk endpoint */
  OTG_DEV_EP_Init(EP3_OUT, OTG_DEV_EP_TYPE_BULK, VIRTUAL_COM_PORT_DATA_SIZE);  
#else 

  SetBTABLE(BTABLE_ADDRESS);
 800062e:	4620      	mov	r0, r4
 8000630:	f000 fee4 	bl	80013fc <SetBTABLE>

  /* Initialize Endpoint 0 */
  SetEPType(ENDP0, EP_CONTROL);
 8000634:	4620      	mov	r0, r4
 8000636:	f44f 7100 	mov.w	r1, #512	; 0x200
 800063a:	f000 fee7 	bl	800140c <SetEPType>
  SetEPTxStatus(ENDP0, EP_TX_STALL);
 800063e:	4620      	mov	r0, r4
 8000640:	2110      	movs	r1, #16
 8000642:	f000 fef1 	bl	8001428 <SetEPTxStatus>
  SetEPRxAddr(ENDP0, ENDP0_RXADDR);
 8000646:	4620      	mov	r0, r4
 8000648:	2140      	movs	r1, #64	; 0x40
 800064a:	f000 ff89 	bl	8001560 <SetEPRxAddr>
  SetEPTxAddr(ENDP0, ENDP0_TXADDR);
 800064e:	2180      	movs	r1, #128	; 0x80
 8000650:	4620      	mov	r0, r4
 8000652:	f000 ff75 	bl	8001540 <SetEPTxAddr>
  Clear_Status_Out(ENDP0);
 8000656:	4620      	mov	r0, r4
 8000658:	f000 ff3e 	bl	80014d8 <Clear_Status_Out>
  SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
 800065c:	4b25      	ldr	r3, [pc, #148]	; (80006f4 <Virtual_Com_Port_Reset+0xd8>)
 800065e:	4620      	mov	r0, r4
 8000660:	f893 1034 	ldrb.w	r1, [r3, #52]	; 0x34
 8000664:	f000 ffb6 	bl	80015d4 <SetEPRxCount>
  SetEPRxValid(ENDP0);
 8000668:	4620      	mov	r0, r4
 800066a:	f000 ff22 	bl	80014b2 <SetEPRxValid>

  /* Initialize Endpoint 1 */
  SetEPType(ENDP1, EP_BULK);
 800066e:	2001      	movs	r0, #1
 8000670:	4621      	mov	r1, r4
 8000672:	f000 fecb 	bl	800140c <SetEPType>
  SetEPTxAddr(ENDP1, ENDP1_TXADDR);
 8000676:	2001      	movs	r0, #1
 8000678:	21c0      	movs	r1, #192	; 0xc0
 800067a:	f000 ff61 	bl	8001540 <SetEPTxAddr>
  SetEPTxStatus(ENDP1, EP_TX_NAK);
 800067e:	2001      	movs	r0, #1
 8000680:	2120      	movs	r1, #32
 8000682:	f000 fed1 	bl	8001428 <SetEPTxStatus>
  SetEPRxStatus(ENDP1, EP_RX_DIS);
 8000686:	2001      	movs	r0, #1
 8000688:	4621      	mov	r1, r4
 800068a:	f000 fee6 	bl	800145a <SetEPRxStatus>

  /* Initialize Endpoint 2 */
  SetEPType(ENDP2, EP_INTERRUPT);
 800068e:	2002      	movs	r0, #2
 8000690:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8000694:	f000 feba 	bl	800140c <SetEPType>
  SetEPTxAddr(ENDP2, ENDP2_TXADDR);
 8000698:	2002      	movs	r0, #2
 800069a:	f44f 7180 	mov.w	r1, #256	; 0x100
 800069e:	f000 ff4f 	bl	8001540 <SetEPTxAddr>
  SetEPRxStatus(ENDP2, EP_RX_DIS);
 80006a2:	2002      	movs	r0, #2
 80006a4:	4621      	mov	r1, r4
 80006a6:	f000 fed8 	bl	800145a <SetEPRxStatus>
  SetEPTxStatus(ENDP2, EP_TX_NAK);
 80006aa:	2002      	movs	r0, #2
 80006ac:	2120      	movs	r1, #32
 80006ae:	f000 febb 	bl	8001428 <SetEPTxStatus>

  /* Initialize Endpoint 3 */
  SetEPType(ENDP3, EP_BULK);
 80006b2:	2003      	movs	r0, #3
 80006b4:	4621      	mov	r1, r4
 80006b6:	f000 fea9 	bl	800140c <SetEPType>
  SetEPRxAddr(ENDP3, ENDP3_RXADDR);
 80006ba:	2003      	movs	r0, #3
 80006bc:	f44f 7188 	mov.w	r1, #272	; 0x110
 80006c0:	f000 ff4e 	bl	8001560 <SetEPRxAddr>
  SetEPRxCount(ENDP3, VIRTUAL_COM_PORT_DATA_SIZE);
 80006c4:	2003      	movs	r0, #3
 80006c6:	2140      	movs	r1, #64	; 0x40
 80006c8:	f000 ff84 	bl	80015d4 <SetEPRxCount>
  SetEPRxStatus(ENDP3, EP_RX_VALID);
 80006cc:	2003      	movs	r0, #3
 80006ce:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80006d2:	f000 fec2 	bl	800145a <SetEPRxStatus>
  SetEPTxStatus(ENDP3, EP_TX_DIS);
 80006d6:	2003      	movs	r0, #3
 80006d8:	4621      	mov	r1, r4
 80006da:	f000 fea5 	bl	8001428 <SetEPTxStatus>

  /* Set this device to response on default address */
  SetDeviceAddress(0);
 80006de:	4620      	mov	r0, r4
 80006e0:	f000 fe12 	bl	8001308 <SetDeviceAddress>
#endif /* STM32F10X_CL */

  bDeviceState = ATTACHED;
 80006e4:	4b04      	ldr	r3, [pc, #16]	; (80006f8 <Virtual_Com_Port_Reset+0xdc>)
 80006e6:	2201      	movs	r2, #1
 80006e8:	601a      	str	r2, [r3, #0]
 80006ea:	bd10      	pop	{r4, pc}
 80006ec:	20000660 	andcs	r0, r0, r0, ror #12
 80006f0:	08001838 	stmdaeq	r0, {r3, r4, r5, fp, ip}
 80006f4:	20000054 	andcs	r0, r0, r4, asr r0
 80006f8:	20000170 	andcs	r0, r0, r0, ror r1

080006fc <Virtual_Com_Port_GetDeviceDescriptor>:
* Return         : The address of the device descriptor.
*******************************************************************************/
u8 *Virtual_Com_Port_GetDeviceDescriptor(u16 Length)
{
	//TxDString("Virtual_Com_Port_GetDeviceDescriptor\r\n");
  return Standard_GetDescriptorData(Length, &Device_Descriptor);
 80006fc:	4901      	ldr	r1, [pc, #4]	; (8000704 <Virtual_Com_Port_GetDeviceDescriptor+0x8>)
 80006fe:	f000 bbf9 	b.w	8000ef4 <Standard_GetDescriptorData>
 8000702:	bf00      	nop
 8000704:	2000008c 	andcs	r0, r0, ip, lsl #1

08000708 <Virtual_Com_Port_GetConfigDescriptor>:
* Return         : The address of the configuration descriptor.
*******************************************************************************/
u8 *Virtual_Com_Port_GetConfigDescriptor(u16 Length)
{
	//TxDString("Virtual_Com_Port_GetConfigDescriptor\r\n");
  return Standard_GetDescriptorData(Length, &Config_Descriptor);
 8000708:	4901      	ldr	r1, [pc, #4]	; (8000710 <Virtual_Com_Port_GetConfigDescriptor+0x8>)
 800070a:	f000 bbf3 	b.w	8000ef4 <Standard_GetDescriptorData>
 800070e:	bf00      	nop
 8000710:	20000094 	mulcs	r0, r4, r0

08000714 <Virtual_Com_Port_GetStringDescriptor>:
* Return         : The address of the string descriptors.
*******************************************************************************/
u8 *Virtual_Com_Port_GetStringDescriptor(u16 Length)
{
  //TxDString("Virtual_Com_Port_GetStringDescriptor\r\n");
  u8 wValue0 = pInformation->USBwValue0;
 8000714:	4b05      	ldr	r3, [pc, #20]	; (800072c <Virtual_Com_Port_GetStringDescriptor+0x18>)
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	78db      	ldrb	r3, [r3, #3]
  if (wValue0 > 4)
 800071a:	2b04      	cmp	r3, #4
 800071c:	d804      	bhi.n	8000728 <Virtual_Com_Port_GetStringDescriptor+0x14>
  {
    return NULL;
  }
  else
  {
    return Standard_GetDescriptorData(Length, &String_Descriptor[wValue0]);
 800071e:	4904      	ldr	r1, [pc, #16]	; (8000730 <Virtual_Com_Port_GetStringDescriptor+0x1c>)
 8000720:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8000724:	f000 bbe6 	b.w	8000ef4 <Standard_GetDescriptorData>
  }
}
 8000728:	2000      	movs	r0, #0
 800072a:	4770      	bx	lr
 800072c:	20000660 	andcs	r0, r0, r0, ror #12
 8000730:	2000009c 	mulcs	r0, ip, r0

08000734 <IntToUnicode>:
* Output         : None.
* Return         : None.
*******************************************************************************/

static void IntToUnicode (u32 value , u8 *pbuf , u8 len)
{
 8000734:	3101      	adds	r1, #1
 8000736:	eb01 0242 	add.w	r2, r1, r2, lsl #1
  u8 idx = 0;

  for( idx = 0 ; idx < len ; idx ++)
 800073a:	4291      	cmp	r1, r2
 800073c:	d00b      	beq.n	8000756 <IntToUnicode+0x22>
  {
    if( ((value >> 28)) < 0xA )
 800073e:	0f03      	lsrs	r3, r0, #28
 8000740:	2b09      	cmp	r3, #9
    {
      pbuf[ 2* idx] = (value >> 28) + '0';
 8000742:	bf94      	ite	ls
 8000744:	3330      	addls	r3, #48	; 0x30
    }
    else
    {
      pbuf[2* idx] = (value >> 28) + 'A' - 10;
 8000746:	3337      	addhi	r3, #55	; 0x37
 8000748:	f801 3c01 	strb.w	r3, [r1, #-1]
    }

    value = value << 4;

    pbuf[ 2* idx + 1] = 0;
 800074c:	2300      	movs	r3, #0
    else
    {
      pbuf[2* idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;
 800074e:	0100      	lsls	r0, r0, #4

    pbuf[ 2* idx + 1] = 0;
 8000750:	f801 3b02 	strb.w	r3, [r1], #2
 8000754:	e7f1      	b.n	800073a <IntToUnicode+0x6>
  }
}
 8000756:	4770      	bx	lr

08000758 <PowerOn>:
* Input          : None.
* Output         : None.
* Return         : USB_SUCCESS.
*******************************************************************************/
RESULT PowerOn(void)
{
 8000758:	b508      	push	{r3, lr}
void USB_Cable_Config (FunctionalState NewState)
{
   if (NewState != DISABLE)
   {
	   /*TxDString("USB Pull-up Enabled\r\n");*/
 	  GPIO_ResetBits(USB_DISCONNECT_PORT, USB_DISCONNECT_PIN);
 800075a:	4809      	ldr	r0, [pc, #36]	; (8000780 <PowerOn+0x28>)
 800075c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000760:	f000 f906 	bl	8000970 <GPIO_ResetBits>
  /*** cable plugged-in ? ***/
  USB_Cable_Config(ENABLE);

  /*** CNTR_PWDN = 0 ***/
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);
 8000764:	4b07      	ldr	r3, [pc, #28]	; (8000784 <PowerOn+0x2c>)
 8000766:	2201      	movs	r2, #1
 8000768:	601a      	str	r2, [r3, #0]

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
  /*** Clear pending interrupts ***/
  _SetISTR(0);
 800076a:	4a07      	ldr	r2, [pc, #28]	; (8000788 <PowerOn+0x30>)
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
 800076c:	2000      	movs	r0, #0
  /*** Clear pending interrupts ***/
  _SetISTR(0);
  /*** Set interrupt mask ***/
  wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM | CNTR_CTRM ; //add CNTR_SOFM
 800076e:	4907      	ldr	r1, [pc, #28]	; (800078c <PowerOn+0x34>)
  wRegVal = CNTR_FRES;
  _SetCNTR(wRegVal);

  /*** CNTR_FRES = 0 ***/
  wInterrupt_Mask = 0;
  _SetCNTR(wInterrupt_Mask);
 8000770:	6018      	str	r0, [r3, #0]
  /*** Clear pending interrupts ***/
  _SetISTR(0);
 8000772:	6010      	str	r0, [r2, #0]
  /*** Set interrupt mask ***/
  wInterrupt_Mask = CNTR_RESETM | CNTR_SUSPM | CNTR_WKUPM | CNTR_CTRM ; //add CNTR_SOFM
 8000774:	f44f 421c 	mov.w	r2, #39936	; 0x9c00
 8000778:	800a      	strh	r2, [r1, #0]
  _SetCNTR(wInterrupt_Mask);
 800077a:	601a      	str	r2, [r3, #0]
#endif /* STM32F10X_CL */

  return USB_SUCCESS;
}
 800077c:	bd08      	pop	{r3, pc}
 800077e:	bf00      	nop
 8000780:	40010c00 	andmi	r0, r1, r0, lsl #24
 8000784:	40005c40 	andmi	r5, r0, r0, asr #24
 8000788:	40005c44 	andmi	r5, r0, r4, asr #24
 800078c:	20000664 	andcs	r0, r0, r4, ror #12

08000790 <Get_SerialNum>:
void Get_SerialNum(void)
{
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
  Device_Serial1 = *(__IO u32*)(0x1FFFF7EC);
 8000790:	4a0a      	ldr	r2, [pc, #40]	; (80007bc <Get_SerialNum+0x2c>)
*******************************************************************************/
void Get_SerialNum(void)
{
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
 8000792:	4b0b      	ldr	r3, [pc, #44]	; (80007c0 <Get_SerialNum+0x30>)
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void Get_SerialNum(void)
{
 8000794:	b510      	push	{r4, lr}
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
 8000796:	681b      	ldr	r3, [r3, #0]
  Device_Serial1 = *(__IO u32*)(0x1FFFF7EC);
  Device_Serial2 = *(__IO u32*)(0x1FFFF7F0);
 8000798:	3204      	adds	r2, #4
void Get_SerialNum(void)
{
  u32 Device_Serial0, Device_Serial1, Device_Serial2;

  Device_Serial0 = *(__IO u32*)(0x1FFFF7E8);
  Device_Serial1 = *(__IO u32*)(0x1FFFF7EC);
 800079a:	f852 4c04 	ldr.w	r4, [r2, #-4]
  Device_Serial2 = *(__IO u32*)(0x1FFFF7F0);
 800079e:	6812      	ldr	r2, [r2, #0]

  Device_Serial0 += Device_Serial2;

  if (Device_Serial0 != 0)
 80007a0:	18d0      	adds	r0, r2, r3
 80007a2:	d00a      	beq.n	80007ba <Get_SerialNum+0x2a>
  {
    IntToUnicode (Device_Serial0, &Virtual_Com_Port_StringSerial[2] , 8);
 80007a4:	4907      	ldr	r1, [pc, #28]	; (80007c4 <Get_SerialNum+0x34>)
 80007a6:	2208      	movs	r2, #8
 80007a8:	f7ff ffc4 	bl	8000734 <IntToUnicode>
    IntToUnicode (Device_Serial1, &Virtual_Com_Port_StringSerial[18], 4);
 80007ac:	4620      	mov	r0, r4
 80007ae:	4906      	ldr	r1, [pc, #24]	; (80007c8 <Get_SerialNum+0x38>)
 80007b0:	2204      	movs	r2, #4
  }

}
 80007b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  Device_Serial0 += Device_Serial2;

  if (Device_Serial0 != 0)
  {
    IntToUnicode (Device_Serial0, &Virtual_Com_Port_StringSerial[2] , 8);
    IntToUnicode (Device_Serial1, &Virtual_Com_Port_StringSerial[18], 4);
 80007b6:	f7ff bfbd 	b.w	8000734 <IntToUnicode>
 80007ba:	bd10      	pop	{r4, pc}
 80007bc:	1ffff7ec 	svcne	0x00fff7ec
 80007c0:	1ffff7e8 	svcne	0x00fff7e8
 80007c4:	20000003 	andcs	r0, r0, r3
 80007c8:	20000013 	andcs	r0, r0, r3, lsl r0

080007cc <USB_TxDByte>:
}
#endif


extern void USB_TxDByte(u8 dat)
{
 80007cc:	b513      	push	{r0, r1, r4, lr}
 80007ce:	ac02      	add	r4, sp, #8
 80007d0:	f804 0d01 	strb.w	r0, [r4, #-1]!
	//TxDByte(dat);
	Delay(1); //some delay is needed when data send to USB Host by sm6787@robotis.com
 80007d4:	2001      	movs	r0, #1
 80007d6:	f7ff fcc5 	bl	8000164 <Delay>
	UserToPMABufferCopy(&dat, ENDP1_TXADDR,1);
 80007da:	2201      	movs	r2, #1
 80007dc:	4620      	mov	r0, r4
 80007de:	21c0      	movs	r1, #192	; 0xc0
 80007e0:	f000 fde1 	bl	80013a6 <UserToPMABufferCopy>
	SetEPTxCount(ENDP1, 1);
 80007e4:	2001      	movs	r0, #1
 80007e6:	4601      	mov	r1, r0
 80007e8:	f000 fee6 	bl	80015b8 <SetEPTxCount>
	SetEPTxValid(ENDP1);
 80007ec:	2001      	movs	r0, #1
 80007ee:	f000 fe4d 	bl	800148c <SetEPTxValid>
}
 80007f2:	b002      	add	sp, #8
 80007f4:	bd10      	pop	{r4, pc}
	...

080007f8 <FLASH_SetLatency>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_LATENCY(FLASH_Latency));
  
  /* Sets the Latency value */
  FLASH->ACR &= ACR_LATENCY_Mask;
 80007f8:	4b04      	ldr	r3, [pc, #16]	; (800080c <FLASH_SetLatency+0x14>)
 80007fa:	681a      	ldr	r2, [r3, #0]
 80007fc:	f002 0238 	and.w	r2, r2, #56	; 0x38
 8000800:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_Latency;
 8000802:	681a      	ldr	r2, [r3, #0]
 8000804:	4310      	orrs	r0, r2
 8000806:	6018      	str	r0, [r3, #0]
 8000808:	4770      	bx	lr
 800080a:	bf00      	nop
 800080c:	40022000 	andmi	r2, r2, r0

08000810 <FLASH_PrefetchBufferCmd>:
{
  /* Check the parameters */
  assert_param(IS_FLASH_PREFETCHBUFFER_STATE(FLASH_PrefetchBuffer));
  
  /* Enable or disable the Prefetch Buffer */
  FLASH->ACR &= ACR_PRFTBE_Mask;
 8000810:	4b04      	ldr	r3, [pc, #16]	; (8000824 <FLASH_PrefetchBufferCmd+0x14>)
 8000812:	681a      	ldr	r2, [r3, #0]
 8000814:	f022 0210 	bic.w	r2, r2, #16
 8000818:	601a      	str	r2, [r3, #0]
  FLASH->ACR |= FLASH_PrefetchBuffer;
 800081a:	681a      	ldr	r2, [r3, #0]
 800081c:	4310      	orrs	r0, r2
 800081e:	6018      	str	r0, [r3, #0]
 8000820:	4770      	bx	lr
 8000822:	bf00      	nop
 8000824:	40022000 	andmi	r2, r2, r0

08000828 <FLASH_GetStatus>:
*******************************************************************************/
FLASH_Status FLASH_GetStatus(void)
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 8000828:	4b08      	ldr	r3, [pc, #32]	; (800084c <FLASH_GetStatus+0x24>)
 800082a:	68da      	ldr	r2, [r3, #12]
 800082c:	07d1      	lsls	r1, r2, #31
 800082e:	d409      	bmi.n	8000844 <FLASH_GetStatus+0x1c>
  {
    flashstatus = FLASH_BUSY;
  }
  else 
  {  
    if(FLASH->SR & FLASH_FLAG_PGERR)
 8000830:	68da      	ldr	r2, [r3, #12]
 8000832:	0752      	lsls	r2, r2, #29
 8000834:	d408      	bmi.n	8000848 <FLASH_GetStatus+0x20>
    { 
      flashstatus = FLASH_ERROR_PG;
    }
    else 
    {
      if(FLASH->SR & FLASH_FLAG_WRPRTERR)
 8000836:	68db      	ldr	r3, [r3, #12]
 8000838:	f013 0f10 	tst.w	r3, #16
      {
        flashstatus = FLASH_ERROR_WRP;
 800083c:	bf0c      	ite	eq
 800083e:	2004      	moveq	r0, #4
 8000840:	2003      	movne	r0, #3
 8000842:	4770      	bx	lr
{
  FLASH_Status flashstatus = FLASH_COMPLETE;
  
  if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
  {
    flashstatus = FLASH_BUSY;
 8000844:	2001      	movs	r0, #1
 8000846:	4770      	bx	lr
  }
  else 
  {  
    if(FLASH->SR & FLASH_FLAG_PGERR)
    { 
      flashstatus = FLASH_ERROR_PG;
 8000848:	2002      	movs	r0, #2
      }
    }
  }
  /* Return the Flash Status */
  return flashstatus;
}
 800084a:	4770      	bx	lr
 800084c:	40022000 	andmi	r2, r2, r0

08000850 <FLASH_WaitForLastOperation>:
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT.
*******************************************************************************/
FLASH_Status FLASH_WaitForLastOperation(u32 Timeout)
{ 
 8000850:	b513      	push	{r0, r1, r4, lr}
 8000852:	4604      	mov	r4, r0
  FLASH_Status status = FLASH_COMPLETE;
   
  /* Check for the Flash Status */
  status = FLASH_GetStatus();
 8000854:	f7ff ffe8 	bl	8000828 <FLASH_GetStatus>

  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
 8000858:	2801      	cmp	r0, #1
 800085a:	d10f      	bne.n	800087c <FLASH_WaitForLastOperation+0x2c>
 800085c:	b164      	cbz	r4, 8000878 <FLASH_WaitForLastOperation+0x28>
* Output         : None
* Return         : None
*******************************************************************************/
static void delay(void)
{
  vu32 i = 0;
 800085e:	2300      	movs	r3, #0
 8000860:	9301      	str	r3, [sp, #4]

  for(i = 0xFF; i != 0; i--)
 8000862:	23ff      	movs	r3, #255	; 0xff
 8000864:	9301      	str	r3, [sp, #4]
 8000866:	9b01      	ldr	r3, [sp, #4]
 8000868:	b113      	cbz	r3, 8000870 <FLASH_WaitForLastOperation+0x20>
 800086a:	9b01      	ldr	r3, [sp, #4]
 800086c:	3b01      	subs	r3, #1
 800086e:	e7f9      	b.n	8000864 <FLASH_WaitForLastOperation+0x14>

  /* Wait for a Flash operation to complete or a TIMEOUT to occur */
  while((status == FLASH_BUSY) && (Timeout != 0x00))
  {
    delay();
    status = FLASH_GetStatus();
 8000870:	f7ff ffda 	bl	8000828 <FLASH_GetStatus>
    Timeout--;
 8000874:	3c01      	subs	r4, #1
 8000876:	e7ef      	b.n	8000858 <FLASH_WaitForLastOperation+0x8>
  }

  if(Timeout == 0x00 )
  {
    status = FLASH_TIMEOUT;
 8000878:	2005      	movs	r0, #5
 800087a:	e002      	b.n	8000882 <FLASH_WaitForLastOperation+0x32>
 800087c:	2c00      	cmp	r4, #0
 800087e:	bf08      	it	eq
 8000880:	2005      	moveq	r0, #5
  }

  /* Return the operation status */
  return status;
}
 8000882:	b002      	add	sp, #8
 8000884:	bd10      	pop	{r4, pc}
	...

08000888 <FLASH_ProgramWord>:
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT. 
*******************************************************************************/
FLASH_Status FLASH_ProgramWord(u32 Address, u32 Data)
{
 8000888:	b570      	push	{r4, r5, r6, lr}
 800088a:	4605      	mov	r5, r0

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
 800088c:	200f      	movs	r0, #15
* Return         : FLASH Status: The returned value can be: FLASH_BUSY, 
*                  FLASH_ERROR_PG, FLASH_ERROR_WRP, FLASH_COMPLETE or 
*                  FLASH_TIMEOUT. 
*******************************************************************************/
FLASH_Status FLASH_ProgramWord(u32 Address, u32 Data)
{
 800088e:	460e      	mov	r6, r1

  /* Check the parameters */
  assert_param(IS_FLASH_ADDRESS(Address));

  /* Wait for last operation to be completed */
  status = FLASH_WaitForLastOperation(ProgramTimeout);
 8000890:	f7ff ffde 	bl	8000850 <FLASH_WaitForLastOperation>
  
  if(status == FLASH_COMPLETE)
 8000894:	2804      	cmp	r0, #4
 8000896:	d117      	bne.n	80008c8 <FLASH_ProgramWord+0x40>
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
 8000898:	4c0c      	ldr	r4, [pc, #48]	; (80008cc <FLASH_ProgramWord+0x44>)
  
    *(vu16*)Address = (u16)Data;

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
 800089a:	200f      	movs	r0, #15
  
  if(status == FLASH_COMPLETE)
  {
    /* if the previous operation is completed, proceed to program the new first 
    half word */
    FLASH->CR |= CR_PG_Set;
 800089c:	6923      	ldr	r3, [r4, #16]
 800089e:	f043 0301 	orr.w	r3, r3, #1
 80008a2:	6123      	str	r3, [r4, #16]
  
    *(vu16*)Address = (u16)Data;
 80008a4:	b2b3      	uxth	r3, r6
 80008a6:	802b      	strh	r3, [r5, #0]

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(ProgramTimeout);
 80008a8:	f7ff ffd2 	bl	8000850 <FLASH_WaitForLastOperation>
 
    if(status == FLASH_COMPLETE)
 80008ac:	2804      	cmp	r0, #4
 80008ae:	d104      	bne.n	80008ba <FLASH_ProgramWord+0x32>
    {
      /* if the previous operation is completed, proceed to program the new second 
      half word */
      *(vu16*)(Address + 2) = Data >> 16;
 80008b0:	0c36      	lsrs	r6, r6, #16
 80008b2:	806e      	strh	r6, [r5, #2]
    
      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(ProgramTimeout);
 80008b4:	200f      	movs	r0, #15
 80008b6:	f7ff ffcb 	bl	8000850 <FLASH_WaitForLastOperation>
        FLASH->CR &= CR_PG_Reset;
      }
    }
    else
    {
      if (status != FLASH_BUSY)
 80008ba:	2801      	cmp	r0, #1
 80008bc:	d004      	beq.n	80008c8 <FLASH_ProgramWord+0x40>
      {
        /* Disable the PG Bit */
        FLASH->CR &= CR_PG_Reset;
 80008be:	6922      	ldr	r2, [r4, #16]
 80008c0:	f641 73fe 	movw	r3, #8190	; 0x1ffe
 80008c4:	4013      	ands	r3, r2
 80008c6:	6123      	str	r3, [r4, #16]
      }
     }
  }
  /* Return the Program Status */
  return status;
}
 80008c8:	bd70      	pop	{r4, r5, r6, pc}
 80008ca:	bf00      	nop
 80008cc:	40022000 	andmi	r2, r2, r0

080008d0 <GPIO_Init>:
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
 80008d0:	78cb      	ldrb	r3, [r1, #3]
*                    peripheral.
* Output         : None
* Return         : None
*******************************************************************************/
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 80008d2:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);

  if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
 80008d4:	06da      	lsls	r2, r3, #27
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 80008d6:	bf48      	it	mi
 80008d8:	788a      	ldrbmi	r2, [r1, #2]
  }

/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
 80008da:	8809      	ldrh	r1, [r1, #0]
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
 80008dc:	f003 050f 	and.w	r5, r3, #15
  if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 80008e0:	bf48      	it	mi
 80008e2:	4315      	orrmi	r5, r2
  }

/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
 80008e4:	f011 0fff 	tst.w	r1, #255	; 0xff
 80008e8:	d01d      	beq.n	8000926 <GPIO_Init+0x56>
  {
    tmpreg = GPIOx->CRL;
 80008ea:	6804      	ldr	r4, [r0, #0]

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 80008ec:	2200      	movs	r2, #0
    {
      pos = ((u32)0x01) << pinpos;
 80008ee:	2701      	movs	r7, #1
 80008f0:	4097      	lsls	r7, r2
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 80008f2:	ea07 0601 	and.w	r6, r7, r1

      if (currentpin == pos)
 80008f6:	42be      	cmp	r6, r7
 80008f8:	d111      	bne.n	800091e <GPIO_Init+0x4e>
      {
        pos = pinpos << 2;
 80008fa:	0097      	lsls	r7, r2, #2
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
 80008fc:	f04f 0c0f 	mov.w	ip, #15
 8000900:	fa0c fc07 	lsl.w	ip, ip, r7
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8000904:	fa05 f707 	lsl.w	r7, r5, r7
      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;
 8000908:	ea24 040c 	bic.w	r4, r4, ip

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 800090c:	2b28      	cmp	r3, #40	; 0x28
        /* Clear the corresponding low control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 800090e:	ea44 0407 	orr.w	r4, r4, r7

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000912:	d101      	bne.n	8000918 <GPIO_Init+0x48>
        {
          GPIOx->BRR = (((u32)0x01) << pinpos);
 8000914:	6146      	str	r6, [r0, #20]
 8000916:	e002      	b.n	800091e <GPIO_Init+0x4e>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000918:	2b48      	cmp	r3, #72	; 0x48
          {
            GPIOx->BSRR = (((u32)0x01) << pinpos);
 800091a:	bf08      	it	eq
 800091c:	6106      	streq	r6, [r0, #16]
  /* Configure the eight low port pins */
  if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
  {
    tmpreg = GPIOx->CRL;

    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 800091e:	3201      	adds	r2, #1
 8000920:	2a08      	cmp	r2, #8
 8000922:	d1e4      	bne.n	80008ee <GPIO_Init+0x1e>
            GPIOx->BSRR = (((u32)0x01) << pinpos);
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 8000924:	6004      	str	r4, [r0, #0]
  }

/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 8000926:	29ff      	cmp	r1, #255	; 0xff
 8000928:	d91f      	bls.n	800096a <GPIO_Init+0x9a>
  {
    tmpreg = GPIOx->CRH;
 800092a:	6844      	ldr	r4, [r0, #4]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 800092c:	2200      	movs	r2, #0
 800092e:	f102 0608 	add.w	r6, r2, #8
    {
      pos = (((u32)0x01) << (pinpos + 0x08));
 8000932:	2701      	movs	r7, #1
 8000934:	40b7      	lsls	r7, r6
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 8000936:	ea07 0601 	and.w	r6, r7, r1
      if (currentpin == pos)
 800093a:	42be      	cmp	r6, r7
 800093c:	d111      	bne.n	8000962 <GPIO_Init+0x92>
      {
        pos = pinpos << 2;
 800093e:	0097      	lsls	r7, r2, #2
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
 8000940:	f04f 0c0f 	mov.w	ip, #15
 8000944:	fa0c fc07 	lsl.w	ip, ip, r7
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8000948:	fa05 f707 	lsl.w	r7, r5, r7
      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;
 800094c:	ea24 040c 	bic.w	r4, r4, ip

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000950:	2b28      	cmp	r3, #40	; 0x28
        /* Clear the corresponding high control register bits */
        pinmask = ((u32)0x0F) << pos;
        tmpreg &= ~pinmask;

        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
 8000952:	ea44 0407 	orr.w	r4, r4, r7

        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000956:	d101      	bne.n	800095c <GPIO_Init+0x8c>
        {
          GPIOx->BRR = (((u32)0x01) << (pinpos + 0x08));
 8000958:	6146      	str	r6, [r0, #20]
 800095a:	e002      	b.n	8000962 <GPIO_Init+0x92>
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 800095c:	2b48      	cmp	r3, #72	; 0x48
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
 800095e:	bf08      	it	eq
 8000960:	6106      	streq	r6, [r0, #16]
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000962:	3201      	adds	r2, #1
 8000964:	2a08      	cmp	r2, #8
 8000966:	d1e2      	bne.n	800092e <GPIO_Init+0x5e>
        {
          GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
        }
      }
    }
    GPIOx->CRH = tmpreg;
 8000968:	6044      	str	r4, [r0, #4]
 800096a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800096c <GPIO_SetBits>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BSRR = GPIO_Pin;
 800096c:	6101      	str	r1, [r0, #16]
 800096e:	4770      	bx	lr

08000970 <GPIO_ResetBits>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BRR = GPIO_Pin;
 8000970:	6141      	str	r1, [r0, #20]
 8000972:	4770      	bx	lr

08000974 <RCC_DeInit>:
* Return         : None
*******************************************************************************/
void RCC_DeInit(void)
{
  /* Set HSION bit */
  RCC->CR |= (u32)0x00000001;
 8000974:	4b0c      	ldr	r3, [pc, #48]	; (80009a8 <RCC_DeInit+0x34>)
 8000976:	681a      	ldr	r2, [r3, #0]
 8000978:	f042 0201 	orr.w	r2, r2, #1
 800097c:	601a      	str	r2, [r3, #0]

  /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], ADCPRE[1:0] and MCO[2:0] bits */
  RCC->CFGR &= (u32)0xF8FF0000;
 800097e:	6859      	ldr	r1, [r3, #4]
 8000980:	4a0a      	ldr	r2, [pc, #40]	; (80009ac <RCC_DeInit+0x38>)
 8000982:	400a      	ands	r2, r1
 8000984:	605a      	str	r2, [r3, #4]
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (u32)0xFEF6FFFF;
 8000986:	681a      	ldr	r2, [r3, #0]
 8000988:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800098c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000990:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (u32)0xFFFBFFFF;
 8000992:	681a      	ldr	r2, [r3, #0]
 8000994:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000998:	601a      	str	r2, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL[3:0] and USBPRE bits */
  RCC->CFGR &= (u32)0xFF80FFFF;
 800099a:	685a      	ldr	r2, [r3, #4]
 800099c:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 80009a0:	605a      	str	r2, [r3, #4]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80009a2:	2200      	movs	r2, #0
 80009a4:	609a      	str	r2, [r3, #8]
 80009a6:	4770      	bx	lr
 80009a8:	40021000 	andmi	r1, r2, r0
 80009ac:	f8ff0000 			; <UNDEFINED> instruction: 0xf8ff0000

080009b0 <RCC_HSEConfig>:
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));

  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
 80009b0:	4b0c      	ldr	r3, [pc, #48]	; (80009e4 <RCC_HSEConfig+0x34>)

  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;

  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
 80009b2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
  /* Check the parameters */
  assert_param(IS_RCC_HSE(RCC_HSE));

  /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
  /* Reset HSEON bit */
  RCC->CR &= CR_HSEON_Reset;
 80009b6:	681a      	ldr	r2, [r3, #0]
 80009b8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80009bc:	601a      	str	r2, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= CR_HSEBYP_Reset;
 80009be:	681a      	ldr	r2, [r3, #0]
 80009c0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80009c4:	601a      	str	r2, [r3, #0]

  /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  switch(RCC_HSE)
 80009c6:	d003      	beq.n	80009d0 <RCC_HSEConfig+0x20>
 80009c8:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
 80009cc:	d004      	beq.n	80009d8 <RCC_HSEConfig+0x28>
 80009ce:	4770      	bx	lr
  {
    case RCC_HSE_ON:
      /* Set HSEON bit */
      RCC->CR |= CR_HSEON_Set;
 80009d0:	681a      	ldr	r2, [r3, #0]
 80009d2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80009d6:	e002      	b.n	80009de <RCC_HSEConfig+0x2e>
      break;
      
    case RCC_HSE_Bypass:
      /* Set HSEBYP and HSEON bits */
      RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 80009d8:	681a      	ldr	r2, [r3, #0]
 80009da:	f442 22a0 	orr.w	r2, r2, #327680	; 0x50000
 80009de:	601a      	str	r2, [r3, #0]
 80009e0:	4770      	bx	lr
 80009e2:	bf00      	nop
 80009e4:	40021000 	andmi	r1, r2, r0

080009e8 <RCC_PLLConfig>:

  /* Check the parameters */
  assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
  assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));

  tmpreg = RCC->CFGR;
 80009e8:	4b03      	ldr	r3, [pc, #12]	; (80009f8 <RCC_PLLConfig+0x10>)
 80009ea:	685a      	ldr	r2, [r3, #4]

  /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
  tmpreg &= CFGR_PLL_Mask;
 80009ec:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000

  /* Set the PLL configuration bits */
  tmpreg |= RCC_PLLSource | RCC_PLLMul;
 80009f0:	4311      	orrs	r1, r2
 80009f2:	4308      	orrs	r0, r1

  /* Store the new value */
  RCC->CFGR = tmpreg;
 80009f4:	6058      	str	r0, [r3, #4]
 80009f6:	4770      	bx	lr
 80009f8:	40021000 	andmi	r1, r2, r0

080009fc <RCC_PLLCmd>:
void RCC_PLLCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  *(vu32 *) CR_PLLON_BB = (u32)NewState;
 80009fc:	4b01      	ldr	r3, [pc, #4]	; (8000a04 <RCC_PLLCmd+0x8>)
 80009fe:	6018      	str	r0, [r3, #0]
 8000a00:	4770      	bx	lr
 8000a02:	bf00      	nop
 8000a04:	42420060 	submi	r0, r2, #96	; 0x60

08000a08 <RCC_SYSCLKConfig>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));

  tmpreg = RCC->CFGR;
 8000a08:	4b03      	ldr	r3, [pc, #12]	; (8000a18 <RCC_SYSCLKConfig+0x10>)
 8000a0a:	685a      	ldr	r2, [r3, #4]

  /* Clear SW[1:0] bits */
  tmpreg &= CFGR_SW_Mask;
 8000a0c:	f022 0203 	bic.w	r2, r2, #3

  /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
  tmpreg |= RCC_SYSCLKSource;
 8000a10:	4310      	orrs	r0, r2

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8000a12:	6058      	str	r0, [r3, #4]
 8000a14:	4770      	bx	lr
 8000a16:	bf00      	nop
 8000a18:	40021000 	andmi	r1, r2, r0

08000a1c <RCC_GetSYSCLKSource>:
*                       - 0x04: HSE used as system clock
*                       - 0x08: PLL used as system clock
*******************************************************************************/
u8 RCC_GetSYSCLKSource(void)
{
  return ((u8)(RCC->CFGR & CFGR_SWS_Mask));
 8000a1c:	4b02      	ldr	r3, [pc, #8]	; (8000a28 <RCC_GetSYSCLKSource+0xc>)
 8000a1e:	6858      	ldr	r0, [r3, #4]
}
 8000a20:	f000 000c 	and.w	r0, r0, #12
 8000a24:	4770      	bx	lr
 8000a26:	bf00      	nop
 8000a28:	40021000 	andmi	r1, r2, r0

08000a2c <RCC_HCLKConfig>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_HCLK(RCC_SYSCLK));

  tmpreg = RCC->CFGR;
 8000a2c:	4b03      	ldr	r3, [pc, #12]	; (8000a3c <RCC_HCLKConfig+0x10>)
 8000a2e:	685a      	ldr	r2, [r3, #4]

  /* Clear HPRE[3:0] bits */
  tmpreg &= CFGR_HPRE_Reset_Mask;
 8000a30:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0

  /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
  tmpreg |= RCC_SYSCLK;
 8000a34:	4310      	orrs	r0, r2

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8000a36:	6058      	str	r0, [r3, #4]
 8000a38:	4770      	bx	lr
 8000a3a:	bf00      	nop
 8000a3c:	40021000 	andmi	r1, r2, r0

08000a40 <RCC_PCLK1Config>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));

  tmpreg = RCC->CFGR;
 8000a40:	4b03      	ldr	r3, [pc, #12]	; (8000a50 <RCC_PCLK1Config+0x10>)
 8000a42:	685a      	ldr	r2, [r3, #4]

  /* Clear PPRE1[2:0] bits */
  tmpreg &= CFGR_PPRE1_Reset_Mask;
 8000a44:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700

  /* Set PPRE1[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK;
 8000a48:	4310      	orrs	r0, r2

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8000a4a:	6058      	str	r0, [r3, #4]
 8000a4c:	4770      	bx	lr
 8000a4e:	bf00      	nop
 8000a50:	40021000 	andmi	r1, r2, r0

08000a54 <RCC_PCLK2Config>:
  u32 tmpreg = 0;

  /* Check the parameters */
  assert_param(IS_RCC_PCLK(RCC_HCLK));

  tmpreg = RCC->CFGR;
 8000a54:	4b03      	ldr	r3, [pc, #12]	; (8000a64 <RCC_PCLK2Config+0x10>)
 8000a56:	685a      	ldr	r2, [r3, #4]

  /* Clear PPRE2[2:0] bits */
  tmpreg &= CFGR_PPRE2_Reset_Mask;
 8000a58:	f422 5260 	bic.w	r2, r2, #14336	; 0x3800

  /* Set PPRE2[2:0] bits according to RCC_HCLK value */
  tmpreg |= RCC_HCLK << 3;
 8000a5c:	ea42 00c0 	orr.w	r0, r2, r0, lsl #3

  /* Store the new value */
  RCC->CFGR = tmpreg;
 8000a60:	6058      	str	r0, [r3, #4]
 8000a62:	4770      	bx	lr
 8000a64:	40021000 	andmi	r1, r2, r0

08000a68 <RCC_USBCLKConfig>:
void RCC_USBCLKConfig(u32 RCC_USBCLKSource)
{
  /* Check the parameters */
  assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));

  *(vu32 *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 8000a68:	4b01      	ldr	r3, [pc, #4]	; (8000a70 <RCC_USBCLKConfig+0x8>)
 8000a6a:	6018      	str	r0, [r3, #0]
 8000a6c:	4770      	bx	lr
 8000a6e:	bf00      	nop
 8000a70:	424200d8 	submi	r0, r2, #216	; 0xd8

08000a74 <RCC_APB2PeriphClockCmd>:
*                    This parameter can be: ENABLE or DISABLE.
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_APB2PeriphClockCmd(u32 RCC_APB2Periph, FunctionalState NewState)
{
 8000a74:	4b04      	ldr	r3, [pc, #16]	; (8000a88 <RCC_APB2PeriphClockCmd+0x14>)
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 8000a76:	699a      	ldr	r2, [r3, #24]
{
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
 8000a78:	b109      	cbz	r1, 8000a7e <RCC_APB2PeriphClockCmd+0xa>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
 8000a7a:	4310      	orrs	r0, r2
 8000a7c:	e001      	b.n	8000a82 <RCC_APB2PeriphClockCmd+0xe>
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
 8000a7e:	ea22 0000 	bic.w	r0, r2, r0
 8000a82:	6198      	str	r0, [r3, #24]
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop
 8000a88:	40021000 	andmi	r1, r2, r0

08000a8c <RCC_GetFlagStatus>:

  /* Check the parameters */
  assert_param(IS_RCC_FLAG(RCC_FLAG));

  /* Get the RCC register index */
  tmp = RCC_FLAG >> 5;
 8000a8c:	0943      	lsrs	r3, r0, #5

  if (tmp == 1)               /* The flag to check is in CR register */
 8000a8e:	2b01      	cmp	r3, #1
 8000a90:	4a07      	ldr	r2, [pc, #28]	; (8000ab0 <RCC_GetFlagStatus+0x24>)
 8000a92:	d101      	bne.n	8000a98 <RCC_GetFlagStatus+0xc>
  {
    statusreg = RCC->CR;
 8000a94:	6813      	ldr	r3, [r2, #0]
 8000a96:	e003      	b.n	8000aa0 <RCC_GetFlagStatus+0x14>
  }
  else if (tmp == 2)          /* The flag to check is in BDCR register */
 8000a98:	2b02      	cmp	r3, #2
  {
    statusreg = RCC->BDCR;
 8000a9a:	bf0c      	ite	eq
 8000a9c:	6a13      	ldreq	r3, [r2, #32]
  }
  else                       /* The flag to check is in CSR register */
  {
    statusreg = RCC->CSR;
 8000a9e:	6a53      	ldrne	r3, [r2, #36]	; 0x24
  }

  /* Get the flag position */
  tmp = RCC_FLAG & FLAG_Mask;

  if ((statusreg & ((u32)1 << tmp)) != (u32)RESET)
 8000aa0:	f000 001f 	and.w	r0, r0, #31
 8000aa4:	fa23 f000 	lsr.w	r0, r3, r0
    bitstatus = RESET;
  }

  /* Return the flag status */
  return bitstatus;
}
 8000aa8:	f000 0001 	and.w	r0, r0, #1
 8000aac:	4770      	bx	lr
 8000aae:	bf00      	nop
 8000ab0:	40021000 	andmi	r1, r2, r0

08000ab4 <RCC_WaitForHSEStartUp>:
* Return         : An ErrorStatus enumuration value:
*                         - SUCCESS: HSE oscillator is stable and ready to use
*                         - ERROR: HSE oscillator not yet ready
*******************************************************************************/
ErrorStatus RCC_WaitForHSEStartUp(void)
{
 8000ab4:	b507      	push	{r0, r1, r2, lr}
  vu32 StartUpCounter = 0;
 8000ab6:	2300      	movs	r3, #0
 8000ab8:	9301      	str	r3, [sp, #4]
  FlagStatus HSEStatus = RESET;
  
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 8000aba:	2031      	movs	r0, #49	; 0x31
 8000abc:	f7ff ffe6 	bl	8000a8c <RCC_GetFlagStatus>
    StartUpCounter++;  
 8000ac0:	9b01      	ldr	r3, [sp, #4]
 8000ac2:	3301      	adds	r3, #1
 8000ac4:	9301      	str	r3, [sp, #4]
  } while((HSEStatus == RESET) && (StartUpCounter != HSEStartUp_TimeOut));
 8000ac6:	b918      	cbnz	r0, 8000ad0 <RCC_WaitForHSEStartUp+0x1c>
 8000ac8:	9b01      	ldr	r3, [sp, #4]
 8000aca:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8000ace:	d1f4      	bne.n	8000aba <RCC_WaitForHSEStartUp+0x6>


  if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 8000ad0:	2031      	movs	r0, #49	; 0x31
 8000ad2:	f7ff ffdb 	bl	8000a8c <RCC_GetFlagStatus>
  {
    status = ERROR;
  }  

  return (status);
}
 8000ad6:	3000      	adds	r0, #0
 8000ad8:	bf18      	it	ne
 8000ada:	2001      	movne	r0, #1
 8000adc:	b003      	add	sp, #12
 8000ade:	f85d fb04 	ldr.w	pc, [sp], #4

08000ae2 <TIM_ClearITPendingBit>:
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PERIPH_IT(TIMx, TIM_IT));

  /* Clear the IT pending Bit */
  TIMx->SR = (u16)~TIM_IT;
 8000ae2:	43c9      	mvns	r1, r1
 8000ae4:	b289      	uxth	r1, r1
 8000ae6:	8201      	strh	r1, [r0, #16]
 8000ae8:	4770      	bx	lr
	...

08000aec <SysTick_CounterCmd>:
void SysTick_CounterCmd(u32 SysTick_Counter)
{
  /* Check the parameters */
  assert_param(IS_SYSTICK_COUNTER(SysTick_Counter));

  if (SysTick_Counter == SysTick_Counter_Enable)
 8000aec:	2801      	cmp	r0, #1
 8000aee:	4b08      	ldr	r3, [pc, #32]	; (8000b10 <SysTick_CounterCmd+0x24>)
 8000af0:	d103      	bne.n	8000afa <SysTick_CounterCmd+0xe>
  {
    SysTick->CTRL |= SysTick_Counter_Enable;
 8000af2:	681a      	ldr	r2, [r3, #0]
 8000af4:	f042 0201 	orr.w	r2, r2, #1
 8000af8:	e004      	b.n	8000b04 <SysTick_CounterCmd+0x18>
  }
  else if (SysTick_Counter == SysTick_Counter_Disable) 
 8000afa:	3002      	adds	r0, #2
 8000afc:	d104      	bne.n	8000b08 <SysTick_CounterCmd+0x1c>
  {
    SysTick->CTRL &= SysTick_Counter_Disable;
 8000afe:	681a      	ldr	r2, [r3, #0]
 8000b00:	f022 0201 	bic.w	r2, r2, #1
 8000b04:	601a      	str	r2, [r3, #0]
 8000b06:	4770      	bx	lr
  }
  else /* SysTick_Counter == SysTick_Counter_Clear */
  {
    SysTick->VAL = SysTick_Counter_Clear;
 8000b08:	2200      	movs	r2, #0
 8000b0a:	609a      	str	r2, [r3, #8]
 8000b0c:	4770      	bx	lr
 8000b0e:	bf00      	nop
 8000b10:	e000e010 	and	lr, r0, r0, lsl r0

08000b14 <USART_ReceiveData>:
{
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
  
  /* Receive Data */
  return (u16)(USARTx->DR & (u16)0x01FF);
 8000b14:	8880      	ldrh	r0, [r0, #4]
}
 8000b16:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8000b1a:	4770      	bx	lr

08000b1c <Reset_Handler>:
* Input          :
* Output         :
* Return         :
*******************************************************************************/
void Reset_Handler(void)
{
 8000b1c:	4668      	mov	r0, sp
 8000b1e:	f020 0107 	bic.w	r1, r0, #7
 8000b22:	468d      	mov	sp, r1
 8000b24:	b501      	push	{r0, lr}

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_sidata;
    for(pulDest = &_sdata; pulDest < &_edata; )
 8000b26:	2300      	movs	r3, #0
 8000b28:	4a0b      	ldr	r2, [pc, #44]	; (8000b58 <Reset_Handler+0x3c>)
 8000b2a:	490c      	ldr	r1, [pc, #48]	; (8000b5c <Reset_Handler+0x40>)
 8000b2c:	1898      	adds	r0, r3, r2
 8000b2e:	4288      	cmp	r0, r1
 8000b30:	d204      	bcs.n	8000b3c <Reset_Handler+0x20>
    {
        *(pulDest++) = *(pulSrc++);
 8000b32:	490b      	ldr	r1, [pc, #44]	; (8000b60 <Reset_Handler+0x44>)
 8000b34:	5859      	ldr	r1, [r3, r1]
 8000b36:	5099      	str	r1, [r3, r2]
 8000b38:	3304      	adds	r3, #4
 8000b3a:	e7f5      	b.n	8000b28 <Reset_Handler+0xc>

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_sidata;
    for(pulDest = &_sdata; pulDest < &_edata; )
 8000b3c:	4b09      	ldr	r3, [pc, #36]	; (8000b64 <Reset_Handler+0x48>)
    }

    //
    // Zero fill the bss segment.
    //
    for(pulDest = &_sbss; pulDest < &_ebss; )
 8000b3e:	4a0a      	ldr	r2, [pc, #40]	; (8000b68 <Reset_Handler+0x4c>)
 8000b40:	4293      	cmp	r3, r2
 8000b42:	d203      	bcs.n	8000b4c <Reset_Handler+0x30>
    {
        *(pulDest++) = 0;
 8000b44:	2200      	movs	r2, #0
 8000b46:	f843 2b04 	str.w	r2, [r3], #4
 8000b4a:	e7f8      	b.n	8000b3e <Reset_Handler+0x22>
    }

    //
    // Call the application's entry point.
    //
    main();
 8000b4c:	f7ff fb74 	bl	8000238 <main>
}
 8000b50:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
 8000b54:	4685      	mov	sp, r0
 8000b56:	4770      	bx	lr
 8000b58:	20000000 	andcs	r0, r0, r0
 8000b5c:	200000e4 	andcs	r0, r0, r4, ror #1
 8000b60:	080018d0 	stmdaeq	r0, {r4, r6, r7, fp, ip}
 8000b64:	200000e4 	andcs	r0, r0, r4, ror #1
 8000b68:	2000066c 	andcs	r0, r0, ip, ror #12

08000b6c <Standard_GetConfiguration>:
* Output         : None.
* Return         : Return 1 , if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetConfiguration(u16 Length)
{
 8000b6c:	b510      	push	{r4, lr}
 8000b6e:	4c06      	ldr	r4, [pc, #24]	; (8000b88 <Standard_GetConfiguration+0x1c>)
  if (Length == 0)
 8000b70:	b918      	cbnz	r0, 8000b7a <Standard_GetConfiguration+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 8000b72:	6823      	ldr	r3, [r4, #0]
 8000b74:	2201      	movs	r2, #1
 8000b76:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_Configuration);
    return 0;
 8000b78:	bd10      	pop	{r4, pc}
  }
  pUser_Standard_Requests->User_GetConfiguration();
 8000b7a:	4b04      	ldr	r3, [pc, #16]	; (8000b8c <Standard_GetConfiguration+0x20>)
 8000b7c:	681b      	ldr	r3, [r3, #0]
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	4798      	blx	r3
  return (u8 *)&pInformation->Current_Configuration;
 8000b82:	6820      	ldr	r0, [r4, #0]
 8000b84:	300a      	adds	r0, #10
}
 8000b86:	bd10      	pop	{r4, pc}
 8000b88:	20000660 	andcs	r0, r0, r0, ror #12
 8000b8c:	2000065c 	andcs	r0, r0, ip, asr r6

08000b90 <Standard_GetInterface>:
* Output         : None.
* Return         : Return 0, if the request is invalid when "Length" is 0.
*                  Return "Buffer" if the "Length" is not 0.
*******************************************************************************/
u8 *Standard_GetInterface(u16 Length)
{
 8000b90:	b510      	push	{r4, lr}
 8000b92:	4c06      	ldr	r4, [pc, #24]	; (8000bac <Standard_GetInterface+0x1c>)
  if (Length == 0)
 8000b94:	b918      	cbnz	r0, 8000b9e <Standard_GetInterface+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength =
 8000b96:	6823      	ldr	r3, [r4, #0]
 8000b98:	2201      	movs	r2, #1
 8000b9a:	821a      	strh	r2, [r3, #16]
      sizeof(pInformation->Current_AlternateSetting);
    return 0;
 8000b9c:	bd10      	pop	{r4, pc}
  }
  pUser_Standard_Requests->User_GetInterface();
 8000b9e:	4b04      	ldr	r3, [pc, #16]	; (8000bb0 <Standard_GetInterface+0x20>)
 8000ba0:	681b      	ldr	r3, [r3, #0]
 8000ba2:	689b      	ldr	r3, [r3, #8]
 8000ba4:	4798      	blx	r3
  return (u8 *)&pInformation->Current_AlternateSetting;
 8000ba6:	6820      	ldr	r0, [r4, #0]
 8000ba8:	300c      	adds	r0, #12
}
 8000baa:	bd10      	pop	{r4, pc}
 8000bac:	20000660 	andcs	r0, r0, r0, ror #12
 8000bb0:	2000065c 	andcs	r0, r0, ip, asr r6

08000bb4 <Standard_GetStatus>:
* Output         : None.
* Return         : Return 0, if the request is at end of data block,
*                  or is invalid when "Length" is 0.
*******************************************************************************/
u8 *Standard_GetStatus(u16 Length)
{
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	4b20      	ldr	r3, [pc, #128]	; (8000c38 <Standard_GetStatus+0x84>)
  if (Length == 0)
 8000bb8:	b918      	cbnz	r0, 8000bc2 <Standard_GetStatus+0xe>
  {
    pInformation->Ctrl_Info.Usb_wLength = 2;
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	2202      	movs	r2, #2
 8000bbe:	821a      	strh	r2, [r3, #16]
    return 0;
 8000bc0:	bd10      	pop	{r4, pc}
  }

  /* Reset Status Information */
  StatusInfo.w = 0;
 8000bc2:	4a1e      	ldr	r2, [pc, #120]	; (8000c3c <Standard_GetStatus+0x88>)

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8000bc4:	6819      	ldr	r1, [r3, #0]
    pInformation->Ctrl_Info.Usb_wLength = 2;
    return 0;
  }

  /* Reset Status Information */
  StatusInfo.w = 0;
 8000bc6:	2000      	movs	r0, #0
 8000bc8:	8010      	strh	r0, [r2, #0]

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8000bca:	780c      	ldrb	r4, [r1, #0]
 8000bcc:	4613      	mov	r3, r2
 8000bce:	f014 047f 	ands.w	r4, r4, #127	; 0x7f
 8000bd2:	d10d      	bne.n	8000bf0 <Standard_GetStatus+0x3c>
  {
    /*Get Device Status */
    u8 Feature = pInformation->Current_Feature;
 8000bd4:	7a4a      	ldrb	r2, [r1, #9]

    /* Remote Wakeup enabled */
    if (ValBit(Feature, 5))
 8000bd6:	0691      	lsls	r1, r2, #26
    {
      SetBit(StatusInfo0, 1);
 8000bd8:	bf44      	itt	mi
 8000bda:	2102      	movmi	r1, #2
 8000bdc:	7019      	strbmi	r1, [r3, #0]
    {
      ClrBit(StatusInfo0, 1);
    }      

    /* Bus-powered */
    if (ValBit(Feature, 6))
 8000bde:	f012 0f40 	tst.w	r2, #64	; 0x40
    {
      SetBit(StatusInfo0, 0);
 8000be2:	781a      	ldrb	r2, [r3, #0]
 8000be4:	bf14      	ite	ne
 8000be6:	f042 0201 	orrne.w	r2, r2, #1
    }
    else /* Self-powered */
    {
      ClrBit(StatusInfo0, 0);
 8000bea:	f022 0201 	biceq.w	r2, r2, #1
 8000bee:	e014      	b.n	8000c1a <Standard_GetStatus+0x66>
    }
  }
  /*Interface Status*/
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8000bf0:	2c01      	cmp	r4, #1
 8000bf2:	d01f      	beq.n	8000c34 <Standard_GetStatus+0x80>
  {
    return (u8 *)&StatusInfo;
  }
  /*Get EndPoint Status*/
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8000bf4:	2c02      	cmp	r4, #2
 8000bf6:	d11e      	bne.n	8000c36 <Standard_GetStatus+0x82>
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;
 8000bf8:	7949      	ldrb	r1, [r1, #5]

    Related_Endpoint = (wIndex0 & 0x0f);
 8000bfa:	f001 020f 	and.w	r2, r1, #15
 8000bfe:	0092      	lsls	r2, r2, #2
    if (ValBit(wIndex0, 7))
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8000c00:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8000c04:	f502 42b8 	add.w	r2, r2, #23552	; 0x5c00
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;

    Related_Endpoint = (wIndex0 & 0x0f);
    if (ValBit(wIndex0, 7))
 8000c08:	f011 0f80 	tst.w	r1, #128	; 0x80
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8000c0c:	6812      	ldr	r2, [r2, #0]
  {
    u8 Related_Endpoint;
    u8 wIndex0 = pInformation->USBwIndex0;

    Related_Endpoint = (wIndex0 & 0x0f);
    if (ValBit(wIndex0, 7))
 8000c0e:	d006      	beq.n	8000c1e <Standard_GetStatus+0x6a>
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint))
 8000c10:	f002 0230 	and.w	r2, r2, #48	; 0x30
 8000c14:	2a10      	cmp	r2, #16
 8000c16:	d107      	bne.n	8000c28 <Standard_GetStatus+0x74>
      {
        SetBit(StatusInfo0, 0); /* IN Endpoint stalled */
 8000c18:	2201      	movs	r2, #1
 8000c1a:	701a      	strb	r2, [r3, #0]
 8000c1c:	e004      	b.n	8000c28 <Standard_GetStatus+0x74>
      }
    }
    else
    {
      /* OUT endpoint */
      if (_GetRxStallStatus(Related_Endpoint))
 8000c1e:	f402 5240 	and.w	r2, r2, #12288	; 0x3000
 8000c22:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8000c26:	e7f6      	b.n	8000c16 <Standard_GetStatus+0x62>
  }
  else
  {
    return NULL;
  }
  pUser_Standard_Requests->User_GetStatus();
 8000c28:	4b05      	ldr	r3, [pc, #20]	; (8000c40 <Standard_GetStatus+0x8c>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	691b      	ldr	r3, [r3, #16]
 8000c2e:	4798      	blx	r3
  return (u8 *)&StatusInfo;
 8000c30:	4802      	ldr	r0, [pc, #8]	; (8000c3c <Standard_GetStatus+0x88>)
 8000c32:	bd10      	pop	{r4, pc}
    }
  }
  /*Interface Status*/
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
  {
    return (u8 *)&StatusInfo;
 8000c34:	4610      	mov	r0, r2
  {
    return NULL;
  }
  pUser_Standard_Requests->User_GetStatus();
  return (u8 *)&StatusInfo;
}
 8000c36:	bd10      	pop	{r4, pc}
 8000c38:	20000660 	andcs	r0, r0, r0, ror #12
 8000c3c:	20000666 	andcs	r0, r0, r6, ror #12
 8000c40:	2000065c 	andcs	r0, r0, ip, asr r6

08000c44 <DataStageIn>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void DataStageIn(void)
{
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
 8000c44:	4a23      	ldr	r2, [pc, #140]	; (8000cd4 <DataStageIn+0x90>)
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void DataStageIn(void)
{
 8000c46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
 8000c4a:	6814      	ldr	r4, [r2, #0]
 8000c4c:	4690      	mov	r8, r2
  u32 save_wLength = pEPinfo->Usb_wLength;
 8000c4e:	8a23      	ldrh	r3, [r4, #16]
  u32 ControlState = pInformation->ControlState;
 8000c50:	7a26      	ldrb	r6, [r4, #8]
 8000c52:	4f21      	ldr	r7, [pc, #132]	; (8000cd8 <DataStageIn+0x94>)

  u8 *DataBuffer;
  u32 Length;

  if ((save_wLength == 0) && (ControlState == LAST_IN_DATA))
 8000c54:	b9a3      	cbnz	r3, 8000c80 <DataStageIn+0x3c>
 8000c56:	2e04      	cmp	r6, #4
 8000c58:	d112      	bne.n	8000c80 <DataStageIn+0x3c>
  {
    if(Data_Mul_MaxPacketSize == TRUE)
 8000c5a:	4920      	ldr	r1, [pc, #128]	; (8000cdc <DataStageIn+0x98>)
 8000c5c:	780a      	ldrb	r2, [r1, #0]
 8000c5e:	2a01      	cmp	r2, #1
 8000c60:	d10a      	bne.n	8000c78 <DataStageIn+0x34>
    {
      /* No more data to send and empty packet */
      Send0LengthData();
 8000c62:	4a1f      	ldr	r2, [pc, #124]	; (8000ce0 <DataStageIn+0x9c>)
 8000c64:	6810      	ldr	r0, [r2, #0]
 8000c66:	4a1f      	ldr	r2, [pc, #124]	; (8000ce4 <DataStageIn+0xa0>)
 8000c68:	b280      	uxth	r0, r0
 8000c6a:	4402      	add	r2, r0
 8000c6c:	0052      	lsls	r2, r2, #1
 8000c6e:	6013      	str	r3, [r2, #0]
 8000c70:	2230      	movs	r2, #48	; 0x30
 8000c72:	803a      	strh	r2, [r7, #0]
      ControlState = LAST_IN_DATA;
      Data_Mul_MaxPacketSize = FALSE;
 8000c74:	700b      	strb	r3, [r1, #0]
 8000c76:	e027      	b.n	8000cc8 <DataStageIn+0x84>
    #ifdef STM32F10X_CL      
      PCD_EP_Read (ENDP0, 0, 0);
    #endif  /* STM32F10X_CL */ 
    
    #ifndef STM32F10X_CL 
      vSetEPTxStatus(EP_TX_STALL);
 8000c78:	2310      	movs	r3, #16
 8000c7a:	803b      	strh	r3, [r7, #0]
      Data_Mul_MaxPacketSize = FALSE;
    }
    else 
    {
      /* No more data to send so STALL the TX Status*/
      ControlState = WAIT_STATUS_OUT;
 8000c7c:	2607      	movs	r6, #7
 8000c7e:	e023      	b.n	8000cc8 <DataStageIn+0x84>
    }
    
    goto Expect_Status_Out;
  }

  Length = pEPinfo->PacketSize;
 8000c80:	8aa5      	ldrh	r5, [r4, #20]
  ControlState = (save_wLength <= Length) ? LAST_IN_DATA : IN_DATA;
 8000c82:	42ab      	cmp	r3, r5
 8000c84:	bf8c      	ite	hi
 8000c86:	2602      	movhi	r6, #2
 8000c88:	2604      	movls	r6, #4
  if (Length > save_wLength)
  {
    Length = save_wLength;
  }

  DataBuffer = (*pEPinfo->CopyData)(Length);
 8000c8a:	429d      	cmp	r5, r3
 8000c8c:	bf28      	it	cs
 8000c8e:	461d      	movcs	r5, r3
 8000c90:	4628      	mov	r0, r5
 8000c92:	69a3      	ldr	r3, [r4, #24]
 8000c94:	4798      	blx	r3
 8000c96:	4681      	mov	r9, r0

#ifdef STM32F10X_CL
  PCD_EP_Write (ENDP0, DataBuffer, Length);
#else   
  UserToPMABufferCopy(DataBuffer, GetEPTxAddr(ENDP0), Length);
 8000c98:	2000      	movs	r0, #0
 8000c9a:	f000 fc71 	bl	8001580 <GetEPTxAddr>
 8000c9e:	462a      	mov	r2, r5
 8000ca0:	4601      	mov	r1, r0
 8000ca2:	4648      	mov	r0, r9
 8000ca4:	f000 fb7f 	bl	80013a6 <UserToPMABufferCopy>
#endif /* STM32F10X_CL */ 

  SetEPTxCount(ENDP0, Length);
 8000ca8:	4629      	mov	r1, r5
 8000caa:	2000      	movs	r0, #0
 8000cac:	f000 fc84 	bl	80015b8 <SetEPTxCount>

  pEPinfo->Usb_wLength -= Length;
 8000cb0:	8a23      	ldrh	r3, [r4, #16]
  pEPinfo->Usb_wOffset += Length;
  vSetEPTxStatus(EP_TX_VALID);

  USB_StatusOut();/* Expect the host to abort the data IN stage */
 8000cb2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  UserToPMABufferCopy(DataBuffer, GetEPTxAddr(ENDP0), Length);
#endif /* STM32F10X_CL */ 

  SetEPTxCount(ENDP0, Length);

  pEPinfo->Usb_wLength -= Length;
 8000cb6:	1b5b      	subs	r3, r3, r5
 8000cb8:	8223      	strh	r3, [r4, #16]
  pEPinfo->Usb_wOffset += Length;
 8000cba:	8a63      	ldrh	r3, [r4, #18]
 8000cbc:	441d      	add	r5, r3
  vSetEPTxStatus(EP_TX_VALID);
 8000cbe:	2330      	movs	r3, #48	; 0x30
 8000cc0:	803b      	strh	r3, [r7, #0]

  USB_StatusOut();/* Expect the host to abort the data IN stage */
 8000cc2:	4b09      	ldr	r3, [pc, #36]	; (8000ce8 <DataStageIn+0xa4>)
#endif /* STM32F10X_CL */ 

  SetEPTxCount(ENDP0, Length);

  pEPinfo->Usb_wLength -= Length;
  pEPinfo->Usb_wOffset += Length;
 8000cc4:	8265      	strh	r5, [r4, #18]
  vSetEPTxStatus(EP_TX_VALID);

  USB_StatusOut();/* Expect the host to abort the data IN stage */
 8000cc6:	801a      	strh	r2, [r3, #0]

Expect_Status_Out:
  pInformation->ControlState = ControlState;
 8000cc8:	f8d8 3000 	ldr.w	r3, [r8]
 8000ccc:	721e      	strb	r6, [r3, #8]
 8000cce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cd2:	bf00      	nop
 8000cd4:	20000660 	andcs	r0, r0, r0, ror #12
 8000cd8:	2000066a 	andcs	r0, r0, sl, ror #12
 8000cdc:	2000017c 	andcs	r0, r0, ip, ror r1
 8000ce0:	40005c50 	andmi	r5, r0, r0, asr ip
 8000ce4:	20003002 	andcs	r3, r0, r2
 8000ce8:	20000668 	andcs	r0, r0, r8, ror #12

08000cec <Standard_SetConfiguration>:
* Output         : None.
* Return         : Return USB_SUCCESS, if the request is performed.
*                  Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetConfiguration(void)
{
 8000cec:	b510      	push	{r4, lr}

  if ((pInformation->USBwValue0 <=
 8000cee:	4b0a      	ldr	r3, [pc, #40]	; (8000d18 <Standard_SetConfiguration+0x2c>)
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 8000cf0:	490a      	ldr	r1, [pc, #40]	; (8000d1c <Standard_SetConfiguration+0x30>)
*                  Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetConfiguration(void)
{

  if ((pInformation->USBwValue0 <=
 8000cf2:	681b      	ldr	r3, [r3, #0]
 8000cf4:	7849      	ldrb	r1, [r1, #1]
 8000cf6:	78da      	ldrb	r2, [r3, #3]
 8000cf8:	4291      	cmp	r1, r2
 8000cfa:	d30a      	bcc.n	8000d12 <Standard_SetConfiguration+0x26>
      Device_Table.Total_Configuration) && (pInformation->USBwValue1 == 0)
 8000cfc:	7899      	ldrb	r1, [r3, #2]
 8000cfe:	b941      	cbnz	r1, 8000d12 <Standard_SetConfiguration+0x26>
      && (pInformation->USBwIndex == 0)) /*call Back usb spec 2.0*/
 8000d00:	889c      	ldrh	r4, [r3, #4]
 8000d02:	b934      	cbnz	r4, 8000d12 <Standard_SetConfiguration+0x26>
  {
    pInformation->Current_Configuration = pInformation->USBwValue0;
 8000d04:	729a      	strb	r2, [r3, #10]
    pUser_Standard_Requests->User_SetConfiguration();
 8000d06:	4b06      	ldr	r3, [pc, #24]	; (8000d20 <Standard_SetConfiguration+0x34>)
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	685b      	ldr	r3, [r3, #4]
 8000d0c:	4798      	blx	r3
    return USB_SUCCESS;
 8000d0e:	4620      	mov	r0, r4
 8000d10:	bd10      	pop	{r4, pc}
  }
  else
  {
    return USB_UNSUPPORT;
 8000d12:	2002      	movs	r0, #2
  }
}
 8000d14:	bd10      	pop	{r4, pc}
 8000d16:	bf00      	nop
 8000d18:	20000660 	andcs	r0, r0, r0, ror #12
 8000d1c:	200000e0 	andcs	r0, r0, r0, ror #1
 8000d20:	2000065c 	andcs	r0, r0, ip, asr r6

08000d24 <Standard_SetInterface>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetInterface(void)
{
 8000d24:	b538      	push	{r3, r4, r5, lr}
  RESULT Re;
  /*Test if the specified Interface and Alternate Setting are supported by
    the application Firmware*/
  Re = (*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, pInformation->USBwValue0);
 8000d26:	4a0e      	ldr	r2, [pc, #56]	; (8000d60 <Standard_SetInterface+0x3c>)
 8000d28:	4c0e      	ldr	r4, [pc, #56]	; (8000d64 <Standard_SetInterface+0x40>)
 8000d2a:	6812      	ldr	r2, [r2, #0]
 8000d2c:	6823      	ldr	r3, [r4, #0]
 8000d2e:	6992      	ldr	r2, [r2, #24]
 8000d30:	7958      	ldrb	r0, [r3, #5]
 8000d32:	78d9      	ldrb	r1, [r3, #3]
 8000d34:	4790      	blx	r2

  if (pInformation->Current_Configuration != 0)
 8000d36:	6823      	ldr	r3, [r4, #0]
 8000d38:	7a9a      	ldrb	r2, [r3, #10]
 8000d3a:	b17a      	cbz	r2, 8000d5c <Standard_SetInterface+0x38>
  {
    if ((Re != USB_SUCCESS) || (pInformation->USBwIndex1 != 0)
 8000d3c:	b970      	cbnz	r0, 8000d5c <Standard_SetInterface+0x38>
 8000d3e:	791a      	ldrb	r2, [r3, #4]
 8000d40:	b962      	cbnz	r2, 8000d5c <Standard_SetInterface+0x38>
        || (pInformation->USBwValue1 != 0))
 8000d42:	789d      	ldrb	r5, [r3, #2]
 8000d44:	b955      	cbnz	r5, 8000d5c <Standard_SetInterface+0x38>
    {
      return  USB_UNSUPPORT;
    }
    else if (Re == USB_SUCCESS)
    {
      pUser_Standard_Requests->User_SetInterface();
 8000d46:	4b08      	ldr	r3, [pc, #32]	; (8000d68 <Standard_SetInterface+0x44>)
 8000d48:	681b      	ldr	r3, [r3, #0]
 8000d4a:	68db      	ldr	r3, [r3, #12]
 8000d4c:	4798      	blx	r3
      pInformation->Current_Interface = pInformation->USBwIndex0;
 8000d4e:	6823      	ldr	r3, [r4, #0]
      pInformation->Current_AlternateSetting = pInformation->USBwValue0;
      return USB_SUCCESS;
 8000d50:	4628      	mov	r0, r5
      return  USB_UNSUPPORT;
    }
    else if (Re == USB_SUCCESS)
    {
      pUser_Standard_Requests->User_SetInterface();
      pInformation->Current_Interface = pInformation->USBwIndex0;
 8000d52:	795a      	ldrb	r2, [r3, #5]
 8000d54:	72da      	strb	r2, [r3, #11]
      pInformation->Current_AlternateSetting = pInformation->USBwValue0;
 8000d56:	78da      	ldrb	r2, [r3, #3]
 8000d58:	731a      	strb	r2, [r3, #12]
      return USB_SUCCESS;
 8000d5a:	bd38      	pop	{r3, r4, r5, pc}
    }

  }

  return USB_UNSUPPORT;
 8000d5c:	2002      	movs	r0, #2
}
 8000d5e:	bd38      	pop	{r3, r4, r5, pc}
 8000d60:	20000638 	andcs	r0, r0, r8, lsr r6
 8000d64:	20000660 	andcs	r0, r0, r0, ror #12
 8000d68:	2000065c 	andcs	r0, r0, ip, asr r6

08000d6c <Standard_ClearFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_ClearFeature(void)
{
 8000d6c:	b538      	push	{r3, r4, r5, lr}
  u32     Type_Rec = Type_Recipient;
 8000d6e:	4b31      	ldr	r3, [pc, #196]	; (8000e34 <Standard_ClearFeature+0xc8>)
 8000d70:	681b      	ldr	r3, [r3, #0]
 8000d72:	7818      	ldrb	r0, [r3, #0]
  u32     Status;


  if (Type_Rec == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8000d74:	f010 007f 	ands.w	r0, r0, #127	; 0x7f
 8000d78:	d104      	bne.n	8000d84 <Standard_ClearFeature+0x18>
  {/*Device Clear Feature*/
    ClrBit(pInformation->Current_Feature, 5);
 8000d7a:	7a5a      	ldrb	r2, [r3, #9]
 8000d7c:	f022 0220 	bic.w	r2, r2, #32
 8000d80:	725a      	strb	r2, [r3, #9]
    return USB_SUCCESS;
 8000d82:	bd38      	pop	{r3, r4, r5, pc}
  }
  else if (Type_Rec == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8000d84:	2802      	cmp	r0, #2
 8000d86:	d153      	bne.n	8000e30 <Standard_ClearFeature+0xc4>
    DEVICE* pDev;
    u32 Related_Endpoint;
    u32 wIndex0;
    u32 rEP;

    if ((pInformation->USBwValue != ENDPOINT_STALL)
 8000d88:	885a      	ldrh	r2, [r3, #2]
 8000d8a:	2a00      	cmp	r2, #0
 8000d8c:	d151      	bne.n	8000e32 <Standard_ClearFeature+0xc6>
        || (pInformation->USBwIndex1 != 0))
 8000d8e:	791a      	ldrb	r2, [r3, #4]
 8000d90:	2a00      	cmp	r2, #0
 8000d92:	d14e      	bne.n	8000e32 <Standard_ClearFeature+0xc6>
    {
      return USB_UNSUPPORT;
    }

    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
 8000d94:	795a      	ldrb	r2, [r3, #5]
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8000d96:	4d28      	ldr	r5, [pc, #160]	; (8000e38 <Standard_ClearFeature+0xcc>)
      return USB_UNSUPPORT;
    }

    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
    rEP = wIndex0 & ~0x80;
 8000d98:	f022 0080 	bic.w	r0, r2, #128	; 0x80
 8000d9c:	0084      	lsls	r4, r0, #2

    if (ValBit(pInformation->USBwIndex0, 7))
    {
      /*Get Status of endpoint & stall the request if the related_ENdpoint
      is Disabled*/
      Status = _GetEPTxStatus(Related_Endpoint);
 8000d9e:	f104 4180 	add.w	r1, r4, #1073741824	; 0x40000000
 8000da2:	f501 41b8 	add.w	r1, r1, #23552	; 0x5c00
 8000da6:	6809      	ldr	r1, [r1, #0]
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8000da8:	782d      	ldrb	r5, [r5, #0]
    pDev = &Device_Table;
    wIndex0 = pInformation->USBwIndex0;
    rEP = wIndex0 & ~0x80;
    Related_Endpoint = ENDP0 + rEP;

    if (ValBit(pInformation->USBwIndex0, 7))
 8000daa:	f012 0f80 	tst.w	r2, #128	; 0x80
    {
      /*Get Status of endpoint & stall the request if the related_ENdpoint
      is Disabled*/
      Status = _GetEPTxStatus(Related_Endpoint);
 8000dae:	bf14      	ite	ne
 8000db0:	f001 0130 	andne.w	r1, r1, #48	; 0x30
    }
    else
    {
      Status = _GetEPRxStatus(Related_Endpoint);
 8000db4:	f401 5140 	andeq.w	r1, r1, #12288	; 0x3000
    }

    if ((rEP >= pDev->Total_Endpoint) || (Status == 0)
 8000db8:	42a8      	cmp	r0, r5
 8000dba:	d239      	bcs.n	8000e30 <Standard_ClearFeature+0xc4>
 8000dbc:	2900      	cmp	r1, #0
 8000dbe:	d037      	beq.n	8000e30 <Standard_ClearFeature+0xc4>
        || (pInformation->Current_Configuration == 0))
 8000dc0:	7a9b      	ldrb	r3, [r3, #10]
 8000dc2:	2b00      	cmp	r3, #0
 8000dc4:	d034      	beq.n	8000e30 <Standard_ClearFeature+0xc4>


    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8000dc6:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000dca:	f504 44b8 	add.w	r4, r4, #23552	; 0x5c00
    {
      return USB_UNSUPPORT;
    }


    if (wIndex0 & 0x80)
 8000dce:	0612      	lsls	r2, r2, #24
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8000dd0:	6823      	ldr	r3, [r4, #0]
    {
      return USB_UNSUPPORT;
    }


    if (wIndex0 & 0x80)
 8000dd2:	d50c      	bpl.n	8000dee <Standard_ClearFeature+0x82>
    {
      /* IN endpoint */
      if (_GetTxStallStatus(Related_Endpoint ))
 8000dd4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8000dd8:	2b10      	cmp	r3, #16
 8000dda:	d123      	bne.n	8000e24 <Standard_ClearFeature+0xb8>
      {
      #ifndef STM32F10X_CL
        ClearDTOG_TX(Related_Endpoint);
 8000ddc:	b2c4      	uxtb	r4, r0
 8000dde:	4620      	mov	r0, r4
 8000de0:	f000 fb9c 	bl	800151c <ClearDTOG_TX>
      #endif /* STM32F10X_CL */
        SetEPTxStatus(Related_Endpoint, EP_TX_VALID);
 8000de4:	4620      	mov	r0, r4
 8000de6:	2130      	movs	r1, #48	; 0x30
 8000de8:	f000 fb1e 	bl	8001428 <SetEPTxStatus>
 8000dec:	e01a      	b.n	8000e24 <Standard_ClearFeature+0xb8>
      }
    }
    else
    {
      /* OUT endpoint */
      if (_GetRxStallStatus(Related_Endpoint))
 8000dee:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 8000df2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000df6:	d115      	bne.n	8000e24 <Standard_ClearFeature+0xb8>
      {
        if (Related_Endpoint == ENDP0)
 8000df8:	b928      	cbnz	r0, 8000e06 <Standard_ClearFeature+0x9a>
        {
          /* After clear the STALL, enable the default endpoint receiver */
          SetEPRxCount(Related_Endpoint, Device_Property.MaxPacketSize);
 8000dfa:	4b10      	ldr	r3, [pc, #64]	; (8000e3c <Standard_ClearFeature+0xd0>)
 8000dfc:	f893 102c 	ldrb.w	r1, [r3, #44]	; 0x2c
 8000e00:	f000 fbe8 	bl	80015d4 <SetEPRxCount>
 8000e04:	e001      	b.n	8000e0a <Standard_ClearFeature+0x9e>
          _SetEPRxStatus(Related_Endpoint, EP_RX_VALID);
        }
        else
        {
        #ifndef STM32F10X_CL
          ClearDTOG_RX(Related_Endpoint);
 8000e06:	f000 fb77 	bl	80014f8 <ClearDTOG_RX>
        #endif /* STM32F10X_CL */
          _SetEPRxStatus(Related_Endpoint, EP_RX_VALID);
 8000e0a:	6823      	ldr	r3, [r4, #0]
 8000e0c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8000e10:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000e14:	b29b      	uxth	r3, r3
 8000e16:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 8000e1a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000e1e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e22:	6023      	str	r3, [r4, #0]
        }
      }
    }
    pUser_Standard_Requests->User_ClearFeature();
 8000e24:	4b06      	ldr	r3, [pc, #24]	; (8000e40 <Standard_ClearFeature+0xd4>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	695b      	ldr	r3, [r3, #20]
 8000e2a:	4798      	blx	r3
    return USB_SUCCESS;
 8000e2c:	2000      	movs	r0, #0
 8000e2e:	bd38      	pop	{r3, r4, r5, pc}
  }

  return USB_UNSUPPORT;
 8000e30:	2002      	movs	r0, #2
}
 8000e32:	bd38      	pop	{r3, r4, r5, pc}
 8000e34:	20000660 	andcs	r0, r0, r0, ror #12
 8000e38:	200000e0 	andcs	r0, r0, r0, ror #1
 8000e3c:	2000005c 	andcs	r0, r0, ip, asr r0
 8000e40:	2000065c 	andcs	r0, r0, ip, asr r6

08000e44 <Standard_SetEndPointFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetEndPointFeature(void)
{
 8000e44:	b538      	push	{r3, r4, r5, lr}
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8000e46:	4b1f      	ldr	r3, [pc, #124]	; (8000ec4 <Standard_SetEndPointFeature+0x80>)
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8000e48:	4d1f      	ldr	r5, [pc, #124]	; (8000ec8 <Standard_SetEndPointFeature+0x84>)
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8000e4a:	6819      	ldr	r1, [r3, #0]
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8000e4c:	782d      	ldrb	r5, [r5, #0]
  u32    wIndex0;
  u32    Related_Endpoint;
  u32    rEP;
  u32    Status;

  wIndex0 = pInformation->USBwIndex0;
 8000e4e:	794a      	ldrb	r2, [r1, #5]
  rEP = wIndex0 & ~0x80;
 8000e50:	f022 0480 	bic.w	r4, r2, #128	; 0x80
 8000e54:	00a3      	lsls	r3, r4, #2

  if (ValBit(pInformation->USBwIndex0, 7))
  {
    /* get Status of endpoint & stall the request if the related_ENdpoint
    is Disabled*/
    Status = _GetEPTxStatus(Related_Endpoint);
 8000e56:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 8000e5a:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8000e5e:	6800      	ldr	r0, [r0, #0]

  wIndex0 = pInformation->USBwIndex0;
  rEP = wIndex0 & ~0x80;
  Related_Endpoint = ENDP0 + rEP;

  if (ValBit(pInformation->USBwIndex0, 7))
 8000e60:	f012 0f80 	tst.w	r2, #128	; 0x80
  {
    /* get Status of endpoint & stall the request if the related_ENdpoint
    is Disabled*/
    Status = _GetEPTxStatus(Related_Endpoint);
 8000e64:	bf14      	ite	ne
 8000e66:	f000 0030 	andne.w	r0, r0, #48	; 0x30
  }
  else
  {
    Status = _GetEPRxStatus(Related_Endpoint);
 8000e6a:	f400 5040 	andeq.w	r0, r0, #12288	; 0x3000
  }

  if (Related_Endpoint >= Device_Table.Total_Endpoint
 8000e6e:	42ac      	cmp	r4, r5
 8000e70:	d226      	bcs.n	8000ec0 <Standard_SetEndPointFeature+0x7c>
      || pInformation->USBwValue != 0 || Status == 0
 8000e72:	884c      	ldrh	r4, [r1, #2]
 8000e74:	bb24      	cbnz	r4, 8000ec0 <Standard_SetEndPointFeature+0x7c>
 8000e76:	b318      	cbz	r0, 8000ec0 <Standard_SetEndPointFeature+0x7c>
      || pInformation->Current_Configuration == 0)
 8000e78:	7a89      	ldrb	r1, [r1, #10]
 8000e7a:	b309      	cbz	r1, 8000ec0 <Standard_SetEndPointFeature+0x7c>
  else
  {
    if (wIndex0 & 0x80)
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8000e7c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8000e80:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
  {
    return USB_UNSUPPORT;
  }
  else
  {
    if (wIndex0 & 0x80)
 8000e84:	f012 0f80 	tst.w	r2, #128	; 0x80
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8000e88:	681a      	ldr	r2, [r3, #0]
  {
    return USB_UNSUPPORT;
  }
  else
  {
    if (wIndex0 & 0x80)
 8000e8a:	d007      	beq.n	8000e9c <Standard_SetEndPointFeature+0x58>
    {
      /* IN endpoint */
      _SetEPTxStatus(Related_Endpoint, EP_TX_STALL);
 8000e8c:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
 8000e90:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000e94:	b292      	uxth	r2, r2
 8000e96:	f082 0210 	eor.w	r2, r2, #16
 8000e9a:	e006      	b.n	8000eaa <Standard_SetEndPointFeature+0x66>
    }

    else
    {
      /* OUT endpoint */
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
 8000e9c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8000ea0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8000ea4:	b292      	uxth	r2, r2
 8000ea6:	f482 5280 	eor.w	r2, r2, #4096	; 0x1000
 8000eaa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8000eae:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000eb2:	601a      	str	r2, [r3, #0]
    }
  }
  pUser_Standard_Requests->User_SetEndPointFeature();
 8000eb4:	4b05      	ldr	r3, [pc, #20]	; (8000ecc <Standard_SetEndPointFeature+0x88>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	699b      	ldr	r3, [r3, #24]
 8000eba:	4798      	blx	r3
  return USB_SUCCESS;
 8000ebc:	2000      	movs	r0, #0
 8000ebe:	bd38      	pop	{r3, r4, r5, pc}

  if (Related_Endpoint >= Device_Table.Total_Endpoint
      || pInformation->USBwValue != 0 || Status == 0
      || pInformation->Current_Configuration == 0)
  {
    return USB_UNSUPPORT;
 8000ec0:	2002      	movs	r0, #2
      _SetEPRxStatus(Related_Endpoint, EP_RX_STALL);
    }
  }
  pUser_Standard_Requests->User_SetEndPointFeature();
  return USB_SUCCESS;
}
 8000ec2:	bd38      	pop	{r3, r4, r5, pc}
 8000ec4:	20000660 	andcs	r0, r0, r0, ror #12
 8000ec8:	200000e0 	andcs	r0, r0, r0, ror #1
 8000ecc:	2000065c 	andcs	r0, r0, ip, asr r6

08000ed0 <Standard_SetDeviceFeature>:
* Output         : None.
* Return         : - Return USB_SUCCESS, if the request is performed.
*                  - Return USB_UNSUPPORT, if the request is invalid.
*******************************************************************************/
RESULT Standard_SetDeviceFeature(void)
{
 8000ed0:	b508      	push	{r3, lr}
  SetBit(pInformation->Current_Feature, 5);
 8000ed2:	4b06      	ldr	r3, [pc, #24]	; (8000eec <Standard_SetDeviceFeature+0x1c>)
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	7a5a      	ldrb	r2, [r3, #9]
 8000ed8:	f042 0220 	orr.w	r2, r2, #32
 8000edc:	725a      	strb	r2, [r3, #9]
  pUser_Standard_Requests->User_SetDeviceFeature();
 8000ede:	4b04      	ldr	r3, [pc, #16]	; (8000ef0 <Standard_SetDeviceFeature+0x20>)
 8000ee0:	681b      	ldr	r3, [r3, #0]
 8000ee2:	69db      	ldr	r3, [r3, #28]
 8000ee4:	4798      	blx	r3
  return USB_SUCCESS;
}
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	bd08      	pop	{r3, pc}
 8000eea:	bf00      	nop
 8000eec:	20000660 	andcs	r0, r0, r0, ror #12
 8000ef0:	2000065c 	andcs	r0, r0, ip, asr r6

08000ef4 <Standard_GetDescriptorData>:
*******************************************************************************/
u8 *Standard_GetDescriptorData(u16 Length, ONE_DESCRIPTOR *pDesc)
{
  u32  wOffset;

  wOffset = pInformation->Ctrl_Info.Usb_wOffset;
 8000ef4:	4b05      	ldr	r3, [pc, #20]	; (8000f0c <Standard_GetDescriptorData+0x18>)
 8000ef6:	681a      	ldr	r2, [r3, #0]
 8000ef8:	8a53      	ldrh	r3, [r2, #18]
  if (Length == 0)
 8000efa:	b918      	cbnz	r0, 8000f04 <Standard_GetDescriptorData+0x10>
  {
    pInformation->Ctrl_Info.Usb_wLength = pDesc->Descriptor_Size - wOffset;
 8000efc:	8889      	ldrh	r1, [r1, #4]
 8000efe:	1acb      	subs	r3, r1, r3
 8000f00:	8213      	strh	r3, [r2, #16]
    return 0;
 8000f02:	4770      	bx	lr
  }

  return pDesc->Descriptor + wOffset;
 8000f04:	6808      	ldr	r0, [r1, #0]
 8000f06:	4418      	add	r0, r3
}
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	20000660 	andcs	r0, r0, r0, ror #12

08000f10 <Post0_Process>:
* Output         : None.
* Return         : - 0 if the control State is in PAUSE
*                  - 1 if not.
*******************************************************************************/
u8 Post0_Process(void)
{
 8000f10:	b508      	push	{r3, lr}
#ifdef STM32F10X_CL  
  USB_OTG_EP *ep;
#endif /* STM32F10X_CL */
      
  SetEPRxCount(ENDP0, Device_Property.MaxPacketSize);
 8000f12:	4b0b      	ldr	r3, [pc, #44]	; (8000f40 <Post0_Process+0x30>)
 8000f14:	2000      	movs	r0, #0
 8000f16:	f893 102c 	ldrb.w	r1, [r3, #44]	; 0x2c
 8000f1a:	f000 fb5b 	bl	80015d4 <SetEPRxCount>

  if (pInformation->ControlState == STALLED)
 8000f1e:	4b09      	ldr	r3, [pc, #36]	; (8000f44 <Post0_Process+0x34>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	7a18      	ldrb	r0, [r3, #8]
 8000f24:	2808      	cmp	r0, #8
 8000f26:	d106      	bne.n	8000f36 <Post0_Process+0x26>
  {
    vSetEPRxStatus(EP_RX_STALL);
 8000f28:	4b07      	ldr	r3, [pc, #28]	; (8000f48 <Post0_Process+0x38>)
 8000f2a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000f2e:	801a      	strh	r2, [r3, #0]
    vSetEPTxStatus(EP_TX_STALL);
 8000f30:	4b06      	ldr	r3, [pc, #24]	; (8000f4c <Post0_Process+0x3c>)
 8000f32:	2210      	movs	r2, #16
 8000f34:	801a      	strh	r2, [r3, #0]
    OTGD_FS_EP0StartXfer(ep);    
  }  
#endif /* STM32F10X_CL */

  return (pInformation->ControlState == PAUSE);
}
 8000f36:	f1b0 0309 	subs.w	r3, r0, #9
 8000f3a:	4258      	negs	r0, r3
 8000f3c:	4158      	adcs	r0, r3
 8000f3e:	bd08      	pop	{r3, pc}
 8000f40:	2000005c 	andcs	r0, r0, ip, asr r0
 8000f44:	20000660 	andcs	r0, r0, r0, ror #12
 8000f48:	20000668 	andcs	r0, r0, r8, ror #12
 8000f4c:	2000066a 	andcs	r0, r0, sl, ror #12

08000f50 <Setup0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 Setup0_Process(void)
{
 8000f50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8000f52:	4f91      	ldr	r7, [pc, #580]	; (8001198 <Setup0_Process+0x248>)
 8000f54:	4b91      	ldr	r3, [pc, #580]	; (800119c <Setup0_Process+0x24c>)
 8000f56:	683a      	ldr	r2, [r7, #0]
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8000f58:	4d91      	ldr	r5, [pc, #580]	; (80011a0 <Setup0_Process+0x250>)
 8000f5a:	b292      	uxth	r2, r2
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8000f5c:	4413      	add	r3, r2
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8000f5e:	682e      	ldr	r6, [r5, #0]
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8000f60:	005b      	lsls	r3, r3, #1
 8000f62:	681c      	ldr	r4, [r3, #0]
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
 8000f64:	7a33      	ldrb	r3, [r6, #8]
 8000f66:	2b09      	cmp	r3, #9
 8000f68:	d015      	beq.n	8000f96 <Setup0_Process+0x46>
 8000f6a:	b2a4      	uxth	r4, r4
  ep = PCD_GetOutEP(ENDP0);
  pBuf.b = ep->xfer_buff;
#else  
  u16 offset = 1;
  
  pBuf.b = PMAAddr + (u8 *)(_GetEPRxAddr(ENDP0) * 2); /* *2 for 32 bits addr */
 8000f6c:	0064      	lsls	r4, r4, #1
 8000f6e:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 8000f72:	f504 44c0 	add.w	r4, r4, #24576	; 0x6000
#endif /* STM32F10X_CL */

  if (pInformation->ControlState != PAUSE)
  {
    pInformation->USBbmRequestType = *pBuf.b++; /* bmRequestType */
 8000f76:	7823      	ldrb	r3, [r4, #0]
 8000f78:	7033      	strb	r3, [r6, #0]
    pInformation->USBbRequest = *pBuf.b++; /* bRequest */
 8000f7a:	7863      	ldrb	r3, [r4, #1]
 8000f7c:	7073      	strb	r3, [r6, #1]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwValue = ByteSwap(*pBuf.w++); /* wValue */
 8000f7e:	88a0      	ldrh	r0, [r4, #4]
 8000f80:	f000 fb58 	bl	8001634 <ByteSwap>
 8000f84:	8070      	strh	r0, [r6, #2]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwIndex  = ByteSwap(*pBuf.w++); /* wIndex */
 8000f86:	8920      	ldrh	r0, [r4, #8]
 8000f88:	682e      	ldr	r6, [r5, #0]
 8000f8a:	f000 fb53 	bl	8001634 <ByteSwap>
 8000f8e:	80b0      	strh	r0, [r6, #4]
    pBuf.w += offset;  /* word not accessed because of 32 bits addressing */
    pInformation->USBwLength = *pBuf.w; /* wLength */
 8000f90:	89a2      	ldrh	r2, [r4, #12]
 8000f92:	682b      	ldr	r3, [r5, #0]
 8000f94:	80da      	strh	r2, [r3, #6]
  }

  pInformation->ControlState = SETTING_UP;
 8000f96:	682b      	ldr	r3, [r5, #0]
 8000f98:	2201      	movs	r2, #1
 8000f9a:	721a      	strb	r2, [r3, #8]
  if (pInformation->USBwLength == 0)
 8000f9c:	88da      	ldrh	r2, [r3, #6]
 8000f9e:	785c      	ldrb	r4, [r3, #1]
 8000fa0:	2a00      	cmp	r2, #0
 8000fa2:	d161      	bne.n	8001068 <Setup0_Process+0x118>
{
  RESULT Result = USB_UNSUPPORT;
  u32 RequestNo = pInformation->USBbRequest;
  u32 ControlState;

  if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8000fa4:	781a      	ldrb	r2, [r3, #0]
 8000fa6:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 8000faa:	d13a      	bne.n	8001022 <Setup0_Process+0xd2>
  {
    /* Device Request*/
    /* SET_CONFIGURATION*/
    if (RequestNo == SET_CONFIGURATION)
 8000fac:	2c09      	cmp	r4, #9
 8000fae:	d102      	bne.n	8000fb6 <Setup0_Process+0x66>
    {
      Result = Standard_SetConfiguration();
 8000fb0:	f7ff fe9c 	bl	8000cec <Standard_SetConfiguration>
 8000fb4:	e044      	b.n	8001040 <Setup0_Process+0xf0>
    }

    /*SET ADDRESS*/
    else if (RequestNo == SET_ADDRESS)
 8000fb6:	2c05      	cmp	r4, #5
 8000fb8:	d10f      	bne.n	8000fda <Setup0_Process+0x8a>
    {
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 8000fba:	f993 2003 	ldrsb.w	r2, [r3, #3]
 8000fbe:	2a00      	cmp	r2, #0
 8000fc0:	da01      	bge.n	8000fc6 <Setup0_Process+0x76>
          || (pInformation->USBwIndex != 0)
          || (pInformation->Current_Configuration != 0))
        /* Device Address should be 127 or less*/
      {
        ControlState = STALLED;
 8000fc2:	2308      	movs	r3, #8
 8000fc4:	e04d      	b.n	8001062 <Setup0_Process+0x112>
    }

    /*SET ADDRESS*/
    else if (RequestNo == SET_ADDRESS)
    {
      if ((pInformation->USBwValue0 > 127) || (pInformation->USBwValue1 != 0)
 8000fc6:	789a      	ldrb	r2, [r3, #2]
 8000fc8:	2a00      	cmp	r2, #0
 8000fca:	d1fa      	bne.n	8000fc2 <Setup0_Process+0x72>
          || (pInformation->USBwIndex != 0)
 8000fcc:	889a      	ldrh	r2, [r3, #4]
 8000fce:	2a00      	cmp	r2, #0
 8000fd0:	d1f7      	bne.n	8000fc2 <Setup0_Process+0x72>
          || (pInformation->Current_Configuration != 0))
 8000fd2:	7a9b      	ldrb	r3, [r3, #10]
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	d037      	beq.n	8001048 <Setup0_Process+0xf8>
 8000fd8:	e7f3      	b.n	8000fc2 <Setup0_Process+0x72>
         SetDeviceAddress(pInformation->USBwValue0);
      #endif  /* STM32F10X_CL */
      }
    }
    /*SET FEATURE for Device*/
    else if (RequestNo == SET_FEATURE)
 8000fda:	2c03      	cmp	r4, #3
 8000fdc:	d113      	bne.n	8001006 <Setup0_Process+0xb6>
    {
      if ((pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP)
 8000fde:	78da      	ldrb	r2, [r3, #3]
 8000fe0:	2a01      	cmp	r2, #1
 8000fe2:	d007      	beq.n	8000ff4 <Setup0_Process+0xa4>
  }


  if (Result != USB_SUCCESS)
  {
    Result = (*pProperty->Class_NoData_Setup)(RequestNo);
 8000fe4:	4b6f      	ldr	r3, [pc, #444]	; (80011a4 <Setup0_Process+0x254>)
 8000fe6:	4620      	mov	r0, r4
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	695b      	ldr	r3, [r3, #20]
 8000fec:	4798      	blx	r3
    if (Result == USB_NOT_READY)
 8000fee:	2803      	cmp	r0, #3
 8000ff0:	d128      	bne.n	8001044 <Setup0_Process+0xf4>
 8000ff2:	e035      	b.n	8001060 <Setup0_Process+0x110>
    }
    /*SET FEATURE for Device*/
    else if (RequestNo == SET_FEATURE)
    {
      if ((pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP)
          && (pInformation->USBwIndex == 0)
 8000ff4:	889a      	ldrh	r2, [r3, #4]
 8000ff6:	2a00      	cmp	r2, #0
 8000ff8:	d1f4      	bne.n	8000fe4 <Setup0_Process+0x94>
          && (ValBit(pInformation->Current_Feature, 5)))
 8000ffa:	7a5b      	ldrb	r3, [r3, #9]
 8000ffc:	0698      	lsls	r0, r3, #26
 8000ffe:	d5f1      	bpl.n	8000fe4 <Setup0_Process+0x94>
      {
        Result = Standard_SetDeviceFeature();
 8001000:	f7ff ff66 	bl	8000ed0 <Standard_SetDeviceFeature>
 8001004:	e01c      	b.n	8001040 <Setup0_Process+0xf0>
      {
        Result = USB_UNSUPPORT;
      }
    }
    /*Clear FEATURE for Device */
    else if (RequestNo == CLEAR_FEATURE)
 8001006:	2c01      	cmp	r4, #1
 8001008:	d1ec      	bne.n	8000fe4 <Setup0_Process+0x94>
    {
      if (pInformation->USBwValue0 == DEVICE_REMOTE_WAKEUP
 800100a:	78da      	ldrb	r2, [r3, #3]
 800100c:	2a01      	cmp	r2, #1
 800100e:	d1e9      	bne.n	8000fe4 <Setup0_Process+0x94>
          && pInformation->USBwIndex == 0
 8001010:	889a      	ldrh	r2, [r3, #4]
 8001012:	2a00      	cmp	r2, #0
 8001014:	d1e6      	bne.n	8000fe4 <Setup0_Process+0x94>
          && ValBit(pInformation->Current_Feature, 5))
 8001016:	7a5b      	ldrb	r3, [r3, #9]
 8001018:	0699      	lsls	r1, r3, #26
 800101a:	d5e3      	bpl.n	8000fe4 <Setup0_Process+0x94>
      {
        Result = Standard_ClearFeature();
 800101c:	f7ff fea6 	bl	8000d6c <Standard_ClearFeature>
 8001020:	e00e      	b.n	8001040 <Setup0_Process+0xf0>
    }

  }

  /* Interface Request*/
  else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001022:	2a01      	cmp	r2, #1
 8001024:	d104      	bne.n	8001030 <Setup0_Process+0xe0>
  {
    /*SET INTERFACE*/
    if (RequestNo == SET_INTERFACE)
 8001026:	2c0b      	cmp	r4, #11
 8001028:	d1dc      	bne.n	8000fe4 <Setup0_Process+0x94>
    {
      Result = Standard_SetInterface();
 800102a:	f7ff fe7b 	bl	8000d24 <Standard_SetInterface>
 800102e:	e007      	b.n	8001040 <Setup0_Process+0xf0>
    }
  }

  /* EndPoint Request*/
  else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 8001030:	2a02      	cmp	r2, #2
 8001032:	d1d7      	bne.n	8000fe4 <Setup0_Process+0x94>
  {
    /*CLEAR FEATURE for EndPoint*/
    if (RequestNo == CLEAR_FEATURE)
 8001034:	2c01      	cmp	r4, #1
 8001036:	d0f1      	beq.n	800101c <Setup0_Process+0xcc>
    {
      Result = Standard_ClearFeature();
    }
    /* SET FEATURE for EndPoint*/
    else if (RequestNo == SET_FEATURE)
 8001038:	2c03      	cmp	r4, #3
 800103a:	d1d3      	bne.n	8000fe4 <Setup0_Process+0x94>
    {
      Result = Standard_SetEndPointFeature();
 800103c:	f7ff ff02 	bl	8000e44 <Standard_SetEndPointFeature>
  {
    Result = USB_UNSUPPORT;
  }


  if (Result != USB_SUCCESS)
 8001040:	b110      	cbz	r0, 8001048 <Setup0_Process+0xf8>
 8001042:	e7cf      	b.n	8000fe4 <Setup0_Process+0x94>
      ControlState = PAUSE;
      goto exit_NoData_Setup0;
    }
  }

  if (Result != USB_SUCCESS)
 8001044:	2800      	cmp	r0, #0
 8001046:	d1bc      	bne.n	8000fc2 <Setup0_Process+0x72>
    goto exit_NoData_Setup0;
  }

  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */

  USB_StatusIn();
 8001048:	683a      	ldr	r2, [r7, #0]
 800104a:	4b57      	ldr	r3, [pc, #348]	; (80011a8 <Setup0_Process+0x258>)
 800104c:	b292      	uxth	r2, r2
 800104e:	4413      	add	r3, r2
 8001050:	005b      	lsls	r3, r3, #1
 8001052:	2200      	movs	r2, #0
 8001054:	601a      	str	r2, [r3, #0]
 8001056:	4b55      	ldr	r3, [pc, #340]	; (80011ac <Setup0_Process+0x25c>)
 8001058:	2230      	movs	r2, #48	; 0x30
 800105a:	801a      	strh	r2, [r3, #0]
  {
    ControlState = STALLED;
    goto exit_NoData_Setup0;
  }

  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */
 800105c:	2306      	movs	r3, #6
 800105e:	e000      	b.n	8001062 <Setup0_Process+0x112>
  if (Result != USB_SUCCESS)
  {
    Result = (*pProperty->Class_NoData_Setup)(RequestNo);
    if (Result == USB_NOT_READY)
    {
      ControlState = PAUSE;
 8001060:	2309      	movs	r3, #9
  ControlState = WAIT_STATUS_IN;/* After no data stage SETUP */

  USB_StatusIn();

exit_NoData_Setup0:
  pInformation->ControlState = ControlState;
 8001062:	682a      	ldr	r2, [r5, #0]
 8001064:	7213      	strb	r3, [r2, #8]
 8001066:	e0d0      	b.n	800120a <Setup0_Process+0x2ba>

  CopyRoutine = NULL;
  wOffset = 0;

  /*GET DESCRIPTOR*/
  if (Request_No == GET_DESCRIPTOR)
 8001068:	2c06      	cmp	r4, #6
 800106a:	d113      	bne.n	8001094 <Setup0_Process+0x144>
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 800106c:	781a      	ldrb	r2, [r3, #0]
 800106e:	0652      	lsls	r2, r2, #25
 8001070:	d178      	bne.n	8001164 <Setup0_Process+0x214>
    {
      u8 wValue1 = pInformation->USBwValue1;
 8001072:	789a      	ldrb	r2, [r3, #2]
 8001074:	4b4b      	ldr	r3, [pc, #300]	; (80011a4 <Setup0_Process+0x254>)
      if (wValue1 == DEVICE_DESCRIPTOR)
 8001076:	2a01      	cmp	r2, #1
 8001078:	d102      	bne.n	8001080 <Setup0_Process+0x130>
      {
        CopyRoutine = pProperty->GetDeviceDescriptor;
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	69db      	ldr	r3, [r3, #28]
 800107e:	e068      	b.n	8001152 <Setup0_Process+0x202>
      }
      else if (wValue1 == CONFIG_DESCRIPTOR)
 8001080:	2a02      	cmp	r2, #2
 8001082:	d102      	bne.n	800108a <Setup0_Process+0x13a>
      {
        CopyRoutine = pProperty->GetConfigDescriptor;
 8001084:	681b      	ldr	r3, [r3, #0]
 8001086:	6a1b      	ldr	r3, [r3, #32]
 8001088:	e063      	b.n	8001152 <Setup0_Process+0x202>
      }
      else if (wValue1 == STRING_DESCRIPTOR)
 800108a:	2a03      	cmp	r2, #3
 800108c:	d16a      	bne.n	8001164 <Setup0_Process+0x214>
      {
        CopyRoutine = pProperty->GetStringDescriptor;
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001092:	e05e      	b.n	8001152 <Setup0_Process+0x202>
      }  /* End of GET_DESCRIPTOR */
    }
  }

  /*GET STATUS*/
  else if ((Request_No == GET_STATUS) && (pInformation->USBwValue == 0)
 8001094:	2c00      	cmp	r4, #0
 8001096:	d13d      	bne.n	8001114 <Setup0_Process+0x1c4>
 8001098:	8859      	ldrh	r1, [r3, #2]
 800109a:	2900      	cmp	r1, #0
 800109c:	d162      	bne.n	8001164 <Setup0_Process+0x214>
           && (pInformation->USBwLength == 0x0002)
           && (pInformation->USBwIndex1 == 0))
 800109e:	685a      	ldr	r2, [r3, #4]
 80010a0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80010a4:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 80010a8:	d15c      	bne.n	8001164 <Setup0_Process+0x214>
  {
    /* GET STATUS for Device*/
    if ((Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 80010aa:	781a      	ldrb	r2, [r3, #0]
 80010ac:	f012 027f 	ands.w	r2, r2, #127	; 0x7f
 80010b0:	d104      	bne.n	80010bc <Setup0_Process+0x16c>
        && (pInformation->USBwIndex == 0))
 80010b2:	889b      	ldrh	r3, [r3, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	f000 80ac 	beq.w	8001212 <Setup0_Process+0x2c2>
 80010ba:	e053      	b.n	8001164 <Setup0_Process+0x214>
    {
      CopyRoutine = Standard_GetStatus;
    }

    /* GET STATUS for Interface*/
    else if (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 80010bc:	2a01      	cmp	r2, #1
 80010be:	d10d      	bne.n	80010dc <Setup0_Process+0x18c>
    {
      if (((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS)
 80010c0:	4a38      	ldr	r2, [pc, #224]	; (80011a4 <Setup0_Process+0x254>)
 80010c2:	7958      	ldrb	r0, [r3, #5]
 80010c4:	6812      	ldr	r2, [r2, #0]
 80010c6:	6992      	ldr	r2, [r2, #24]
 80010c8:	4790      	blx	r2
 80010ca:	2800      	cmp	r0, #0
 80010cc:	d14a      	bne.n	8001164 <Setup0_Process+0x214>
          && (pInformation->Current_Configuration != 0))
 80010ce:	4b34      	ldr	r3, [pc, #208]	; (80011a0 <Setup0_Process+0x250>)
 80010d0:	681b      	ldr	r3, [r3, #0]
 80010d2:	7a9b      	ldrb	r3, [r3, #10]
 80010d4:	2b00      	cmp	r3, #0
 80010d6:	f040 809c 	bne.w	8001212 <Setup0_Process+0x2c2>
 80010da:	e043      	b.n	8001164 <Setup0_Process+0x214>
        CopyRoutine = Standard_GetStatus;
      }
    }

    /* GET STATUS for EndPoint*/
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
 80010dc:	2a02      	cmp	r2, #2
 80010de:	d141      	bne.n	8001164 <Setup0_Process+0x214>
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
 80010e0:	795b      	ldrb	r3, [r3, #5]
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 80010e2:	4833      	ldr	r0, [pc, #204]	; (80011b0 <Setup0_Process+0x260>)
    }

    /* GET STATUS for EndPoint*/
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
 80010e4:	f003 010f 	and.w	r1, r3, #15
 80010e8:	008a      	lsls	r2, r1, #2

      if (ValBit(pInformation->USBwIndex0, 7))
      {
        /*Get Status of endpoint & stall the request if the related_ENdpoint
        is Disabled*/
        Status = _GetEPTxStatus(Related_Endpoint);
 80010ea:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 80010ee:	f502 42b8 	add.w	r2, r2, #23552	; 0x5c00
 80010f2:	6812      	ldr	r2, [r2, #0]
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 80010f4:	7800      	ldrb	r0, [r0, #0]
    else if (Type_Recipient == (STANDARD_REQUEST | ENDPOINT_RECIPIENT))
    {
      Related_Endpoint = (pInformation->USBwIndex0 & 0x0f);
      Reserved = pInformation->USBwIndex0 & 0x70;

      if (ValBit(pInformation->USBwIndex0, 7))
 80010f6:	f013 0f80 	tst.w	r3, #128	; 0x80
      {
        /*Get Status of endpoint & stall the request if the related_ENdpoint
        is Disabled*/
        Status = _GetEPTxStatus(Related_Endpoint);
 80010fa:	bf14      	ite	ne
 80010fc:	f002 0230 	andne.w	r2, r2, #48	; 0x30
      }
      else
      {
        Status = _GetEPRxStatus(Related_Endpoint);
 8001100:	f402 5240 	andeq.w	r2, r2, #12288	; 0x3000
      }

      if ((Related_Endpoint < Device_Table.Total_Endpoint) && (Reserved == 0)
 8001104:	4281      	cmp	r1, r0
 8001106:	d22d      	bcs.n	8001164 <Setup0_Process+0x214>
 8001108:	f013 0f70 	tst.w	r3, #112	; 0x70
 800110c:	d12a      	bne.n	8001164 <Setup0_Process+0x214>
          && (Status != 0))
 800110e:	2a00      	cmp	r2, #0
 8001110:	d17f      	bne.n	8001212 <Setup0_Process+0x2c2>
 8001112:	e027      	b.n	8001164 <Setup0_Process+0x214>
    }

  }

  /*GET CONFIGURATION*/
  else if (Request_No == GET_CONFIGURATION)
 8001114:	2c08      	cmp	r4, #8
 8001116:	d103      	bne.n	8001120 <Setup0_Process+0x1d0>
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
 8001118:	781b      	ldrb	r3, [r3, #0]
 800111a:	065b      	lsls	r3, r3, #25
 800111c:	d07b      	beq.n	8001216 <Setup0_Process+0x2c6>
 800111e:	e021      	b.n	8001164 <Setup0_Process+0x214>
    {
      CopyRoutine = Standard_GetConfiguration;
    }
  }
  /*GET INTERFACE*/
  else if (Request_No == GET_INTERFACE)
 8001120:	2c0a      	cmp	r4, #10
 8001122:	d11f      	bne.n	8001164 <Setup0_Process+0x214>
  {
    if ((Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
 8001124:	781a      	ldrb	r2, [r3, #0]
 8001126:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 800112a:	2a01      	cmp	r2, #1
 800112c:	d11a      	bne.n	8001164 <Setup0_Process+0x214>
        && (pInformation->Current_Configuration != 0) && (pInformation->USBwValue == 0)
 800112e:	7a9a      	ldrb	r2, [r3, #10]
 8001130:	b1c2      	cbz	r2, 8001164 <Setup0_Process+0x214>
 8001132:	8859      	ldrh	r1, [r3, #2]
 8001134:	b9b1      	cbnz	r1, 8001164 <Setup0_Process+0x214>
        && (pInformation->USBwIndex1 == 0) && (pInformation->USBwLength == 0x0001)
 8001136:	685a      	ldr	r2, [r3, #4]
 8001138:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800113c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8001140:	d110      	bne.n	8001164 <Setup0_Process+0x214>
        && ((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS))
 8001142:	4a18      	ldr	r2, [pc, #96]	; (80011a4 <Setup0_Process+0x254>)
 8001144:	7958      	ldrb	r0, [r3, #5]
 8001146:	6812      	ldr	r2, [r2, #0]
 8001148:	6992      	ldr	r2, [r2, #24]
 800114a:	4790      	blx	r2
 800114c:	2800      	cmp	r0, #0
 800114e:	d064      	beq.n	800121a <Setup0_Process+0x2ca>
 8001150:	e008      	b.n	8001164 <Setup0_Process+0x214>
      CopyRoutine = Standard_GetInterface;
    }

  }
  
  if (CopyRoutine)
 8001152:	b13b      	cbz	r3, 8001164 <Setup0_Process+0x214>
  {
    pInformation->Ctrl_Info.Usb_wOffset = wOffset;
 8001154:	682a      	ldr	r2, [r5, #0]
 8001156:	2400      	movs	r4, #0
 8001158:	8254      	strh	r4, [r2, #18]
    pInformation->Ctrl_Info.CopyData = CopyRoutine;
 800115a:	6193      	str	r3, [r2, #24]
    /* sb in the original the cast to word was directly */
    /* now the cast is made step by step */
    (*CopyRoutine)(0);
 800115c:	4620      	mov	r0, r4
 800115e:	4798      	blx	r3
    Result = USB_SUCCESS;
 8001160:	4620      	mov	r0, r4
 8001162:	e00a      	b.n	800117a <Setup0_Process+0x22a>
  }
  else
  {
    Result = (*pProperty->Class_Data_Setup)(pInformation->USBbRequest);
 8001164:	4b0f      	ldr	r3, [pc, #60]	; (80011a4 <Setup0_Process+0x254>)
 8001166:	681a      	ldr	r2, [r3, #0]
 8001168:	682b      	ldr	r3, [r5, #0]
 800116a:	6912      	ldr	r2, [r2, #16]
 800116c:	7858      	ldrb	r0, [r3, #1]
 800116e:	4790      	blx	r2
    if (Result == USB_NOT_READY)
 8001170:	2803      	cmp	r0, #3
 8001172:	d102      	bne.n	800117a <Setup0_Process+0x22a>
    {
      pInformation->ControlState = PAUSE;
 8001174:	4b0a      	ldr	r3, [pc, #40]	; (80011a0 <Setup0_Process+0x250>)
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	e005      	b.n	8001186 <Setup0_Process+0x236>
      return;
    }
  }

  if (pInformation->Ctrl_Info.Usb_wLength == 0xFFFF)
 800117a:	682b      	ldr	r3, [r5, #0]
 800117c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8001180:	8a1a      	ldrh	r2, [r3, #16]
 8001182:	428a      	cmp	r2, r1
 8001184:	d101      	bne.n	800118a <Setup0_Process+0x23a>
  {
    /* Data is not ready, wait it */
    pInformation->ControlState = PAUSE;
 8001186:	2209      	movs	r2, #9
 8001188:	e003      	b.n	8001192 <Setup0_Process+0x242>
    return;
  }
  if ((Result == USB_UNSUPPORT) || (pInformation->Ctrl_Info.Usb_wLength == 0))
 800118a:	2802      	cmp	r0, #2
 800118c:	d000      	beq.n	8001190 <Setup0_Process+0x240>
 800118e:	b98a      	cbnz	r2, 80011b4 <Setup0_Process+0x264>
  {
    /* Unsupported request */
    pInformation->ControlState = STALLED;
 8001190:	2208      	movs	r2, #8
 8001192:	721a      	strb	r2, [r3, #8]
 8001194:	e039      	b.n	800120a <Setup0_Process+0x2ba>
 8001196:	bf00      	nop
 8001198:	40005c50 	andmi	r5, r0, r0, asr ip
 800119c:	20003004 	andcs	r3, r0, r4
 80011a0:	20000660 	andcs	r0, r0, r0, ror #12
 80011a4:	20000638 	andcs	r0, r0, r8, lsr r6
 80011a8:	20003002 	andcs	r3, r0, r2
 80011ac:	2000066a 	andcs	r0, r0, sl, ror #12
 80011b0:	200000e0 	andcs	r0, r0, r0, ror #1
    return;
  }


  if (ValBit(pInformation->USBbmRequestType, 7))
 80011b4:	f993 1000 	ldrsb.w	r1, [r3]
 80011b8:	2900      	cmp	r1, #0
 80011ba:	da20      	bge.n	80011fe <Setup0_Process+0x2ae>
  {
    /* Device ==> Host */
    __IO u32 wLength = pInformation->USBwLength;
 80011bc:	88d9      	ldrh	r1, [r3, #6]
 80011be:	9101      	str	r1, [sp, #4]
     
    /* Restrict the data length to be the one host asks for */
    if (pInformation->Ctrl_Info.Usb_wLength > wLength)
 80011c0:	9801      	ldr	r0, [sp, #4]
 80011c2:	4282      	cmp	r2, r0
 80011c4:	4816      	ldr	r0, [pc, #88]	; (8001220 <Setup0_Process+0x2d0>)
 80011c6:	d902      	bls.n	80011ce <Setup0_Process+0x27e>
    {
      pInformation->Ctrl_Info.Usb_wLength = wLength;
 80011c8:	9a01      	ldr	r2, [sp, #4]
 80011ca:	821a      	strh	r2, [r3, #16]
 80011cc:	e010      	b.n	80011f0 <Setup0_Process+0x2a0>
    }
    
    else if (pInformation->Ctrl_Info.Usb_wLength < pInformation->USBwLength)
 80011ce:	428a      	cmp	r2, r1
 80011d0:	d20e      	bcs.n	80011f0 <Setup0_Process+0x2a0>
    {
      if (pInformation->Ctrl_Info.Usb_wLength < pProperty->MaxPacketSize)
 80011d2:	6801      	ldr	r1, [r0, #0]
 80011d4:	f891 102c 	ldrb.w	r1, [r1, #44]	; 0x2c
 80011d8:	428a      	cmp	r2, r1
 80011da:	d201      	bcs.n	80011e0 <Setup0_Process+0x290>
      {
        Data_Mul_MaxPacketSize = FALSE;
 80011dc:	2100      	movs	r1, #0
 80011de:	e005      	b.n	80011ec <Setup0_Process+0x29c>
      }
      else if ((pInformation->Ctrl_Info.Usb_wLength % pProperty->MaxPacketSize) == 0)
 80011e0:	fb92 f4f1 	sdiv	r4, r2, r1
 80011e4:	fb01 2214 	mls	r2, r1, r4, r2
 80011e8:	b912      	cbnz	r2, 80011f0 <Setup0_Process+0x2a0>
      {
        Data_Mul_MaxPacketSize = TRUE;
 80011ea:	2101      	movs	r1, #1
 80011ec:	4a0d      	ldr	r2, [pc, #52]	; (8001224 <Setup0_Process+0x2d4>)
 80011ee:	7011      	strb	r1, [r2, #0]
      }
    }   

    pInformation->Ctrl_Info.PacketSize = pProperty->MaxPacketSize;
 80011f0:	6802      	ldr	r2, [r0, #0]
 80011f2:	f892 202c 	ldrb.w	r2, [r2, #44]	; 0x2c
 80011f6:	829a      	strh	r2, [r3, #20]
    DataStageIn();
 80011f8:	f7ff fd24 	bl	8000c44 <DataStageIn>
 80011fc:	e005      	b.n	800120a <Setup0_Process+0x2ba>
  }
  else
  {
    pInformation->ControlState = OUT_DATA;
 80011fe:	2203      	movs	r2, #3
 8001200:	721a      	strb	r2, [r3, #8]
    vSetEPRxStatus(EP_RX_VALID); /* enable for next data reception */
 8001202:	4b09      	ldr	r3, [pc, #36]	; (8001228 <Setup0_Process+0x2d8>)
 8001204:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8001208:	801a      	strh	r2, [r3, #0]
  else
  {
    /* Setup with data stage */
    Data_Setup0();
  }
  return Post0_Process();
 800120a:	f7ff fe81 	bl	8000f10 <Post0_Process>
}
 800120e:	b003      	add	sp, #12
 8001210:	bdf0      	pop	{r4, r5, r6, r7, pc}
  {
    /* GET STATUS for Device*/
    if ((Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
        && (pInformation->USBwIndex == 0))
    {
      CopyRoutine = Standard_GetStatus;
 8001212:	4b06      	ldr	r3, [pc, #24]	; (800122c <Setup0_Process+0x2dc>)
 8001214:	e79e      	b.n	8001154 <Setup0_Process+0x204>
  /*GET CONFIGURATION*/
  else if (Request_No == GET_CONFIGURATION)
  {
    if (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT))
    {
      CopyRoutine = Standard_GetConfiguration;
 8001216:	4b06      	ldr	r3, [pc, #24]	; (8001230 <Setup0_Process+0x2e0>)
 8001218:	e79c      	b.n	8001154 <Setup0_Process+0x204>
    if ((Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
        && (pInformation->Current_Configuration != 0) && (pInformation->USBwValue == 0)
        && (pInformation->USBwIndex1 == 0) && (pInformation->USBwLength == 0x0001)
        && ((*pProperty->Class_Get_Interface_Setting)(pInformation->USBwIndex0, 0) == USB_SUCCESS))
    {
      CopyRoutine = Standard_GetInterface;
 800121a:	4b06      	ldr	r3, [pc, #24]	; (8001234 <Setup0_Process+0x2e4>)
 800121c:	e79a      	b.n	8001154 <Setup0_Process+0x204>
 800121e:	bf00      	nop
 8001220:	20000638 	andcs	r0, r0, r8, lsr r6
 8001224:	2000017c 	andcs	r0, r0, ip, ror r1
 8001228:	20000668 	andcs	r0, r0, r8, ror #12
 800122c:	08000bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp}
 8001230:	08000b6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp}
 8001234:	08000b91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp}

08001238 <Out0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 Out0_Process(void)
{
 8001238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  u32 ControlState = pInformation->ControlState;
 800123a:	4d2d      	ldr	r5, [pc, #180]	; (80012f0 <Out0_Process+0xb8>)
 800123c:	682c      	ldr	r4, [r5, #0]
 800123e:	7a23      	ldrb	r3, [r4, #8]

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
 8001240:	2b02      	cmp	r3, #2
 8001242:	d04d      	beq.n	80012e0 <Out0_Process+0xa8>
 8001244:	2b04      	cmp	r3, #4
 8001246:	d04b      	beq.n	80012e0 <Out0_Process+0xa8>
  {
    /* host aborts the transfer before finish */
    ControlState = STALLED;
  }
  else if ((ControlState == OUT_DATA) || (ControlState == LAST_OUT_DATA))
 8001248:	2b03      	cmp	r3, #3
 800124a:	d001      	beq.n	8001250 <Out0_Process+0x18>
 800124c:	2b05      	cmp	r3, #5
 800124e:	d141      	bne.n	80012d4 <Out0_Process+0x9c>
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
  u32 save_rLength;

  save_rLength = pEPinfo->Usb_rLength;

  if (pEPinfo->CopyData && save_rLength)
 8001250:	69a3      	ldr	r3, [r4, #24]
void DataStageOut(void)
{
  ENDPOINT_INFO *pEPinfo = &pInformation->Ctrl_Info;
  u32 save_rLength;

  save_rLength = pEPinfo->Usb_rLength;
 8001252:	8a22      	ldrh	r2, [r4, #16]

  if (pEPinfo->CopyData && save_rLength)
 8001254:	b1ab      	cbz	r3, 8001282 <Out0_Process+0x4a>
 8001256:	b1a2      	cbz	r2, 8001282 <Out0_Process+0x4a>
  {
    u8 *Buffer;
    u32 Length;

    Length = pEPinfo->PacketSize;
 8001258:	8aa6      	ldrh	r6, [r4, #20]
    if (Length > save_rLength)
    {
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
 800125a:	4296      	cmp	r6, r2
 800125c:	bf28      	it	cs
 800125e:	4616      	movcs	r6, r2
 8001260:	4630      	mov	r0, r6
 8001262:	4798      	blx	r3
    pEPinfo->Usb_rLength -= Length;
 8001264:	8a23      	ldrh	r3, [r4, #16]
    if (Length > save_rLength)
    {
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
 8001266:	4607      	mov	r7, r0
    pEPinfo->Usb_rLength -= Length;
 8001268:	1b9b      	subs	r3, r3, r6
 800126a:	8223      	strh	r3, [r4, #16]
    pEPinfo->Usb_rOffset += Length;
 800126c:	8a63      	ldrh	r3, [r4, #18]

  #ifdef STM32F10X_CL  
    PCD_EP_Read(ENDP0, Buffer, Length); 
  #else  
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 800126e:	2000      	movs	r0, #0
      Length = save_rLength;
    }

    Buffer = (*pEPinfo->CopyData)(Length);
    pEPinfo->Usb_rLength -= Length;
    pEPinfo->Usb_rOffset += Length;
 8001270:	4433      	add	r3, r6
 8001272:	8263      	strh	r3, [r4, #18]

  #ifdef STM32F10X_CL  
    PCD_EP_Read(ENDP0, Buffer, Length); 
  #else  
    PMAToUserBufferCopy(Buffer, GetEPRxAddr(ENDP0), Length);
 8001274:	f000 f992 	bl	800159c <GetEPRxAddr>
 8001278:	4632      	mov	r2, r6
 800127a:	4601      	mov	r1, r0
 800127c:	4638      	mov	r0, r7
 800127e:	f000 f8aa 	bl	80013d6 <PMAToUserBufferCopy>
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
 8001282:	8a23      	ldrh	r3, [r4, #16]
 8001284:	b153      	cbz	r3, 800129c <Out0_Process+0x64>
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 8001286:	4b1b      	ldr	r3, [pc, #108]	; (80012f4 <Out0_Process+0xbc>)
    SetEPTxCount(ENDP0, 0);
 8001288:	2000      	movs	r0, #0
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 800128a:	f44f 5240 	mov.w	r2, #12288	; 0x3000
    SetEPTxCount(ENDP0, 0);
 800128e:	4601      	mov	r1, r0
  #endif  /* STM32F10X_CL */
  }

  if (pEPinfo->Usb_rLength != 0)
  {
    vSetEPRxStatus(EP_RX_VALID);/* re-enable for next data reception */
 8001290:	801a      	strh	r2, [r3, #0]
    SetEPTxCount(ENDP0, 0);
 8001292:	f000 f991 	bl	80015b8 <SetEPTxCount>
    vSetEPTxStatus(EP_TX_VALID);/* Expect the host to abort the data OUT stage */
 8001296:	4b18      	ldr	r3, [pc, #96]	; (80012f8 <Out0_Process+0xc0>)
 8001298:	2230      	movs	r2, #48	; 0x30
 800129a:	801a      	strh	r2, [r3, #0]
  }
  /* Set the next State*/
  if (pEPinfo->Usb_rLength >= pEPinfo->PacketSize)
 800129c:	8a23      	ldrh	r3, [r4, #16]
 800129e:	8aa2      	ldrh	r2, [r4, #20]
 80012a0:	429a      	cmp	r2, r3
 80012a2:	d802      	bhi.n	80012aa <Out0_Process+0x72>
  {
    pInformation->ControlState = OUT_DATA;
 80012a4:	682b      	ldr	r3, [r5, #0]
 80012a6:	2203      	movs	r2, #3
 80012a8:	e002      	b.n	80012b0 <Out0_Process+0x78>
  }
  else
  {
    if (pEPinfo->Usb_rLength > 0)
 80012aa:	b11b      	cbz	r3, 80012b4 <Out0_Process+0x7c>
    {
      pInformation->ControlState = LAST_OUT_DATA;
 80012ac:	682b      	ldr	r3, [r5, #0]
 80012ae:	2205      	movs	r2, #5
 80012b0:	721a      	strb	r2, [r3, #8]
 80012b2:	e00c      	b.n	80012ce <Out0_Process+0x96>
    }
    else if (pEPinfo->Usb_rLength == 0)
    {
      pInformation->ControlState = WAIT_STATUS_IN;
 80012b4:	682a      	ldr	r2, [r5, #0]
 80012b6:	2106      	movs	r1, #6
 80012b8:	7211      	strb	r1, [r2, #8]
      USB_StatusIn();
 80012ba:	4a10      	ldr	r2, [pc, #64]	; (80012fc <Out0_Process+0xc4>)
 80012bc:	6811      	ldr	r1, [r2, #0]
 80012be:	4a10      	ldr	r2, [pc, #64]	; (8001300 <Out0_Process+0xc8>)
 80012c0:	b289      	uxth	r1, r1
 80012c2:	440a      	add	r2, r1
 80012c4:	0052      	lsls	r2, r2, #1
 80012c6:	6013      	str	r3, [r2, #0]
 80012c8:	4b0b      	ldr	r3, [pc, #44]	; (80012f8 <Out0_Process+0xc0>)
 80012ca:	2230      	movs	r2, #48	; 0x30
 80012cc:	801a      	strh	r2, [r3, #0]
    ControlState = STALLED;
  }
  else if ((ControlState == OUT_DATA) || (ControlState == LAST_OUT_DATA))
  {
    DataStageOut();
    ControlState = pInformation->ControlState; /* may be changed outside the function */
 80012ce:	682b      	ldr	r3, [r5, #0]
 80012d0:	7a1b      	ldrb	r3, [r3, #8]
 80012d2:	e006      	b.n	80012e2 <Out0_Process+0xaa>
  }

  else if (ControlState == WAIT_STATUS_OUT)
 80012d4:	2b07      	cmp	r3, #7
 80012d6:	d103      	bne.n	80012e0 <Out0_Process+0xa8>
  {
    (*pProperty->Process_Status_OUT)();
 80012d8:	4b0a      	ldr	r3, [pc, #40]	; (8001304 <Out0_Process+0xcc>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	68db      	ldr	r3, [r3, #12]
 80012de:	4798      	blx	r3
  u32 ControlState = pInformation->ControlState;

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
  {
    /* host aborts the transfer before finish */
    ControlState = STALLED;
 80012e0:	2308      	movs	r3, #8
  else
  {
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;
 80012e2:	682a      	ldr	r2, [r5, #0]
 80012e4:	7213      	strb	r3, [r2, #8]

  return Post0_Process();
}
 80012e6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;

  return Post0_Process();
 80012ea:	f7ff be11 	b.w	8000f10 <Post0_Process>
 80012ee:	bf00      	nop
 80012f0:	20000660 	andcs	r0, r0, r0, ror #12
 80012f4:	20000668 	andcs	r0, r0, r8, ror #12
 80012f8:	2000066a 	andcs	r0, r0, sl, ror #12
 80012fc:	40005c50 	andmi	r5, r0, r0, asr ip
 8001300:	20003002 	andcs	r3, r0, r2
 8001304:	20000638 	andcs	r0, r0, r8, lsr r6

08001308 <SetDeviceAddress>:
* Input          : - Val: device adress.
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetDeviceAddress(u8 Val)
{
 8001308:	b570      	push	{r4, r5, r6, lr}
#ifdef STM32F10X_CL 
  PCD_EP_SetAddress ((u8)Val);
#else 
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;
 800130a:	4b0d      	ldr	r3, [pc, #52]	; (8001340 <SetDeviceAddress+0x38>)
 800130c:	781d      	ldrb	r5, [r3, #0]

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 800130e:	2300      	movs	r3, #0
 8001310:	42ab      	cmp	r3, r5
 8001312:	d210      	bcs.n	8001336 <SetDeviceAddress+0x2e>
 8001314:	f103 5280 	add.w	r2, r3, #268435456	; 0x10000000
 8001318:	f502 52b8 	add.w	r2, r2, #5888	; 0x1700
 800131c:	0094      	lsls	r4, r2, #2
  {
    _SetEPAddress((u8)i, (u8)i);
 800131e:	6826      	ldr	r6, [r4, #0]
 8001320:	f443 4100 	orr.w	r1, r3, #32768	; 0x8000
 8001324:	f640 720f 	movw	r2, #3855	; 0xf0f
 8001328:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800132c:	4032      	ands	r2, r6
 800132e:	430a      	orrs	r2, r1
 8001330:	6022      	str	r2, [r4, #0]
#else 
  u32 i;
  u32 nEP = Device_Table.Total_Endpoint;

  /* set address in every used endpoint */
  for (i = 0; i < nEP; i++)
 8001332:	3301      	adds	r3, #1
 8001334:	e7ec      	b.n	8001310 <SetDeviceAddress+0x8>
  {
    _SetEPAddress((u8)i, (u8)i);
  } /* for */
  _SetDADDR(Val | DADDR_EF); /* set device address and enable function */
 8001336:	4b03      	ldr	r3, [pc, #12]	; (8001344 <SetDeviceAddress+0x3c>)
 8001338:	f040 0080 	orr.w	r0, r0, #128	; 0x80
 800133c:	6018      	str	r0, [r3, #0]
 800133e:	bd70      	pop	{r4, r5, r6, pc}
 8001340:	200000e0 	andcs	r0, r0, r0, ror #1
 8001344:	40005c4c 	andmi	r5, r0, ip, asr #24

08001348 <In0_Process>:
* Input          : None.
* Output         : None.
* Return         : Post0_Process.
*******************************************************************************/
u8 In0_Process(void)
{
 8001348:	b510      	push	{r4, lr}
  u32 ControlState = pInformation->ControlState;
 800134a:	4c13      	ldr	r4, [pc, #76]	; (8001398 <In0_Process+0x50>)
 800134c:	6823      	ldr	r3, [r4, #0]
 800134e:	7a1a      	ldrb	r2, [r3, #8]

  if ((ControlState == IN_DATA) || (ControlState == LAST_IN_DATA))
 8001350:	2a02      	cmp	r2, #2
 8001352:	d001      	beq.n	8001358 <In0_Process+0x10>
 8001354:	2a04      	cmp	r2, #4
 8001356:	d104      	bne.n	8001362 <In0_Process+0x1a>
  {
    DataStageIn();
 8001358:	f7ff fc74 	bl	8000c44 <DataStageIn>
    /* ControlState may be changed outside the function */
    ControlState = pInformation->ControlState;
 800135c:	6823      	ldr	r3, [r4, #0]
 800135e:	7a1b      	ldrb	r3, [r3, #8]
 8001360:	e013      	b.n	800138a <In0_Process+0x42>
  }

  else if (ControlState == WAIT_STATUS_IN)
 8001362:	2a06      	cmp	r2, #6
 8001364:	d110      	bne.n	8001388 <In0_Process+0x40>
  {
    if ((pInformation->USBbRequest == SET_ADDRESS) &&
 8001366:	785a      	ldrb	r2, [r3, #1]
 8001368:	2a05      	cmp	r2, #5
 800136a:	d109      	bne.n	8001380 <In0_Process+0x38>
        (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT)))
 800136c:	781a      	ldrb	r2, [r3, #0]
    ControlState = pInformation->ControlState;
  }

  else if (ControlState == WAIT_STATUS_IN)
  {
    if ((pInformation->USBbRequest == SET_ADDRESS) &&
 800136e:	0652      	lsls	r2, r2, #25
 8001370:	d106      	bne.n	8001380 <In0_Process+0x38>
        (Type_Recipient == (STANDARD_REQUEST | DEVICE_RECIPIENT)))
    {
      SetDeviceAddress(pInformation->USBwValue0);
 8001372:	78d8      	ldrb	r0, [r3, #3]
 8001374:	f7ff ffc8 	bl	8001308 <SetDeviceAddress>
      pUser_Standard_Requests->User_SetDeviceAddress();
 8001378:	4b08      	ldr	r3, [pc, #32]	; (800139c <In0_Process+0x54>)
 800137a:	681b      	ldr	r3, [r3, #0]
 800137c:	6a1b      	ldr	r3, [r3, #32]
 800137e:	4798      	blx	r3
    }
    (*pProperty->Process_Status_IN)();
 8001380:	4b07      	ldr	r3, [pc, #28]	; (80013a0 <In0_Process+0x58>)
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	689b      	ldr	r3, [r3, #8]
 8001386:	4798      	blx	r3
    ControlState = STALLED;
  }

  else
  {
    ControlState = STALLED;
 8001388:	2308      	movs	r3, #8
  }

  pInformation->ControlState = ControlState;
 800138a:	6822      	ldr	r2, [r4, #0]
 800138c:	7213      	strb	r3, [r2, #8]

  return Post0_Process();
}
 800138e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ControlState = STALLED;
  }

  pInformation->ControlState = ControlState;

  return Post0_Process();
 8001392:	f7ff bdbd 	b.w	8000f10 <Post0_Process>
 8001396:	bf00      	nop
 8001398:	20000660 	andcs	r0, r0, r0, ror #12
 800139c:	2000065c 	andcs	r0, r0, ip, asr r6
 80013a0:	20000638 	andcs	r0, r0, r8, lsr r6

080013a4 <NOP_Process>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void NOP_Process(void)
{
 80013a4:	4770      	bx	lr

080013a6 <UserToPMABufferCopy>:
*                  - wNBytes: no. of bytes to be copied.
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
 80013a6:	b530      	push	{r4, r5, lr}
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 80013a8:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 80013ac:	3201      	adds	r2, #1
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 80013ae:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
* Output         : None.
* Return         : None	.
*******************************************************************************/
void UserToPMABufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;   /* n = (wNBytes + 1) / 2 */
 80013b2:	1052      	asrs	r2, r2, #1
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
 80013b4:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 80013b6:	2300      	movs	r3, #0
 80013b8:	4293      	cmp	r3, r2
 80013ba:	f100 0002 	add.w	r0, r0, #2
 80013be:	d009      	beq.n	80013d4 <UserToPMABufferCopy+0x2e>
  {
    temp1 = (u16) * pbUsrBuf;
    pbUsrBuf++;
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
 80013c0:	f810 5c01 	ldrb.w	r5, [r0, #-1]
  u32 i, temp1, temp2;
  u16 *pdwVal;
  pdwVal = (u16 *)(wPMABufAddr * 2 + PMAAddr);
  for (i = n; i != 0; i--)
  {
    temp1 = (u16) * pbUsrBuf;
 80013c4:	f810 4c02 	ldrb.w	r4, [r0, #-2]
    pbUsrBuf++;
    temp2 = temp1 | (u16) * pbUsrBuf << 8;
 80013c8:	ea44 2405 	orr.w	r4, r4, r5, lsl #8
    *pdwVal++ = temp2;
 80013cc:	f821 4023 	strh.w	r4, [r1, r3, lsl #2]
 80013d0:	3301      	adds	r3, #1
 80013d2:	e7f1      	b.n	80013b8 <UserToPMABufferCopy+0x12>
    pdwVal++;
    pbUsrBuf++;
  }
}
 80013d4:	bd30      	pop	{r4, r5, pc}

080013d6 <PMAToUserBufferCopy>:
*                  - wNBytes     = no. of bytes to be copied.
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
 80013d6:	b510      	push	{r4, lr}
  u32 n = (wNBytes + 1) >> 1;/* /2*/
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 80013d8:	f101 5100 	add.w	r1, r1, #536870912	; 0x20000000
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 80013dc:	3201      	adds	r2, #1
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 80013de:	f501 5140 	add.w	r1, r1, #12288	; 0x3000
* Output         : None.
* Return         : None.
*******************************************************************************/
void PMAToUserBufferCopy(u8 *pbUsrBuf, u16 wPMABufAddr, u16 wNBytes)
{
  u32 n = (wNBytes + 1) >> 1;/* /2*/
 80013e2:	1052      	asrs	r2, r2, #1
  u32 i;
  u32 *pdwVal;
  pdwVal = (u32 *)(wPMABufAddr * 2 + PMAAddr);
 80013e4:	0049      	lsls	r1, r1, #1
  for (i = n; i != 0; i--)
 80013e6:	2300      	movs	r3, #0
 80013e8:	4293      	cmp	r3, r2
 80013ea:	d005      	beq.n	80013f8 <PMAToUserBufferCopy+0x22>
  {
    *(u16*)pbUsrBuf++ = *pdwVal++;
 80013ec:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
 80013f0:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 80013f4:	3301      	adds	r3, #1
 80013f6:	e7f7      	b.n	80013e8 <PMAToUserBufferCopy+0x12>
    pbUsrBuf++;
  }
}
 80013f8:	bd10      	pop	{r4, pc}
	...

080013fc <SetBTABLE>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetBTABLE(u16 wRegValue)
{
  _SetBTABLE(wRegValue);
 80013fc:	f64f 73f8 	movw	r3, #65528	; 0xfff8
 8001400:	4a01      	ldr	r2, [pc, #4]	; (8001408 <SetBTABLE+0xc>)
 8001402:	4003      	ands	r3, r0
 8001404:	6013      	str	r3, [r2, #0]
 8001406:	4770      	bx	lr
 8001408:	40005c50 	andmi	r5, r0, r0, asr ip

0800140c <SetEPType>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPType(u8 bEpNum, u16 wType)
{
  _SetEPType(bEpNum, wType);
 800140c:	0080      	lsls	r0, r0, #2
 800140e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001412:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001416:	6803      	ldr	r3, [r0, #0]
 8001418:	f423 43ec 	bic.w	r3, r3, #30208	; 0x7600
 800141c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001420:	4319      	orrs	r1, r3
 8001422:	b28b      	uxth	r3, r1
 8001424:	6003      	str	r3, [r0, #0]
 8001426:	4770      	bx	lr

08001428 <SetEPTxStatus>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxStatus(u8 bEpNum, u16 wState)
{
  _SetEPTxStatus(bEpNum, wState);
 8001428:	0080      	lsls	r0, r0, #2
 800142a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 800142e:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001432:	6803      	ldr	r3, [r0, #0]
 8001434:	06ca      	lsls	r2, r1, #27
 8001436:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800143a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800143e:	b29b      	uxth	r3, r3
 8001440:	bf48      	it	mi
 8001442:	f083 0310 	eormi.w	r3, r3, #16
 8001446:	068a      	lsls	r2, r1, #26
 8001448:	bf48      	it	mi
 800144a:	f083 0320 	eormi.w	r3, r3, #32
 800144e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001452:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001456:	6003      	str	r3, [r0, #0]
 8001458:	4770      	bx	lr

0800145a <SetEPRxStatus>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxStatus(u8 bEpNum, u16 wState)
{
  _SetEPRxStatus(bEpNum, wState);
 800145a:	0080      	lsls	r0, r0, #2
 800145c:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001460:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001464:	6803      	ldr	r3, [r0, #0]
 8001466:	04ca      	lsls	r2, r1, #19
 8001468:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800146c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001470:	b29b      	uxth	r3, r3
 8001472:	bf48      	it	mi
 8001474:	f483 5380 	eormi.w	r3, r3, #4096	; 0x1000
 8001478:	048a      	lsls	r2, r1, #18
 800147a:	bf48      	it	mi
 800147c:	f483 5300 	eormi.w	r3, r3, #8192	; 0x2000
 8001480:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001484:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001488:	6003      	str	r3, [r0, #0]
 800148a:	4770      	bx	lr

0800148c <SetEPTxValid>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxValid(u8 bEpNum)
{
  _SetEPTxStatus(bEpNum, EP_TX_VALID);
 800148c:	0080      	lsls	r0, r0, #2
 800148e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001492:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001496:	6803      	ldr	r3, [r0, #0]
 8001498:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800149c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80014a0:	b29b      	uxth	r3, r3
 80014a2:	f083 0330 	eor.w	r3, r3, #48	; 0x30
 80014a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80014aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014ae:	6003      	str	r3, [r0, #0]
 80014b0:	4770      	bx	lr

080014b2 <SetEPRxValid>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxValid(u8 bEpNum)
{
  _SetEPRxStatus(bEpNum, EP_RX_VALID);
 80014b2:	0080      	lsls	r0, r0, #2
 80014b4:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80014b8:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80014bc:	6803      	ldr	r3, [r0, #0]
 80014be:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80014c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80014c6:	b29b      	uxth	r3, r3
 80014c8:	f483 5340 	eor.w	r3, r3, #12288	; 0x3000
 80014cc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80014d0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014d4:	6003      	str	r3, [r0, #0]
 80014d6:	4770      	bx	lr

080014d8 <Clear_Status_Out>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void Clear_Status_Out(u8 bEpNum)
{
  _ClearEP_KIND(bEpNum);
 80014d8:	0080      	lsls	r0, r0, #2
 80014da:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80014de:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 80014e2:	6803      	ldr	r3, [r0, #0]
 80014e4:	f423 73f8 	bic.w	r3, r3, #496	; 0x1f0
 80014e8:	051b      	lsls	r3, r3, #20
 80014ea:	0d1b      	lsrs	r3, r3, #20
 80014ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80014f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80014f4:	6003      	str	r3, [r0, #0]
 80014f6:	4770      	bx	lr

080014f8 <ClearDTOG_RX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_RX(u8 bEpNum)
{
  _ClearDTOG_RX(bEpNum);
 80014f8:	0080      	lsls	r0, r0, #2
 80014fa:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80014fe:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001502:	6803      	ldr	r3, [r0, #0]
 8001504:	045b      	lsls	r3, r3, #17
 8001506:	d508      	bpl.n	800151a <ClearDTOG_RX+0x22>
 8001508:	6802      	ldr	r2, [r0, #0]
 800150a:	f640 730f 	movw	r3, #3855	; 0xf0f
 800150e:	4013      	ands	r3, r2
 8001510:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001514:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001518:	6003      	str	r3, [r0, #0]
 800151a:	4770      	bx	lr

0800151c <ClearDTOG_TX>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void ClearDTOG_TX(u8 bEpNum)
{
  _ClearDTOG_TX(bEpNum);
 800151c:	0080      	lsls	r0, r0, #2
 800151e:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 8001522:	f500 40b8 	add.w	r0, r0, #23552	; 0x5c00
 8001526:	6803      	ldr	r3, [r0, #0]
 8001528:	065b      	lsls	r3, r3, #25
 800152a:	d508      	bpl.n	800153e <ClearDTOG_TX+0x22>
 800152c:	6802      	ldr	r2, [r0, #0]
 800152e:	f640 730f 	movw	r3, #3855	; 0xf0f
 8001532:	4013      	ands	r3, r2
 8001534:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001538:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800153c:	6003      	str	r3, [r0, #0]
 800153e:	4770      	bx	lr

08001540 <SetEPTxAddr>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxAddr(u8 bEpNum, u16 wAddr)
{
  _SetEPTxAddr(bEpNum, wAddr);
 8001540:	4b06      	ldr	r3, [pc, #24]	; (800155c <SetEPTxAddr+0x1c>)
 8001542:	0849      	lsrs	r1, r1, #1
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	0049      	lsls	r1, r1, #1
 8001548:	b29b      	uxth	r3, r3
 800154a:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800154e:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 8001552:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8001556:	0040      	lsls	r0, r0, #1
 8001558:	6001      	str	r1, [r0, #0]
 800155a:	4770      	bx	lr
 800155c:	40005c50 	andmi	r5, r0, r0, asr ip

08001560 <SetEPRxAddr>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxAddr(u8 bEpNum, u16 wAddr)
{
  _SetEPRxAddr(bEpNum, wAddr);
 8001560:	4b05      	ldr	r3, [pc, #20]	; (8001578 <SetEPRxAddr+0x18>)
 8001562:	0849      	lsrs	r1, r1, #1
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	0049      	lsls	r1, r1, #1
 8001568:	b29b      	uxth	r3, r3
 800156a:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800156e:	4b03      	ldr	r3, [pc, #12]	; (800157c <SetEPRxAddr+0x1c>)
 8001570:	4403      	add	r3, r0
 8001572:	005b      	lsls	r3, r3, #1
 8001574:	6019      	str	r1, [r3, #0]
 8001576:	4770      	bx	lr
 8001578:	40005c50 	andmi	r5, r0, r0, asr ip
 800157c:	20003004 	andcs	r3, r0, r4

08001580 <GetEPTxAddr>:
* Output         : None.
* Return         : Rx buffer address. 
*******************************************************************************/
u16 GetEPTxAddr(u8 bEpNum)
{
  return(_GetEPTxAddr(bEpNum));
 8001580:	4b05      	ldr	r3, [pc, #20]	; (8001598 <GetEPTxAddr+0x18>)
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	b29b      	uxth	r3, r3
 8001586:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800158a:	f100 5000 	add.w	r0, r0, #536870912	; 0x20000000
 800158e:	f500 5040 	add.w	r0, r0, #12288	; 0x3000
 8001592:	0040      	lsls	r0, r0, #1
}
 8001594:	8800      	ldrh	r0, [r0, #0]
 8001596:	4770      	bx	lr
 8001598:	40005c50 	andmi	r5, r0, r0, asr ip

0800159c <GetEPRxAddr>:
* Output         : None.
* Return         : Rx buffer address.
*******************************************************************************/
u16 GetEPRxAddr(u8 bEpNum)
{
  return(_GetEPRxAddr(bEpNum));
 800159c:	4b04      	ldr	r3, [pc, #16]	; (80015b0 <GetEPRxAddr+0x14>)
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	b29b      	uxth	r3, r3
 80015a2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80015a6:	4b03      	ldr	r3, [pc, #12]	; (80015b4 <GetEPRxAddr+0x18>)
 80015a8:	4403      	add	r3, r0
 80015aa:	005b      	lsls	r3, r3, #1
}
 80015ac:	8818      	ldrh	r0, [r3, #0]
 80015ae:	4770      	bx	lr
 80015b0:	40005c50 	andmi	r5, r0, r0, asr ip
 80015b4:	20003004 	andcs	r3, r0, r4

080015b8 <SetEPTxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPTxCount(u8 bEpNum, u16 wCount)
{
  _SetEPTxCount(bEpNum, wCount);
 80015b8:	4b04      	ldr	r3, [pc, #16]	; (80015cc <SetEPTxCount+0x14>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	b29b      	uxth	r3, r3
 80015be:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80015c2:	4b03      	ldr	r3, [pc, #12]	; (80015d0 <SetEPTxCount+0x18>)
 80015c4:	4403      	add	r3, r0
 80015c6:	005b      	lsls	r3, r3, #1
 80015c8:	6019      	str	r1, [r3, #0]
 80015ca:	4770      	bx	lr
 80015cc:	40005c50 	andmi	r5, r0, r0, asr ip
 80015d0:	20003002 	andcs	r3, r0, r2

080015d4 <SetEPRxCount>:
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPRxCount(u8 bEpNum, u16 wCount)
{
  _SetEPRxCount(bEpNum, wCount);
 80015d4:	4b0d      	ldr	r3, [pc, #52]	; (800160c <SetEPRxCount+0x38>)
 80015d6:	293e      	cmp	r1, #62	; 0x3e
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	b29b      	uxth	r3, r3
 80015dc:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 80015e0:	4b0b      	ldr	r3, [pc, #44]	; (8001610 <SetEPRxCount+0x3c>)
 80015e2:	4403      	add	r3, r0
 80015e4:	ea4f 0243 	mov.w	r2, r3, lsl #1
 80015e8:	d909      	bls.n	80015fe <SetEPRxCount+0x2a>
 80015ea:	094b      	lsrs	r3, r1, #5
 80015ec:	06c8      	lsls	r0, r1, #27
 80015ee:	bf04      	itt	eq
 80015f0:	f103 33ff 	addeq.w	r3, r3, #4294967295	; 0xffffffff
 80015f4:	b29b      	uxtheq	r3, r3
 80015f6:	029b      	lsls	r3, r3, #10
 80015f8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80015fc:	e004      	b.n	8001608 <SetEPRxCount+0x34>
 80015fe:	084b      	lsrs	r3, r1, #1
 8001600:	07c9      	lsls	r1, r1, #31
 8001602:	bf48      	it	mi
 8001604:	3301      	addmi	r3, #1
 8001606:	029b      	lsls	r3, r3, #10
 8001608:	6013      	str	r3, [r2, #0]
 800160a:	4770      	bx	lr
 800160c:	40005c50 	andmi	r5, r0, r0, asr ip
 8001610:	20003006 	andcs	r3, r0, r6

08001614 <GetEPRxCount>:
* Output         : None.
* Return         : Rx count value.
*******************************************************************************/
u16 GetEPRxCount(u8 bEpNum)
{
  return(_GetEPRxCount(bEpNum));
 8001614:	4b05      	ldr	r3, [pc, #20]	; (800162c <GetEPRxCount+0x18>)
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	b29b      	uxth	r3, r3
 800161a:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800161e:	4b04      	ldr	r3, [pc, #16]	; (8001630 <GetEPRxCount+0x1c>)
 8001620:	4403      	add	r3, r0
 8001622:	005b      	lsls	r3, r3, #1
 8001624:	6818      	ldr	r0, [r3, #0]
}
 8001626:	f3c0 0009 	ubfx	r0, r0, #0, #10
 800162a:	4770      	bx	lr
 800162c:	40005c50 	andmi	r5, r0, r0, asr ip
 8001630:	20003006 	andcs	r3, r0, r6

08001634 <ByteSwap>:
u16 ByteSwap(u16 wSwW)
{
  u8 bTemp;
  u16 wRet;
  bTemp = (u8)(wSwW & 0xff);
  wRet =  (wSwW >> 8) | ((u16)bTemp << 8);
 8001634:	b2c3      	uxtb	r3, r0
 8001636:	0a00      	lsrs	r0, r0, #8
  return(wRet);
}
 8001638:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800163c:	4770      	bx	lr
	...

08001640 <USB_SIL_Init>:
{
#ifndef STM32F10X_CL
  
  /* USB interrupts initialization */
  /* clear pending interrupts */
  _SetISTR(0);
 8001640:	4b04      	ldr	r3, [pc, #16]	; (8001654 <USB_SIL_Init+0x14>)
 8001642:	2000      	movs	r0, #0
  wInterrupt_Mask = IMR_MSK;
 8001644:	4a04      	ldr	r2, [pc, #16]	; (8001658 <USB_SIL_Init+0x18>)
{
#ifndef STM32F10X_CL
  
  /* USB interrupts initialization */
  /* clear pending interrupts */
  _SetISTR(0);
 8001646:	6018      	str	r0, [r3, #0]
  wInterrupt_Mask = IMR_MSK;
 8001648:	f44f 4306 	mov.w	r3, #34304	; 0x8600
 800164c:	8013      	strh	r3, [r2, #0]
  /* set interrupts mask */
  _SetCNTR(wInterrupt_Mask);
 800164e:	4a03      	ldr	r2, [pc, #12]	; (800165c <USB_SIL_Init+0x1c>)
 8001650:	6013      	str	r3, [r2, #0]
  OTG_DEV_Init();
  
#endif /* STM32F10X_CL */

  return 0;
}
 8001652:	4770      	bx	lr
 8001654:	40005c44 	andmi	r5, r0, r4, asr #24
 8001658:	20000664 	andcs	r0, r0, r4, ror #12
 800165c:	40005c40 	andmi	r5, r0, r0, asr #24

08001660 <USB_SIL_Read>:
*                     received data buffer.
* Output         : None.
* Return         : Number of received data (in Bytes).
*******************************************************************************/
u32 USB_SIL_Read(u8 bEpAddr, u8* pBufferPointer)
{
 8001660:	b570      	push	{r4, r5, r6, lr}
  u32 DataLength = 0;

#ifndef STM32F10X_CL

  /* Get the number of received data on the selected Endpoint */
  DataLength = GetEPRxCount(bEpAddr & 0x7F);
 8001662:	f000 057f 	and.w	r5, r0, #127	; 0x7f
 8001666:	4628      	mov	r0, r5
*                     received data buffer.
* Output         : None.
* Return         : Number of received data (in Bytes).
*******************************************************************************/
u32 USB_SIL_Read(u8 bEpAddr, u8* pBufferPointer)
{
 8001668:	460e      	mov	r6, r1
  u32 DataLength = 0;

#ifndef STM32F10X_CL

  /* Get the number of received data on the selected Endpoint */
  DataLength = GetEPRxCount(bEpAddr & 0x7F);
 800166a:	f7ff ffd3 	bl	8001614 <GetEPRxCount>
 800166e:	4604      	mov	r4, r0

  /* Use the memory interface function to write to the selected endpoint */
  PMAToUserBufferCopy(pBufferPointer, GetEPRxAddr(bEpAddr & 0x7F), DataLength);
 8001670:	4628      	mov	r0, r5
 8001672:	f7ff ff93 	bl	800159c <GetEPRxAddr>
 8001676:	4622      	mov	r2, r4
 8001678:	4601      	mov	r1, r0
 800167a:	4630      	mov	r0, r6
 800167c:	f7ff feab 	bl	80013d6 <PMAToUserBufferCopy>
  
#endif /* STM32F10X_CL */

  /* Return the number of received data */
  return DataLength;
}
 8001680:	4620      	mov	r0, r4
 8001682:	bd70      	pop	{r4, r5, r6, pc}

08001684 <CTR_LP>:
* Input          : None.
* Output         : None.
* Return         : None.
*******************************************************************************/
void CTR_LP(void)
{
 8001684:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO u16 wEPVal = 0;
 8001686:	2300      	movs	r3, #0
 8001688:	f8ad 3006 	strh.w	r3, [sp, #6]
  /* stay in loop while pending ints */
  while (((wIstr = _GetISTR()) & ISTR_CTR) != 0)
 800168c:	4b50      	ldr	r3, [pc, #320]	; (80017d0 <CTR_LP+0x14c>)
 800168e:	681a      	ldr	r2, [r3, #0]
 8001690:	4b50      	ldr	r3, [pc, #320]	; (80017d4 <CTR_LP+0x150>)
 8001692:	b291      	uxth	r1, r2
 8001694:	0412      	lsls	r2, r2, #16
 8001696:	8019      	strh	r1, [r3, #0]
 8001698:	f140 8097 	bpl.w	80017ca <CTR_LP+0x146>
  {
    /* extract highest priority endpoint number */
    EPindex = (u8)(wIstr & ISTR_EP_ID);
 800169c:	881a      	ldrh	r2, [r3, #0]
 800169e:	4c4e      	ldr	r4, [pc, #312]	; (80017d8 <CTR_LP+0x154>)
 80016a0:	f002 020f 	and.w	r2, r2, #15
 80016a4:	7022      	strb	r2, [r4, #0]
    if (EPindex == 0)
 80016a6:	2a00      	cmp	r2, #0
 80016a8:	d161      	bne.n	800176e <CTR_LP+0xea>

      /* save RX & TX status */
      /* and set both to NAK */


	    SaveRState = _GetENDPOINT(ENDP0);
 80016aa:	4c4c      	ldr	r4, [pc, #304]	; (80017dc <CTR_LP+0x158>)
 80016ac:	4e4c      	ldr	r6, [pc, #304]	; (80017e0 <CTR_LP+0x15c>)
 80016ae:	6822      	ldr	r2, [r4, #0]
	    SaveTState = SaveRState & EPTX_STAT;
 80016b0:	4d4c      	ldr	r5, [pc, #304]	; (80017e4 <CTR_LP+0x160>)

      /* save RX & TX status */
      /* and set both to NAK */


	    SaveRState = _GetENDPOINT(ENDP0);
 80016b2:	b292      	uxth	r2, r2
 80016b4:	8032      	strh	r2, [r6, #0]
	    SaveTState = SaveRState & EPTX_STAT;
 80016b6:	8832      	ldrh	r2, [r6, #0]
 80016b8:	f002 0230 	and.w	r2, r2, #48	; 0x30
 80016bc:	802a      	strh	r2, [r5, #0]
	    SaveRState &=  EPRX_STAT;	
 80016be:	8832      	ldrh	r2, [r6, #0]
 80016c0:	f402 5240 	and.w	r2, r2, #12288	; 0x3000
 80016c4:	8032      	strh	r2, [r6, #0]

	    _SetEPRxTxStatus(ENDP0,EP_RX_NAK,EP_TX_NAK);
 80016c6:	6821      	ldr	r1, [r4, #0]
 80016c8:	f64b 72bf 	movw	r2, #49087	; 0xbfbf
 80016cc:	400a      	ands	r2, r1
 80016ce:	f482 5200 	eor.w	r2, r2, #8192	; 0x2000
 80016d2:	f082 0220 	eor.w	r2, r2, #32
 80016d6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80016da:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80016de:	6022      	str	r2, [r4, #0]

      /* DIR bit = origin of the interrupt */

      if ((wIstr & ISTR_DIR) == 0)
 80016e0:	881b      	ldrh	r3, [r3, #0]
 80016e2:	06d8      	lsls	r0, r3, #27
 80016e4:	d407      	bmi.n	80016f6 <CTR_LP+0x72>

        /* DIR = 0      => IN  int */
        /* DIR = 0 implies that (EP_CTR_TX = 1) always  */


        _ClearEP_CTR_TX(ENDP0);
 80016e6:	6822      	ldr	r2, [r4, #0]
 80016e8:	f648 730f 	movw	r3, #36623	; 0x8f0f
 80016ec:	4013      	ands	r3, r2
 80016ee:	6023      	str	r3, [r4, #0]
        In0_Process();
 80016f0:	f7ff fe2a 	bl	8001348 <In0_Process>
 80016f4:	e01b      	b.n	800172e <CTR_LP+0xaa>
        /* DIR = 1 */

        /* DIR = 1 & CTR_RX       => SETUP or OUT int */
        /* DIR = 1 & (CTR_TX | CTR_RX) => 2 int pending */

        wEPVal = _GetENDPOINT(ENDP0);
 80016f6:	6823      	ldr	r3, [r4, #0]
 80016f8:	b29b      	uxth	r3, r3
 80016fa:	f8ad 3006 	strh.w	r3, [sp, #6]
        
        if ((wEPVal &EP_SETUP) != 0)
 80016fe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001702:	0519      	lsls	r1, r3, #20
 8001704:	d507      	bpl.n	8001716 <CTR_LP+0x92>
        {
          _ClearEP_CTR_RX(ENDP0); /* SETUP bit kept frozen while CTR_RX = 1 */
 8001706:	6822      	ldr	r2, [r4, #0]
 8001708:	f640 738f 	movw	r3, #3983	; 0xf8f
 800170c:	4013      	ands	r3, r2
 800170e:	6023      	str	r3, [r4, #0]
          Setup0_Process();
 8001710:	f7ff fc1e 	bl	8000f50 <Setup0_Process>
 8001714:	e00b      	b.n	800172e <CTR_LP+0xaa>

		      _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
          return;
        }

        else if ((wEPVal & EP_CTR_RX) != 0)
 8001716:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800171a:	b21b      	sxth	r3, r3
 800171c:	2b00      	cmp	r3, #0
 800171e:	dab5      	bge.n	800168c <CTR_LP+0x8>
        {
          _ClearEP_CTR_RX(ENDP0);
 8001720:	6822      	ldr	r2, [r4, #0]
 8001722:	f640 738f 	movw	r3, #3983	; 0xf8f
 8001726:	4013      	ands	r3, r2
 8001728:	6023      	str	r3, [r4, #0]
          Out0_Process();
 800172a:	f7ff fd85 	bl	8001238 <Out0_Process>
          /* before terminate set Tx & Rx status */
     
		     _SetEPRxTxStatus(ENDP0,SaveRState,SaveTState);
 800172e:	6822      	ldr	r2, [r4, #0]
 8001730:	f64b 73bf 	movw	r3, #49087	; 0xbfbf
 8001734:	4013      	ands	r3, r2
 8001736:	8832      	ldrh	r2, [r6, #0]
 8001738:	04d2      	lsls	r2, r2, #19
 800173a:	8832      	ldrh	r2, [r6, #0]
 800173c:	bf48      	it	mi
 800173e:	f483 5380 	eormi.w	r3, r3, #4096	; 0x1000
 8001742:	0496      	lsls	r6, r2, #18
 8001744:	882a      	ldrh	r2, [r5, #0]
 8001746:	bf48      	it	mi
 8001748:	f483 5300 	eormi.w	r3, r3, #8192	; 0x2000
 800174c:	06d4      	lsls	r4, r2, #27
 800174e:	882a      	ldrh	r2, [r5, #0]
 8001750:	bf48      	it	mi
 8001752:	f083 0310 	eormi.w	r3, r3, #16
 8001756:	0690      	lsls	r0, r2, #26
 8001758:	bf48      	it	mi
 800175a:	f083 0320 	eormi.w	r3, r3, #32
 800175e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001762:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001766:	4a1d      	ldr	r2, [pc, #116]	; (80017dc <CTR_LP+0x158>)
 8001768:	b29b      	uxth	r3, r3
 800176a:	6013      	str	r3, [r2, #0]
          return;
 800176c:	e02d      	b.n	80017ca <CTR_LP+0x146>
    else
    {
      /* Decode and service non control endpoints interrupt  */

      /* process related endpoint register */
      wEPVal = _GetENDPOINT(EPindex);
 800176e:	0093      	lsls	r3, r2, #2
 8001770:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001774:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 8001778:	6819      	ldr	r1, [r3, #0]
 800177a:	b289      	uxth	r1, r1
 800177c:	f8ad 1006 	strh.w	r1, [sp, #6]
      if ((wEPVal & EP_CTR_RX) != 0)
 8001780:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8001784:	b209      	sxth	r1, r1
 8001786:	2900      	cmp	r1, #0
 8001788:	da09      	bge.n	800179e <CTR_LP+0x11a>
      {
        /* clear int flag */
        _ClearEP_CTR_RX(EPindex);
 800178a:	6818      	ldr	r0, [r3, #0]
 800178c:	f640 718f 	movw	r1, #3983	; 0xf8f
 8001790:	4001      	ands	r1, r0
 8001792:	6019      	str	r1, [r3, #0]

        /* call OUT service function */
        (*pEpInt_OUT[EPindex-1])();
 8001794:	4b14      	ldr	r3, [pc, #80]	; (80017e8 <CTR_LP+0x164>)
 8001796:	3a01      	subs	r2, #1
 8001798:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800179c:	4798      	blx	r3

      } /* if((wEPVal & EP_CTR_RX) */

      if ((wEPVal & EP_CTR_TX) != 0)
 800179e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80017a2:	0619      	lsls	r1, r3, #24
 80017a4:	f57f af72 	bpl.w	800168c <CTR_LP+0x8>
      {
        /* clear int flag */
        _ClearEP_CTR_TX(EPindex);
 80017a8:	7821      	ldrb	r1, [r4, #0]
 80017aa:	f648 720f 	movw	r2, #36623	; 0x8f0f
 80017ae:	008b      	lsls	r3, r1, #2
 80017b0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80017b4:	f503 43b8 	add.w	r3, r3, #23552	; 0x5c00
 80017b8:	6818      	ldr	r0, [r3, #0]

        /* call IN service function */
        (*pEpInt_IN[EPindex-1])();
 80017ba:	3901      	subs	r1, #1
      } /* if((wEPVal & EP_CTR_RX) */

      if ((wEPVal & EP_CTR_TX) != 0)
      {
        /* clear int flag */
        _ClearEP_CTR_TX(EPindex);
 80017bc:	4002      	ands	r2, r0
 80017be:	601a      	str	r2, [r3, #0]

        /* call IN service function */
        (*pEpInt_IN[EPindex-1])();
 80017c0:	4b0a      	ldr	r3, [pc, #40]	; (80017ec <CTR_LP+0x168>)
 80017c2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80017c6:	4798      	blx	r3
 80017c8:	e760      	b.n	800168c <CTR_LP+0x8>
      } /* if((wEPVal & EP_CTR_TX) != 0) */

    }/* if(EPindex == 0) else */

  }/* while(...) */
}
 80017ca:	b002      	add	sp, #8
 80017cc:	bd70      	pop	{r4, r5, r6, pc}
 80017ce:	bf00      	nop
 80017d0:	40005c44 	andmi	r5, r0, r4, asr #24
 80017d4:	20000630 	andcs	r0, r0, r0, lsr r6
 80017d8:	2000063c 	andcs	r0, r0, ip, lsr r6
 80017dc:	40005c00 	andmi	r5, r0, r0, lsl #24
 80017e0:	20000668 	andcs	r0, r0, r8, ror #12
 80017e4:	2000066a 	andcs	r0, r0, sl, ror #12
 80017e8:	2000001c 	andcs	r0, r0, ip, lsl r0
 80017ec:	20000038 	andcs	r0, r0, r8, lsr r0

080017f0 <Virtual_Com_Port_StringProduct>:
 80017f0:	00520332 	subseq	r0, r2, r2, lsr r3
 80017f4:	0042004f 	subeq	r0, r2, pc, asr #32
 80017f8:	0054004f 	subseq	r0, r4, pc, asr #32
 80017fc:	00530049 	subseq	r0, r3, r9, asr #32
 8001800:	00560020 	subseq	r0, r6, r0, lsr #32
 8001804:	00720069 	rsbseq	r0, r2, r9, rrx
 8001808:	00750074 	rsbseq	r0, r5, r4, ror r0
 800180c:	006c0061 	rsbeq	r0, ip, r1, rrx
 8001810:	00430020 	subeq	r0, r3, r0, lsr #32
 8001814:	004d004f 	subeq	r0, sp, pc, asr #32
 8001818:	00500020 	subseq	r0, r0, r0, lsr #32
 800181c:	0072006f 	rsbseq	r0, r2, pc, rrx
 8001820:	03120074 	tsteq	r2, #116	; 0x74

08001822 <Virtual_Com_Port_StringVendor>:
 8001822:	00430312 	subeq	r0, r3, r2, lsl r3
 8001826:	002d004d 	eoreq	r0, sp, sp, asr #32
 800182a:	00300039 	eorseq	r0, r0, r9, lsr r0
 800182e:	00200030 	eoreq	r0, r0, r0, lsr r0
 8001832:	03040020 	movweq	r0, #16416	; 0x4020

08001834 <Virtual_Com_Port_StringLangID>:
 8001834:	04090304 	streq	r0, [r9], #-772	; 0x304

08001838 <Virtual_Com_Port_ConfigDescriptor>:
 8001838:	00430209 	subeq	r0, r3, r9, lsl #4
 800183c:	80000102 	andhi	r0, r0, r2, lsl #2
 8001840:	00040900 	andeq	r0, r4, r0, lsl #18
 8001844:	02020100 	andeq	r0, r2, #0, 2
 8001848:	24050001 	strcs	r0, [r5], #-1
 800184c:	05011000 	streq	r1, [r1, #-0]
 8001850:	01000124 	tsteq	r0, r4, lsr #2
 8001854:	02022404 	andeq	r2, r2, #4, 8	; 0x4000000
 8001858:	00062405 	andeq	r2, r6, r5, lsl #8
 800185c:	82050701 	andhi	r0, r5, #262144	; 0x40000
 8001860:	ff000803 			; <UNDEFINED> instruction: 0xff000803
 8001864:	00010409 	andeq	r0, r1, r9, lsl #8
 8001868:	00000a02 	andeq	r0, r0, r2, lsl #20
 800186c:	03050700 	movweq	r0, #22272	; 0x5700
 8001870:	00004002 	andeq	r4, r0, r2
 8001874:	02810507 	addeq	r0, r1, #29360128	; 0x1c00000
 8001878:	12000040 	andne	r0, r0, #64	; 0x40

0800187b <Virtual_Com_Port_DeviceDescriptor>:
 800187b:	02000112 	andeq	r0, r0, #-2147483644	; 0x80000004
 800187f:	40000002 	andmi	r0, r0, r2
 8001883:	ff48fff1 			; <UNDEFINED> instruction: 0xff48fff1
 8001887:	02010200 	andeq	r0, r1, #0, 4
 800188b:	0a0d0100 	beq	8341c93 <_etext+0x3403c3>
 800188f:	776f4420 	strbvc	r4, [pc, -r0, lsr #8]!
 8001893:	616f6c6e 	cmnvs	pc, lr, ror #24
 8001897:	61462064 	cmpvs	r6, r4, rrx
 800189b:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xc69
 800189f:	0a0d0021 	beq	834192b <_etext+0x34005b>
 80018a3:	776f4420 	strbvc	r4, [pc, -r0, lsr #8]!
 80018a7:	616f6c6e 	cmnvs	pc, lr, ror #24
 80018ab:	764f2064 	strbvc	r2, [pc], -r4, rrx
 80018af:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
 80018b3:	0021776f 	eoreq	r7, r1, pc, ror #14
 80018b7:	66200a0d 	strtvs	r0, [r0], -sp, lsl #20
 80018bb:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
 80018bf:	69727720 	ldmdbvs	r2!, {r5, r8, r9, sl, ip, sp, lr}^
 80018c3:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80018c7:	72726520 	rsbsvc	r6, r2, #32, 10	; 0x8000000
 80018cb:	0021726f 	eoreq	r7, r1, pc, ror #4
	...

Disassembly of section .data:

20000000 <_sdata>:
20000000:	53031a01 	movwpl	r1, #14849	; 0x3a01

20000001 <Virtual_Com_Port_StringSerial>:
20000001:	0053031a 	subseq	r0, r3, sl, lsl r3
20000005:	004d0054 	subeq	r0, sp, r4, asr r0
20000009:	00320033 	eorseq	r0, r2, r3, lsr r0
2000000d:	00300031 	eorseq	r0, r0, r1, lsr r0
	...

2000001c <pEpInt_OUT>:
2000001c:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000020:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000024:	08000421 	stmdaeq	r0, {r0, r5, sl}
20000028:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
2000002c:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000030:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000034:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}

20000038 <pEpInt_IN>:
20000038:	0800031f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r8, r9}
2000003c:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000040:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000044:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000048:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
2000004c:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
20000050:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}

20000054 <linecoding>:
20000054:	0001c200 	andeq	ip, r1, r0, lsl #4
20000058:	00080000 	andeq	r0, r8, r0

2000005c <Device_Property>:
2000005c:	080005f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl}
20000060:	0800061d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl}
20000064:	0800050d 	stmdaeq	r0, {r0, r2, r3, r8, sl}
20000068:	08000521 	stmdaeq	r0, {r0, r5, r8, sl}
2000006c:	08000525 	stmdaeq	r0, {r0, r2, r5, r8, sl}
20000070:	08000581 	stmdaeq	r0, {r0, r7, r8, sl}
20000074:	080005a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl}
20000078:	080006fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl}
2000007c:	08000709 	stmdaeq	r0, {r0, r3, r8, r9, sl}
20000080:	08000715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl}
20000084:	00000000 	andeq	r0, r0, r0
20000088:	00000040 	andeq	r0, r0, r0, asr #32

2000008c <Device_Descriptor>:
2000008c:	0800187b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, fp, ip}
20000090:	00000012 	andeq	r0, r0, r2, lsl r0

20000094 <Config_Descriptor>:
20000094:	08001838 	stmdaeq	r0, {r3, r4, r5, fp, ip}
20000098:	00000043 	andeq	r0, r0, r3, asr #32

2000009c <String_Descriptor>:
2000009c:	08001834 	stmdaeq	r0, {r2, r4, r5, fp, ip}
200000a0:	00000004 	andeq	r0, r0, r4
200000a4:	08001822 	stmdaeq	r0, {r1, r5, fp, ip}
200000a8:	00000012 	andeq	r0, r0, r2, lsl r0
200000ac:	080017f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, ip}
200000b0:	00000032 	andeq	r0, r0, r2, lsr r0
200000b4:	20000001 	andcs	r0, r0, r1
200000b8:	0000001a 	andeq	r0, r0, sl, lsl r0

200000bc <User_Standard_Requests>:
200000bc:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000c0:	080004e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, sl}
200000c4:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000c8:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000cc:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000d0:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000d4:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000d8:	080013a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, ip}
200000dc:	08000501 	stmdaeq	r0, {r0, r8, sl}

200000e0 <Device_Table>:
200000e0:	00000104 	andeq	r0, r0, r4, lsl #2

Disassembly of section .bss:

200000e4 <_sbss>:
200000e4:	00000000 	andeq	r0, r0, r0

200000e8 <gbCount>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <gwAddressPointer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <gwEndAddressPointer>:
200000f0:	00000000 	andeq	r0, r0, r0

200000f4 <gwCalculatedCheckSum>:
200000f4:	00000000 	andeq	r0, r0, r0

200000f8 <gwRxTotalCount>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <gbFlashDownloadStart>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <gwReceivedCheckSumFromHost>:
20000100:	00000000 	andeq	r0, r0, r0

20000104 <bpBackupBuffer.6039>:
	...

20000154 <gwWriteProtectedPages>:
20000154:	00000000 	andeq	r0, r0, r0

20000158 <sr.5702>:
20000158:	00000000 	andeq	r0, r0, r0

2000015c <USB_Rx_Cnt>:
2000015c:	00000000 	andeq	r0, r0, r0

20000160 <FrameCount.5890>:
20000160:	00000000 	andeq	r0, r0, r0

20000164 <bIntPackSOF>:
20000164:	00000000 	andeq	r0, r0, r0

20000168 <Request>:
20000168:	00000000 	andeq	r0, r0, r0

2000016c <comstatetemp>:
2000016c:	00000000 	andeq	r0, r0, r0

20000170 <bDeviceState>:
20000170:	00000000 	andeq	r0, r0, r0

20000174 <USB_Tx_State>:
20000174:	00000000 	andeq	r0, r0, r0

20000178 <USART_Rx_length>:
20000178:	00000000 	andeq	r0, r0, r0

2000017c <Data_Mul_MaxPacketSize>:
2000017c:	00000000 	andeq	r0, r0, r0

20000180 <HSEStartUpStatus>:
20000180:	00000000 	andeq	r0, r0, r0

20000184 <TimingDelay>:
20000184:	00000000 	andeq	r0, r0, r0

20000188 <gwUSARTWritePtr>:
	...

2000018a <gbpRxBuffer>:
	...

200001dc <gwUSARTReadPtr>:
200001dc:	00000000 	andeq	r0, r0, r0

200001e0 <USART_InitStructure>:
	...

200001f0 <gwpUSARTBuffer>:
	...

200005f0 <USB_Rx_Buffer>:
	...

20000630 <wIstr>:
20000630:	00000000 	andeq	r0, r0, r0

20000634 <SaveState>:
20000634:	00000000 	andeq	r0, r0, r0

20000638 <pProperty>:
20000638:	00000000 	andeq	r0, r0, r0

2000063c <EPindex>:
2000063c:	00000000 	andeq	r0, r0, r0

20000640 <Device_Info>:
	...

2000065c <pUser_Standard_Requests>:
2000065c:	00000000 	andeq	r0, r0, r0

20000660 <pInformation>:
20000660:	00000000 	andeq	r0, r0, r0

20000664 <wInterrupt_Mask>:
	...

20000666 <StatusInfo>:
	...

20000668 <SaveRState>:
	...

2000066a <SaveTState>:
	...

Disassembly of section ._usrstack:

2000066c <_susrstack>:
	...

Disassembly of section .comment:

00000000 <.comment>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel7_IRQHandler(void)
{
   0:	3a434347 	bcc	10d0d24 <__Stack_Size+0x10d0924>
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
   4:	2e342820 	cdpcs	8, 3, cr2, cr4, cr0, {1}
  {
    statusreg = SysTick->CTRL;
   8:	2d332e38 	ldccs	14, cr2, [r3, #-224]!	; 0xffffff20
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
   c:	62753831 	rsbsvs	r3, r5, #3211264	; 0x310000
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  10:	75746e75 	ldrbvc	r6, [r4, #-3701]!	; 0xe75
  14:	32312b32 	eorscc	r2, r1, #51200	; 0xc800
  18:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  if(bDeviceState == CONFIGURED)
  {
    if (FrameCount++ == VCOMPORT_IN_FRAME_INTERVAL)
    {
      /* Reset the frame counter */
      FrameCount = 0;
  1c:	00332e38 	eorseq	r2, r3, r8, lsr lr

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
   4:	61656100 	cmnvs	r5, r0, lsl #2
  {
    statusreg = SysTick->CTRL;
   8:	01006962 	tsteq	r0, r2, ror #18
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	084d070a 	stmdaeq	sp, {r1, r3, r8, r9, sl}^

  /* sw variables reset */
  /* ... */

  return USB_SUCCESS;
}
  20:	12020901 	andne	r0, r2, #16384	; 0x4000
  pInformation = &Device_Info;
  pInformation->ControlState = 2;
  pProperty = &Device_Property;
  pUser_Standard_Requests = &User_Standard_Requests;
  /* Initialize devices one by one */
  pProperty->Init();
  24:	15011404 	strne	r1, [r1, #-1028]	; 0x404
  28:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  2c:	22011a01 	andcs	r1, r1, #4096	; 0x1000
  30:	Address 0x0000000000000030 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	000000e4 	andeq	r0, r0, r4, ror #1
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
   4:	00000002 	andeq	r0, r0, r2
  {
    statusreg = SysTick->CTRL;
   8:	00040000 	andeq	r0, r4, r0
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
   c:	00000000 	andeq	r0, r0, r0
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  10:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
  14:	0000000c 	andeq	r0, r0, ip
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000014 	andeq	r0, r0, r4, lsl r0
  20:	08000140 	stmdaeq	r0, {r6, r8}
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	0000004e 	andeq	r0, r0, lr, asr #32
  30:	00000000 	andeq	r0, r0, r0
  34:	00000002 	andeq	r0, r0, r2
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  38:	00000000 	andeq	r0, r0, r0

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
  3c:	00000002 	andeq	r0, r0, r2

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
  40:	00000000 	andeq	r0, r0, r0
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
  44:	00000002 	andeq	r0, r0, r2
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000002 	andeq	r0, r0, r2

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  50:	00000000 	andeq	r0, r0, r0
  54:	00000002 	andeq	r0, r0, r2
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000002 	andeq	r0, r0, r2
  60:	00000000 	andeq	r0, r0, r0
  64:	0000004a 	andeq	r0, r0, sl, asr #32
  68:	08000150 	stmdaeq	r0, {r4, r6, r8}
  6c:	00000012 	andeq	r0, r0, r2, lsl r0
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
  tmp = tmp >> 14;
  presc = ADCPrescTable[tmp];

  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
  70:	00000000 	andeq	r0, r0, r0
  74:	00000030 	andeq	r0, r0, r0, lsr r0
  78:	00000000 	andeq	r0, r0, r0
  7c:	00000014 	andeq	r0, r0, r4, lsl r0
  80:	00000000 	andeq	r0, r0, r0
      break;            

    default:
      break;
  }
}
  84:	00000014 	andeq	r0, r0, r4, lsl r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
  88:	00000000 	andeq	r0, r0, r0
  8c:	00000020 	andeq	r0, r0, r0, lsr #32
  90:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
      FLASH->CR &= CR_OPTPG_Reset;
    }
  } 
  /* Return the write protection operation Status */
  return status;       
}
  94:	0000002c 	andeq	r0, r0, ip, lsr #32
  98:	00000000 	andeq	r0, r0, r0
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
      break;

    case GPIOG_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
  9c:	00000030 	andeq	r0, r0, r0, lsr r0
  a0:	00000000 	andeq	r0, r0, r0
* Output         : None.
* Return         : None.
*******************************************************************************/
void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
{
  _SetEPDblBuffCount(bEpNum, bDir, wCount);
  a4:	0000001a 	andeq	r0, r0, sl, lsl r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
  a8:	00000000 	andeq	r0, r0, r0
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  ac:	000001d8 	ldrdeq	r0, [r0], -r8
  b0:	00000000 	andeq	r0, r0, r0
      break; 
      
    default:
      break;
  }
}
  b4:	0000008c 	andeq	r0, r0, ip, lsl #1
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  b8:	00000000 	andeq	r0, r0, r0
  bc:	0000004c 	andeq	r0, r0, ip, asr #32
  c0:	08000190 	stmdaeq	r0, {r4, r7, r8}
  c4:	000000a8 	andeq	r0, r0, r8, lsr #1
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
  c8:	08000238 	stmdaeq	r0, {r3, r4, r5, r9}
  cc:	00000006 	andeq	r0, r0, r6
				{
					FLASH_Lock();
  d0:	00000000 	andeq	r0, r0, r0
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
  d4:	00000074 	andeq	r0, r0, r4, ror r0
  d8:	00000000 	andeq	r0, r0, r0
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
  dc:	00000064 	andeq	r0, r0, r4, rrx
	...
				Delay(100); // some delay is needed because PC have some time to prepare data.
  e8:	0000023c 	andeq	r0, r0, ip, lsr r2

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
  ec:	169e0002 	ldrne	r0, [lr], r2
  f0:	00040000 	andeq	r0, r4, r0
						usbRxCount = USB_Rx_Cnt;
  f4:	00000000 	andeq	r0, r0, r0
  f8:	0800023e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9}
  fc:	00000002 	andeq	r0, r0, r2
					if(CheckTimeOut()){
 100:	08000240 	stmdaeq	r0, {r6, r9}
 104:	00000002 	andeq	r0, r0, r2
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 108:	08000242 	stmdaeq	r0, {r1, r6, r9}
 10c:	00000002 	andeq	r0, r0, r2
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
 110:	08000244 	stmdaeq	r0, {r2, r6, r9}
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 114:	00000002 	andeq	r0, r0, r2
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
 118:	08000246 	stmdaeq	r0, {r1, r2, r6, r9}
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
 11c:	00000002 	andeq	r0, r0, r2
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
 120:	08000248 	stmdaeq	r0, {r3, r6, r9}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
 124:	00000002 	andeq	r0, r0, r2
 128:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
 12c:	00000002 	andeq	r0, r0, r2
				gbIsFlashLock = TRUE;
 130:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
 134:	00000002 	andeq	r0, r0, r2
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
 138:	08000250 	stmdaeq	r0, {r4, r6, r9}
 13c:	00000014 	andeq	r0, r0, r4, lsl r0
 140:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
 144:	00000002 	andeq	r0, r0, r2
					USB_TxDString("Success..\n");
 148:	08000266 	stmdaeq	r0, {r1, r2, r5, r6, r9}
				}
				else
					USB_TxDString("Fail..\n");
 14c:	00000002 	andeq	r0, r0, r2
 150:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
			//WDTCR = 0x08;
				Delay(100);
 154:	00000002 	andeq	r0, r0, r2
 158:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
 15c:	00000002 	andeq	r0, r0, r2
 160:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
 164:	00000002 	andeq	r0, r0, r2
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
 168:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
 16c:	00000002 	andeq	r0, r0, r2
 170:	08000270 	stmdaeq	r0, {r4, r5, r6, r9}

				Jump_To_Application();
 174:	00000002 	andeq	r0, r0, r2
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
 178:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
 17c:	00000002 	andeq	r0, r0, r2
 180:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
 184:	00000002 	andeq	r0, r0, r2
 188:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
 18c:	00000002 	andeq	r0, r0, r2

		}
		USART_BUFFER_CLEAR;
 190:	08000278 	stmdaeq	r0, {r3, r4, r5, r6, r9}
 194:	00000002 	andeq	r0, r0, r2
		gwpUSARTBuffer[0]='\0';
 198:	00000000 	andeq	r0, r0, r0
 19c:	00000002 	andeq	r0, r0, r2
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	00000002 	andeq	r0, r0, r2
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000002 	andeq	r0, r0, r2
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	00000002 	andeq	r0, r0, r2
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000002 	andeq	r0, r0, r2
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	00000002 	andeq	r0, r0, r2
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	00000002 	andeq	r0, r0, r2
 1d0:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
 1d4:	00000002 	andeq	r0, r0, r2
 1d8:	0800027c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9}
 1dc:	00000002 	andeq	r0, r0, r2
 1e0:	0800027e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9}
 1e4:	00000004 	andeq	r0, r0, r4
 1e8:	08000282 	stmdaeq	r0, {r1, r7, r9}
 1ec:	00000002 	andeq	r0, r0, r2
 1f0:	08000284 	stmdaeq	r0, {r2, r7, r9}
 1f4:	00000002 	andeq	r0, r0, r2
 1f8:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
 1fc:	00000002 	andeq	r0, r0, r2
 200:	08000288 	stmdaeq	r0, {r3, r7, r9}
 204:	00000002 	andeq	r0, r0, r2
 208:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
 20c:	00000002 	andeq	r0, r0, r2
 210:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
 214:	00000002 	andeq	r0, r0, r2
 218:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
 21c:	00000002 	andeq	r0, r0, r2
 220:	08000290 	stmdaeq	r0, {r4, r7, r9}
 224:	00000014 	andeq	r0, r0, r4, lsl r0
 228:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
 22c:	00000002 	andeq	r0, r0, r2
 230:	080002a6 	stmdaeq	r0, {r1, r2, r5, r7, r9}
 234:	00000002 	andeq	r0, r0, r2
 238:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
 23c:	00000002 	andeq	r0, r0, r2
 240:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
 244:	00000002 	andeq	r0, r0, r2
 248:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
 24c:	00000002 	andeq	r0, r0, r2
 250:	080002ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9}
 254:	00000002 	andeq	r0, r0, r2
 258:	080002b0 	stmdaeq	r0, {r4, r5, r7, r9}
 25c:	00000002 	andeq	r0, r0, r2
 260:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
 264:	00000002 	andeq	r0, r0, r2
 268:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
 26c:	00000002 	andeq	r0, r0, r2
 270:	080002b8 	stmdaeq	r0, {r3, r4, r5, r7, r9}
 274:	0000003c 	andeq	r0, r0, ip, lsr r0
 278:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
 27c:	00000002 	andeq	r0, r0, r2
 280:	080002f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9}
 284:	00000002 	andeq	r0, r0, r2
 288:	080002f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9}
 28c:	00000002 	andeq	r0, r0, r2
 290:	080002fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9}
 294:	00000002 	andeq	r0, r0, r2
 298:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
 29c:	00000002 	andeq	r0, r0, r2
 2a0:	080002fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9}
 2a4:	00000002 	andeq	r0, r0, r2
 2a8:	08000300 	stmdaeq	r0, {r8, r9}
 2ac:	00000002 	andeq	r0, r0, r2
 2b0:	08000302 	stmdaeq	r0, {r1, r8, r9}
 2b4:	00000002 	andeq	r0, r0, r2
 2b8:	08000304 	stmdaeq	r0, {r2, r8, r9}
 2bc:	00000002 	andeq	r0, r0, r2
 2c0:	08000306 	stmdaeq	r0, {r1, r2, r8, r9}
 2c4:	00000002 	andeq	r0, r0, r2
 2c8:	08000308 	stmdaeq	r0, {r3, r8, r9}
 2cc:	00000002 	andeq	r0, r0, r2
 2d0:	0800030a 	stmdaeq	r0, {r1, r3, r8, r9}
 2d4:	00000002 	andeq	r0, r0, r2
 2d8:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
 2dc:	00000002 	andeq	r0, r0, r2
 2e0:	0800030e 	stmdaeq	r0, {r1, r2, r3, r8, r9}
 2e4:	00000002 	andeq	r0, r0, r2
 2e8:	08000310 	stmdaeq	r0, {r4, r8, r9}
 2ec:	00000002 	andeq	r0, r0, r2
 2f0:	08000312 	stmdaeq	r0, {r1, r4, r8, r9}
 2f4:	00000002 	andeq	r0, r0, r2
 2f8:	08000314 	stmdaeq	r0, {r2, r4, r8, r9}
 2fc:	00000002 	andeq	r0, r0, r2
 300:	08000316 	stmdaeq	r0, {r1, r2, r4, r8, r9}
 304:	00000002 	andeq	r0, r0, r2
 308:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
 30c:	00000002 	andeq	r0, r0, r2
 310:	0800031a 	stmdaeq	r0, {r1, r3, r4, r8, r9}
 314:	00000002 	andeq	r0, r0, r2
 318:	0800031c 	stmdaeq	r0, {r2, r3, r4, r8, r9}
 31c:	00000002 	andeq	r0, r0, r2
	...
 328:	00000014 	andeq	r0, r0, r4, lsl r0
 32c:	1fc50002 	svcne	0x00c50002
 330:	00040000 	andeq	r0, r4, r0
	...
 340:	00000034 	andeq	r0, r0, r4, lsr r0
 344:	20ed0002 	rsccs	r0, sp, r2
 348:	00040000 	andeq	r0, r4, r0
 34c:	00000000 	andeq	r0, r0, r0
 350:	0800031e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9}
 354:	00000002 	andeq	r0, r0, r2
 358:	08000320 	stmdaeq	r0, {r5, r8, r9}
 35c:	00000100 	andeq	r0, r0, r0, lsl #2
 360:	08000420 	stmdaeq	r0, {r5, sl}
 364:	0000005c 	andeq	r0, r0, ip, asr r0
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	245a0002 	ldrbcs	r0, [sl], #-2
 380:	00040000 	andeq	r0, r4, r0
 384:	00000000 	andeq	r0, r0, r0
 388:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
 38c:	0000006c 	andeq	r0, r0, ip, rrx
	...
 398:	00000084 	andeq	r0, r0, r4, lsl #1
 39c:	26800002 	strcs	r0, [r0], r2
 3a0:	00040000 	andeq	r0, r4, r0
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	080004e8 	stmdaeq	r0, {r3, r5, r6, r7, sl}
 3ac:	00000018 	andeq	r0, r0, r8, lsl r0
 3b0:	08000500 	stmdaeq	r0, {r8, sl}
 3b4:	0000000c 	andeq	r0, r0, ip
 3b8:	0800050c 	stmdaeq	r0, {r2, r3, r8, sl}
 3bc:	00000014 	andeq	r0, r0, r4, lsl r0
 3c0:	08000520 	stmdaeq	r0, {r5, r8, sl}
 3c4:	00000002 	andeq	r0, r0, r2
 3c8:	08000524 	stmdaeq	r0, {r2, r5, r8, sl}
 3cc:	0000005c 	andeq	r0, r0, ip, asr r0
 3d0:	08000580 	stmdaeq	r0, {r7, r8, sl}
 3d4:	00000024 	andeq	r0, r0, r4, lsr #32
 3d8:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
 3dc:	00000010 	andeq	r0, r0, r0, lsl r0
 3e0:	080005b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl}
 3e4:	00000018 	andeq	r0, r0, r8, lsl r0
 3e8:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
 3ec:	0000002c 	andeq	r0, r0, ip, lsr #32
 3f0:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 3f4:	00000024 	andeq	r0, r0, r4, lsr #32
 3f8:	0800061c 	stmdaeq	r0, {r2, r3, r4, r9, sl}
 3fc:	000000e0 	andeq	r0, r0, r0, ror #1
 400:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
 404:	0000000c 	andeq	r0, r0, ip
 408:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
 40c:	0000000c 	andeq	r0, r0, ip
 410:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
 414:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 420:	00000054 	andeq	r0, r0, r4, asr r0
 424:	31d50002 	bicscc	r0, r5, r2
 428:	00040000 	andeq	r0, r4, r0
 42c:	00000000 	andeq	r0, r0, r0
 430:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
 434:	00000024 	andeq	r0, r0, r4, lsr #32
 438:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 43c:	00000038 	andeq	r0, r0, r8, lsr r0
 440:	00000000 	andeq	r0, r0, r0
 444:	00000004 	andeq	r0, r0, r4
 448:	00000000 	andeq	r0, r0, r0
 44c:	0000001c 	andeq	r0, r0, ip, lsl r0
 450:	00000000 	andeq	r0, r0, r0
 454:	00000024 	andeq	r0, r0, r4, lsr #32
 458:	00000000 	andeq	r0, r0, r0
 45c:	00000004 	andeq	r0, r0, r4
 460:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
 464:	0000003c 	andeq	r0, r0, ip, lsr r0
 468:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
 46c:	0000002a 	andeq	r0, r0, sl, lsr #32
	...
 478:	000000cc 	andeq	r0, r0, ip, asr #1
 47c:	36c50002 	strbcc	r0, [r5], r2
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
 48c:	00000018 	andeq	r0, r0, r8, lsl r0
 490:	00000000 	andeq	r0, r0, r0
 494:	00000018 	andeq	r0, r0, r8, lsl r0
 498:	08000810 	stmdaeq	r0, {r4, fp}
 49c:	00000018 	andeq	r0, r0, r8, lsl r0
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	00000018 	andeq	r0, r0, r8, lsl r0
 4a8:	00000000 	andeq	r0, r0, r0
 4ac:	00000010 	andeq	r0, r0, r0, lsl r0
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	0000000c 	andeq	r0, r0, ip
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000000c 	andeq	r0, r0, ip
 4c0:	00000000 	andeq	r0, r0, r0
 4c4:	00000010 	andeq	r0, r0, r0, lsl r0
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	00000010 	andeq	r0, r0, r0, lsl r0
 4d0:	00000000 	andeq	r0, r0, r0
 4d4:	00000018 	andeq	r0, r0, r8, lsl r0
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000020 	andeq	r0, r0, r0, lsr #32
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	0000000c 	andeq	r0, r0, ip
 4e8:	08000828 	stmdaeq	r0, {r3, r5, fp}
 4ec:	00000028 	andeq	r0, r0, r8, lsr #32
 4f0:	08000850 	stmdaeq	r0, {r4, r6, fp}
 4f4:	00000036 	andeq	r0, r0, r6, lsr r0
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	00000040 	andeq	r0, r0, r0, asr #32
 500:	00000000 	andeq	r0, r0, r0
 504:	0000003c 	andeq	r0, r0, ip, lsr r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000070 	andeq	r0, r0, r0, ror r0
 510:	08000888 	stmdaeq	r0, {r3, r7, fp}
 514:	00000048 	andeq	r0, r0, r8, asr #32
 518:	00000000 	andeq	r0, r0, r0
 51c:	00000038 	andeq	r0, r0, r8, lsr r0
 520:	00000000 	andeq	r0, r0, r0
 524:	00000044 	andeq	r0, r0, r4, asr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000009c 	muleq	r0, ip, r0
 530:	00000000 	andeq	r0, r0, r0
 534:	0000008c 	andeq	r0, r0, ip, lsl #1
 538:	00000000 	andeq	r0, r0, r0
 53c:	00000054 	andeq	r0, r0, r4, asr r0
	...
 548:	0000009c 	muleq	r0, ip, r0
 54c:	3f800002 	svccc	0x00800002
 550:	00040000 	andeq	r0, r4, r0
	...
 55c:	000000a4 	andeq	r0, r0, r4, lsr #1
 560:	00000000 	andeq	r0, r0, r0
 564:	00000016 	andeq	r0, r0, r6, lsl r0
 568:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 56c:	0000009c 	muleq	r0, ip, r0
 570:	00000000 	andeq	r0, r0, r0
 574:	00000010 	andeq	r0, r0, r0, lsl r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	0000000c 	andeq	r0, r0, ip
 580:	00000000 	andeq	r0, r0, r0
 584:	00000006 	andeq	r0, r0, r6
 588:	00000000 	andeq	r0, r0, r0
 58c:	0000000c 	andeq	r0, r0, ip
 590:	00000000 	andeq	r0, r0, r0
 594:	00000006 	andeq	r0, r0, r6
 598:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 59c:	00000004 	andeq	r0, r0, r4
 5a0:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
 5a4:	00000004 	andeq	r0, r0, r4
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	0000000a 	andeq	r0, r0, sl
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000004 	andeq	r0, r0, r4
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	00000010 	andeq	r0, r0, r0, lsl r0
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	0000000c 	andeq	r0, r0, ip
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000054 	andeq	r0, r0, r4, asr r0
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000002a 	andeq	r0, r0, sl, lsr #32
	...
 5e8:	00000114 	andeq	r0, r0, r4, lsl r1
 5ec:	46c70002 	strbmi	r0, [r7], r2
 5f0:	00040000 	andeq	r0, r4, r0
 5f4:	00000000 	andeq	r0, r0, r0
 5f8:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
 5fc:	0000003c 	andeq	r0, r0, ip, lsr r0
 600:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
 604:	00000038 	andeq	r0, r0, r8, lsr r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000014 	andeq	r0, r0, r4, lsl r0
 610:	00000000 	andeq	r0, r0, r0
 614:	0000000c 	andeq	r0, r0, ip
 618:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
 61c:	00000014 	andeq	r0, r0, r4, lsl r0
 620:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
 624:	0000000c 	andeq	r0, r0, ip
 628:	08000a08 	stmdaeq	r0, {r3, r9, fp}
 62c:	00000014 	andeq	r0, r0, r4, lsl r0
 630:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
 634:	00000010 	andeq	r0, r0, r0, lsl r0
 638:	08000a2c 	stmdaeq	r0, {r2, r3, r5, r9, fp}
 63c:	00000014 	andeq	r0, r0, r4, lsl r0
 640:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 644:	00000014 	andeq	r0, r0, r4, lsl r0
 648:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 64c:	00000014 	andeq	r0, r0, r4, lsl r0
 650:	00000000 	andeq	r0, r0, r0
 654:	00000018 	andeq	r0, r0, r8, lsl r0
 658:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
 65c:	0000000c 	andeq	r0, r0, ip
 660:	00000000 	andeq	r0, r0, r0
 664:	00000014 	andeq	r0, r0, r4, lsl r0
 668:	00000000 	andeq	r0, r0, r0
 66c:	00000020 	andeq	r0, r0, r0, lsr #32
 670:	00000000 	andeq	r0, r0, r0
 674:	0000000c 	andeq	r0, r0, ip
 678:	00000000 	andeq	r0, r0, r0
 67c:	00000010 	andeq	r0, r0, r0, lsl r0
 680:	00000000 	andeq	r0, r0, r0
 684:	0000000c 	andeq	r0, r0, ip
 688:	00000000 	andeq	r0, r0, r0
 68c:	00000084 	andeq	r0, r0, r4, lsl #1
 690:	00000000 	andeq	r0, r0, r0
 694:	00000018 	andeq	r0, r0, r8, lsl r0
 698:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
 69c:	00000018 	andeq	r0, r0, r8, lsl r0
 6a0:	00000000 	andeq	r0, r0, r0
 6a4:	00000018 	andeq	r0, r0, r8, lsl r0
 6a8:	00000000 	andeq	r0, r0, r0
 6ac:	00000018 	andeq	r0, r0, r8, lsl r0
 6b0:	00000000 	andeq	r0, r0, r0
 6b4:	00000018 	andeq	r0, r0, r8, lsl r0
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	0000000c 	andeq	r0, r0, ip
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	0000000c 	andeq	r0, r0, ip
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000000c 	andeq	r0, r0, ip
 6d0:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 6d4:	00000028 	andeq	r0, r0, r8, lsr #32
 6d8:	08000ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp}
 6dc:	0000002e 	andeq	r0, r0, lr, lsr #32
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000010 	andeq	r0, r0, r0, lsl r0
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000014 	andeq	r0, r0, r4, lsl r0
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	0000000c 	andeq	r0, r0, ip
	...
 700:	000002dc 	ldrdeq	r0, [r0], -ip
 704:	4f380002 	svcmi	0x00380002
 708:	00040000 	andeq	r0, r4, r0
	...
 714:	00000032 	andeq	r0, r0, r2, lsr r0
 718:	00000000 	andeq	r0, r0, r0
 71c:	0000003a 	andeq	r0, r0, sl, lsr r0
 720:	00000000 	andeq	r0, r0, r0
 724:	000000c8 	andeq	r0, r0, r8, asr #1
 728:	00000000 	andeq	r0, r0, r0
 72c:	0000003c 	andeq	r0, r0, ip, lsr r0
 730:	00000000 	andeq	r0, r0, r0
 734:	00000074 	andeq	r0, r0, r4, ror r0
 738:	00000000 	andeq	r0, r0, r0
 73c:	00000088 	andeq	r0, r0, r8, lsl #1
 740:	00000000 	andeq	r0, r0, r0
 744:	00000084 	andeq	r0, r0, r4, lsl #1
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000068 	andeq	r0, r0, r8, rrx
 750:	00000000 	andeq	r0, r0, r0
 754:	00000022 	andeq	r0, r0, r2, lsr #32
 758:	00000000 	andeq	r0, r0, r0
 75c:	00000012 	andeq	r0, r0, r2, lsl r0
 760:	00000000 	andeq	r0, r0, r0
 764:	00000014 	andeq	r0, r0, r4, lsl r0
 768:	00000000 	andeq	r0, r0, r0
 76c:	00000010 	andeq	r0, r0, r0, lsl r0
 770:	00000000 	andeq	r0, r0, r0
 774:	00000012 	andeq	r0, r0, r2, lsl r0
 778:	00000000 	andeq	r0, r0, r0
 77c:	00000018 	andeq	r0, r0, r8, lsl r0
 780:	00000000 	andeq	r0, r0, r0
 784:	0000001c 	andeq	r0, r0, ip, lsl r0
 788:	00000000 	andeq	r0, r0, r0
 78c:	00000012 	andeq	r0, r0, r2, lsl r0
 790:	00000000 	andeq	r0, r0, r0
 794:	00000004 	andeq	r0, r0, r4
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000008 	andeq	r0, r0, r8
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000012 	andeq	r0, r0, r2, lsl r0
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	0000000e 	andeq	r0, r0, lr
 7b0:	00000000 	andeq	r0, r0, r0
 7b4:	0000001a 	andeq	r0, r0, sl, lsl r0
 7b8:	00000000 	andeq	r0, r0, r0
 7bc:	00000034 	andeq	r0, r0, r4, lsr r0
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000014 	andeq	r0, r0, r4, lsl r0
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	0000001a 	andeq	r0, r0, sl, lsl r0
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	00000014 	andeq	r0, r0, r4, lsl r0
 7d8:	00000000 	andeq	r0, r0, r0
 7dc:	00000006 	andeq	r0, r0, r6
 7e0:	00000000 	andeq	r0, r0, r0
 7e4:	00000010 	andeq	r0, r0, r0, lsl r0
 7e8:	00000000 	andeq	r0, r0, r0
 7ec:	00000010 	andeq	r0, r0, r0, lsl r0
 7f0:	00000000 	andeq	r0, r0, r0
 7f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 7f8:	00000000 	andeq	r0, r0, r0
 7fc:	00000010 	andeq	r0, r0, r0, lsl r0
 800:	00000000 	andeq	r0, r0, r0
 804:	00000014 	andeq	r0, r0, r4, lsl r0
 808:	00000000 	andeq	r0, r0, r0
 80c:	00000010 	andeq	r0, r0, r0, lsl r0
 810:	00000000 	andeq	r0, r0, r0
 814:	00000014 	andeq	r0, r0, r4, lsl r0
 818:	00000000 	andeq	r0, r0, r0
 81c:	00000018 	andeq	r0, r0, r8, lsl r0
 820:	00000000 	andeq	r0, r0, r0
 824:	00000018 	andeq	r0, r0, r8, lsl r0
 828:	00000000 	andeq	r0, r0, r0
 82c:	00000018 	andeq	r0, r0, r8, lsl r0
 830:	00000000 	andeq	r0, r0, r0
 834:	00000018 	andeq	r0, r0, r8, lsl r0
 838:	00000000 	andeq	r0, r0, r0
 83c:	00000010 	andeq	r0, r0, r0, lsl r0
 840:	00000000 	andeq	r0, r0, r0
 844:	00000014 	andeq	r0, r0, r4, lsl r0
 848:	00000000 	andeq	r0, r0, r0
 84c:	00000010 	andeq	r0, r0, r0, lsl r0
 850:	00000000 	andeq	r0, r0, r0
 854:	00000014 	andeq	r0, r0, r4, lsl r0
 858:	00000000 	andeq	r0, r0, r0
 85c:	00000010 	andeq	r0, r0, r0, lsl r0
 860:	00000000 	andeq	r0, r0, r0
 864:	00000014 	andeq	r0, r0, r4, lsl r0
 868:	00000000 	andeq	r0, r0, r0
 86c:	00000010 	andeq	r0, r0, r0, lsl r0
 870:	00000000 	andeq	r0, r0, r0
 874:	00000014 	andeq	r0, r0, r4, lsl r0
 878:	00000000 	andeq	r0, r0, r0
 87c:	00000010 	andeq	r0, r0, r0, lsl r0
 880:	00000000 	andeq	r0, r0, r0
 884:	00000010 	andeq	r0, r0, r0, lsl r0
 888:	00000000 	andeq	r0, r0, r0
 88c:	00000010 	andeq	r0, r0, r0, lsl r0
 890:	00000000 	andeq	r0, r0, r0
 894:	00000010 	andeq	r0, r0, r0, lsl r0
 898:	00000000 	andeq	r0, r0, r0
 89c:	00000010 	andeq	r0, r0, r0, lsl r0
 8a0:	00000000 	andeq	r0, r0, r0
 8a4:	00000010 	andeq	r0, r0, r0, lsl r0
 8a8:	00000000 	andeq	r0, r0, r0
 8ac:	00000014 	andeq	r0, r0, r4, lsl r0
 8b0:	00000000 	andeq	r0, r0, r0
 8b4:	00000014 	andeq	r0, r0, r4, lsl r0
 8b8:	00000000 	andeq	r0, r0, r0
 8bc:	00000014 	andeq	r0, r0, r4, lsl r0
 8c0:	00000000 	andeq	r0, r0, r0
 8c4:	00000014 	andeq	r0, r0, r4, lsl r0
 8c8:	00000000 	andeq	r0, r0, r0
 8cc:	00000014 	andeq	r0, r0, r4, lsl r0
 8d0:	00000000 	andeq	r0, r0, r0
 8d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 8d8:	00000000 	andeq	r0, r0, r0
 8dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 8e0:	00000000 	andeq	r0, r0, r0
 8e4:	00000044 	andeq	r0, r0, r4, asr #32
 8e8:	00000000 	andeq	r0, r0, r0
 8ec:	00000018 	andeq	r0, r0, r8, lsl r0
 8f0:	00000000 	andeq	r0, r0, r0
 8f4:	00000018 	andeq	r0, r0, r8, lsl r0
 8f8:	00000000 	andeq	r0, r0, r0
 8fc:	00000018 	andeq	r0, r0, r8, lsl r0
 900:	00000000 	andeq	r0, r0, r0
 904:	00000016 	andeq	r0, r0, r6, lsl r0
 908:	00000000 	andeq	r0, r0, r0
 90c:	00000016 	andeq	r0, r0, r6, lsl r0
 910:	00000000 	andeq	r0, r0, r0
 914:	00000016 	andeq	r0, r0, r6, lsl r0
 918:	00000000 	andeq	r0, r0, r0
 91c:	00000016 	andeq	r0, r0, r6, lsl r0
 920:	00000000 	andeq	r0, r0, r0
 924:	00000004 	andeq	r0, r0, r4
 928:	00000000 	andeq	r0, r0, r0
 92c:	00000004 	andeq	r0, r0, r4
 930:	00000000 	andeq	r0, r0, r0
 934:	00000004 	andeq	r0, r0, r4
 938:	00000000 	andeq	r0, r0, r0
 93c:	00000004 	andeq	r0, r0, r4
 940:	00000000 	andeq	r0, r0, r0
 944:	00000004 	andeq	r0, r0, r4
 948:	00000000 	andeq	r0, r0, r0
 94c:	00000006 	andeq	r0, r0, r6
 950:	00000000 	andeq	r0, r0, r0
 954:	00000016 	andeq	r0, r0, r6, lsl r0
 958:	00000000 	andeq	r0, r0, r0
 95c:	0000001a 	andeq	r0, r0, sl, lsl r0
 960:	00000000 	andeq	r0, r0, r0
 964:	0000006e 	andeq	r0, r0, lr, rrx
 968:	00000000 	andeq	r0, r0, r0
 96c:	00000016 	andeq	r0, r0, r6, lsl r0
 970:	00000000 	andeq	r0, r0, r0
 974:	0000001a 	andeq	r0, r0, sl, lsl r0
 978:	00000000 	andeq	r0, r0, r0
 97c:	000000b4 	strheq	r0, [r0], -r4
 980:	00000000 	andeq	r0, r0, r0
 984:	00000010 	andeq	r0, r0, r0, lsl r0
 988:	00000000 	andeq	r0, r0, r0
 98c:	00000006 	andeq	r0, r0, r6
 990:	00000000 	andeq	r0, r0, r0
 994:	00000006 	andeq	r0, r0, r6
 998:	00000000 	andeq	r0, r0, r0
 99c:	00000006 	andeq	r0, r0, r6
 9a0:	00000000 	andeq	r0, r0, r0
 9a4:	00000008 	andeq	r0, r0, r8
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	00000006 	andeq	r0, r0, r6
 9b0:	00000000 	andeq	r0, r0, r0
 9b4:	00000006 	andeq	r0, r0, r6
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	0000000c 	andeq	r0, r0, ip
 9c0:	00000000 	andeq	r0, r0, r0
 9c4:	00000008 	andeq	r0, r0, r8
 9c8:	00000000 	andeq	r0, r0, r0
 9cc:	00000016 	andeq	r0, r0, r6, lsl r0
 9d0:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 9d4:	00000008 	andeq	r0, r0, r8
	...
 9e0:	00000044 	andeq	r0, r0, r4, asr #32
 9e4:	6e800002 	cdpvs	0, 8, cr0, cr0, cr2, {0}
 9e8:	00040000 	andeq	r0, r4, r0
	...
 9f4:	00000018 	andeq	r0, r0, r8, lsl r0
 9f8:	00000000 	andeq	r0, r0, r0
 9fc:	0000000c 	andeq	r0, r0, ip
 a00:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
 a04:	00000028 	andeq	r0, r0, r8, lsr #32
 a08:	00000000 	andeq	r0, r0, r0
 a0c:	00000018 	andeq	r0, r0, r8, lsl r0
 a10:	00000000 	andeq	r0, r0, r0
 a14:	0000000c 	andeq	r0, r0, ip
 a18:	00000000 	andeq	r0, r0, r0
 a1c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 a28:	000000ec 	andeq	r0, r0, ip, ror #1
 a2c:	708b0002 	addvc	r0, fp, r2
 a30:	00040000 	andeq	r0, r4, r0
	...
 a3c:	00000094 	muleq	r0, r4, r0
 a40:	00000000 	andeq	r0, r0, r0
 a44:	00000088 	andeq	r0, r0, r8, lsl #1
 a48:	00000000 	andeq	r0, r0, r0
 a4c:	00000016 	andeq	r0, r0, r6, lsl r0
 a50:	00000000 	andeq	r0, r0, r0
 a54:	00000020 	andeq	r0, r0, r0, lsr #32
 a58:	00000000 	andeq	r0, r0, r0
 a5c:	0000000c 	andeq	r0, r0, ip
 a60:	00000000 	andeq	r0, r0, r0
 a64:	00000018 	andeq	r0, r0, r8, lsl r0
 a68:	00000000 	andeq	r0, r0, r0
 a6c:	00000030 	andeq	r0, r0, r0, lsr r0
 a70:	00000000 	andeq	r0, r0, r0
 a74:	00000012 	andeq	r0, r0, r2, lsl r0
 a78:	00000000 	andeq	r0, r0, r0
 a7c:	00000016 	andeq	r0, r0, r6, lsl r0
 a80:	00000000 	andeq	r0, r0, r0
 a84:	00000016 	andeq	r0, r0, r6, lsl r0
 a88:	00000000 	andeq	r0, r0, r0
 a8c:	00000018 	andeq	r0, r0, r8, lsl r0
 a90:	00000000 	andeq	r0, r0, r0
 a94:	00000016 	andeq	r0, r0, r6, lsl r0
 a98:	00000000 	andeq	r0, r0, r0
 a9c:	00000018 	andeq	r0, r0, r8, lsl r0
 aa0:	00000000 	andeq	r0, r0, r0
 aa4:	00000008 	andeq	r0, r0, r8
 aa8:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 aac:	00000008 	andeq	r0, r0, r8
 ab0:	00000000 	andeq	r0, r0, r0
 ab4:	0000000c 	andeq	r0, r0, ip
 ab8:	00000000 	andeq	r0, r0, r0
 abc:	00000012 	andeq	r0, r0, r2, lsl r0
 ac0:	00000000 	andeq	r0, r0, r0
 ac4:	00000012 	andeq	r0, r0, r2, lsl r0
 ac8:	00000000 	andeq	r0, r0, r0
 acc:	00000018 	andeq	r0, r0, r8, lsl r0
 ad0:	00000000 	andeq	r0, r0, r0
 ad4:	00000018 	andeq	r0, r0, r8, lsl r0
 ad8:	00000000 	andeq	r0, r0, r0
 adc:	00000018 	andeq	r0, r0, r8, lsl r0
 ae0:	00000000 	andeq	r0, r0, r0
 ae4:	00000016 	andeq	r0, r0, r6, lsl r0
 ae8:	00000000 	andeq	r0, r0, r0
 aec:	00000018 	andeq	r0, r0, r8, lsl r0
 af0:	00000000 	andeq	r0, r0, r0
 af4:	0000000c 	andeq	r0, r0, ip
 af8:	00000000 	andeq	r0, r0, r0
 afc:	00000008 	andeq	r0, r0, r8
 b00:	00000000 	andeq	r0, r0, r0
 b04:	00000040 	andeq	r0, r0, r0, asr #32
 b08:	00000000 	andeq	r0, r0, r0
 b0c:	0000000e 	andeq	r0, r0, lr
	...
 b18:	0000001c 	andeq	r0, r0, ip, lsl r0
 b1c:	7ab50002 	bvc	fed40b2c <SCS_BASE+0x1ed32b2c>
 b20:	00040000 	andeq	r0, r4, r0
 b24:	00000000 	andeq	r0, r0, r0
 b28:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
 b2c:	00000050 	andeq	r0, r0, r0, asr r0
	...
 b38:	0000001c 	andeq	r0, r0, ip, lsl r0
 b3c:	7ba50002 	blvc	fe940b4c <SCS_BASE+0x1e932b4c>
 b40:	00040000 	andeq	r0, r4, r0
	...
 b4c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
 b58:	00000094 	muleq	r0, r4, r0
 b5c:	7f9f0002 	svcvc	0x009f0002
 b60:	00040000 	andeq	r0, r4, r0
 b64:	00000000 	andeq	r0, r0, r0
 b68:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
 b6c:	00000024 	andeq	r0, r0, r4, lsr #32
 b70:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 b74:	00000024 	andeq	r0, r0, r4, lsr #32
 b78:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 b7c:	00000090 	muleq	r0, r0, r0
 b80:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
 b84:	000000a8 	andeq	r0, r0, r8, lsr #1
 b88:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}
 b8c:	00000038 	andeq	r0, r0, r8, lsr r0
 b90:	08000d24 	stmdaeq	r0, {r2, r5, r8, sl, fp}
 b94:	00000048 	andeq	r0, r0, r8, asr #32
 b98:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
 b9c:	000000d8 	ldrdeq	r0, [r0], -r8
 ba0:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
 ba4:	0000008c 	andeq	r0, r0, ip, lsl #1
 ba8:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
 bac:	00000024 	andeq	r0, r0, r4, lsr #32
 bb0:	08000ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp}
 bb4:	0000001c 	andeq	r0, r0, ip, lsl r0
 bb8:	08000f10 	stmdaeq	r0, {r4, r8, r9, sl, fp}
 bbc:	00000040 	andeq	r0, r0, r0, asr #32
 bc0:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
 bc4:	000002e8 	andeq	r0, r0, r8, ror #5
 bc8:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
 bcc:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 bd0:	08001308 	stmdaeq	r0, {r3, r8, r9, ip}
 bd4:	00000040 	andeq	r0, r0, r0, asr #32
 bd8:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
 bdc:	0000005c 	andeq	r0, r0, ip, asr r0
 be0:	080013a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip}
 be4:	00000002 	andeq	r0, r0, r2
	...
 bf0:	00000024 	andeq	r0, r0, r4, lsr #32
 bf4:	8db30002 	ldchi	0, cr0, [r3, #8]!
 bf8:	00040000 	andeq	r0, r4, r0
 bfc:	00000000 	andeq	r0, r0, r0
 c00:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
 c04:	00000030 	andeq	r0, r0, r0, lsr r0
 c08:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
 c0c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 c18:	000001ec 	andeq	r0, r0, ip, ror #3
 c1c:	8f2e0002 	svchi	0x002e0002
 c20:	00040000 	andeq	r0, r4, r0
	...
 c2c:	0000000c 	andeq	r0, r0, ip
 c30:	00000000 	andeq	r0, r0, r0
 c34:	0000000c 	andeq	r0, r0, ip
 c38:	00000000 	andeq	r0, r0, r0
 c3c:	0000000c 	andeq	r0, r0, ip
 c40:	00000000 	andeq	r0, r0, r0
 c44:	0000000c 	andeq	r0, r0, ip
 c48:	00000000 	andeq	r0, r0, r0
 c4c:	0000000c 	andeq	r0, r0, ip
 c50:	00000000 	andeq	r0, r0, r0
 c54:	0000000c 	andeq	r0, r0, ip
 c58:	00000000 	andeq	r0, r0, r0
 c5c:	0000000c 	andeq	r0, r0, ip
 c60:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 c64:	00000010 	andeq	r0, r0, r0, lsl r0
 c68:	00000000 	andeq	r0, r0, r0
 c6c:	0000000c 	andeq	r0, r0, ip
 c70:	00000000 	andeq	r0, r0, r0
 c74:	0000000e 	andeq	r0, r0, lr
 c78:	00000000 	andeq	r0, r0, r0
 c7c:	00000010 	andeq	r0, r0, r0, lsl r0
 c80:	0800140c 	stmdaeq	r0, {r2, r3, sl, ip}
 c84:	0000001c 	andeq	r0, r0, ip, lsl r0
 c88:	00000000 	andeq	r0, r0, r0
 c8c:	00000012 	andeq	r0, r0, r2, lsl r0
 c90:	08001428 	stmdaeq	r0, {r3, r5, sl, ip}
 c94:	00000032 	andeq	r0, r0, r2, lsr r0
 c98:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
 c9c:	00000032 	andeq	r0, r0, r2, lsr r0
 ca0:	00000000 	andeq	r0, r0, r0
 ca4:	00000024 	andeq	r0, r0, r4, lsr #32
 ca8:	00000000 	andeq	r0, r0, r0
 cac:	00000012 	andeq	r0, r0, r2, lsl r0
 cb0:	00000000 	andeq	r0, r0, r0
 cb4:	00000012 	andeq	r0, r0, r2, lsl r0
 cb8:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
 cbc:	00000026 	andeq	r0, r0, r6, lsr #32
 cc0:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
 cc4:	00000026 	andeq	r0, r0, r6, lsr #32
 cc8:	00000000 	andeq	r0, r0, r0
 ccc:	00000020 	andeq	r0, r0, r0, lsr #32
 cd0:	00000000 	andeq	r0, r0, r0
 cd4:	00000020 	andeq	r0, r0, r0, lsr #32
 cd8:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
 cdc:	00000020 	andeq	r0, r0, r0, lsr #32
 ce0:	00000000 	andeq	r0, r0, r0
 ce4:	00000020 	andeq	r0, r0, r0, lsr #32
 ce8:	00000000 	andeq	r0, r0, r0
 cec:	00000020 	andeq	r0, r0, r0, lsr #32
 cf0:	00000000 	andeq	r0, r0, r0
 cf4:	00000020 	andeq	r0, r0, r0, lsr #32
 cf8:	00000000 	andeq	r0, r0, r0
 cfc:	0000001a 	andeq	r0, r0, sl, lsl r0
 d00:	00000000 	andeq	r0, r0, r0
 d04:	0000001a 	andeq	r0, r0, sl, lsl r0
 d08:	00000000 	andeq	r0, r0, r0
 d0c:	00000018 	andeq	r0, r0, r8, lsl r0
 d10:	00000000 	andeq	r0, r0, r0
 d14:	0000001c 	andeq	r0, r0, ip, lsl r0
 d18:	00000000 	andeq	r0, r0, r0
 d1c:	00000020 	andeq	r0, r0, r0, lsr #32
 d20:	00000000 	andeq	r0, r0, r0
 d24:	00000020 	andeq	r0, r0, r0, lsr #32
 d28:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 d2c:	00000024 	andeq	r0, r0, r4, lsr #32
 d30:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
 d34:	00000024 	andeq	r0, r0, r4, lsr #32
 d38:	00000000 	andeq	r0, r0, r0
 d3c:	00000022 	andeq	r0, r0, r2, lsr #32
 d40:	00000000 	andeq	r0, r0, r0
 d44:	00000012 	andeq	r0, r0, r2, lsl r0
 d48:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 d4c:	00000020 	andeq	r0, r0, r0, lsr #32
 d50:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
 d54:	00000020 	andeq	r0, r0, r0, lsr #32
 d58:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
 d5c:	0000001c 	andeq	r0, r0, ip, lsl r0
 d60:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
 d64:	0000001c 	andeq	r0, r0, ip, lsl r0
 d68:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
 d6c:	0000001c 	andeq	r0, r0, ip, lsl r0
 d70:	00000000 	andeq	r0, r0, r0
 d74:	00000026 	andeq	r0, r0, r6, lsr #32
 d78:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
 d7c:	00000040 	andeq	r0, r0, r0, asr #32
 d80:	00000000 	andeq	r0, r0, r0
 d84:	00000020 	andeq	r0, r0, r0, lsr #32
 d88:	08001614 	stmdaeq	r0, {r2, r4, r9, sl, ip}
 d8c:	00000020 	andeq	r0, r0, r0, lsr #32
 d90:	00000000 	andeq	r0, r0, r0
 d94:	00000038 	andeq	r0, r0, r8, lsr r0
 d98:	00000000 	andeq	r0, r0, r0
 d9c:	00000020 	andeq	r0, r0, r0, lsr #32
 da0:	00000000 	andeq	r0, r0, r0
 da4:	00000020 	andeq	r0, r0, r0, lsr #32
 da8:	00000000 	andeq	r0, r0, r0
 dac:	0000001c 	andeq	r0, r0, ip, lsl r0
 db0:	00000000 	andeq	r0, r0, r0
 db4:	0000001c 	andeq	r0, r0, ip, lsl r0
 db8:	00000000 	andeq	r0, r0, r0
 dbc:	000000a8 	andeq	r0, r0, r8, lsr #1
 dc0:	00000000 	andeq	r0, r0, r0
 dc4:	0000005c 	andeq	r0, r0, ip, asr r0
 dc8:	00000000 	andeq	r0, r0, r0
 dcc:	0000005c 	andeq	r0, r0, ip, asr r0
 dd0:	00000000 	andeq	r0, r0, r0
 dd4:	00000020 	andeq	r0, r0, r0, lsr #32
 dd8:	00000000 	andeq	r0, r0, r0
 ddc:	00000020 	andeq	r0, r0, r0, lsr #32
 de0:	00000000 	andeq	r0, r0, r0
 de4:	00000044 	andeq	r0, r0, r4, asr #32
 de8:	00000000 	andeq	r0, r0, r0
 dec:	00000042 	andeq	r0, r0, r2, asr #32
 df0:	00000000 	andeq	r0, r0, r0
 df4:	00000006 	andeq	r0, r0, r6
 df8:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
 dfc:	0000000a 	andeq	r0, r0, sl
	...
 e08:	00000024 	andeq	r0, r0, r4, lsr #32
 e0c:	9bc50002 	blls	ff140e1c <SCS_BASE+0x1f132e1c>
 e10:	00040000 	andeq	r0, r4, r0
 e14:	00000000 	andeq	r0, r0, r0
 e18:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
 e1c:	00000020 	andeq	r0, r0, r0, lsr #32
 e20:	08001660 	stmdaeq	r0, {r5, r6, r9, sl, ip}
 e24:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 e30:	00000024 	andeq	r0, r0, r4, lsr #32
 e34:	9d2a0002 	stcls	0, cr0, [sl, #-8]!
 e38:	00040000 	andeq	r0, r4, r0
 e3c:	00000000 	andeq	r0, r0, r0
 e40:	08001684 	stmdaeq	r0, {r2, r7, r9, sl, ip}
 e44:	0000016c 	andeq	r0, r0, ip, ror #2
 e48:	00000000 	andeq	r0, r0, r0
 e4c:	00000070 	andeq	r0, r0, r0, ror r0
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000169a 	muleq	r0, sl, r6
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
       4:	00000004 	andeq	r0, r0, r4
  {
    statusreg = SysTick->CTRL;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	000002c1 	andeq	r0, r0, r1, asr #5
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	00005801 	andeq	r5, r0, r1, lsl #16
      14:	00009a00 	andeq	r9, r0, r0, lsl #20
	...
      24:	07040200 	streq	r0, [r4, -r0, lsl #4]
      28:	0000081e 	andeq	r0, r0, lr, lsl r8
      2c:	1d050402 	cfstrsne	mvf0, [r5, #-8]
      30:	02000007 	andeq	r0, r0, #7
      34:	06ef0502 	strbteq	r0, [pc], r2, lsl #10
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	01020000 	mrseq	r0, (UNDEF: 2)

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	00088c06 	andeq	r8, r8, r6, lsl #24

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	33750300 	cmncc	r5, #0, 6
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	27020032 	smladxcs	r2, r2, r0, r0
      48:	0000004c 	andeq	r0, r0, ip, asr #32
      4c:	19070402 	stmdbne	r7, {r1, sl}

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	03000008 	movweq	r0, #8
      54:	00363175 	eorseq	r3, r6, r5, ror r1
      58:	005e2802 	subseq	r2, lr, r2, lsl #16
      5c:	02020000 	andeq	r0, r2, #0
      60:	000a7307 	andeq	r7, sl, r7, lsl #6
      64:	38750300 	ldmdacc	r5!, {r8, r9}^
      68:	6f290200 	svcvs	0x00290200
      6c:	02000000 	andeq	r0, r0, #0
      70:	088a0801 	stmeq	sl, {r0, fp}
      74:	a7040000 	strge	r0, [r4, -r0]
      78:	02000003 	andeq	r0, r0, #3
      7c:	0000812f 	andeq	r8, r0, pc, lsr #2
      80:	004c0500 	subeq	r0, ip, r0, lsl #10
      break;            

    default:
      break;
  }
}
      84:	30040000 	andcc	r0, r4, r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
      88:	02000002 	andeq	r0, r0, #2
      8c:	00009130 	andeq	r9, r0, r0, lsr r1
      90:	005e0500 	subseq	r0, lr, r0, lsl #10
      94:	01060000 	mrseq	r0, (UNDEF: 6)
      98:	00ab3a02 	adceq	r3, fp, r2, lsl #20
      9c:	56070000 	strpl	r0, [r7], -r0
      a0:	00000007 	andeq	r0, r0, r7
      a4:	00020607 	andeq	r0, r2, r7, lsl #12
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	04000100 	streq	r0, [r0], #-256	; 0x100
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	00000537 	andeq	r0, r0, r7, lsr r5
      b0:	00963a02 	addseq	r3, r6, r2, lsl #20
      break; 
      
    default:
      break;
  }
}
      b4:	01060000 	mrseq	r0, (UNDEF: 6)
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	00cb3c02 	sbceq	r3, fp, r2, lsl #24
      bc:	94070000 	strls	r0, [r7], #-0
      c0:	00000000 	andeq	r0, r0, r0
      c4:	54455308 	strbpl	r5, [r5], #-776	; 0x308
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      c8:	04000100 	streq	r0, [r0], #-256	; 0x100
      cc:	0000067e 	andeq	r0, r0, lr, ror r6
				{
					FLASH_Lock();
      d0:	00b63c02 	adcseq	r3, r6, r2, lsl #24
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	01060000 	mrseq	r0, (UNDEF: 6)
      d8:	00eb3e02 	rsceq	r3, fp, r2, lsl #28
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	77070000 	strvc	r0, [r7, -r0]
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	00000004 	andeq	r0, r0, r4
				TIM_Cmd(TIM2, ENABLE);
      e4:	0007f607 	andeq	pc, r7, r7, lsl #12
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	04000100 	streq	r0, [r0], #-256	; 0x100

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	000000c6 	andeq	r0, r0, r6, asr #1
      f0:	00d63e02 	sbcseq	r3, r6, r2, lsl #28
						usbRxCount = USB_Rx_Cnt;
      f4:	01060000 	mrseq	r0, (UNDEF: 6)
      f8:	010b4102 	tsteq	fp, r2, lsl #2
      fc:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
					if(CheckTimeOut()){
     100:	00000012 	andeq	r0, r0, r2, lsl r0
     104:	00125a07 	andseq	r5, r2, r7, lsl #20
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	04000100 	streq	r0, [r0], #-256	; 0x100
     10c:	000000fb 	strdeq	r0, [r0], -fp
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
     110:	00f64102 	rscseq	r4, r6, r2, lsl #2
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     114:	04020000 	streq	r0, [r2], #-0
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	00081007 	andeq	r1, r8, r7
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	031c0900 	tsteq	ip, #0, 18
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	0182014e 	orreq	r0, r2, lr, asr #2
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	430a0000 	movwmi	r0, #40960	; 0xa000
     128:	03004c52 	movweq	r4, #3154	; 0xc52
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
     12c:	00760150 	rsbseq	r0, r6, r0, asr r1
				gbIsFlashLock = TRUE;
     130:	0a000000 	beq	138 <_Minimum_Stack_Size+0x38>
     134:	00485243 	subeq	r5, r8, r3, asr #4
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	76015103 	strvc	r5, [r1], -r3, lsl #2
     13c:	04000000 	streq	r0, [r0], #-0
     140:	5244490a 	subpl	r4, r4, #163840	; 0x28000
     144:	01520300 	cmpeq	r2, r0, lsl #6
					USB_TxDString("Success..\n");
     148:	00000076 	andeq	r0, r0, r6, ror r0
				}
				else
					USB_TxDString("Fail..\n");
     14c:	444f0a08 	strbmi	r0, [pc], #-2568	; 154 <_Minimum_Stack_Size+0x54>
     150:	53030052 	movwpl	r0, #12370	; 0x3052
			//WDTCR = 0x08;
				Delay(100);
     154:	00007601 	andeq	r7, r0, r1, lsl #12
     158:	5f0b0c00 	svcpl	0x000b0c00

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	03000000 	movweq	r0, #0
     160:	00760154 	rsbseq	r0, r6, r4, asr r1
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	0a100000 	beq	40016c <__Stack_Size+0x3ffd6c>
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
     168:	00525242 	subseq	r5, r2, r2, asr #4
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
     16c:	76015503 	strvc	r5, [r1], -r3, lsl #10
     170:	14000000 	strne	r0, [r0], #-0

				Jump_To_Application();
     174:	000b370b 	andeq	r3, fp, fp, lsl #14
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	01560300 	cmpeq	r6, r0, lsl #6
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	00000076 	andeq	r0, r0, r6, ror r0
     180:	b10c0018 	tstlt	ip, r8, lsl r0
     184:	03000007 	movweq	r0, #7
     188:	011d0157 	tsteq	sp, r7, asr r1
     18c:	50090000 	andpl	r0, r9, r0

		}
		USART_BUFFER_CLEAR;
     190:	9f020b03 	svcls	0x00020b03
     194:	0a000003 	beq	1a8 <_Minimum_Stack_Size+0xa8>
		gwpUSARTBuffer[0]='\0';
     198:	00315243 	eorseq	r5, r1, r3, asr #4
     19c:	86020d03 	strhi	r0, [r2], -r3, lsl #26
     1a0:	00000000 	andeq	r0, r0, r0
     1a4:	0006a90b 	andeq	sl, r6, fp, lsl #18
     1a8:	020e0300 	andeq	r0, lr, #0, 6
     1ac:	00000053 	andeq	r0, r0, r3, asr r0
     1b0:	52430a02 	subpl	r0, r3, #8192	; 0x2000
     1b4:	0f030032 	svceq	0x00030032
     1b8:	00008602 	andeq	r8, r0, r2, lsl #12
     1bc:	b30b0400 	movwlt	r0, #46080	; 0xb400
     1c0:	03000006 	movweq	r0, #6
     1c4:	00530210 	subseq	r0, r3, r0, lsl r2
     1c8:	0b060000 	bleq	1801d0 <__Stack_Size+0x17fdd0>
     1cc:	000004e1 	andeq	r0, r0, r1, ror #9
     1d0:	86021103 	strhi	r1, [r2], -r3, lsl #2
     1d4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     1d8:	0006bd0b 	andeq	fp, r6, fp, lsl #26
     1dc:	02120300 	andseq	r0, r2, #0, 6
     1e0:	00000053 	andeq	r0, r0, r3, asr r0
     1e4:	03c50b0a 	biceq	r0, r5, #10240	; 0x2800
     1e8:	13030000 	movwne	r0, #12288	; 0x3000
     1ec:	00008602 	andeq	r8, r0, r2, lsl #12
     1f0:	c70b0c00 	strgt	r0, [fp, -r0, lsl #24]
     1f4:	03000006 	movweq	r0, #6
     1f8:	00530214 	subseq	r0, r3, r4, lsl r2
     1fc:	0a0e0000 	beq	380204 <__Stack_Size+0x37fe04>
     200:	03005253 	movweq	r5, #595	; 0x253
     204:	00860215 	addeq	r0, r6, r5, lsl r2
     208:	0b100000 	bleq	400210 <__Stack_Size+0x3ffe10>
     20c:	000006d1 	ldrdeq	r0, [r0], -r1
     210:	53021603 	movwpl	r1, #9731	; 0x2603
     214:	12000000 	andne	r0, r0, #0
     218:	5247450a 	subpl	r4, r7, #41943040	; 0x2800000
     21c:	02170300 	andseq	r0, r7, #0, 6
     220:	00000086 	andeq	r0, r0, r6, lsl #1
     224:	06db0b14 			; <UNDEFINED> instruction: 0x06db0b14
     228:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     22c:	00005302 	andeq	r5, r0, r2, lsl #6
     230:	640b1600 	strvs	r1, [fp], #-1536	; 0x600
     234:	03000002 	movweq	r0, #2
     238:	00860219 	addeq	r0, r6, r9, lsl r2
     23c:	0b180000 	bleq	600244 <__Stack_Size+0x5ffe44>
     240:	000006e5 	andeq	r0, r0, r5, ror #13
     244:	53021a03 	movwpl	r1, #10755	; 0x2a03
     248:	1a000000 	bne	250 <_Minimum_Stack_Size+0x150>
     24c:	00026a0b 	andeq	r6, r2, fp, lsl #20
     250:	021b0300 	andseq	r0, fp, #0, 6
     254:	00000086 	andeq	r0, r0, r6, lsl #1
     258:	0ae60b1c 	beq	ff982ed0 <SCS_BASE+0x1f974ed0>
     25c:	1c030000 	stcne	0, cr0, [r3], {-0}
     260:	00005302 	andeq	r5, r0, r2, lsl #6
     264:	5f0b1e00 	svcpl	0x000b1e00
     268:	03000004 	movweq	r0, #4
     26c:	0086021d 	addeq	r0, r6, sp, lsl r2
     270:	0b200000 	bleq	800278 <__Stack_Size+0x7ffe78>
     274:	000006f9 	strdeq	r0, [r0], -r9
     278:	53021e03 	movwpl	r1, #11779	; 0x2e03
     27c:	22000000 	andcs	r0, r0, #0
     280:	544e430a 	strbpl	r4, [lr], #-778	; 0x30a
     284:	021f0300 	andseq	r0, pc, #0, 6
     288:	00000086 	andeq	r0, r0, r6, lsl #1
     28c:	07030b24 	streq	r0, [r3, -r4, lsr #22]
     290:	20030000 	andcs	r0, r3, r0
     294:	00005302 	andeq	r5, r0, r2, lsl #6
     298:	500a2600 	andpl	r2, sl, r0, lsl #12
     29c:	03004353 	movweq	r4, #851	; 0x353
     2a0:	00860221 	addeq	r0, r6, r1, lsr #4
     2a4:	0b280000 	bleq	a002ac <__Stack_Size+0x9ffeac>
     2a8:	00000910 	andeq	r0, r0, r0, lsl r9
     2ac:	53022203 	movwpl	r2, #8707	; 0x2203
     2b0:	2a000000 	bcs	2b8 <_Minimum_Stack_Size+0x1b8>
     2b4:	5252410a 	subspl	r4, r2, #-2147483646	; 0x80000002
     2b8:	02230300 	eoreq	r0, r3, #0, 6
     2bc:	00000086 	andeq	r0, r0, r6, lsl #1
     2c0:	091b0b2c 	ldmdbeq	fp, {r2, r3, r5, r8, r9, fp}
     2c4:	24030000 	strcs	r0, [r3], #-0
     2c8:	00005302 	andeq	r5, r0, r2, lsl #6
     2cc:	520a2e00 	andpl	r2, sl, #0, 28
     2d0:	03005243 	movweq	r5, #579	; 0x243
     2d4:	00860225 	addeq	r0, r6, r5, lsr #4
     2d8:	0b300000 	bleq	c002e0 <__Stack_Size+0xbffee0>
     2dc:	00000926 	andeq	r0, r0, r6, lsr #18
     2e0:	53022603 	movwpl	r2, #9731	; 0x2603
     2e4:	32000000 	andcc	r0, r0, #0
     2e8:	0002500b 	andeq	r5, r2, fp
     2ec:	02270300 	eoreq	r0, r7, #0, 6
     2f0:	00000086 	andeq	r0, r0, r6, lsl #1
     2f4:	09310b34 	ldmdbeq	r1!, {r2, r4, r5, r8, r9, fp}
     2f8:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     2fc:	00005302 	andeq	r5, r0, r2, lsl #6
     300:	550b3600 	strpl	r3, [fp, #-1536]	; 0x600
     304:	03000002 	movweq	r0, #2
     308:	00860229 	addeq	r0, r6, r9, lsr #4
     30c:	0b380000 	bleq	e00314 <__Stack_Size+0xdfff14>
     310:	0000093c 	andeq	r0, r0, ip, lsr r9
     314:	53022a03 	movwpl	r2, #10755	; 0x2a03
     318:	3a000000 	bcc	320 <_Minimum_Stack_Size+0x220>
     31c:	00025a0b 	andeq	r5, r2, fp, lsl #20
     320:	022b0300 	eoreq	r0, fp, #0, 6
     324:	00000086 	andeq	r0, r0, r6, lsl #1
     328:	09470b3c 	stmdbeq	r7, {r2, r3, r4, r5, r8, r9, fp}^
     32c:	2c030000 	stccs	0, cr0, [r3], {-0}
     330:	00005302 	andeq	r5, r0, r2, lsl #6
     334:	5f0b3e00 	svcpl	0x000b3e00
     338:	03000002 	movweq	r0, #2
     33c:	0086022d 	addeq	r0, r6, sp, lsr #4
     340:	0b400000 	bleq	1000348 <__Stack_Size+0xffff48>
     344:	00000952 	andeq	r0, r0, r2, asr r9
     348:	53022e03 	movwpl	r2, #11779	; 0x2e03
     34c:	42000000 	andmi	r0, r0, #0
     350:	00022b0b 	andeq	r2, r2, fp, lsl #22
     354:	022f0300 	eoreq	r0, pc, #0, 6
     358:	00000086 	andeq	r0, r0, r6, lsl #1
     35c:	095d0b44 	ldmdbeq	sp, {r2, r6, r8, r9, fp}^
     360:	30030000 	andcc	r0, r3, r0
     364:	00005302 	andeq	r5, r0, r2, lsl #6
     368:	440a4600 	strmi	r4, [sl], #-1536	; 0x600
     36c:	03005243 	movweq	r5, #579	; 0x243
     370:	00860231 	addeq	r0, r6, r1, lsr r2
     374:	0b480000 	bleq	120037c <__Stack_Size+0x11fff7c>
     378:	00000968 	andeq	r0, r0, r8, ror #18
     37c:	53023203 	movwpl	r3, #8707	; 0x2203
     380:	4a000000 	bmi	388 <_Minimum_Stack_Size+0x288>
     384:	0007260b 	andeq	r2, r7, fp, lsl #12
     388:	02330300 	eorseq	r0, r3, #0, 6
     38c:	00000086 	andeq	r0, r0, r6, lsl #1
     390:	09730b4c 	ldmdbeq	r3!, {r2, r3, r6, r8, r9, fp}^
     394:	34030000 	strcc	r0, [r3], #-0
     398:	00005302 	andeq	r5, r0, r2, lsl #6
     39c:	0c004e00 	stceq	14, cr4, [r0], {-0}
     3a0:	000001d4 	ldrdeq	r0, [r0], -r4
     3a4:	8e023503 	cfsh32hi	mvfx3, mvfx2, #3
     3a8:	09000001 	stmdbeq	r0, {r0}
     3ac:	0238031c 	eorseq	r0, r8, #28, 6	; 0x70000000
     3b0:	00000469 	andeq	r0, r0, r9, ror #8
     3b4:	0052530a 	subseq	r5, r2, sl, lsl #6
     3b8:	86023a03 	strhi	r3, [r2], -r3, lsl #20
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	0006a90b 	andeq	sl, r6, fp, lsl #18
     3c4:	023b0300 	eorseq	r0, fp, #0, 6
     3c8:	00000053 	andeq	r0, r0, r3, asr r0
     3cc:	52440a02 	subpl	r0, r4, #8192	; 0x2000
     3d0:	023c0300 	eorseq	r0, ip, #0, 6
     3d4:	00000086 	andeq	r0, r0, r6, lsl #1
     3d8:	06b30b04 	ldrteq	r0, [r3], r4, lsl #22
     3dc:	3d030000 	stccc	0, cr0, [r3, #-0]
     3e0:	00005302 	andeq	r5, r0, r2, lsl #6
     3e4:	420a0600 	andmi	r0, sl, #0, 12
     3e8:	03005252 	movweq	r5, #594	; 0x252
     3ec:	0086023e 	addeq	r0, r6, lr, lsr r2
     3f0:	0b080000 	bleq	2003f8 <__Stack_Size+0x1ffff8>
     3f4:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
     3f8:	53023f03 	movwpl	r3, #12035	; 0x2f03
     3fc:	0a000000 	beq	404 <__Stack_Size+0x4>
     400:	3152430a 	cmpcc	r2, sl, lsl #6
     404:	02400300 	subeq	r0, r0, #0, 6
     408:	00000086 	andeq	r0, r0, r6, lsl #1
     40c:	06c70b0c 	strbeq	r0, [r7], ip, lsl #22
     410:	41030000 	mrsmi	r0, (UNDEF: 3)
     414:	00005302 	andeq	r5, r0, r2, lsl #6
     418:	430a0e00 	movwmi	r0, #44544	; 0xae00
     41c:	03003252 	movweq	r3, #594	; 0x252
     420:	00860242 	addeq	r0, r6, r2, asr #4
     424:	0b100000 	bleq	40042c <__Stack_Size+0x40002c>
     428:	000006d1 	ldrdeq	r0, [r0], -r1
     42c:	53024303 	movwpl	r4, #8963	; 0x2303
     430:	12000000 	andne	r0, r0, #0
     434:	3352430a 	cmpcc	r2, #671088640	; 0x28000000
     438:	02440300 	subeq	r0, r4, #0, 6
     43c:	00000086 	andeq	r0, r0, r6, lsl #1
     440:	06db0b14 			; <UNDEFINED> instruction: 0x06db0b14
     444:	45030000 	strmi	r0, [r3, #-0]
     448:	00005302 	andeq	r5, r0, r2, lsl #6
     44c:	b90b1600 	stmdblt	fp, {r9, sl, ip}
     450:	03000001 	movweq	r0, #1
     454:	00860246 	addeq	r0, r6, r6, asr #4
     458:	0b180000 	bleq	600460 <__Stack_Size+0x600060>
     45c:	000006e5 	andeq	r0, r0, r5, ror #13
     460:	53024703 	movwpl	r4, #9987	; 0x2703
     464:	1a000000 	bne	46c <__Stack_Size+0x6c>
     468:	03e30c00 	mvneq	r0, #0, 24
     46c:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
     470:	0003ab02 	andeq	sl, r3, r2, lsl #22
     474:	04010600 	streq	r0, [r1], #-1536	; 0x600
     478:	00049c1c 	andeq	r9, r4, ip, lsl ip
     47c:	03ba0700 			; <UNDEFINED> instruction: 0x03ba0700
     480:	07010000 	streq	r0, [r1, -r0]
     484:	0000072b 	andeq	r0, r0, fp, lsr #14
     488:	00d60702 	sbcseq	r0, r6, r2, lsl #14
     48c:	07030000 	streq	r0, [r3, -r0]
     490:	0000042e 	andeq	r0, r0, lr, lsr #8
     494:	035c0704 	cmpeq	ip, #4, 14	; 0x100000
     498:	00050000 	andeq	r0, r5, r0
     49c:	00065904 	andeq	r5, r6, r4, lsl #18
     4a0:	75220400 	strvc	r0, [r2, #-1024]!	; 0x400
     4a4:	06000004 	streq	r0, [r0], -r4
     4a8:	c2230501 	eorgt	r0, r3, #4194304	; 0x400000
     4ac:	07000004 	streq	r0, [r0, -r4]
     4b0:	00000270 	andeq	r0, r0, r0, ror r2
     4b4:	01990701 	orrseq	r0, r9, r1, lsl #14
     4b8:	07020000 	streq	r0, [r2, -r0]
     4bc:	0000089d 	muleq	r0, sp, r8
     4c0:	89040003 	stmdbhi	r4, {r0, r1}
     4c4:	05000006 	streq	r0, [r0, #-6]
     4c8:	0004a727 	andeq	sl, r4, r7, lsr #14
     4cc:	05010600 	streq	r0, [r1, #-1536]	; 0x600
     4d0:	0005072e 	andeq	r0, r5, lr, lsr #14
     4d4:	069b0700 	ldreq	r0, [fp], r0, lsl #14
     4d8:	07000000 	streq	r0, [r0, -r0]
     4dc:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     4e0:	031c0704 	tsteq	ip, #4, 14	; 0x100000
     4e4:	07280000 	streq	r0, [r8, -r0]!
     4e8:	0000034e 	andeq	r0, r0, lr, asr #6
     4ec:	770700c8 	strvc	r0, [r7, -r8, asr #1]
     4f0:	14000003 	strne	r0, [r0], #-3
     4f4:	00000007 	andeq	r0, r0, r7
     4f8:	f7071000 			; <UNDEFINED> instruction: 0xf7071000
     4fc:	1c000005 	stcne	0, cr0, [r0], {5}
     500:	00070d07 	andeq	r0, r7, r7, lsl #26
     504:	04001800 	streq	r1, [r0], #-2048	; 0x800
     508:	000007c6 	andeq	r0, r0, r6, asr #15
     50c:	04cd3605 	strbeq	r3, [sp], #1541	; 0x605
     510:	040d0000 	streq	r0, [sp], #-0
     514:	053f3e05 	ldreq	r3, [pc, #-3589]!	; fffff717 <SCS_BASE+0x1fff1717>
     518:	780e0000 	stmdavc	lr, {}	; <UNPREDICTABLE>
     51c:	05000000 	streq	r0, [r0, #-0]
     520:	00005340 	andeq	r5, r0, r0, asr #6
     524:	620e0000 	andvs	r0, lr, #0
     528:	0500000a 	streq	r0, [r0, #-10]
     52c:	0004c241 	andeq	ip, r4, r1, asr #4
     530:	640e0200 	strvs	r0, [lr], #-512	; 0x200
     534:	05000000 	streq	r0, [r0, #-0]
     538:	00050742 	andeq	r0, r5, r2, asr #14
     53c:	04000300 	streq	r0, [r0], #-768	; 0x300
     540:	00000879 	andeq	r0, r0, r9, ror r8
     544:	05124305 	ldreq	r4, [r2, #-773]	; 0x305
     548:	01060000 	mrseq	r0, (UNDEF: 6)
     54c:	055f4705 	ldrbeq	r4, [pc, #-1797]	; fffffe4f <SCS_BASE+0x1fff1e4f>
     550:	90070000 	andls	r0, r7, r0
     554:	00000000 	andeq	r0, r0, r0
     558:	0007be07 	andeq	fp, r7, r7, lsl #28
     55c:	0d000100 	stfeqs	f0, [r0, #-0]
     560:	981a0604 	ldmdals	sl, {r2, r9, sl}
     564:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
     568:	000005c2 	andeq	r0, r0, r2, asr #11
     56c:	00651c06 	rsbeq	r1, r5, r6, lsl #24
     570:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     574:	00000aa4 	andeq	r0, r0, r4, lsr #21
     578:	00651d06 	rsbeq	r1, r5, r6, lsl #26
     57c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     580:	000009a3 	andeq	r0, r0, r3, lsr #19
     584:	00651e06 	rsbeq	r1, r5, r6, lsl #28
     588:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     58c:	000007fd 	strdeq	r0, [r0], -sp
     590:	00eb1f06 	rsceq	r1, fp, r6, lsl #30
     594:	00030000 	andeq	r0, r3, r0
     598:	00023504 	andeq	r3, r2, r4, lsl #10
     59c:	5f200600 	svcpl	0x00200600
     5a0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
     5a4:	e81b070a 	ldmda	fp, {r1, r3, r8, r9, sl}
     5a8:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
     5ac:	000003ac 	andeq	r0, r0, ip, lsr #7
     5b0:	00531d07 	subseq	r1, r3, r7, lsl #26
     5b4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     5b8:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     5bc:	00531e07 	subseq	r1, r3, r7, lsl #28
     5c0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     5c4:	000005d2 	ldrdeq	r0, [r0], -r2
     5c8:	00531f07 	subseq	r1, r3, r7, lsl #30
     5cc:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     5d0:	0000020b 	andeq	r0, r0, fp, lsl #4
     5d4:	00532007 	subseq	r2, r3, r7
     5d8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     5dc:	000003fb 	strdeq	r0, [r0], -fp
     5e0:	00652107 	rsbeq	r2, r5, r7, lsl #2
     5e4:	00080000 	andeq	r0, r8, r0
     5e8:	000a1c04 	andeq	r1, sl, r4, lsl #24
     5ec:	a3220700 	teqge	r2, #0, 14
     5f0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
     5f4:	441a0810 	ldrmi	r0, [sl], #-2064	; 0x810
     5f8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     5fc:	000001f7 	strdeq	r0, [r0], -r7
     600:	00411c08 	subeq	r1, r1, r8, lsl #24
     604:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     608:	00000121 	andeq	r0, r0, r1, lsr #2
     60c:	00531d08 	subseq	r1, r3, r8, lsl #26
     610:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
     614:	00000141 	andeq	r0, r0, r1, asr #2
     618:	00531e08 	subseq	r1, r3, r8, lsl #28
     61c:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
     620:	000009be 			; <UNDEFINED> instruction: 0x000009be
     624:	00531f08 	subseq	r1, r3, r8, lsl #30
     628:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
     62c:	000004d6 	ldrdeq	r0, [r0], -r6
     630:	00532008 	subseq	r2, r3, r8
     634:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
     638:	000004f4 	strdeq	r0, [r0], -r4
     63c:	00532108 	subseq	r2, r3, r8, lsl #2
     640:	000c0000 	andeq	r0, ip, r0
     644:	00099104 	andeq	r9, r9, r4, lsl #2
     648:	f3220800 	vsub.i32	d0, d2, d0
     64c:	0f000005 	svceq	0x00000005
     650:	064f0410 			; <UNDEFINED> instruction: 0x064f0410
     654:	c2110000 	andsgt	r0, r1, #0
     658:	01000008 	tsteq	r0, r8
     65c:	0687300a 	streq	r3, [r7], sl
     660:	04070000 	streq	r0, [r7], #-0
     664:	00000009 	andeq	r0, r0, r9
     668:	000a8607 	andeq	r8, sl, r7, lsl #12
     66c:	24070100 	strcs	r0, [r7], #-256	; 0x100
     670:	02000005 	andeq	r0, r0, #5
     674:	000ac607 	andeq	ip, sl, r7, lsl #12
     678:	f1070300 			; <UNDEFINED> instruction: 0xf1070300
     67c:	04000003 	streq	r0, [r0], #-3
     680:	00086e07 	andeq	r6, r8, r7, lsl #28
     684:	06000500 	streq	r0, [r0], -r0, lsl #10
     688:	9c150101 	ldflss	f0, [r5], {1}
     68c:	07000006 	streq	r0, [r0, -r6]
     690:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     694:	073a0700 	ldreq	r0, [sl, -r0, lsl #14]!
     698:	00010000 	andeq	r0, r1, r0
     69c:	00018e04 	andeq	r8, r1, r4, lsl #28
     6a0:	87150100 	ldrhi	r0, [r5, -r0, lsl #2]
     6a4:	04000006 	streq	r0, [r0], #-6
     6a8:	00000a12 	andeq	r0, r0, r2, lsl sl
     6ac:	06501701 	ldrbeq	r1, [r0], -r1, lsl #14
     6b0:	ce120000 	cdpgt	0, 1, cr0, cr2, cr0, {0}
     6b4:	01000003 	tsteq	r0, r3
     6b8:	d801015d 	stmdale	r1, {r0, r2, r3, r4, r6, r8}
     6bc:	13000006 	movwne	r0, #6
     6c0:	00000246 	andeq	r0, r0, r6, asr #4
     6c4:	53015d01 	movwpl	r5, #7425	; 0x1d01
     6c8:	14000000 	strne	r0, [r0], #-0
     6cc:	00000898 	muleq	r0, r8, r8
     6d0:	53016001 	movwpl	r6, #4097	; 0x1001
     6d4:	00000000 	andeq	r0, r0, r0
     6d8:	0001ee12 	andeq	lr, r1, r2, lsl lr
     6dc:	016b0100 	cmneq	fp, r0, lsl #2
     6e0:	0006f201 	andeq	pc, r6, r1, lsl #4
     6e4:	02921300 	addseq	r1, r2, #0, 6
     6e8:	6b010000 	blvs	406f0 <__Stack_Size+0x402f0>
     6ec:	00005301 	andeq	r5, r0, r1, lsl #6
     6f0:	35150000 	ldrcc	r0, [r5, #-0]
     6f4:	01000006 	tsteq	r0, r6
     6f8:	4e1201da 	mrcmi	1, 0, r0, cr2, cr10, {6}
     6fc:	01000008 	tsteq	r0, r8
     700:	1e010153 	mcrne	1, 0, r0, cr1, cr3, {2}
     704:	16000007 	strne	r0, [r0], -r7
     708:	00727473 	rsbseq	r7, r2, r3, ror r4
     70c:	1e015301 	cdpne	3, 0, cr5, cr1, cr1, {0}
     710:	17000007 	strne	r0, [r0, -r7]
     714:	56010069 	strpl	r0, [r1], -r9, rrx
     718:	00072b01 	andeq	r2, r7, r1, lsl #22
     71c:	04100000 	ldreq	r0, [r0], #-0
     720:	00000724 	andeq	r0, r0, r4, lsr #14
     724:	93080102 	movwls	r0, #33026	; 0x8102
     728:	18000008 	stmdane	r0, {r3}
     72c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     730:	ff120074 			; <UNDEFINED> instruction: 0xff120074
     734:	01000009 	tsteq	r0, r9
     738:	4c01013f 	stfmis	f0, [r1], {63}	; 0x3f
     73c:	16000007 	strne	r0, [r0], -r7
     740:	00746164 	rsbseq	r6, r4, r4, ror #2
     744:	65013f01 	strvs	r3, [r1, #-3841]	; 0xf01
     748:	00000000 	andeq	r0, r0, r0
     74c:	0006f219 	andeq	pc, r6, r9, lsl r2	; <UNPREDICTABLE>
     750:	00013400 	andeq	r3, r1, r0, lsl #8
     754:	00000c08 	andeq	r0, r0, r8, lsl #24
     758:	1a9c0100 	bne	fe700b60 <SCS_BASE+0x1e6f2b60>
     75c:	00000749 	andeq	r0, r0, r9, asr #14
     760:	0065de01 	rsbeq	sp, r5, r1, lsl #28
     764:	00000000 	andeq	r0, r0, r0
     768:	00140000 	andseq	r0, r4, r0
     76c:	9c010000 	stcls	0, cr0, [r1], {-0}
     770:	0005911b 	andeq	r9, r5, fp, lsl r1
     774:	40eb0100 	rscmi	r0, fp, r0, lsl #2
     778:	10080001 	andne	r0, r8, r1
     77c:	01000000 	mrseq	r0, (UNDEF: 0)
     780:	06071c9c 			; <UNDEFINED> instruction: 0x06071c9c
     784:	f1010000 	setend	le
     788:	00000000 	andeq	r0, r0, r0
     78c:	0000004e 	andeq	r0, r0, lr, asr #32
     790:	08169c01 	ldmdaeq	r6, {r0, sl, fp, ip, pc}
     794:	581d0000 	ldmdapl	sp, {}	; <UNPREDICTABLE>
     798:	01000008 	tsteq	r0, r8
     79c:	0005e8f3 	strdeq	lr, [r5], -r3
     7a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
     7a4:	0000001e 	andeq	r0, r0, lr, lsl r0
     7a8:	0013c400 	andseq	ip, r3, r0, lsl #8
     7ac:	0007bf00 	andeq	fp, r7, r0, lsl #30
     7b0:	51011f00 	tstpl	r1, r0, lsl #30
     7b4:	1f047d02 	svcne	0x00047d02
     7b8:	40035001 	andmi	r5, r3, r1
     7bc:	1e00244a 	cdpne	4, 0, cr2, cr0, cr10, {2}
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	000013e7 	andeq	r1, r0, r7, ror #7
     7c8:	000007e0 	andeq	r0, r0, r0, ror #15
     7cc:	0152011f 	cmpeq	r2, pc, lsl r1
     7d0:	51011f31 	tstpl	r1, r1, lsr pc
     7d4:	03830a03 	orreq	r0, r3, #12288	; 0x3000
     7d8:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
     7dc:	00244a40 	eoreq	r4, r4, r0, asr #20
     7e0:	0000001e 	andeq	r0, r0, lr, lsl r0
     7e4:	00140300 	andseq	r0, r4, r0, lsl #6
     7e8:	0007fa00 	andeq	pc, r7, r0, lsl #20
     7ec:	51011f00 	tstpl	r1, r0, lsl #30
     7f0:	011f3101 	tsteq	pc, r1, lsl #2
     7f4:	4a400350 	bmi	100153c <__Stack_Size+0x100113c>
     7f8:	00200024 	eoreq	r0, r0, r4, lsr #32
     7fc:	1a000000 	bne	804 <__Stack_Size+0x404>
     800:	1f000014 	svcne	0x00000014
     804:	31015201 	tstcc	r1, r1, lsl #4
     808:	0151011f 	cmpeq	r1, pc, lsl r1
     80c:	50011f31 	andpl	r1, r1, r1, lsr pc
     810:	244a4003 	strbcs	r4, [sl], #-3
     814:	32210000 	eorcc	r0, r1, #0
     818:	00000007 	andeq	r0, r0, r7
     81c:	02000000 	andeq	r0, r0, #0
     820:	01000000 	mrseq	r0, (UNDEF: 0)
     824:	0008319c 	muleq	r8, ip, r1
     828:	073f2200 	ldreq	r2, [pc, -r0, lsl #4]!
     82c:	50010000 	andpl	r0, r1, r0
     830:	00852300 	addeq	r2, r5, r0, lsl #6
     834:	46010000 	strmi	r0, [r1], -r0
     838:	00000001 	andeq	r0, r0, r1
     83c:	00000200 	andeq	r0, r0, r0, lsl #4
     840:	629c0100 	addsvs	r0, ip, #0, 2
     844:	24000008 	strcs	r0, [r0], #-8
     848:	000005ad 	andeq	r0, r0, sp, lsr #11
     84c:	65014601 	strvs	r4, [r1, #-1537]	; 0x601
     850:	01000000 	mrseq	r0, (UNDEF: 0)
     854:	08981450 	ldmeq	r8, {r4, r6, sl, ip}
     858:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
     85c:	00006501 	andeq	r6, r0, r1, lsl #10
     860:	fa210000 	blx	840868 <__Stack_Size+0x840468>
     864:	00000006 	andeq	r0, r0, r6
     868:	02000000 	andeq	r0, r0, #0
     86c:	01000000 	mrseq	r0, (UNDEF: 0)
     870:	0008829c 	muleq	r8, ip, r2
     874:	07072200 	streq	r2, [r7, -r0, lsl #4]
     878:	50010000 	andpl	r0, r1, r0
     87c:	00071325 	andeq	r1, r7, r5, lsr #6
     880:	b2210000 	eorlt	r0, r1, #0
     884:	00000006 	andeq	r0, r0, r6
     888:	02000000 	andeq	r0, r0, #0
     88c:	01000000 	mrseq	r0, (UNDEF: 0)
     890:	0008a29c 	muleq	r8, ip, r2
     894:	06bf2200 	ldrteq	r2, [pc], r0, lsl #4
     898:	50010000 	andpl	r0, r1, r0
     89c:	0006cb25 	andeq	ip, r6, r5, lsr #22
     8a0:	d8210000 	stmdale	r1!, {}	; <UNPREDICTABLE>
     8a4:	00000006 	andeq	r0, r0, r6
     8a8:	02000000 	andeq	r0, r0, #0
     8ac:	01000000 	mrseq	r0, (UNDEF: 0)
     8b0:	0008bd9c 	muleq	r8, ip, sp
     8b4:	06e52200 	strbteq	r2, [r5], r0, lsl #4
     8b8:	50010000 	andpl	r0, r1, r0
     8bc:	036e2300 	cmneq	lr, #0, 6
     8c0:	71010000 	mrsvc	r0, (UNDEF: 1)
     8c4:	00000001 	andeq	r0, r0, r1
     8c8:	00000200 	andeq	r0, r0, r0, lsl #4
     8cc:	e29c0100 	adds	r0, ip, #0, 2
     8d0:	24000008 	strcs	r0, [r0], #-8
     8d4:	000000e6 	andeq	r0, r0, r6, ror #1
     8d8:	41017101 	tstmi	r1, r1, lsl #2
     8dc:	01000000 	mrseq	r0, (UNDEF: 0)
     8e0:	81230050 	qsubhi	r0, r0, r3
     8e4:	01000000 	mrseq	r0, (UNDEF: 0)
     8e8:	00000178 	andeq	r0, r0, r8, ror r1
     8ec:	004a0000 	subeq	r0, sl, r0
     8f0:	9c010000 	stcls	0, cr0, [r1], {-0}
     8f4:	00000955 	andeq	r0, r0, r5, asr r9
     8f8:	0005ad26 	andeq	sl, r5, r6, lsr #26
     8fc:	01780100 	cmneq	r8, r0, lsl #2
     900:	00000065 	andeq	r0, r0, r5, rrx
     904:	00000000 	andeq	r0, r0, r0
     908:	00089827 	andeq	r9, r8, r7, lsr #16
     90c:	017a0100 	cmneq	sl, r0, lsl #2
     910:	00000065 	andeq	r0, r0, r5, rrx
     914:	0000006d 	andeq	r0, r0, sp, rrx
     918:	0000001e 	andeq	r0, r0, lr, lsl r0
     91c:	00143600 	andseq	r3, r4, r0, lsl #12
     920:	00093700 	andeq	r3, r9, r0, lsl #14
     924:	50011f00 	andpl	r1, r1, r0, lsl #30
     928:	f700760d 			; <UNDEFINED> instruction: 0xf700760d
     92c:	f7640825 			; <UNDEFINED> instruction: 0xf7640825
     930:	00f71b25 	rscseq	r1, r7, r5, lsr #22
     934:	1e003023 	cdpne	0, 0, cr3, cr0, cr3, {1}
     938:	00000000 	andeq	r0, r0, r0
     93c:	00001436 	andeq	r1, r0, r6, lsr r4
     940:	0000094b 	andeq	r0, r0, fp, asr #18
     944:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     948:	28003074 	stmdacs	r0, {r2, r4, r5, r6, ip, sp}
     94c:	00000000 	andeq	r0, r0, r0
     950:	00001436 	andeq	r1, r0, r6, lsr r4
     954:	084a2300 	stmdaeq	sl, {r8, r9, sp}^
     958:	85010000 	strhi	r0, [r1, #-0]
     95c:	00015001 	andeq	r5, r1, r1
     960:	00001208 	andeq	r1, r0, r8, lsl #4
     964:	939c0100 	orrsls	r0, ip, #0, 2
     968:	29000009 	stmdbcs	r0, {r0, r3}
     96c:	00727473 	rsbseq	r7, r2, r3, ror r4
     970:	1e018501 	cfsh32ne	mvfx8, mvfx1, #1
     974:	b6000007 	strlt	r0, [r0], -r7
     978:	2a000000 	bcs	980 <__Stack_Size+0x580>
     97c:	87010069 	strhi	r0, [r1, -r9, rrx]
     980:	00072b01 	andeq	r2, r7, r1, lsl #22
     984:	0000d700 	andeq	sp, r0, r0, lsl #14
     988:	015e2b00 	cmpeq	lr, r0, lsl #22
     98c:	14360800 	ldrtne	r0, [r6], #-2048	; 0x800
     990:	23000000 	movwcs	r0, #0
     994:	000003ca 	andeq	r0, r0, sl, asr #7
     998:	00018e01 	andeq	r8, r1, r1, lsl #28
     99c:	30000000 	andcc	r0, r0, r0
     9a0:	01000000 	mrseq	r0, (UNDEF: 0)
     9a4:	0009dc9c 	muleq	r9, ip, ip
     9a8:	02462600 	subeq	r2, r6, #0, 12
     9ac:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
     9b0:	00005301 	andeq	r5, r0, r1, lsl #6
     9b4:	00013300 	andeq	r3, r1, r0, lsl #6
     9b8:	08982700 	ldmeq	r8, {r8, r9, sl, sp}
     9bc:	90010000 	andls	r0, r1, r0
     9c0:	00005301 	andeq	r5, r0, r1, lsl #6
     9c4:	00015400 	andeq	r5, r1, r0, lsl #8
     9c8:	00002b00 	andeq	r2, r0, r0, lsl #22
     9cc:	14360000 	ldrtne	r0, [r6], #-0
     9d0:	00280000 	eoreq	r0, r8, r0
     9d4:	36000000 	strcc	r0, [r0], -r0
     9d8:	00000014 	andeq	r0, r0, r4, lsl r0
     9dc:	0001ea23 	andeq	lr, r1, r3, lsr #20
     9e0:	019b0100 	orrseq	r0, fp, r0, lsl #2
     9e4:	00000000 	andeq	r0, r0, r0
     9e8:	00000014 	andeq	r0, r0, r4, lsl r0
     9ec:	0a229c01 	beq	8a79f8 <__Stack_Size+0x8a75f8>
     9f0:	92260000 	eorls	r0, r6, #0
     9f4:	01000002 	tsteq	r0, r2
     9f8:	0053019b 			; <UNDEFINED> instruction: 0x0053019b
     9fc:	01720000 	cmneq	r2, r0
     a00:	001e0000 	andseq	r0, lr, r0
     a04:	93000000 	movwls	r0, #0
     a08:	18000009 	stmdane	r0, {r0, r3}
     a0c:	1f00000a 	svcne	0x0000000a
     a10:	74045001 	strvc	r5, [r4], #-1
     a14:	00253800 	eoreq	r3, r5, r0, lsl #16
     a18:	00000028 	andeq	r0, r0, r8, lsr #32
     a1c:	00099300 	andeq	r9, r9, r0, lsl #6
     a20:	6a230000 	bvs	8c0a28 <__Stack_Size+0x8c0628>
     a24:	01000003 	tsteq	r0, r3
     a28:	000001a1 	andeq	r0, r0, r1, lsr #3
     a2c:	00140000 	andseq	r0, r4, r0
     a30:	9c010000 	stcls	0, cr0, [r1], {-0}
     a34:	00000a70 	andeq	r0, r0, r0, ror sl
     a38:	0000e626 	andeq	lr, r0, r6, lsr #12
     a3c:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
     a40:	00000041 	andeq	r0, r0, r1, asr #32
     a44:	00000193 	muleq	r0, r3, r1
     a48:	0000001e 	andeq	r0, r0, lr, lsl r0
     a4c:	0009dc00 	andeq	sp, r9, r0, lsl #24
     a50:	000a5e00 	andeq	r5, sl, r0, lsl #28
     a54:	50011f00 	andpl	r1, r1, r0, lsl #30
     a58:	40007404 	andmi	r7, r0, r4, lsl #8
     a5c:	002c0025 	eoreq	r0, ip, r5, lsr #32
     a60:	dc000000 	stcle	0, cr0, [r0], {-0}
     a64:	1f000009 	svcne	0x00000009
     a68:	f3035001 	vhadd.u8	d5, d3, d1
     a6c:	00005001 	andeq	r5, r0, r1
     a70:	00057f2d 	andeq	r7, r5, sp, lsr #30
     a74:	01a80100 			; <UNDEFINED> instruction: 0x01a80100
     a78:	00000065 	andeq	r0, r0, r5, rrx
     a7c:	00000000 	andeq	r0, r0, r0
     a80:	00000020 	andeq	r0, r0, r0, lsr #32
     a84:	88239c01 	stmdahi	r3!, {r0, sl, fp, ip, pc}
     a88:	01000001 	tsteq	r0, r1
     a8c:	016401b4 	strheq	r0, [r4, #-20]!	; 0xffffffec
     a90:	002c0800 	eoreq	r0, ip, r0, lsl #16
     a94:	9c010000 	stcls	0, cr0, [r1], {-0}
     a98:	00000add 	ldrdeq	r0, [r0], -sp
     a9c:	000b0426 	andeq	r0, fp, r6, lsr #8
     aa0:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
     aa4:	00000041 	andeq	r0, r0, r1, asr #32
     aa8:	000001bf 			; <UNDEFINED> instruction: 0x000001bf
     aac:	00016e1e 	andeq	r6, r1, lr, lsl lr
     ab0:	00144708 	andseq	r4, r4, r8, lsl #14
     ab4:	000abf00 	andeq	fp, sl, r0, lsl #30
     ab8:	50011f00 	andpl	r1, r1, r0, lsl #30
     abc:	1e003101 	adfnes	f3, f0, f1
     ac0:	08000180 	stmdaeq	r0, {r7, r8}
     ac4:	00001447 	andeq	r1, r0, r7, asr #8
     ac8:	00000ad3 	ldrdeq	r0, [r0], -r3
     acc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     ad0:	2800fe09 	stmdacs	r0, {r0, r3, r9, sl, fp, ip, sp, lr, pc}
     ad4:	0800018a 	stmdaeq	r0, {r1, r3, r7, r8}
     ad8:	00001447 	andeq	r1, r0, r7, asr #8
     adc:	04512e00 	ldrbeq	r2, [r1], #-3584	; 0xe00
     ae0:	2b010000 	blcs	40ae8 <__Stack_Size+0x406e8>
     ae4:	00005303 	andeq	r5, r0, r3, lsl #6
     ae8:	00000000 	andeq	r0, r0, r0
     aec:	00003000 	andeq	r3, r0, r0
     af0:	289c0100 	ldmcs	ip, {r8}
     af4:	2900000b 	stmdbcs	r0, {r0, r1, r3}
     af8:	00417062 	subeq	r7, r1, r2, rrx
     afc:	1e032b01 	vmlane.f64	d2, d3, d1
     b00:	fa000007 	blx	b24 <__Stack_Size+0x724>
     b04:	29000001 	stmdbcs	r0, {r0}
     b08:	00427062 	subeq	r7, r2, r2, rrx
     b0c:	1e032b01 	vmlane.f64	d2, d3, d1
     b10:	4d000007 	stcmi	0, cr0, [r0, #-28]	; 0xffffffe4
     b14:	27000002 	strcs	r0, [r0, -r2]
     b18:	00000011 	andeq	r0, r0, r1, lsl r0
     b1c:	53032d01 	movwpl	r2, #15617	; 0x3d01
     b20:	7b000000 	blvc	b28 <__Stack_Size+0x728>
     b24:	00000002 	andeq	r0, r0, r2
     b28:	000b2c2e 	andeq	r2, fp, lr, lsr #24
     b2c:	03390100 	teqeq	r9, #0, 2
     b30:	00000053 	andeq	r0, r0, r3, asr r0
     b34:	00000000 	andeq	r0, r0, r0
     b38:	0000001a 	andeq	r0, r0, sl, lsl r0
     b3c:	0b719c01 	bleq	1c67b48 <__Stack_Size+0x1c67748>
     b40:	b1260000 	teqlt	r6, r0
     b44:	01000004 	tsteq	r0, r4
     b48:	071e0339 			; <UNDEFINED> instruction: 0x071e0339
     b4c:	02ca0000 	sbceq	r0, sl, #0
     b50:	6d240000 	stcvs	0, cr0, [r4, #-0]
     b54:	0100000a 	tsteq	r0, sl
     b58:	071e0339 			; <UNDEFINED> instruction: 0x071e0339
     b5c:	51010000 	mrspl	r0, (UNDEF: 1)
     b60:	00074227 	andeq	r4, r7, r7, lsr #4
     b64:	033b0100 	teqeq	fp, #0, 2
     b68:	00000053 	andeq	r0, r0, r3, asr r0
     b6c:	000002eb 	andeq	r0, r0, fp, ror #5
     b70:	083c2300 	ldmdaeq	ip!, {r8, r9, sp}
     b74:	c7010000 	strgt	r0, [r1, -r0]
     b78:	00000001 	andeq	r0, r0, r1
     b7c:	0001d800 	andeq	sp, r1, r0, lsl #16
     b80:	a19c0100 	orrsge	r0, ip, r0, lsl #2
     b84:	2f00000d 	svccs	0x0000000d
     b88:	000009f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b8c:	5301c901 	movwpl	ip, #6401	; 0x1901
     b90:	00000000 	andeq	r0, r0, r0
     b94:	00006e30 	andeq	r6, r0, r0, lsr lr
     b98:	01ca0100 	biceq	r0, sl, r0, lsl #2
     b9c:	00000da1 	andeq	r0, r0, r1, lsr #27
     ba0:	2f489102 	svccs	0x00489102
     ba4:	00000395 	muleq	r0, r5, r3
     ba8:	6501cb01 	strvs	ip, [r1, #-2817]	; 0xb01
     bac:	00000000 	andeq	r0, r0, r0
     bb0:	00047f27 	andeq	r7, r4, r7, lsr #30
     bb4:	01cc0100 	biceq	r0, ip, r0, lsl #2
     bb8:	00000065 	andeq	r0, r0, r5, rrx
     bbc:	00000324 	andeq	r0, r0, r4, lsr #6
     bc0:	00000031 	andeq	r0, r0, r1, lsr r0
     bc4:	0000f200 	andeq	pc, r0, r0, lsl #4
     bc8:	000ce600 	andeq	lr, ip, r0, lsl #12
     bcc:	03882700 	orreq	r2, r8, #0, 14
     bd0:	04010000 	streq	r0, [r1], #-0
     bd4:	00004102 	andeq	r4, r0, r2, lsl #2
     bd8:	00034300 	andeq	r4, r3, r0, lsl #6
     bdc:	039d3000 	orrseq	r3, sp, #0
     be0:	05010000 	streq	r0, [r1, #-0]
     be4:	00007602 	andeq	r7, r0, r2, lsl #12
     be8:	40910200 	addsmi	r0, r1, r0, lsl #4
     bec:	0002b530 	andeq	fp, r2, r0, lsr r5
     bf0:	02070100 	andeq	r0, r7, #0, 2
     bf4:	00000db1 			; <UNDEFINED> instruction: 0x00000db1
     bf8:	7fbe9103 	svcvc	0x00be9103
     bfc:	00032a30 	andeq	r2, r3, r0, lsr sl
     c00:	02080100 	andeq	r0, r8, #0, 2
     c04:	00000db6 			; <UNDEFINED> instruction: 0x00000db6
     c08:	7fbf9103 	svcvc	0x00bf9103
     c0c:	00061b30 	andeq	r1, r6, r0, lsr fp
     c10:	020a0100 	andeq	r0, sl, #0, 2
     c14:	00000076 	andeq	r0, r0, r6, ror r0
     c18:	32449102 	subcc	r9, r4, #-2147483648	; 0x80000000
     c1c:	000006f2 	strdeq	r0, [r0], -r2
     c20:	00000000 	andeq	r0, r0, r0
     c24:	00000002 	andeq	r0, r0, r2
     c28:	2b026401 	blcs	99c34 <__Stack_Size+0x99834>
     c2c:	00000000 	andeq	r0, r0, r0
     c30:	00001458 	andeq	r1, r0, r8, asr r4
     c34:	0000001e 	andeq	r0, r0, lr, lsl r0
     c38:	00145f00 	andseq	r5, r4, r0, lsl #30
     c3c:	000c4800 	andeq	r4, ip, r0, lsl #16
     c40:	50011f00 	andpl	r1, r1, r0, lsl #30
     c44:	00350802 	eorseq	r0, r5, r2, lsl #16
     c48:	0000002b 	andeq	r0, r0, fp, lsr #32
     c4c:	00147000 	andseq	r7, r4, r0
     c50:	00002b00 	andeq	r2, r0, r0, lsl #22
     c54:	14850000 	strne	r0, [r5], #0
     c58:	001e0000 	andseq	r0, lr, r0
     c5c:	55000000 	strpl	r0, [r0, #-0]
     c60:	71000009 	tstvc	r0, r9
     c64:	1f00000c 	svcne	0x0000000c
     c68:	03055001 	movweq	r5, #20481	; 0x5001
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	00001e00 	andeq	r1, r0, r0, lsl #28
     c74:	148c0000 	strne	r0, [ip], #0
     c78:	0c8b0000 	stceq	0, cr0, [fp], {0}
     c7c:	011f0000 	tsteq	pc, r0
     c80:	1f310151 	svcne	0x00310151
     c84:	40035001 	andmi	r5, r3, r1
     c88:	1e00244a 	cdpne	4, 0, cr2, cr0, cr10, {2}
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	00000a86 	andeq	r0, r0, r6, lsl #21
     c94:	00000c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
     c98:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     c9c:	2b006408 	blcs	19cc4 <__Stack_Size+0x198c4>
     ca0:	00000000 	andeq	r0, r0, r0
     ca4:	0000075b 	andeq	r0, r0, fp, asr r7
     ca8:	0000001e 	andeq	r0, r0, lr, lsl r0
     cac:	00148c00 	andseq	r8, r4, r0, lsl #24
     cb0:	000cc300 	andeq	ip, ip, r0, lsl #6
     cb4:	51011f00 	tstpl	r1, r0, lsl #30
     cb8:	1f007502 	svcne	0x00007502
     cbc:	40035001 	andmi	r5, r3, r1
     cc0:	2b00244a 	blcs	9df0 <__Stack_Size+0x99f0>
     cc4:	00000000 	andeq	r0, r0, r0
     cc8:	00001485 	andeq	r1, r0, r5, lsl #9
     ccc:	0000002b 	andeq	r0, r0, fp, lsr #32
     cd0:	00095500 	andeq	r5, r9, r0, lsl #10
     cd4:	00002000 	andeq	r2, r0, r0
     cd8:	0a860000 	beq	fe180ce0 <SCS_BASE+0x1e172ce0>
     cdc:	011f0000 	tsteq	pc, r0
     ce0:	64080250 	strvs	r0, [r8], #-592	; 0x250
     ce4:	00310000 	eorseq	r0, r1, r0
     ce8:	12000000 	andne	r0, r0, #0
     cec:	3a000000 	bcc	cf4 <__Stack_Size+0x8f4>
     cf0:	2700000d 	strcs	r0, [r0, -sp]
     cf4:	000008dd 	ldrdeq	r0, [r0], -sp
     cf8:	a7028801 	strge	r8, [r2, -r1, lsl #16]
     cfc:	62000006 	andvs	r0, r0, #6
     d00:	27000003 	strcs	r0, [r0, -r3]
     d04:	00000107 	andeq	r0, r0, r7, lsl #2
     d08:	41028901 	tstmi	r2, r1, lsl #18
     d0c:	81000000 	mrshi	r0, (UNDEF: 0)
     d10:	2b000003 	blcs	d24 <__Stack_Size+0x924>
     d14:	00000000 	andeq	r0, r0, r0
     d18:	000014a3 	andeq	r1, r0, r3, lsr #9
     d1c:	0000001e 	andeq	r0, r0, lr, lsl r0
     d20:	000a8600 	andeq	r8, sl, r0, lsl #12
     d24:	000d3100 	andeq	r3, sp, r0, lsl #2
     d28:	50011f00 	andpl	r1, r1, r0, lsl #30
     d2c:	01f40a03 	mvnseq	r0, r3, lsl #20
     d30:	00003300 	andeq	r3, r0, r0, lsl #6
     d34:	75020000 	strvc	r0, [r2, #-0]
     d38:	001e0000 	andseq	r0, lr, r0
     d3c:	aa000000 	bge	d44 <__Stack_Size+0x944>
     d40:	56000014 			; <UNDEFINED> instruction: 0x56000014
     d44:	1f00000d 	svcne	0x0000000d
     d48:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
     d4c:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0x11f
     d50:	010c000c 	tsteq	ip, ip
     d54:	001e0040 	andseq	r0, lr, r0, asr #32
     d58:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     d5c:	6a00000b 	bvs	d90 <__Stack_Size+0x990>
     d60:	1f00000d 	svcne	0x0000000d
     d64:	91025001 	tstls	r2, r1
     d68:	001e0048 	andseq	r0, lr, r8, asr #32
     d6c:	dd000000 	stcle	0, cr0, [r0, #-0]
     d70:	8700000a 	strhi	r0, [r0, -sl]
     d74:	1f00000d 	svcne	0x0000000d
     d78:	03055101 	movweq	r5, #20737	; 0x5101
     d7c:	00000000 	andeq	r0, r0, r0
     d80:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     d84:	20004891 	mulcs	r0, r1, r8
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	00000add 	ldrdeq	r0, [r0], -sp
     d90:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0x11f
     d94:	00000003 	andeq	r0, r0, r3
     d98:	50011f00 	andpl	r1, r1, r0, lsl #30
     d9c:	00489102 	subeq	r9, r8, r2, lsl #2
     da0:	07243400 	streq	r3, [r4, -r0, lsl #8]!
     da4:	0db10000 	ldceq	0, cr0, [r1]
     da8:	16350000 	ldrtne	r0, [r5], -r0
     dac:	0f000001 	svceq	0x00000001
     db0:	049c0500 	ldreq	r0, [ip], #1280	; 0x500
     db4:	9c050000 	stcls	0, cr0, [r5], {-0}
     db8:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     dbc:	0000048a 	andeq	r0, r0, sl, lsl #9
     dc0:	5302ec01 	movwpl	lr, #11265	; 0x2c01
     dc4:	00000000 	andeq	r0, r0, r0
     dc8:	8c000000 	stchi	0, cr0, [r0], {-0}
     dcc:	01000000 	mrseq	r0, (UNDEF: 0)
     dd0:	000e8c9c 	muleq	lr, ip, ip
     dd4:	054e2600 	strbeq	r2, [lr, #-1536]	; 0x600
     dd8:	ec010000 	stc	0, cr0, [r1], {-0}
     ddc:	00071e02 	andeq	r1, r7, r2, lsl #28
     de0:	0003af00 	andeq	sl, r3, r0, lsl #30
     de4:	03952700 	orrseq	r2, r5, #0, 14
     de8:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
     dec:	00005302 	andeq	r5, r0, r2, lsl #6
     df0:	0003db00 	andeq	sp, r3, r0, lsl #22
     df4:	07422700 	strbeq	r2, [r2, -r0, lsl #14]
     df8:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
     dfc:	00005302 	andeq	r5, r0, r2, lsl #6
     e00:	00044300 	andeq	r4, r4, r0, lsl #6
     e04:	05b33000 	ldreq	r3, [r3, #0]!
     e08:	ef010000 	svc	0x00010000
     e0c:	000e8c02 	andeq	r8, lr, r2, lsl #24
     e10:	04030500 	streq	r0, [r3], #-1280	; 0x500
     e14:	2f200001 	svccs	0x00200001
     e18:	000009f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e1c:	5302f001 	movwpl	pc, #8193	; 0x2001	; <UNPREDICTABLE>
     e20:	01000000 	mrseq	r0, (UNDEF: 0)
     e24:	0000002b 	andeq	r0, r0, fp, lsr #32
     e28:	000a7000 	andeq	r7, sl, r0
     e2c:	00002b00 	andeq	r2, r0, r0, lsl #22
     e30:	14360000 	ldrtne	r0, [r6], #-0
     e34:	001e0000 	andseq	r0, lr, r0
     e38:	36000000 	strcc	r0, [r0], -r0
     e3c:	4a000014 	bmi	e94 <__Stack_Size+0xa94>
     e40:	1f00000e 	svcne	0x0000000e
     e44:	08025001 	stmdaeq	r2, {r0, ip, lr}
     e48:	001e0020 	andseq	r0, lr, r0, lsr #32
     e4c:	36000000 	strcc	r0, [r0], -r0
     e50:	5e000014 	mcrpl	0, 0, r0, cr0, cr4, {0}
     e54:	1f00000e 	svcne	0x0000000e
     e58:	75025001 	strvc	r5, [r2, #-1]
     e5c:	001e0000 	andseq	r0, lr, r0
     e60:	36000000 	strcc	r0, [r0], -r0
     e64:	72000014 	andvc	r0, r0, #20
     e68:	1f00000e 	svcne	0x0000000e
     e6c:	75025001 	strvc	r5, [r2, #-1]
     e70:	00200000 	eoreq	r0, r0, r0
     e74:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     e78:	1f00000b 	svcne	0x0000000b
     e7c:	76025101 	strvc	r5, [r2], -r1, lsl #2
     e80:	50011f00 	andpl	r1, r1, r0, lsl #30
     e84:	01040305 	tsteq	r4, r5, lsl #6
     e88:	00002000 	andeq	r2, r0, r0
     e8c:	00072434 	andeq	r2, r7, r4, lsr r4
     e90:	000e9c00 	andeq	r9, lr, r0, lsl #24
     e94:	01163500 	tsteq	r6, r0, lsl #10
     e98:	004f0000 	subeq	r0, pc, r0
     e9c:	0008ae23 	andeq	sl, r8, r3, lsr #28
     ea0:	03820100 	orreq	r0, r2, #0, 2
     ea4:	00000000 	andeq	r0, r0, r0
     ea8:	0000004c 	andeq	r0, r0, ip, asr #32
     eac:	0f3c9c01 	svceq	0x003c9c01
     eb0:	ab260000 	blge	980eb8 <__Stack_Size+0x980ab8>
     eb4:	01000007 	tsteq	r0, r7
     eb8:	00410382 	subeq	r0, r1, r2, lsl #7
     ebc:	046d0000 	strbteq	r0, [sp], #-0
     ec0:	001e0000 	andseq	r0, lr, r0
     ec4:	c6000000 	strgt	r0, [r0], -r0
     ec8:	d6000014 			; <UNDEFINED> instruction: 0xd6000014
     ecc:	1f00000e 	svcne	0x0000000e
     ed0:	75025001 	strvc	r5, [r2, #-1]
     ed4:	001e0000 	andseq	r0, lr, r0
     ed8:	86000000 	strhi	r0, [r0], -r0
     edc:	e900000a 	stmdb	r0, {r1, r3}
     ee0:	1f00000e 	svcne	0x0000000e
     ee4:	3a015001 	bcc	54ef0 <__Stack_Size+0x54af0>
     ee8:	00001e00 	andeq	r1, r0, r0, lsl #28
     eec:	14dd0000 	ldrbne	r0, [sp], #0
     ef0:	0f030000 	svceq	0x00030000
     ef4:	011f0000 	tsteq	pc, r0
     ef8:	00740251 	rsbseq	r0, r4, r1, asr r2
     efc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     f00:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
     f04:	00000000 	andeq	r0, r0, r0
     f08:	000014f9 	strdeq	r1, [r0], -r9
     f0c:	00000f23 	andeq	r0, r0, r3, lsr #30
     f10:	0152011f 	cmpeq	r2, pc, lsl r1
     f14:	51011f31 	tstpl	r1, r1, lsr pc
     f18:	05250a03 	streq	r0, [r5, #-2563]!	; 0xa03
     f1c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     f20:	2c000075 	stccs	0, cr0, [r0], {117}	; 0x75
     f24:	00000000 	andeq	r0, r0, r0
     f28:	00001514 	andeq	r1, r0, r4, lsl r5
     f2c:	0151011f 	cmpeq	r1, pc, lsl r1
     f30:	50011f31 	andpl	r1, r1, r1, lsr pc
     f34:	44000c05 	strmi	r0, [r0], #-3077	; 0xc05
     f38:	00004000 	andeq	r4, r0, r0
     f3c:	00053c23 	andeq	r3, r5, r3, lsr #24
     f40:	03ac0100 			; <UNDEFINED> instruction: 0x03ac0100
     f44:	08000190 	stmdaeq	r0, {r4, r7, r8}
     f48:	000000a8 	andeq	r0, r0, r8, lsr #1
     f4c:	10bb9c01 	adcsne	r9, fp, r1, lsl #24
     f50:	0a310000 	beq	c40f58 <__Stack_Size+0xc40b58>
     f54:	2e080002 	cdpcs	0, 0, cr0, cr8, cr2, {0}
     f58:	a5000000 	strge	r0, [r0, #-0]
     f5c:	3000000f 	andcc	r0, r0, pc
     f60:	0000056c 	andeq	r0, r0, ip, ror #10
     f64:	3f03eb01 	svccc	0x0003eb01
     f68:	02000005 	andeq	r0, r0, #5
     f6c:	241e7491 	ldrcs	r7, [lr], #-1169	; 0x491
     f70:	2a080002 	bcs	200f80 <__Stack_Size+0x200b80>
     f74:	8b000015 	blhi	fd0 <__Stack_Size+0xbd0>
     f78:	1f00000f 	svcne	0x0000000f
     f7c:	7d025101 	stfvcs	f5, [r2, #-4]
     f80:	50011f04 	andpl	r1, r1, r4, lsl #30
     f84:	0c000c05 	stceq	12, cr0, [r0], {5}
     f88:	20004001 	andcs	r4, r0, r1
     f8c:	0800022c 	stmdaeq	r0, {r2, r3, r5, r9}
     f90:	000014aa 	andeq	r1, r0, sl, lsr #9
     f94:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
     f98:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
     f9c:	000c0550 	andeq	r0, ip, r0, asr r5
     fa0:	0040010c 	subeq	r0, r0, ip, lsl #2
     fa4:	01962b00 	orrseq	r2, r6, r0, lsl #22
     fa8:	15460800 	strbne	r0, [r6, #-2048]	; 0x800
     fac:	9e1e0000 	cdpls	0, 1, cr0, cr14, cr0, {0}
     fb0:	4d080001 	stcmi	0, cr0, [r8, #-4]
     fb4:	c3000015 	movwgt	r0, #21
     fb8:	1f00000f 	svcne	0x0000000f
     fbc:	40035001 	andmi	r5, r3, r1
     fc0:	2b00243c 	blcs	a0b8 <__Stack_Size+0x9cb8>
     fc4:	080001a2 	stmdaeq	r0, {r1, r5, r7, r8}
     fc8:	0000155e 	andeq	r1, r0, lr, asr r5
     fcc:	0001b61e 	andeq	fp, r1, lr, lsl r6
     fd0:	00156908 	andseq	r6, r5, r8, lsl #18
     fd4:	000fe600 	andeq	lr, pc, r0, lsl #12
     fd8:	51011f00 	tstpl	r1, r0, lsl #30
     fdc:	011f3101 	tsteq	pc, r1, lsl #2
     fe0:	1d0a0350 	stcne	3, cr0, [sl, #-320]	; 0xfffffec0
     fe4:	be1e0040 	cdplt	0, 1, cr0, cr14, cr0, {2}
     fe8:	80080001 	andhi	r0, r8, r1
     fec:	f9000015 			; <UNDEFINED> instruction: 0xf9000015
     ff0:	1f00000f 	svcne	0x0000000f
     ff4:	40015001 	andmi	r5, r1, r1
     ff8:	01c41e00 	biceq	r1, r4, r0, lsl #28
     ffc:	15910800 	ldrne	r0, [r1, #2048]	; 0x800
    1000:	100c0000 	andne	r0, ip, r0
    1004:	011f0000 	tsteq	pc, r0
    1008:	00320150 	eorseq	r0, r2, r0, asr r1
    100c:	0001ca1e 	andeq	ip, r1, lr, lsl sl
    1010:	0015a208 	andseq	sl, r5, r8, lsl #4
    1014:	00101f00 	andseq	r1, r0, r0, lsl #30
    1018:	50011f00 	andpl	r1, r1, r0, lsl #30
    101c:	1e003001 	cdpne	0, 0, cr3, cr0, cr1, {0}
    1020:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
    1024:	000015b4 			; <UNDEFINED> instruction: 0x000015b4
    1028:	00001032 	andeq	r1, r0, r2, lsr r0
    102c:	0150011f 	cmpeq	r0, pc, lsl r1
    1030:	d81e0030 	ldmdale	lr, {r4, r5}
    1034:	c6080001 	strgt	r0, [r8], -r1
    1038:	47000015 	smladmi	r0, r5, r0, r0
    103c:	1f000010 	svcne	0x00000010
    1040:	0a035001 	beq	d504c <__Stack_Size+0xd4c4c>
    1044:	1e000400 	cfcpysne	mvf0, mvf0
    1048:	080001e4 	stmdaeq	r0, {r2, r5, r6, r7, r8}
    104c:	000015d8 	ldrdeq	r1, [r0], -r8
    1050:	00001063 	andeq	r1, r0, r3, rrx
    1054:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
    1058:	1f24404c 	svcne	0x0024404c
    105c:	40035001 	andmi	r5, r3, r1
    1060:	1e00243c 	cfmvdhrne	mvd0, r2
    1064:	080001ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8}
    1068:	000015ef 	andeq	r1, r0, pc, ror #11
    106c:	00001077 	andeq	r1, r0, r7, ror r0
    1070:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    1074:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    1078:	080001f0 	stmdaeq	r0, {r4, r5, r6, r7, r8}
    107c:	00001601 	andeq	r1, r0, r1, lsl #12
    1080:	0000108b 	andeq	r1, r0, fp, lsl #1
    1084:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    1088:	1e003908 	cdpne	9, 0, cr3, cr0, cr8, {0}
    108c:	080001fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8}
    1090:	00001617 	andeq	r1, r0, r7, lsl r6
    1094:	0000109e 	muleq	r0, lr, r0
    1098:	0150011f 	cmpeq	r0, pc, lsl r1
    109c:	001e0032 	andseq	r0, lr, r2, lsr r0
    10a0:	29080002 	stmdbcs	r8, {r1}
    10a4:	b1000016 	tstlt	r0, r6, lsl r0
    10a8:	1f000010 	svcne	0x00000010
    10ac:	30015001 	andcc	r5, r1, r1
    10b0:	02042b00 	andeq	r2, r4, #0, 22
    10b4:	163b0800 	ldrtne	r0, [fp], -r0, lsl #16
    10b8:	36000000 	strcc	r0, [r0], -r0
    10bc:	00000a8f 	andeq	r0, r0, pc, lsl #21
    10c0:	072b8b01 	streq	r8, [fp, -r1, lsl #22]!
    10c4:	02380000 	eorseq	r0, r8, #0
    10c8:	00060800 	andeq	r0, r6, r0, lsl #16
    10cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    10d0:	000010f4 	strdeq	r1, [r0], -r4
    10d4:	0008dd37 	andeq	sp, r8, r7, lsr sp
    10d8:	a7cd0100 	strbge	r0, [sp, r0, lsl #2]
    10dc:	37000006 	strcc	r0, [r0, -r6]
    10e0:	00000107 	andeq	r0, r0, r7, lsl #2
    10e4:	0041ce01 	subeq	ip, r1, r1, lsl #28
    10e8:	3e2b0000 	cdpcc	0, 2, cr0, cr11, cr0, {0}
    10ec:	3c080002 	stccc	0, cr0, [r8], {2}
    10f0:	0000000f 	andeq	r0, r0, pc
    10f4:	00097e23 	andeq	r7, r9, r3, lsr #28
    10f8:	04080100 	streq	r0, [r8], #-256	; 0x100
    10fc:	00000000 	andeq	r0, r0, r0
    1100:	00000074 	andeq	r0, r0, r4, ror r0
    1104:	11b29c01 			; <UNDEFINED> instruction: 0x11b29c01
    1108:	6c300000 	ldcvs	0, cr0, [r0], #-0
    110c:	01000005 	tsteq	r0, r5
    1110:	053f040a 	ldreq	r0, [pc, #-1034]!	; d0e <__Stack_Size+0x90e>
    1114:	91020000 	mrsls	r0, (UNDEF: 2)
    1118:	00001e64 	andeq	r1, r0, r4, ror #28
    111c:	152a0000 	strne	r0, [sl, #-0]!
    1120:	11330000 	teqne	r3, r0
    1124:	011f0000 	tsteq	pc, r0
    1128:	047d0251 	ldrbteq	r0, [sp], #-593	; 0x251
    112c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    1130:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    1134:	00000000 	andeq	r0, r0, r0
    1138:	000014aa 	andeq	r1, r0, sl, lsr #9
    113c:	0000114d 	andeq	r1, r0, sp, asr #2
    1140:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    1144:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    1148:	00740250 	rsbseq	r0, r4, r0, asr r2
    114c:	00001e00 	andeq	r1, r0, r0, lsl #28
    1150:	152a0000 	strne	r0, [sl, #-0]!
    1154:	11670000 	cmnne	r7, r0
    1158:	011f0000 	tsteq	pc, r0
    115c:	047d0251 	ldrbteq	r0, [sp], #-593	; 0x251
    1160:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    1164:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    1168:	00000000 	andeq	r0, r0, r0
    116c:	0000152a 	andeq	r1, r0, sl, lsr #10
    1170:	00001181 	andeq	r1, r0, r1, lsl #3
    1174:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    1178:	011f047d 	tsteq	pc, sp, ror r4	; <UNPREDICTABLE>
    117c:	00740250 	rsbseq	r0, r4, r0, asr r2
    1180:	00001e00 	andeq	r1, r0, r0, lsl #28
    1184:	14aa0000 	strtne	r0, [sl], #0
    1188:	119b0000 	orrsne	r0, fp, r0
    118c:	011f0000 	tsteq	pc, r0
    1190:	00760251 	rsbseq	r0, r6, r1, asr r2
    1194:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    1198:	20000074 	andcs	r0, r0, r4, ror r0
    119c:	00000000 	andeq	r0, r0, r0
    11a0:	00001647 	andeq	r1, r0, r7, asr #12
    11a4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    11a8:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
    11ac:	00740250 	rsbseq	r0, r4, r0, asr r2
    11b0:	f1230000 			; <UNDEFINED> instruction: 0xf1230000
    11b4:	01000008 	tsteq	r0, r8
    11b8:	0000043f 	andeq	r0, r0, pc, lsr r4
    11bc:	00640000 	rsbeq	r0, r4, r0
    11c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    11c4:	0000123f 	andeq	r1, r0, pc, lsr r2
    11c8:	00046430 	andeq	r6, r4, r0, lsr r4
    11cc:	04410100 	strbeq	r0, [r1], #-256	; 0x100
    11d0:	00000598 	muleq	r0, r8, r5
    11d4:	1e6c9102 	lgnnee	f1, f2
    11d8:	00000000 	andeq	r0, r0, r0
    11dc:	0000165d 	andeq	r1, r0, sp, asr r6
    11e0:	000011f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    11e4:	0151011f 	cmpeq	r1, pc, lsl r1
    11e8:	50011f30 	andpl	r1, r1, r0, lsr pc
    11ec:	24474003 	strbcs	r4, [r7], #-3
    11f0:	00001e00 	andeq	r1, r0, r0, lsl #28
    11f4:	16740000 	ldrbtne	r0, [r4], -r0
    11f8:	12060000 	andne	r0, r6, #0
    11fc:	011f0000 	tsteq	pc, r0
    1200:	000a0350 	andeq	r0, sl, r0, asr r3
    1204:	001e0005 	andseq	r0, lr, r5
    1208:	85000000 	strhi	r0, [r0, #-0]
    120c:	1a000016 	bne	126c <__Stack_Size+0xe6c>
    1210:	1f000012 	svcne	0x00000012
    1214:	7d025001 	stcvc	0, cr5, [r2, #-4]
    1218:	001e0004 	andseq	r0, lr, r4
    121c:	85000000 	strhi	r0, [r0, #-0]
    1220:	2e000016 	mcrcs	0, 0, r0, cr0, cr6, {0}
    1224:	1f000012 	svcne	0x00000012
    1228:	7d025001 	stcvc	0, cr5, [r2, #-4]
    122c:	00200004 	eoreq	r0, r0, r4
    1230:	85000000 	strhi	r0, [r0, #-0]
    1234:	1f000016 	svcne	0x00000016
    1238:	7d025001 	stcvc	0, cr5, [r2, #-4]
    123c:	38000004 	stmdacc	r0, {r2}
    1240:	00000b1b 	andeq	r0, r0, fp, lsl fp
    1244:	010b3401 	tsteq	fp, r1, lsl #8
    1248:	03050000 	movweq	r0, #20480	; 0x5000
    124c:	20000180 	andcs	r0, r0, r0, lsl #3
    1250:	00043d38 	andeq	r3, r4, r8, lsr sp
    1254:	44350100 	ldrtmi	r0, [r5], #-256	; 0x100
    1258:	05000006 	streq	r0, [r0, #-6]
    125c:	0001e003 	andeq	lr, r1, r3
    1260:	00653420 	rsbeq	r3, r5, r0, lsr #8
    1264:	12720000 	rsbsne	r0, r2, #0
    1268:	16390000 	ldrtne	r0, [r9], -r0
    126c:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    1270:	29380003 	ldmdbcs	r8!, {r0, r1}
    1274:	01000000 	mrseq	r0, (UNDEF: 0)
    1278:	00128337 	andseq	r8, r2, r7, lsr r3
    127c:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    1280:	05200001 	streq	r0, [r0, #-1]!
    1284:	00001261 	andeq	r1, r0, r1, ror #4
    1288:	0004c738 	andeq	ip, r4, r8, lsr r7
    128c:	99380100 	ldmdbls	r8!, {r8}
    1290:	05000012 	streq	r0, [r0, #-18]
    1294:	0001dc03 	andeq	sp, r1, r3, lsl #24
    1298:	00530520 	subseq	r0, r3, r0, lsr #10
    129c:	3e380000 	cdpcc	0, 3, cr0, cr8, cr0, {0}
    12a0:	01000003 	tsteq	r0, r3
    12a4:	00129938 	andseq	r9, r2, r8, lsr r9
    12a8:	88030500 	stmdahi	r3, {r8, sl}
    12ac:	34200001 	strtcc	r0, [r0], #-1
    12b0:	00000724 	andeq	r0, r0, r4, lsr #14
    12b4:	000012bf 			; <UNDEFINED> instruction: 0x000012bf
    12b8:	00011635 	andeq	r1, r1, r5, lsr r6
    12bc:	38005000 	stmdacc	r0, {ip, lr}
    12c0:	0000029c 	muleq	r0, ip, r2
    12c4:	12af3a01 	adcne	r3, pc, #4096	; 0x1000
    12c8:	03050000 	movweq	r0, #20480	; 0x5000
    12cc:	2000018a 	andcs	r0, r0, sl, lsl #3
    12d0:	00018238 	andeq	r8, r1, r8, lsr r2
    12d4:	763c0100 	ldrtvc	r0, [ip], -r0, lsl #2
    12d8:	05000000 	streq	r0, [r0, #-0]
    12dc:	00018403 	andeq	r8, r1, r3, lsl #8
    12e0:	050e3820 	streq	r3, [lr, #-2080]	; 0x820
    12e4:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    12e8:	00000041 	andeq	r0, r0, r1, asr #32
    12ec:	01540305 	cmpeq	r4, r5, lsl #6
    12f0:	43382000 	teqmi	r8, #0
    12f4:	01000000 	mrseq	r0, (UNDEF: 0)
    12f8:	00007668 	andeq	r7, r0, r8, ror #12
    12fc:	e4030500 	str	r0, [r3], #-1280	; 0x500
    1300:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
    1304:	00000281 	andeq	r0, r0, r1, lsl #5
    1308:	00766c01 	rsbseq	r6, r6, r1, lsl #24
    130c:	03050000 	movweq	r0, #20480	; 0x5000
    1310:	200000ec 	andcs	r0, r0, ip, ror #1
    1314:	00013238 	andeq	r3, r1, r8, lsr r2
    1318:	766c0100 	strbtvc	r0, [ip], -r0, lsl #2
    131c:	05000000 	streq	r0, [r0, #-0]
    1320:	0000f803 	andeq	pc, r0, r3, lsl #16
    1324:	07903820 	ldreq	r3, [r0, r0, lsr #16]
    1328:	6c010000 	stcvs	0, cr0, [r1], {-0}
    132c:	00000076 	andeq	r0, r0, r6, ror r0
    1330:	01000305 	tsteq	r0, r5, lsl #6
    1334:	34382000 	ldrtcc	r2, [r8], #-0
    1338:	0100000a 	tsteq	r0, sl
    133c:	0000766d 	andeq	r7, r0, sp, ror #12
    1340:	f4030500 	vst3.8	{d0,d2,d4}, [r3], r0
    1344:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
    1348:	0000075c 	andeq	r0, r0, ip, asr r7
    134c:	00766e01 	rsbseq	r6, r6, r1, lsl #28
    1350:	03050000 	movweq	r0, #20480	; 0x5000
    1354:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
    1358:	00041138 	andeq	r1, r4, r8, lsr r1
    135c:	ab780100 	blge	1e01764 <__Stack_Size+0x1e01364>
    1360:	05000000 	streq	r0, [r0, #-0]
    1364:	0000fc03 	andeq	pc, r0, r3, lsl #24
    1368:	055e3820 	ldrbeq	r3, [lr, #-2080]	; 0x820
    136c:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    1370:	000000ab 	andeq	r0, r0, fp, lsr #1
    1374:	00000305 	andeq	r0, r0, r5, lsl #6
    1378:	0f3a2000 	svceq	0x003a2000
    137c:	01000003 	tsteq	r0, r3
    1380:	00138580 	andseq	r8, r3, r0, lsl #11
    1384:	00410500 	subeq	r0, r1, r0, lsl #10
    1388:	413b0000 	teqmi	fp, r0
    138c:	01000007 	tsteq	r0, r7
    1390:	006501c3 	rsbeq	r0, r5, r3, asr #3
    1394:	03050000 	movweq	r0, #20480	; 0x5000
    1398:	200000e8 	andcs	r0, r0, r8, ror #1
    139c:	0007d73c 	andeq	sp, r7, ip, lsr r7
    13a0:	01c50100 	biceq	r0, r5, r0, lsl #2
    13a4:	00001299 	muleq	r0, r9, r2
    13a8:	00006534 	andeq	r6, r0, r4, lsr r5
    13ac:	0013b800 	andseq	fp, r3, r0, lsl #16
    13b0:	01163500 	tsteq	r6, r0, lsl #10
    13b4:	003f0000 	eorseq	r0, pc, r0
    13b8:	0009e23c 	andeq	lr, r9, ip, lsr r2
    13bc:	01c60100 	biceq	r0, r6, r0, lsl #2
    13c0:	000013a8 	andeq	r1, r0, r8, lsr #7
    13c4:	000b0a3d 	andeq	r0, fp, sp, lsr sl
    13c8:	02a40700 	adceq	r0, r4, #0, 14
    13cc:	000013db 	ldrdeq	r1, [r0], -fp
    13d0:	0013db3e 	andseq	sp, r3, lr, lsr fp
    13d4:	13e13e00 	mvnne	r3, #0, 28
    13d8:	10000000 	andne	r0, r0, r0
    13dc:	00039f04 	andeq	r9, r3, r4, lsl #30
    13e0:	e8041000 	stmda	r4, {ip}
    13e4:	3d000005 	stccc	0, cr0, [r0, #-20]	; 0xffffffec
    13e8:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    13ec:	0302c007 	movweq	ip, #8199	; 0x2007
    13f0:	3e000014 	mcrcc	0, 0, r0, cr0, cr4, {0}
    13f4:	000013db 	ldrdeq	r1, [r0], -fp
    13f8:	0000533e 	andeq	r5, r0, lr, lsr r3
    13fc:	00533e00 	subseq	r3, r3, r0, lsl #28
    1400:	3d000000 	stccc	0, cr0, [r0, #-0]
    1404:	0000021d 	andeq	r0, r0, sp, lsl r2
    1408:	1a02fc07 	bne	c042c <__Stack_Size+0xc002c>
    140c:	3e000014 	mcrcc	0, 0, r0, cr0, cr4, {0}
    1410:	000013db 	ldrdeq	r1, [r0], -fp
    1414:	0000533e 	andeq	r5, r0, lr, lsr r3
    1418:	703d0000 	eorsvc	r0, sp, r0
    141c:	07000007 	streq	r0, [r0, -r7]
    1420:	143602b2 	ldrtne	r0, [r6], #-690	; 0x2b2
    1424:	db3e0000 	blle	f8142c <__Stack_Size+0xf8102c>
    1428:	3e000013 	mcrcc	0, 0, r0, cr0, cr3, {0}
    142c:	00000053 	andeq	r0, r0, r3, asr r0
    1430:	0000eb3e 	andeq	lr, r0, lr, lsr fp
    1434:	fb3f0000 	blx	fc143e <__Stack_Size+0xfc103e>
    1438:	01000009 	tsteq	r0, r9
    143c:	0014475e 	andseq	r4, r4, lr, asr r7
    1440:	00653e00 	rsbeq	r3, r5, r0, lsl #28
    1444:	3f000000 	svccc	0x00000000
    1448:	0000077d 	andeq	r0, r0, sp, ror r7
    144c:	14583909 	ldrbne	r3, [r8], #-2313	; 0x909
    1450:	413e0000 	teqmi	lr, r0
    1454:	00000000 	andeq	r0, r0, r0
    1458:	0003d640 	andeq	sp, r3, r0, asr #12
    145c:	3fb80400 	svccc	0x00b80400
    1460:	000001a9 	andeq	r0, r0, r9, lsr #3
    1464:	1470c904 	ldrbtne	ip, [r0], #-2308	; 0x904
    1468:	533e0000 	teqpl	lr, #0
    146c:	00000000 	andeq	r0, r0, r0
    1470:	000a9441 	andeq	r9, sl, r1, asr #8
    1474:	9cba0400 	cfldrsls	mvf0, [sl]
    1478:	85000004 	strhi	r0, [r0, #-4]
    147c:	3e000014 	mcrcc	0, 0, r0, cr0, cr4, {0}
    1480:	00000041 	andeq	r0, r0, r1, asr #32
    1484:	052c4000 	streq	r4, [ip, #-0]!
    1488:	b9040000 	stmdblt	r4, {}	; <UNPREDICTABLE>
    148c:	0004263d 	andeq	r2, r4, sp, lsr r6
    1490:	02b00700 	adcseq	r0, r0, #0, 14
    1494:	000014a3 	andeq	r1, r0, r3, lsr #9
    1498:	0013db3e 	andseq	sp, r3, lr, lsr fp
    149c:	00eb3e00 	rsceq	r3, fp, r0, lsl #28
    14a0:	40000000 	andmi	r0, r0, r0
    14a4:	0000082b 	andeq	r0, r0, fp, lsr #16
    14a8:	a83f480a 	ldmdage	pc!, {r1, r3, fp, lr}	; <UNPREDICTABLE>
    14ac:	05000002 	streq	r0, [r0, #-2]
    14b0:	0014c0e1 	andseq	ip, r4, r1, ror #1
    14b4:	14c03e00 	strbne	r3, [r0], #3584	; 0xe00
    14b8:	533e0000 	teqpl	lr, #0
    14bc:	00000000 	andeq	r0, r0, r0
    14c0:	01820410 	orreq	r0, r2, r0, lsl r4
    14c4:	d03f0000 	eorsle	r0, pc, r0
    14c8:	08000008 	stmdaeq	r0, {r3}
    14cc:	0014d7df 			; <UNDEFINED> instruction: 0x0014d7df
    14d0:	14d73e00 	ldrbne	r3, [r7], #3584	; 0xe00
    14d4:	10000000 	andne	r0, r0, r0
    14d8:	00046904 	andeq	r6, r4, r4, lsl #18
    14dc:	00f03f00 	rscseq	r3, r0, r0, lsl #30
    14e0:	e0080000 	and	r0, r8, r0
    14e4:	000014f3 	strdeq	r1, [r0], -r3
    14e8:	0014d73e 	andseq	sp, r4, lr, lsr r7
    14ec:	14f33e00 	ldrbtne	r3, [r3], #3584	; 0xe00
    14f0:	10000000 	andne	r0, r0, r0
    14f4:	00064404 	andeq	r4, r6, r4, lsl #8
    14f8:	03003f00 	movweq	r3, #3840	; 0xf00
    14fc:	e5080000 	str	r0, [r8, #-0]
    1500:	00001514 	andeq	r1, r0, r4, lsl r5
    1504:	0014d73e 	andseq	sp, r4, lr, lsr r7
    1508:	00533e00 	subseq	r3, r3, r0, lsl #28
    150c:	eb3e0000 	bl	f81514 <__Stack_Size+0xf81114>
    1510:	00000000 	andeq	r0, r0, r0
    1514:	0001e03f 	andeq	lr, r1, pc, lsr r0
    1518:	2ae40800 	bcs	ff903520 <SCS_BASE+0x1f8f5520>
    151c:	3e000015 	mcrcc	0, 0, r0, cr0, cr5, {0}
    1520:	000014d7 	ldrdeq	r1, [r0], -r7
    1524:	0000eb3e 	andeq	lr, r0, lr, lsr fp
    1528:	683f0000 	ldmdavs	pc!, {}	; <UNPREDICTABLE>
    152c:	05000001 	streq	r0, [r0, #-1]
    1530:	001540db 	ldrsbeq	r4, [r5], -fp
    1534:	14c03e00 	strbne	r3, [r0], #3584	; 0xe00
    1538:	403e0000 	eorsmi	r0, lr, r0
    153c:	00000015 	andeq	r0, r0, r5, lsl r0
    1540:	053f0410 	ldreq	r0, [pc, #-1040]!	; 1138 <__Stack_Size+0xd38>
    1544:	38400000 	stmdacc	r0, {}^	; <UNPREDICTABLE>
    1548:	0b000000 	bleq	1550 <__Stack_Size+0x1150>
    154c:	04e63ffd 	strbteq	r3, [r6], #4093	; 0xffd
    1550:	fe0b0000 	cdp2	0, 0, cr0, cr11, cr0, {0}
    1554:	0000155e 	andeq	r1, r0, lr, asr r5
    1558:	0000413e 	andeq	r4, r0, lr, lsr r1
    155c:	be420000 	cdplt	0, 4, cr0, cr2, cr0, {0}
    1560:	0b000001 	bleq	156c <__Stack_Size+0x116c>
    1564:	00010bff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
    1568:	09cb3d00 	stmibeq	fp, {r8, sl, fp, ip, sp}^
    156c:	120b0000 	andne	r0, fp, #0
    1570:	00158001 	andseq	r8, r5, r1
    1574:	00413e00 	subeq	r3, r1, r0, lsl #28
    1578:	eb3e0000 	bl	f81580 <__Stack_Size+0xf81180>
    157c:	00000000 	andeq	r0, r0, r0
    1580:	0001503f 	andeq	r5, r1, pc, lsr r0
    1584:	91b50400 			; <UNDEFINED> instruction: 0x91b50400
    1588:	3e000015 	mcrcc	0, 0, r0, cr0, cr5, {0}
    158c:	00000041 	andeq	r0, r0, r1, asr #32
    1590:	06483f00 	strbeq	r3, [r8], -r0, lsl #30
    1594:	b3040000 	movwlt	r0, #16384	; 0x4000
    1598:	000015a2 	andeq	r1, r0, r2, lsr #11
    159c:	0000413e 	andeq	r4, r0, lr, lsr r1
    15a0:	9e3d0000 	cdpls	0, 3, cr0, cr13, cr0, {0}
    15a4:	0b000005 	bleq	15c0 <__Stack_Size+0x11c0>
    15a8:	15b40106 	ldrne	r0, [r4, #262]!	; 0x106
    15ac:	413e0000 	teqmi	lr, r0
    15b0:	00000000 	andeq	r0, r0, r0
    15b4:	0001723d 	andeq	r7, r1, sp, lsr r2
    15b8:	01080b00 	tsteq	r8, r0, lsl #22
    15bc:	000015c6 	andeq	r1, r0, r6, asr #11
    15c0:	0000413e 	andeq	r4, r0, lr, lsr r1
    15c4:	dd3d0000 	ldcle	0, cr0, [sp, #-0]
    15c8:	0b000005 	bleq	15e4 <__Stack_Size+0x11e4>
    15cc:	15d80107 	ldrbne	r0, [r8, #263]	; 0x107
    15d0:	413e0000 	teqmi	lr, r0
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	0001133d 	andeq	r1, r1, sp, lsr r3
    15dc:	01020b00 	tsteq	r2, r0, lsl #22
    15e0:	000015ef 	andeq	r1, r0, pc, ror #11
    15e4:	0000413e 	andeq	r4, r0, lr, lsr r1
    15e8:	00413e00 	subeq	r3, r1, r0, lsl #28
    15ec:	3d000000 	stccc	0, cr0, [r0, #-0]
    15f0:	00000a07 	andeq	r0, r0, r7, lsl #20
    15f4:	0101030b 	tsteq	r1, fp, lsl #6
    15f8:	3e000016 	mcrcc	0, 0, r0, cr0, cr6, {0}
    15fc:	000000eb 	andeq	r0, r0, fp, ror #1
    1600:	06774300 	ldrbteq	r4, [r7], -r0, lsl #6
    1604:	190b0000 	stmdbne	fp, {}	; <UNPREDICTABLE>
    1608:	0000cb01 	andeq	ip, r0, r1, lsl #22
    160c:	00161700 	andseq	r1, r6, r0, lsl #14
    1610:	00653e00 	rsbeq	r3, r5, r0, lsl #28
    1614:	3d000000 	stccc	0, cr0, [r0, #-0]
    1618:	00000018 	andeq	r0, r0, r8, lsl r0
    161c:	2901040b 	stmdbcs	r1, {r0, r1, r3, sl}
    1620:	3e000016 	mcrcc	0, 0, r0, cr0, cr6, {0}
    1624:	00000041 	andeq	r0, r0, r1, asr #32
    1628:	06663d00 	strbteq	r3, [r6], -r0, lsl #26
    162c:	0a0b0000 	beq	2c1634 <__Stack_Size+0x2c1234>
    1630:	00163b01 	andseq	r3, r6, r1, lsl #22
    1634:	00413e00 	subeq	r3, r1, r0, lsl #28
    1638:	44000000 	strmi	r0, [r0], #-0
    163c:	000007e2 	andeq	r0, r0, r2, ror #15
    1640:	6501050b 	strvs	r0, [r1, #-1291]	; 0x50b
    1644:	3f000000 	svccc	0x00000000
    1648:	00000626 	andeq	r0, r0, r6, lsr #12
    164c:	165de205 	ldrbne	lr, [sp], -r5, lsl #4
    1650:	c03e0000 	eorsgt	r0, lr, r0
    1654:	3e000014 	mcrcc	0, 0, r0, cr0, cr4, {0}
    1658:	00000053 	andeq	r0, r0, r3, asr r0
    165c:	049d3d00 	ldreq	r3, [sp], #3328	; 0xd00
    1660:	0f060000 	svceq	0x00060000
    1664:	00167401 	andseq	r7, r6, r1, lsl #8
    1668:	00413e00 	subeq	r3, r1, r0, lsl #28
    166c:	413e0000 	teqmi	lr, r0
    1670:	00000000 	andeq	r0, r0, r0
    1674:	000a493f 	andeq	r4, sl, pc, lsr r9
    1678:	85ff0600 	ldrbhi	r0, [pc, #1536]!	; 1c80 <__Stack_Size+0x1880>
    167c:	3e000016 	mcrcc	0, 0, r0, cr0, cr6, {0}
    1680:	00000041 	andeq	r0, r0, r1, asr #32
    1684:	05ed3d00 	strbeq	r3, [sp, #3328]!	; 0xd00
    1688:	00060000 	andeq	r0, r6, r0
    168c:	00169701 	andseq	r9, r6, r1, lsl #14
    1690:	16973e00 	ldrne	r3, [r7], r0, lsl #28
    1694:	10000000 	andne	r0, r0, r0
    1698:	00059804 	andeq	r9, r5, r4, lsl #16
    169c:	09230000 	stmdbeq	r3!, {}	; <UNPREDICTABLE>
    16a0:	00040000 	andeq	r0, r4, r0
    16a4:	00000402 	andeq	r0, r0, r2, lsl #8
    16a8:	02c10104 	sbceq	r0, r1, #4, 2
    16ac:	6a010000 	bvs	416b4 <__Stack_Size+0x412b4>
    16b0:	9a00000b 	bls	16e4 <__Stack_Size+0x12e4>
    16b4:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    16b8:	00000000 	andeq	r0, r0, r0
    16bc:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    16c0:	02000004 	andeq	r0, r0, #4
    16c4:	071d0504 	ldreq	r0, [sp, -r4, lsl #10]
    16c8:	02020000 	andeq	r0, r2, #0
    16cc:	0006ef05 	andeq	lr, r6, r5, lsl #30
    16d0:	06010200 	streq	r0, [r1], -r0, lsl #4
    16d4:	0000088c 	andeq	r0, r0, ip, lsl #17
    16d8:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    16dc:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    16e0:	02000000 	andeq	r0, r0, #0
    16e4:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    16e8:	75030000 	strvc	r0, [r3, #-0]
    16ec:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    16f0:	00005728 	andeq	r5, r0, r8, lsr #14
    16f4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    16f8:	00000a73 	andeq	r0, r0, r3, ror sl
    16fc:	00387503 	eorseq	r7, r8, r3, lsl #10
    1700:	00682902 	rsbeq	r2, r8, r2, lsl #18
    1704:	01020000 	mrseq	r0, (UNDEF: 2)
    1708:	00088a08 	andeq	r8, r8, r8, lsl #20
    170c:	03a70400 			; <UNDEFINED> instruction: 0x03a70400
    1710:	2f020000 	svccs	0x00020000
    1714:	0000007a 	andeq	r0, r0, sl, ror r0
    1718:	00004505 	andeq	r4, r0, r5, lsl #10
    171c:	02300400 	eorseq	r0, r0, #0, 8
    1720:	30020000 	andcc	r0, r2, r0
    1724:	0000008a 	andeq	r0, r0, sl, lsl #1
    1728:	00005705 	andeq	r5, r0, r5, lsl #14
    172c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1730:	00000810 	andeq	r0, r0, r0, lsl r8
    1734:	0b035006 	bleq	d5754 <__Stack_Size+0xd5354>
    1738:	0002a702 	andeq	sl, r2, r2, lsl #14
    173c:	52430700 	subpl	r0, r3, #0, 14
    1740:	0d030031 	stceq	0, cr0, [r3, #-196]	; 0xffffff3c
    1744:	00007f02 	andeq	r7, r0, r2, lsl #30
    1748:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    174c:	03000006 	movweq	r0, #6
    1750:	004c020e 	subeq	r0, ip, lr, lsl #4
    1754:	07020000 	streq	r0, [r2, -r0]
    1758:	00325243 	eorseq	r5, r2, r3, asr #4
    175c:	7f020f03 	svcvc	0x00020f03
    1760:	04000000 	streq	r0, [r0], #-0
    1764:	0006b308 	andeq	fp, r6, r8, lsl #6
    1768:	02100300 	andseq	r0, r0, #0, 6
    176c:	0000004c 	andeq	r0, r0, ip, asr #32
    1770:	04e10806 	strbteq	r0, [r1], #2054	; 0x806
    1774:	11030000 	mrsne	r0, (UNDEF: 3)
    1778:	00007f02 	andeq	r7, r0, r2, lsl #30
    177c:	bd080800 	stclt	8, cr0, [r8, #-0]
    1780:	03000006 	movweq	r0, #6
    1784:	004c0212 	subeq	r0, ip, r2, lsl r2
    1788:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    178c:	000003c5 	andeq	r0, r0, r5, asr #7
    1790:	7f021303 	svcvc	0x00021303
    1794:	0c000000 	stceq	0, cr0, [r0], {-0}
    1798:	0006c708 	andeq	ip, r6, r8, lsl #14
    179c:	02140300 	andseq	r0, r4, #0, 6
    17a0:	0000004c 	andeq	r0, r0, ip, asr #32
    17a4:	5253070e 	subspl	r0, r3, #3670016	; 0x380000
    17a8:	02150300 	andseq	r0, r5, #0, 6
    17ac:	0000007f 	andeq	r0, r0, pc, ror r0
    17b0:	06d10810 			; <UNDEFINED> instruction: 0x06d10810
    17b4:	16030000 	strne	r0, [r3], -r0
    17b8:	00004c02 	andeq	r4, r0, r2, lsl #24
    17bc:	45071200 	strmi	r1, [r7, #-512]	; 0x200
    17c0:	03005247 	movweq	r5, #583	; 0x247
    17c4:	007f0217 	rsbseq	r0, pc, r7, lsl r2	; <UNPREDICTABLE>
    17c8:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    17cc:	000006db 	ldrdeq	r0, [r0], -fp
    17d0:	4c021803 	stcmi	8, cr1, [r2], {3}
    17d4:	16000000 	strne	r0, [r0], -r0
    17d8:	00026408 	andeq	r6, r2, r8, lsl #8
    17dc:	02190300 	andseq	r0, r9, #0, 6
    17e0:	0000007f 	andeq	r0, r0, pc, ror r0
    17e4:	06e50818 	usateq	r0, #5, r8, lsl #16
    17e8:	1a030000 	bne	c17f0 <__Stack_Size+0xc13f0>
    17ec:	00004c02 	andeq	r4, r0, r2, lsl #24
    17f0:	6a081a00 	bvs	207ff8 <__Stack_Size+0x207bf8>
    17f4:	03000002 	movweq	r0, #2
    17f8:	007f021b 	rsbseq	r0, pc, fp, lsl r2	; <UNPREDICTABLE>
    17fc:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    1800:	00000ae6 	andeq	r0, r0, r6, ror #21
    1804:	4c021c03 	stcmi	12, cr1, [r2], {3}
    1808:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    180c:	00045f08 	andeq	r5, r4, r8, lsl #30
    1810:	021d0300 	andseq	r0, sp, #0, 6
    1814:	0000007f 	andeq	r0, r0, pc, ror r0
    1818:	06f90820 	ldrbteq	r0, [r9], r0, lsr #16
    181c:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    1820:	00004c02 	andeq	r4, r0, r2, lsl #24
    1824:	43072200 	movwmi	r2, #29184	; 0x7200
    1828:	0300544e 	movweq	r5, #1102	; 0x44e
    182c:	007f021f 	rsbseq	r0, pc, pc, lsl r2	; <UNPREDICTABLE>
    1830:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
    1834:	00000703 	andeq	r0, r0, r3, lsl #14
    1838:	4c022003 	stcmi	0, cr2, [r2], {3}
    183c:	26000000 	strcs	r0, [r0], -r0
    1840:	43535007 	cmpmi	r3, #7
    1844:	02210300 	eoreq	r0, r1, #0, 6
    1848:	0000007f 	andeq	r0, r0, pc, ror r0
    184c:	09100828 	ldmdbeq	r0, {r3, r5, fp}
    1850:	22030000 	andcs	r0, r3, #0
    1854:	00004c02 	andeq	r4, r0, r2, lsl #24
    1858:	41072a00 	tstmi	r7, r0, lsl #20
    185c:	03005252 	movweq	r5, #594	; 0x252
    1860:	007f0223 	rsbseq	r0, pc, r3, lsr #4
    1864:	082c0000 	stmdaeq	ip!, {}	; <UNPREDICTABLE>
    1868:	0000091b 	andeq	r0, r0, fp, lsl r9
    186c:	4c022403 	cfstrsmi	mvf2, [r2], {3}
    1870:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    1874:	52435207 	subpl	r5, r3, #1879048192	; 0x70000000
    1878:	02250300 	eoreq	r0, r5, #0, 6
    187c:	0000007f 	andeq	r0, r0, pc, ror r0
    1880:	09260830 	stmdbeq	r6!, {r4, r5, fp}
    1884:	26030000 	strcs	r0, [r3], -r0
    1888:	00004c02 	andeq	r4, r0, r2, lsl #24
    188c:	50083200 	andpl	r3, r8, r0, lsl #4
    1890:	03000002 	movweq	r0, #2
    1894:	007f0227 	rsbseq	r0, pc, r7, lsr #4
    1898:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    189c:	00000931 	andeq	r0, r0, r1, lsr r9
    18a0:	4c022803 	stcmi	8, cr2, [r2], {3}
    18a4:	36000000 	strcc	r0, [r0], -r0
    18a8:	00025508 	andeq	r5, r2, r8, lsl #10
    18ac:	02290300 	eoreq	r0, r9, #0, 6
    18b0:	0000007f 	andeq	r0, r0, pc, ror r0
    18b4:	093c0838 	ldmdbeq	ip!, {r3, r4, r5, fp}
    18b8:	2a030000 	bcs	c18c0 <__Stack_Size+0xc14c0>
    18bc:	00004c02 	andeq	r4, r0, r2, lsl #24
    18c0:	5a083a00 	bpl	2100c8 <__Stack_Size+0x20fcc8>
    18c4:	03000002 	movweq	r0, #2
    18c8:	007f022b 	rsbseq	r0, pc, fp, lsr #4
    18cc:	083c0000 	ldmdaeq	ip!, {}	; <UNPREDICTABLE>
    18d0:	00000947 	andeq	r0, r0, r7, asr #18
    18d4:	4c022c03 	stcmi	12, cr2, [r2], {3}
    18d8:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
    18dc:	00025f08 	andeq	r5, r2, r8, lsl #30
    18e0:	022d0300 	eoreq	r0, sp, #0, 6
    18e4:	0000007f 	andeq	r0, r0, pc, ror r0
    18e8:	09520840 	ldmdbeq	r2, {r6, fp}^
    18ec:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    18f0:	00004c02 	andeq	r4, r0, r2, lsl #24
    18f4:	2b084200 	blcs	2120fc <__Stack_Size+0x211cfc>
    18f8:	03000002 	movweq	r0, #2
    18fc:	007f022f 	rsbseq	r0, pc, pc, lsr #4
    1900:	08440000 	stmdaeq	r4, {}^	; <UNPREDICTABLE>
    1904:	0000095d 	andeq	r0, r0, sp, asr r9
    1908:	4c023003 	stcmi	0, cr3, [r2], {3}
    190c:	46000000 	strmi	r0, [r0], -r0
    1910:	52434407 	subpl	r4, r3, #117440512	; 0x7000000
    1914:	02310300 	eorseq	r0, r1, #0, 6
    1918:	0000007f 	andeq	r0, r0, pc, ror r0
    191c:	09680848 	stmdbeq	r8!, {r3, r6, fp}^
    1920:	32030000 	andcc	r0, r3, #0
    1924:	00004c02 	andeq	r4, r0, r2, lsl #24
    1928:	26084a00 	strcs	r4, [r8], -r0, lsl #20
    192c:	03000007 	movweq	r0, #7
    1930:	007f0233 	rsbseq	r0, pc, r3, lsr r2	; <UNPREDICTABLE>
    1934:	084c0000 	stmdaeq	ip, {}^	; <UNPREDICTABLE>
    1938:	00000973 	andeq	r0, r0, r3, ror r9
    193c:	4c023403 	cfstrsmi	mvf3, [r2], {3}
    1940:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    1944:	01d40900 	bicseq	r0, r4, r0, lsl #18
    1948:	35030000 	strcc	r0, [r3, #-0]
    194c:	00009602 	andeq	r9, r0, r2, lsl #12
    1950:	031c0600 	tsteq	ip, #0, 12
    1954:	03710238 	cmneq	r1, #56, 4	; 0x80000003
    1958:	53070000 	movwpl	r0, #28672	; 0x7000
    195c:	3a030052 	bcc	c1aac <__Stack_Size+0xc16ac>
    1960:	00007f02 	andeq	r7, r0, r2, lsl #30
    1964:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    1968:	03000006 	movweq	r0, #6
    196c:	004c023b 	subeq	r0, ip, fp, lsr r2
    1970:	07020000 	streq	r0, [r2, -r0]
    1974:	03005244 	movweq	r5, #580	; 0x244
    1978:	007f023c 	rsbseq	r0, pc, ip, lsr r2	; <UNPREDICTABLE>
    197c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1980:	000006b3 			; <UNDEFINED> instruction: 0x000006b3
    1984:	4c023d03 	stcmi	13, cr3, [r2], {3}
    1988:	06000000 	streq	r0, [r0], -r0
    198c:	52524207 	subspl	r4, r2, #1879048192	; 0x70000000
    1990:	023e0300 	eorseq	r0, lr, #0, 6
    1994:	0000007f 	andeq	r0, r0, pc, ror r0
    1998:	06bd0808 	ldrteq	r0, [sp], r8, lsl #16
    199c:	3f030000 	svccc	0x00030000
    19a0:	00004c02 	andeq	r4, r0, r2, lsl #24
    19a4:	43070a00 	movwmi	r0, #31232	; 0x7a00
    19a8:	03003152 	movweq	r3, #338	; 0x152
    19ac:	007f0240 	rsbseq	r0, pc, r0, asr #4
    19b0:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    19b4:	000006c7 	andeq	r0, r0, r7, asr #13
    19b8:	4c024103 	stfmis	f4, [r2], {3}
    19bc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    19c0:	32524307 	subscc	r4, r2, #469762048	; 0x1c000000
    19c4:	02420300 	subeq	r0, r2, #0, 6
    19c8:	0000007f 	andeq	r0, r0, pc, ror r0
    19cc:	06d10810 			; <UNDEFINED> instruction: 0x06d10810
    19d0:	43030000 	movwmi	r0, #12288	; 0x3000
    19d4:	00004c02 	andeq	r4, r0, r2, lsl #24
    19d8:	43071200 	movwmi	r1, #29184	; 0x7200
    19dc:	03003352 	movweq	r3, #850	; 0x352
    19e0:	007f0244 	rsbseq	r0, pc, r4, asr #4
    19e4:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    19e8:	000006db 	ldrdeq	r0, [r0], -fp
    19ec:	4c024503 	cfstr32mi	mvfx4, [r2], {3}
    19f0:	16000000 	strne	r0, [r0], -r0
    19f4:	0001b908 	andeq	fp, r1, r8, lsl #18
    19f8:	02460300 	subeq	r0, r6, #0, 6
    19fc:	0000007f 	andeq	r0, r0, pc, ror r0
    1a00:	06e50818 	usateq	r0, #5, r8, lsl #16
    1a04:	47030000 	strmi	r0, [r3, -r0]
    1a08:	00004c02 	andeq	r4, r0, r2, lsl #24
    1a0c:	09001a00 	stmdbeq	r0, {r9, fp, ip}
    1a10:	000003e3 	andeq	r0, r0, r3, ror #7
    1a14:	b3024803 	movwlt	r4, #10243	; 0x2803
    1a18:	0a000002 	beq	1a28 <__Stack_Size+0x1628>
    1a1c:	00000dc0 	andeq	r0, r0, r0, asr #27
    1a20:	023e2901 	eorseq	r2, lr, #16384	; 0x4000
    1a24:	00020800 	andeq	r0, r2, r0, lsl #16
    1a28:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a2c:	000d8d0a 	andeq	r8, sp, sl, lsl #26
    1a30:	40350100 	eorsmi	r0, r5, r0, lsl #2
    1a34:	02080002 	andeq	r0, r8, #2
    1a38:	01000000 	mrseq	r0, (UNDEF: 0)
    1a3c:	10520a9c 			; <UNDEFINED> instruction: 0x10520a9c
    1a40:	44010000 	strmi	r0, [r1], #-0
    1a44:	08000242 	stmdaeq	r0, {r1, r6, r9}
    1a48:	00000002 	andeq	r0, r0, r2
    1a4c:	e60a9c01 	str	r9, [sl], -r1, lsl #24
    1a50:	0100000d 	tsteq	r0, sp
    1a54:	00024451 	andeq	r4, r2, r1, asr r4
    1a58:	00000208 	andeq	r0, r0, r8, lsl #4
    1a5c:	0a9c0100 	beq	fe701e64 <SCS_BASE+0x1e6f3e64>
    1a60:	00000d1d 	andeq	r0, r0, sp, lsl sp
    1a64:	02465e01 	subeq	r5, r6, #1, 28
    1a68:	00020800 	andeq	r0, r2, r0, lsl #16
    1a6c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a70:	000edb0a 	andeq	sp, lr, sl, lsl #22
    1a74:	486b0100 	stmdami	fp!, {r8}^
    1a78:	02080002 	andeq	r0, r8, #2
    1a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a80:	0f7c0a9c 	svceq	0x007c0a9c
    1a84:	76010000 	strvc	r0, [r1], -r0
    1a88:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
    1a8c:	00000002 	andeq	r0, r0, r2
    1a90:	620a9c01 	andvs	r9, sl, #256	; 0x100
    1a94:	0100000b 	tsteq	r0, fp
    1a98:	00024c81 	andeq	r4, r2, r1, lsl #25
    1a9c:	00000208 	andeq	r0, r0, r8, lsl #4
    1aa0:	0a9c0100 	beq	fe701ea8 <SCS_BASE+0x1e6f3ea8>
    1aa4:	00000d7e 	andeq	r0, r0, lr, ror sp
    1aa8:	02508c01 	subseq	r8, r0, #256	; 0x100
    1aac:	00140800 	andseq	r0, r4, r0, lsl #16
    1ab0:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ab4:	000db00a 	andeq	fp, sp, sl
    1ab8:	649f0100 	ldrvs	r0, [pc], #256	; 1ac0 <__Stack_Size+0x16c0>
    1abc:	02080002 	andeq	r0, r8, #2
    1ac0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ac4:	10750a9c 			; <UNDEFINED> instruction: 0x10750a9c
    1ac8:	aa010000 	bge	41ad0 <__Stack_Size+0x416d0>
    1acc:	08000266 	stmdaeq	r0, {r1, r2, r5, r6, r9}
    1ad0:	00000002 	andeq	r0, r0, r2
    1ad4:	580a9c01 	stmdapl	sl, {r0, sl, fp, ip, pc}
    1ad8:	0100000e 	tsteq	r0, lr
    1adc:	000268b5 			; <UNDEFINED> instruction: 0x000268b5
    1ae0:	00000208 	andeq	r0, r0, r8, lsl #4
    1ae4:	0a9c0100 	beq	fe701eec <SCS_BASE+0x1e6f3eec>
    1ae8:	00000ee8 	andeq	r0, r0, r8, ror #29
    1aec:	026ac001 	rsbeq	ip, sl, #1
    1af0:	00020800 	andeq	r0, r2, r0, lsl #16
    1af4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1af8:	000f450a 	andeq	r4, pc, sl, lsl #10
    1afc:	6ccb0100 	stfvse	f0, [fp], {0}
    1b00:	02080002 	andeq	r0, r8, #2
    1b04:	01000000 	mrseq	r0, (UNDEF: 0)
    1b08:	0fcd0a9c 	svceq	0x00cd0a9c
    1b0c:	d6010000 	strle	r0, [r1], -r0
    1b10:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
    1b14:	00000002 	andeq	r0, r0, r2
    1b18:	f50a9c01 			; <UNDEFINED> instruction: 0xf50a9c01
    1b1c:	0100000b 	tsteq	r0, fp
    1b20:	000270e1 	andeq	r7, r2, r1, ror #1
    1b24:	00000208 	andeq	r0, r0, r8, lsl #4
    1b28:	0a9c0100 	beq	fe701f30 <SCS_BASE+0x1e6f3f30>
    1b2c:	00000ea0 	andeq	r0, r0, r0, lsr #29
    1b30:	0272ec01 	rsbseq	lr, r2, #256	; 0x100
    1b34:	00020800 	andeq	r0, r2, r0, lsl #16
    1b38:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b3c:	000ff50a 	andeq	pc, pc, sl, lsl #10
    1b40:	74f70100 	ldrbtvc	r0, [r7], #256	; 0x100
    1b44:	02080002 	andeq	r0, r8, #2
    1b48:	01000000 	mrseq	r0, (UNDEF: 0)
    1b4c:	0cad0b9c 	vstmiaeq	sp!, {d0-d13}
    1b50:	02010000 	andeq	r0, r1, #0
    1b54:	00027601 	andeq	r7, r2, r1, lsl #12
    1b58:	00000208 	andeq	r0, r0, r8, lsl #4
    1b5c:	0b9c0100 	bleq	fe701f64 <SCS_BASE+0x1e6f3f64>
    1b60:	00000e82 	andeq	r0, r0, r2, lsl #29
    1b64:	78010d01 	stmdavc	r1, {r0, r8, sl, fp}
    1b68:	02080002 	andeq	r0, r8, #2
    1b6c:	01000000 	mrseq	r0, (UNDEF: 0)
    1b70:	0fdc0b9c 	svceq	0x00dc0b9c
    1b74:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    1b78:	00000001 	andeq	r0, r0, r1
    1b7c:	00000200 	andeq	r0, r0, r0, lsl #4
    1b80:	0b9c0100 	bleq	fe701f88 <SCS_BASE+0x1e6f3f88>
    1b84:	00000c60 	andeq	r0, r0, r0, ror #24
    1b88:	00012301 	andeq	r2, r1, r1, lsl #6
    1b8c:	02000000 	andeq	r0, r0, #0
    1b90:	01000000 	mrseq	r0, (UNDEF: 0)
    1b94:	0e1e0b9c 	vmoveq.32	r0, d30[0]
    1b98:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1b9c:	00000001 	andeq	r0, r0, r1
    1ba0:	00000200 	andeq	r0, r0, r0, lsl #4
    1ba4:	0b9c0100 	bleq	fe701fac <SCS_BASE+0x1e6f3fac>
    1ba8:	00000fb4 			; <UNDEFINED> instruction: 0x00000fb4
    1bac:	00013901 	andeq	r3, r1, r1, lsl #18
    1bb0:	02000000 	andeq	r0, r0, #0
    1bb4:	01000000 	mrseq	r0, (UNDEF: 0)
    1bb8:	0c470b9c 	mcrreq	11, 9, r0, r7, cr12
    1bbc:	44010000 	strmi	r0, [r1], #-0
    1bc0:	00000001 	andeq	r0, r0, r1
    1bc4:	00000200 	andeq	r0, r0, r0, lsl #4
    1bc8:	0b9c0100 	bleq	fe701fd0 <SCS_BASE+0x1e6f3fd0>
    1bcc:	00000ef7 	strdeq	r0, [r0], -r7
    1bd0:	00014f01 	andeq	r4, r1, r1, lsl #30
    1bd4:	02000000 	andeq	r0, r0, #0
    1bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bdc:	10290b9c 	mlane	r9, ip, fp, r0
    1be0:	5a010000 	bpl	41be8 <__Stack_Size+0x417e8>
    1be4:	00000001 	andeq	r0, r0, r1
    1be8:	00000200 	andeq	r0, r0, r0, lsl #4
    1bec:	0b9c0100 	bleq	fe701ff4 <SCS_BASE+0x1e6f3ff4>
    1bf0:	00000c79 	andeq	r0, r0, r9, ror ip
    1bf4:	7a016501 	bvc	5b000 <__Stack_Size+0x5ac00>
    1bf8:	02080002 	andeq	r0, r8, #2
    1bfc:	01000000 	mrseq	r0, (UNDEF: 0)
    1c00:	0d040b9c 	vstreq	d0, [r4, #-624]	; 0xfffffd90
    1c04:	71010000 	mrsvc	r0, (UNDEF: 1)
    1c08:	00027c01 	andeq	r7, r2, r1, lsl #24
    1c0c:	00000208 	andeq	r0, r0, r8, lsl #4
    1c10:	0c9c0100 	ldfeqs	f0, [ip], {0}
    1c14:	00000ec1 	andeq	r0, r0, r1, asr #29
    1c18:	7e017d01 	cdpvc	13, 0, cr7, cr1, cr1, {0}
    1c1c:	04080002 	streq	r0, [r8], #-2
    1c20:	01000000 	mrseq	r0, (UNDEF: 0)
    1c24:	0005959c 	muleq	r5, ip, r5
    1c28:	02820d00 	addeq	r0, r2, #0, 26
    1c2c:	08df0800 	ldmeq	pc, {fp}^	; <UNPREDICTABLE>
    1c30:	0b000000 	bleq	1c38 <__Stack_Size+0x1838>
    1c34:	00000f69 	andeq	r0, r0, r9, ror #30
    1c38:	82018901 	andhi	r8, r1, #16384	; 0x4000
    1c3c:	02080002 	andeq	r0, r8, #2
    1c40:	01000000 	mrseq	r0, (UNDEF: 0)
    1c44:	0d430b9c 	vstreq	d16, [r3, #-624]	; 0xfffffd90
    1c48:	94010000 	strls	r0, [r1], #-0
    1c4c:	00028401 	andeq	r8, r2, r1, lsl #8
    1c50:	00000208 	andeq	r0, r0, r8, lsl #4
    1c54:	0b9c0100 	bleq	fe70205c <SCS_BASE+0x1e6f405c>
    1c58:	00000b4f 	andeq	r0, r0, pc, asr #22
    1c5c:	86019f01 	strhi	r9, [r1], -r1, lsl #30
    1c60:	02080002 	andeq	r0, r8, #2
    1c64:	01000000 	mrseq	r0, (UNDEF: 0)
    1c68:	0ba90b9c 	bleq	fea44ae0 <SCS_BASE+0x1ea36ae0>
    1c6c:	aa010000 	bge	41c74 <__Stack_Size+0x41874>
    1c70:	00028801 	andeq	r8, r2, r1, lsl #16
    1c74:	00000208 	andeq	r0, r0, r8, lsl #4
    1c78:	0b9c0100 	bleq	fe702080 <SCS_BASE+0x1e6f4080>
    1c7c:	00001016 	andeq	r1, r0, r6, lsl r0
    1c80:	8a01b601 	bhi	6f48c <__Stack_Size+0x6f08c>
    1c84:	02080002 	andeq	r0, r8, #2
    1c88:	01000000 	mrseq	r0, (UNDEF: 0)
    1c8c:	0e6a0b9c 	vmoveq.8	d26[4], r0
    1c90:	c2010000 	andgt	r0, r1, #0
    1c94:	00028c01 	andeq	r8, r2, r1, lsl #24
    1c98:	00000208 	andeq	r0, r0, r8, lsl #4
    1c9c:	0b9c0100 	bleq	fe7020a4 <SCS_BASE+0x1e6f40a4>
    1ca0:	00000e0b 	andeq	r0, r0, fp, lsl #28
    1ca4:	8e01cd01 	cdphi	13, 0, cr12, cr1, cr1, {0}
    1ca8:	02080002 	andeq	r0, r8, #2
    1cac:	01000000 	mrseq	r0, (UNDEF: 0)
    1cb0:	10650c9c 	mlsne	r5, ip, ip, r0
    1cb4:	dc010000 	stcle	0, cr0, [r1], {-0}
    1cb8:	00029001 	andeq	r9, r2, r1
    1cbc:	00001408 	andeq	r1, r0, r8, lsl #8
    1cc0:	4d9c0100 	ldfmis	f0, [ip]
    1cc4:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    1cc8:	0800029c 	stmdaeq	r0, {r2, r3, r4, r7, r9}
    1ccc:	000008e6 	andeq	r0, r0, r6, ror #17
    1cd0:	00000643 	andeq	r0, r0, r3, asr #12
    1cd4:	0151010f 	cmpeq	r1, pc, lsl #2
    1cd8:	50010f31 	andpl	r0, r1, r1, lsr pc
    1cdc:	244a4003 	strbcs	r4, [sl], #-3
    1ce0:	02a40d00 	adceq	r0, r4, #0, 26
    1ce4:	09030800 	stmdbeq	r3, {fp}
    1ce8:	0b000000 	bleq	1cf0 <__Stack_Size+0x18f0>
    1cec:	00000cf4 	strdeq	r0, [r0], -r4
    1cf0:	a401ef01 	strge	lr, [r1], #-3841	; 0xf01
    1cf4:	02080002 	andeq	r0, r8, #2
    1cf8:	01000000 	mrseq	r0, (UNDEF: 0)
    1cfc:	0f100b9c 	svceq	0x00100b9c
    1d00:	fa010000 	blx	41d08 <__Stack_Size+0x41908>
    1d04:	0002a601 	andeq	sl, r2, r1, lsl #12
    1d08:	00000208 	andeq	r0, r0, r8, lsl #4
    1d0c:	0b9c0100 	bleq	fe702114 <SCS_BASE+0x1e6f4114>
    1d10:	00000c1f 	andeq	r0, r0, pc, lsl ip
    1d14:	a8020501 	stmdage	r2, {r0, r8, sl}
    1d18:	02080002 	andeq	r0, r8, #2
    1d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1d20:	0f560b9c 	svceq	0x00560b9c
    1d24:	10010000 	andne	r0, r1, r0
    1d28:	0002aa02 	andeq	sl, r2, r2, lsl #20
    1d2c:	00000208 	andeq	r0, r0, r8, lsl #4
    1d30:	0b9c0100 	bleq	fe702138 <SCS_BASE+0x1e6f4138>
    1d34:	00000b3c 	andeq	r0, r0, ip, lsr fp
    1d38:	ac021b01 	stcge	11, cr1, [r2], {1}
    1d3c:	02080002 	andeq	r0, r8, #2
    1d40:	01000000 	mrseq	r0, (UNDEF: 0)
    1d44:	0f200b9c 	svceq	0x00200b9c
    1d48:	26010000 	strcs	r0, [r1], -r0
    1d4c:	0002ae02 	andeq	sl, r2, r2, lsl #28
    1d50:	00000208 	andeq	r0, r0, r8, lsl #4
    1d54:	0b9c0100 	bleq	fe70215c <SCS_BASE+0x1e6f415c>
    1d58:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    1d5c:	b0023101 	andlt	r3, r2, r1, lsl #2
    1d60:	02080002 	andeq	r0, r8, #2
    1d64:	01000000 	mrseq	r0, (UNDEF: 0)
    1d68:	10060b9c 	mulne	r6, ip, fp
    1d6c:	3c010000 	stccc	0, cr0, [r1], {-0}
    1d70:	0002b202 	andeq	fp, r2, r2, lsl #4
    1d74:	00000208 	andeq	r0, r0, r8, lsl #4
    1d78:	0b9c0100 	bleq	fe702180 <SCS_BASE+0x1e6f4180>
    1d7c:	00000f33 	andeq	r0, r0, r3, lsr pc
    1d80:	b4024901 	strlt	r4, [r2], #-2305	; 0x901
    1d84:	02080002 	andeq	r0, r8, #2
    1d88:	01000000 	mrseq	r0, (UNDEF: 0)
    1d8c:	10840c9c 	umullne	r0, r4, ip, ip
    1d90:	60010000 	andvs	r0, r1, r0
    1d94:	0002b802 	andeq	fp, r2, r2, lsl #16
    1d98:	00003c08 	andeq	r3, r0, r8, lsl #24
    1d9c:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    1da0:	10000007 	andne	r0, r0, r7
    1da4:	01007273 	tsteq	r0, r3, ror r2
    1da8:	003a0265 	eorseq	r0, sl, r5, ror #4
    1dac:	03050000 	movweq	r0, #20480	; 0x5000
    1db0:	20000158 	andcs	r0, r0, r8, asr r1
    1db4:	0002d211 	andeq	sp, r2, r1, lsl r2
    1db8:	00090b08 	andeq	r0, r9, r8, lsl #22
    1dbc:	50010f00 	andpl	r0, r1, r0, lsl #30
    1dc0:	00007402 	andeq	r7, r0, r2, lsl #8
    1dc4:	0d310b00 	vldmdbeq	r1!, {d0-d-1}
    1dc8:	76010000 	strvc	r0, [r1], -r0
    1dcc:	0002f402 	andeq	pc, r2, r2, lsl #8
    1dd0:	00000208 	andeq	r0, r0, r8, lsl #4
    1dd4:	0b9c0100 	bleq	fe7021dc <SCS_BASE+0x1e6f41dc>
    1dd8:	00000b94 	muleq	r0, r4, fp
    1ddc:	f6028201 			; <UNDEFINED> instruction: 0xf6028201
    1de0:	02080002 	andeq	r0, r8, #2
    1de4:	01000000 	mrseq	r0, (UNDEF: 0)
    1de8:	0bce0b9c 	bleq	ff384c60 <SCS_BASE+0x1f376c60>
    1dec:	8d010000 	stchi	0, cr0, [r1, #-0]
    1df0:	0002f802 	andeq	pc, r2, r2, lsl #16
    1df4:	00000208 	andeq	r0, r0, r8, lsl #4
    1df8:	0b9c0100 	bleq	fe702200 <SCS_BASE+0x1e6f4200>
    1dfc:	00000c32 	andeq	r0, r0, r2, lsr ip
    1e00:	fa029801 	blx	a7e0c <__Stack_Size+0xa7a0c>
    1e04:	02080002 	andeq	r0, r8, #2
    1e08:	01000000 	mrseq	r0, (UNDEF: 0)
    1e0c:	0f870b9c 	svceq	0x00870b9c
    1e10:	a3010000 	movwge	r0, #4096	; 0x1000
    1e14:	0002fc02 	andeq	pc, r2, r2, lsl #24
    1e18:	00000208 	andeq	r0, r0, r8, lsl #4
    1e1c:	0b9c0100 	bleq	fe702224 <SCS_BASE+0x1e6f4224>
    1e20:	00000df8 	strdeq	r0, [r0], -r8
    1e24:	fe02af01 	cdp2	15, 0, cr10, cr2, cr1, {0}
    1e28:	02080002 	andeq	r0, r8, #2
    1e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e30:	0d560b9c 	vldreq	d16, [r6, #-624]	; 0xfffffd90
    1e34:	bb010000 	bllt	41e3c <__Stack_Size+0x41a3c>
    1e38:	00030002 	andeq	r0, r3, r2
    1e3c:	00000208 	andeq	r0, r0, r8, lsl #4
    1e40:	0b9c0100 	bleq	fe702248 <SCS_BASE+0x1e6f4248>
    1e44:	00000be2 	andeq	r0, r0, r2, ror #23
    1e48:	0202c601 	andeq	ip, r2, #1048576	; 0x100000
    1e4c:	02080003 	andeq	r0, r8, #3
    1e50:	01000000 	mrseq	r0, (UNDEF: 0)
    1e54:	0da00b9c 	stceq	11, cr0, [r0, #624]!	; 0x270
    1e58:	d1010000 	mrsle	r0, (UNDEF: 1)
    1e5c:	00030402 	andeq	r0, r3, r2, lsl #8
    1e60:	00000208 	andeq	r0, r0, r8, lsl #4
    1e64:	0b9c0100 	bleq	fe70226c <SCS_BASE+0x1e6f426c>
    1e68:	00000e37 	andeq	r0, r0, r7, lsr lr
    1e6c:	0602dc01 	streq	sp, [r2], -r1, lsl #24
    1e70:	02080003 	andeq	r0, r8, #3
    1e74:	01000000 	mrseq	r0, (UNDEF: 0)
    1e78:	0c8b0b9c 	vstmiaeq	fp, {d0-d13}
    1e7c:	e7010000 	str	r0, [r1, -r0]
    1e80:	00030802 	andeq	r0, r3, r2, lsl #16
    1e84:	00000208 	andeq	r0, r0, r8, lsl #4
    1e88:	0b9c0100 	bleq	fe702290 <SCS_BASE+0x1e6f4290>
    1e8c:	00001042 	andeq	r1, r0, r2, asr #32
    1e90:	0a02f201 	beq	be69c <__Stack_Size+0xbe29c>
    1e94:	02080003 	andeq	r0, r8, #3
    1e98:	01000000 	mrseq	r0, (UNDEF: 0)
    1e9c:	0cbe0b9c 	vldmiaeq	lr!, {d0-d13}
    1ea0:	fd010000 	stc2	0, cr0, [r1, #-0]
    1ea4:	00030c02 	andeq	r0, r3, r2, lsl #24
    1ea8:	00000208 	andeq	r0, r0, r8, lsl #4
    1eac:	0b9c0100 	bleq	fe7022b4 <SCS_BASE+0x1e6f42b4>
    1eb0:	00000bbd 			; <UNDEFINED> instruction: 0x00000bbd
    1eb4:	0e030801 	cdpeq	8, 0, cr0, cr3, cr1, {0}
    1eb8:	02080003 	andeq	r0, r8, #3
    1ebc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ec0:	0e470b9c 	vmoveq.8	d23[0], r0
    1ec4:	13010000 	movwne	r0, #4096	; 0x1000
    1ec8:	00031003 	andeq	r1, r3, r3
    1ecc:	00000208 	andeq	r0, r0, r8, lsl #4
    1ed0:	0b9c0100 	bleq	fe7022d8 <SCS_BASE+0x1e6f42d8>
    1ed4:	00000d6e 	andeq	r0, r0, lr, ror #26
    1ed8:	12031e01 	andne	r1, r3, #1, 28
    1edc:	02080003 	andeq	r0, r8, #3
    1ee0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ee4:	0ce40b9c 	vstmiaeq	r4!, {d16-d29}
    1ee8:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    1eec:	00031403 	andeq	r1, r3, r3, lsl #8
    1ef0:	00000208 	andeq	r0, r0, r8, lsl #4
    1ef4:	0b9c0100 	bleq	fe7022fc <SCS_BASE+0x1e6f42fc>
    1ef8:	00000dcd 	andeq	r0, r0, sp, asr #27
    1efc:	16033401 	strne	r3, [r3], -r1, lsl #8
    1f00:	02080003 	andeq	r0, r8, #3
    1f04:	01000000 	mrseq	r0, (UNDEF: 0)
    1f08:	0f9b0b9c 	svceq	0x009b0b9c
    1f0c:	3f010000 	svccc	0x00010000
    1f10:	00031803 	andeq	r1, r3, r3, lsl #16
    1f14:	00000208 	andeq	r0, r0, r8, lsl #4
    1f18:	0b9c0100 	bleq	fe702320 <SCS_BASE+0x1e6f4320>
    1f1c:	00000c06 	andeq	r0, r0, r6, lsl #24
    1f20:	1a034a01 	bne	d472c <__Stack_Size+0xd432c>
    1f24:	02080003 	andeq	r0, r8, #3
    1f28:	01000000 	mrseq	r0, (UNDEF: 0)
    1f2c:	0b790b9c 	bleq	1e44da4 <__Stack_Size+0x1e449a4>
    1f30:	56010000 	strpl	r0, [r1], -r0
    1f34:	00031c03 	andeq	r1, r3, r3, lsl #24
    1f38:	00000208 	andeq	r0, r0, r8, lsl #4
    1f3c:	129c0100 	addsne	r0, ip, #0, 2
    1f40:	00000182 	andeq	r0, r0, r2, lsl #3
    1f44:	006f1d01 	rsbeq	r1, pc, r1, lsl #26
    1f48:	5e130000 	cdppl	0, 1, cr0, cr3, cr0, {0}
    1f4c:	bd000000 	stclt	0, cr0, [r0, #-0]
    1f50:	14000008 	strne	r0, [r0], #-8
    1f54:	0000008f 	andeq	r0, r0, pc, lsl #1
    1f58:	150003ff 	strne	r0, [r0, #-1023]	; 0x3ff
    1f5c:	00000029 	andeq	r0, r0, r9, lsr #32
    1f60:	c9024701 	stmdbgt	r2, {r0, r8, r9, sl, lr}
    1f64:	05000008 	streq	r0, [r0, #-8]
    1f68:	000008ac 	andeq	r0, r0, ip, lsr #17
    1f6c:	00033e15 	andeq	r3, r3, r5, lsl lr
    1f70:	02480100 	subeq	r0, r8, #0, 2
    1f74:	000008da 	ldrdeq	r0, [r0], -sl
    1f78:	00004c05 	andeq	r4, r0, r5, lsl #24
    1f7c:	0e931600 	cdpeq	6, 9, cr1, cr3, cr0, {0}
    1f80:	15010000 	strne	r0, [r1, #-0]
    1f84:	000cce17 	andeq	ip, ip, r7, lsl lr
    1f88:	02fe0400 	rscseq	r0, lr, #0, 8
    1f8c:	000008fd 	strdeq	r0, [r0], -sp
    1f90:	0008fd18 	andeq	pc, r8, r8, lsl sp	; <UNPREDICTABLE>
    1f94:	004c1800 	subeq	r1, ip, r0, lsl #16
    1f98:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    1f9c:	0002a704 	andeq	sl, r2, r4, lsl #14
    1fa0:	05911a00 	ldreq	r1, [r1, #2560]	; 0xa00
    1fa4:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    1fa8:	0c9b1b01 	fldmiaxeq	fp, {d1-d0}	;@ Deprecated
    1fac:	ed050000 	stc	0, cr0, [r5, #-0]
    1fb0:	0000004c 	andeq	r0, r0, ip, asr #32
    1fb4:	00000920 	andeq	r0, r0, r0, lsr #18
    1fb8:	00092018 	andeq	r2, r9, r8, lsl r0
    1fbc:	04190000 	ldreq	r0, [r9], #-0
    1fc0:	00000371 	andeq	r0, r0, r1, ror r3
    1fc4:	00012400 	andeq	r2, r1, r0, lsl #8
    1fc8:	93000400 	movwls	r0, #1024	; 0x400
    1fcc:	04000005 	streq	r0, [r0], #-5
    1fd0:	0002c101 	andeq	ip, r2, r1, lsl #2
    1fd4:	10960100 	addsne	r0, r6, r0, lsl #2
    1fd8:	009a0000 	addseq	r0, sl, r0
    1fdc:	093f0000 	ldmdbeq	pc!, {}	; <UNPREDICTABLE>
    1fe0:	04020000 	streq	r0, [r2], #-0
    1fe4:	00071d05 	andeq	r1, r7, r5, lsl #26
    1fe8:	05020200 	streq	r0, [r2, #-512]	; 0x200
    1fec:	000006ef 	andeq	r0, r0, pc, ror #13
    1ff0:	8c060102 	stfhis	f0, [r6], {2}
    1ff4:	02000008 	andeq	r0, r0, #8
    1ff8:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    1ffc:	02020000 	andeq	r0, r2, #0
    2000:	000a7307 	andeq	r7, sl, r7, lsl #6
    2004:	38750300 	ldmdacc	r5!, {r8, r9}^
    2008:	4a290200 	bmi	a42810 <__Stack_Size+0xa42410>
    200c:	02000000 	andeq	r0, r0, #0
    2010:	088a0801 	stmeq	sl, {r0, fp}
    2014:	04020000 	streq	r0, [r2], #-0
    2018:	00081007 	andeq	r1, r8, r7
    201c:	00400400 	subeq	r0, r0, r0, lsl #8
    2020:	00680000 	rsbeq	r0, r8, r0
    2024:	51050000 	mrspl	r0, (UNDEF: 5)
    2028:	11000000 	mrsne	r0, (UNDEF: 0)
    202c:	10bf0600 	adcsne	r0, pc, r0, lsl #12
    2030:	16010000 	strne	r0, [r1], -r0
    2034:	00000079 	andeq	r0, r0, r9, ror r0
    2038:	187b0305 	ldmdane	fp!, {r0, r2, r8, r9}^
    203c:	58070800 	stmdapl	r7, {fp}
    2040:	04000000 	streq	r0, [r0], #-0
    2044:	00000040 	andeq	r0, r0, r0, asr #32
    2048:	0000008e 	andeq	r0, r0, lr, lsl #1
    204c:	00005105 	andeq	r5, r0, r5, lsl #2
    2050:	06004200 	streq	r4, [r0], -r0, lsl #4
    2054:	0000111e 	andeq	r1, r0, lr, lsl r1
    2058:	009f3001 	addseq	r3, pc, r1
    205c:	03050000 	movweq	r0, #20480	; 0x5000
    2060:	08001838 	stmdaeq	r0, {r3, r4, r5, fp, ip}
    2064:	00007e07 	andeq	r7, r0, r7, lsl #28
    2068:	00400400 	subeq	r0, r0, r0, lsl #8
    206c:	00b40000 	adcseq	r0, r4, r0
    2070:	51050000 	mrspl	r0, (UNDEF: 5)
    2074:	03000000 	movweq	r0, #0
    2078:	10e10600 	rscne	r0, r1, r0, lsl #12
    207c:	83010000 	movwhi	r0, #4096	; 0x1000
    2080:	000000c5 	andeq	r0, r0, r5, asr #1
    2084:	18340305 	ldmdane	r4!, {r0, r2, r8, r9}
    2088:	a4070800 	strge	r0, [r7], #-2048	; 0x800
    208c:	06000000 	streq	r0, [r0], -r0
    2090:	000010a1 	andeq	r1, r0, r1, lsr #1
    2094:	00db8b01 	sbcseq	r8, fp, r1, lsl #22
    2098:	03050000 	movweq	r0, #20480	; 0x5000
    209c:	08001822 	stmdaeq	r0, {r1, r5, fp, ip}
    20a0:	00005807 	andeq	r5, r0, r7, lsl #16
    20a4:	00400400 	subeq	r0, r0, r0, lsl #8
    20a8:	00f00000 	rscseq	r0, r0, r0
    20ac:	51050000 	mrspl	r0, (UNDEF: 5)
    20b0:	31000000 	mrscc	r0, (UNDEF: 0)
    20b4:	10ff0600 	rscsne	r0, pc, r0, lsl #12
    20b8:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    20bc:	00000101 	andeq	r0, r0, r1, lsl #2
    20c0:	17f00305 	ldrbne	r0, [r0, r5, lsl #6]!
    20c4:	e0070800 	and	r0, r7, r0, lsl #16
    20c8:	04000000 	streq	r0, [r0], #-0
    20cc:	00000040 	andeq	r0, r0, r0, asr #32
    20d0:	00000116 	andeq	r0, r0, r6, lsl r1
    20d4:	00005105 	andeq	r5, r0, r5, lsl #2
    20d8:	06001900 	streq	r1, [r0], -r0, lsl #18
    20dc:	00001140 	andeq	r1, r0, r0, asr #2
    20e0:	0106b801 	tsteq	r6, r1, lsl #16
    20e4:	03050000 	movweq	r0, #20480	; 0x5000
    20e8:	20000001 	andcs	r0, r0, r1
    20ec:	00036900 	andeq	r6, r3, r0, lsl #18
    20f0:	e5000400 	str	r0, [r0, #-1024]	; 0x400
    20f4:	04000005 	streq	r0, [r0], #-5
    20f8:	0002c101 	andeq	ip, r2, r1, lsl #2
    20fc:	116f0100 	cmnne	pc, r0, lsl #2
    2100:	009a0000 	addseq	r0, sl, r0
    2104:	03280000 	teqeq	r8, #0
    2108:	00000000 	andeq	r0, r0, r0
    210c:	09860000 	stmibeq	r6, {}	; <UNPREDICTABLE>
    2110:	04020000 	streq	r0, [r2], #-0
    2114:	00071d05 	andeq	r1, r7, r5, lsl #26
    2118:	05020200 	streq	r0, [r2, #-512]	; 0x200
    211c:	000006ef 	andeq	r0, r0, pc, ror #13
    2120:	8c060102 	stfhis	f0, [r6], {2}
    2124:	03000008 	movweq	r0, #8
    2128:	00323375 	eorseq	r3, r2, r5, ror r3
    212c:	00452702 	subeq	r2, r5, r2, lsl #14
    2130:	04020000 	streq	r0, [r2], #-0
    2134:	00081907 	andeq	r1, r8, r7, lsl #18
    2138:	31750300 	cmncc	r5, r0, lsl #6
    213c:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    2140:	00000057 	andeq	r0, r0, r7, asr r0
    2144:	73070202 	movwvc	r0, #29186	; 0x7202
    2148:	0300000a 	movweq	r0, #10
    214c:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    2150:	00006829 	andeq	r6, r0, r9, lsr #16
    2154:	08010200 	stmdaeq	r1, {r9}
    2158:	0000088a 	andeq	r0, r0, sl, lsl #17
    215c:	0003a704 	andeq	sl, r3, r4, lsl #14
    2160:	7a2f0200 	bvc	bc2968 <__Stack_Size+0xbc2568>
    2164:	05000000 	streq	r0, [r0, #-0]
    2168:	00000045 	andeq	r0, r0, r5, asr #32
    216c:	3a020106 	bcc	8258c <__Stack_Size+0x8218c>
    2170:	00000094 	muleq	r0, r4, r0
    2174:	00075607 	andeq	r5, r7, r7, lsl #12
    2178:	06070000 	streq	r0, [r7], -r0
    217c:	01000002 	tsteq	r0, r2
    2180:	05370400 	ldreq	r0, [r7, #-1024]!	; 0x400
    2184:	3a020000 	bcc	8218c <__Stack_Size+0x81d8c>
    2188:	0000007f 	andeq	r0, r0, pc, ror r0
    218c:	10070402 	andne	r0, r7, r2, lsl #8
    2190:	06000008 	streq	r0, [r0], -r8
    2194:	cd1c0301 	ldcgt	3, cr0, [ip, #-4]
    2198:	07000000 	streq	r0, [r0, -r0]
    219c:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    21a0:	072b0701 	streq	r0, [fp, -r1, lsl #14]!
    21a4:	07020000 	streq	r0, [r2, -r0]
    21a8:	000000d6 	ldrdeq	r0, [r0], -r6
    21ac:	042e0703 	strteq	r0, [lr], #-1795	; 0x703
    21b0:	07040000 	streq	r0, [r4, -r0]
    21b4:	0000035c 	andeq	r0, r0, ip, asr r3
    21b8:	59040005 	stmdbpl	r4, {r0, r2}
    21bc:	03000006 	movweq	r0, #6
    21c0:	0000a622 	andeq	sl, r0, r2, lsr #12
    21c4:	5e040800 	cdppl	8, 0, cr0, cr4, cr0, {0}
    21c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    21cc:	000008c2 	andeq	r0, r0, r2, asr #17
    21d0:	0f300501 	svceq	0x00300501
    21d4:	07000001 	streq	r0, [r0, -r1]
    21d8:	00000904 	andeq	r0, r0, r4, lsl #18
    21dc:	0a860700 	beq	fe183de4 <SCS_BASE+0x1e175de4>
    21e0:	07010000 	streq	r0, [r1, -r0]
    21e4:	00000524 	andeq	r0, r0, r4, lsr #10
    21e8:	0ac60702 	beq	ff183df8 <SCS_BASE+0x1f175df8>
    21ec:	07030000 	streq	r0, [r3, -r0]
    21f0:	000003f1 	strdeq	r0, [r0], -r1
    21f4:	086e0704 	stmdaeq	lr!, {r2, r8, r9, sl}^
    21f8:	00050000 	andeq	r0, r5, r0
    21fc:	0011b20a 	andseq	fp, r1, sl, lsl #4
    2200:	1e3f0100 	rsfnee	f0, f7, f0
    2204:	02080003 	andeq	r0, r8, #3
    2208:	01000000 	mrseq	r0, (UNDEF: 0)
    220c:	11980b9c 			; <UNDEFINED> instruction: 0x11980b9c
    2210:	72010000 	andvc	r0, r1, #0
    2214:	00000094 	muleq	r0, r4, r0
    2218:	08000320 	stmdaeq	r0, {r5, r8, r9}
    221c:	00000100 	andeq	r0, r0, r0, lsl #2
    2220:	01ab9c01 			; <UNDEFINED> instruction: 0x01ab9c01
    2224:	9f0c0000 	svcls	0x000c0000
    2228:	01000002 	tsteq	r0, r2
    222c:	0000d872 	andeq	sp, r0, r2, ror r8
    2230:	00049d00 	andeq	r9, r4, r0, lsl #26
    2234:	36970c00 	ldrcc	r0, [r7], r0, lsl #24
    2238:	72010000 	andvc	r0, r1, #0
    223c:	0000004c 	andeq	r0, r0, ip, asr #32
    2240:	000004c9 	andeq	r0, r0, r9, asr #9
    2244:	00117a0d 	andseq	r7, r1, sp, lsl #20
    2248:	4c740100 	ldfmie	f0, [r4], #-0
    224c:	ea000000 	b	2254 <__Stack_Size+0x1e54>
    2250:	0d000004 	stceq	0, cr0, [r0, #-16]
    2254:	000011e7 	andeq	r1, r0, r7, ror #3
    2258:	005e7501 	subseq	r7, lr, r1, lsl #10
    225c:	05210000 	streq	r0, [r1, #-0]!
    2260:	b50e0000 	strlt	r0, [lr, #-0]
    2264:	01000002 	tsteq	r0, r2
    2268:	0001ab76 	andeq	sl, r1, r6, ror fp
    226c:	57910200 	ldrpl	r0, [r1, r0, lsl #4]
    2270:	0003080f 	andeq	r0, r3, pc, lsl #16
    2274:	2f630d00 	svccs	0x00630d00
    2278:	85010000 	strhi	r0, [r1, #-0]
    227c:	0000003a 	andeq	r0, r0, sl, lsr r0
    2280:	00000540 	andeq	r0, r0, r0, asr #10
    2284:	00037810 	andeq	r7, r3, r0, lsl r8
    2288:	0002fb08 	andeq	pc, r2, r8, lsl #22
    228c:	039a1000 	orrseq	r1, sl, #0
    2290:	03150800 	tsteq	r5, #0, 16
    2294:	00000000 	andeq	r0, r0, r0
    2298:	0000cd05 	andeq	ip, r0, r5, lsl #26
    229c:	115e1100 	cmpne	lr, r0, lsl #2
    22a0:	55010000 	strpl	r0, [r1, #-0]
    22a4:	08000420 	stmdaeq	r0, {r5, sl}
    22a8:	0000005c 	andeq	r0, r0, ip, asr r0
    22ac:	02299c01 	eoreq	r9, r9, #256	; 0x100
    22b0:	3a120000 	bcc	4822b8 <__Stack_Size+0x481eb8>
    22b4:	0e080004 	cdpeq	0, 0, cr0, cr8, cr4, {0}
    22b8:	fd000000 	stc2	0, cr0, [r0, #-0]
    22bc:	13000001 	movwne	r0, #1
    22c0:	00000635 	andeq	r0, r0, r5, lsr r6
    22c4:	02296301 	eoreq	r6, r9, #67108864	; 0x4000000
    22c8:	01e30000 	mvneq	r0, r0
    22cc:	00140000 	andseq	r0, r4, r0
    22d0:	00043e10 	andeq	r3, r4, r0, lsl lr
    22d4:	00033308 	andeq	r3, r3, r8, lsl #6
    22d8:	04481500 	strbeq	r1, [r8], #-1280	; 0x500
    22dc:	01200800 	teqeq	r0, r0, lsl #16
    22e0:	01160000 	tsteq	r6, r0
    22e4:	00740250 	rsbseq	r0, r4, r0, asr r2
    22e8:	2a170000 	bcs	5c22f0 <__Stack_Size+0x5c1ef0>
    22ec:	44080004 	strmi	r0, [r8], #-4
    22f0:	19000003 	stmdbne	r0, {r0, r1}
    22f4:	16000002 	strne	r0, [r0], -r2
    22f8:	03055101 	movweq	r5, #20737	; 0x5101
    22fc:	200005f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
    2300:	01500116 	cmpeq	r0, r6, lsl r1
    2304:	68180033 	ldmdavs	r8, {r0, r1, r4, r5}
    2308:	5e080004 	cdppl	0, 0, cr0, cr8, cr4, {0}
    230c:	16000003 	strne	r0, [r0], -r3
    2310:	33015001 	movwcc	r5, #4097	; 0x1001
    2314:	04190000 	ldreq	r0, [r9], #-0
    2318:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
    231c:	11c21100 	bicne	r1, r2, r0, lsl #2
    2320:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    2324:	00000000 	andeq	r0, r0, r0
    2328:	00000020 	andeq	r0, r0, r0, lsr #32
    232c:	02579c01 	subseq	r9, r7, #256	; 0x100
    2330:	cf0e0000 	svcgt	0x000e0000
    2334:	01000011 	tsteq	r0, r1, lsl r0
    2338:	00003abc 			; <UNDEFINED> instruction: 0x00003abc
    233c:	60030500 	andvs	r0, r3, r0, lsl #10
    2340:	00200001 	eoreq	r0, r0, r1
    2344:	00005e1a 	andeq	r5, r0, sl, lsl lr
    2348:	00026700 	andeq	r6, r2, r0, lsl #14
    234c:	009f1b00 	addseq	r1, pc, r0, lsl #22
    2350:	003f0000 	eorseq	r0, pc, r0
    2354:	0009e21c 	andeq	lr, r9, ip, lsl r2
    2358:	57210100 	strpl	r0, [r1, -r0, lsl #2]!
    235c:	05000002 	streq	r0, [r0, #-2]
    2360:	0005f003 	andeq	pc, r5, r3
    2364:	005e1a20 	subseq	r1, lr, r0, lsr #20
    2368:	02830000 	addeq	r0, r3, #0
    236c:	001d0000 	andseq	r0, sp, r0
    2370:	0000291e 	andeq	r2, r0, lr, lsl r9
    2374:	8e240100 	sufhis	f0, f4, f0
    2378:	05000002 	streq	r0, [r0, #-2]
    237c:	00000278 	andeq	r0, r0, r8, ror r2
    2380:	00033e1e 	andeq	r3, r3, lr, lsl lr
    2384:	9e250100 	suflss	f0, f5, f0
    2388:	05000002 	streq	r0, [r0, #-2]
    238c:	0000004c 	andeq	r0, r0, ip, asr #32
    2390:	0002811e 	andeq	r8, r2, lr, lsl r1
    2394:	6f270100 	svcvs	0x00270100
    2398:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    239c:	00000a34 	andeq	r0, r0, r4, lsr sl
    23a0:	006f2701 	rsbeq	r2, pc, r1, lsl #14
    23a4:	321e0000 	andscc	r0, lr, #0
    23a8:	01000001 	tsteq	r0, r1
    23ac:	00006f27 	andeq	r6, r0, r7, lsr #30
    23b0:	04111e00 	ldreq	r1, [r1], #-3584	; 0xe00
    23b4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    23b8:	0000005e 	andeq	r0, r0, lr, asr r0
    23bc:	00055e1e 	andeq	r5, r5, lr, lsl lr
    23c0:	94290100 	strtls	r0, [r9], #-256	; 0x100
    23c4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    23c8:	0000030f 	andeq	r0, r0, pc, lsl #6
    23cc:	02e52a01 	rsceq	r2, r5, #4096	; 0x1000
    23d0:	3a050000 	bcc	1423d8 <__Stack_Size+0x141fd8>
    23d4:	1c000000 	stcne	0, cr0, [r0], {-0}
    23d8:	000007d7 	ldrdeq	r0, [r0], -r7
    23dc:	029e5401 	addseq	r5, lr, #16777216	; 0x1000000
    23e0:	03050000 	movweq	r0, #20480	; 0x5000
    23e4:	2000015c 	andcs	r0, r0, ip, asr r1
    23e8:	0011861f 	andseq	r8, r1, pc, lsl r6
    23ec:	cdbd0300 	ldcgt	3, cr0, [sp]
    23f0:	15000000 	strne	r0, [r0, #-0]
    23f4:	20000003 	andcs	r0, r0, r3
    23f8:	0000003a 	andeq	r0, r0, sl, lsr r0
    23fc:	00003a20 	andeq	r3, r0, r0, lsr #20
    2400:	4a210000 	bmi	842408 <__Stack_Size+0x842008>
    2404:	01000008 	tsteq	r0, r8
    2408:	00032633 	andeq	r2, r3, r3, lsr r6
    240c:	03262000 	teqeq	r6, #0
    2410:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2414:	00032c04 	andeq	r2, r3, r4, lsl #24
    2418:	08010200 	stmdaeq	r1, {r9}
    241c:	00000893 	muleq	r0, r3, r8
    2420:	00063513 	andeq	r3, r6, r3, lsl r5
    2424:	29630100 	stmdbcs	r3!, {r8}^
    2428:	44000002 	strmi	r0, [r0], #-2
    242c:	14000003 	strne	r0, [r0], #-3
    2430:	11a51f00 			; <UNDEFINED> instruction: 0x11a51f00
    2434:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    2438:	0000003a 	andeq	r0, r0, sl, lsr r0
    243c:	0000035e 	andeq	r0, r0, lr, asr r3
    2440:	00005e20 	andeq	r5, r0, r0, lsr #28
    2444:	00d82000 	sbcseq	r2, r8, r0
    2448:	22000000 	andcs	r0, r0, #0
    244c:	000011da 	ldrdeq	r1, [r0], -sl
    2450:	20027206 	andcs	r7, r2, r6, lsl #4
    2454:	0000005e 	andeq	r0, r0, lr, asr r0
    2458:	02220000 	eoreq	r0, r2, #0
    245c:	00040000 	andeq	r0, r4, r0
    2460:	000007b9 			; <UNDEFINED> instruction: 0x000007b9
    2464:	02c10104 	sbceq	r0, r1, #4, 2
    2468:	8d010000 	stchi	0, cr0, [r1, #-0]
    246c:	9a000012 	bls	24bc <__Stack_Size+0x20bc>
    2470:	50000000 	andpl	r0, r0, r0
    2474:	00000003 	andeq	r0, r0, r3
    2478:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    247c:	0200000a 	andeq	r0, r0, #10
    2480:	071d0504 	ldreq	r0, [sp, -r4, lsl #10]
    2484:	02020000 	andeq	r0, r2, #0
    2488:	0006ef05 	andeq	lr, r6, r5, lsl #30
    248c:	06010200 	streq	r0, [r1], -r0, lsl #4
    2490:	0000088c 	andeq	r0, r0, ip, lsl #17
    2494:	19070402 	stmdbne	r7, {r1, sl}
    2498:	03000008 	movweq	r0, #8
    249c:	00363175 	eorseq	r3, r6, r5, ror r1
    24a0:	004c2802 	subeq	r2, ip, r2, lsl #16
    24a4:	02020000 	andeq	r0, r2, #0
    24a8:	000a7307 	andeq	r7, sl, r7, lsl #6
    24ac:	38750300 	ldmdacc	r5!, {r8, r9}^
    24b0:	5d290200 	sfmpl	f0, 4, [r9, #-0]
    24b4:	02000000 	andeq	r0, r0, #0
    24b8:	088a0801 	stmeq	sl, {r0, fp}
    24bc:	04020000 	streq	r0, [r2], #-0
    24c0:	00081007 	andeq	r1, r8, r7
    24c4:	53040400 	movwpl	r0, #17408	; 0x4400
    24c8:	05000000 	streq	r0, [r0, #-0]
    24cc:	00001242 	andeq	r1, r0, r2, asr #4
    24d0:	96300301 	ldrtls	r0, [r0], -r1, lsl #6
    24d4:	06000000 	streq	r0, [r0], -r0
    24d8:	00001256 	andeq	r1, r0, r6, asr r2
    24dc:	12ec0600 	rscne	r0, ip, #0, 12
    24e0:	06010000 	streq	r0, [r1], -r0
    24e4:	0000127f 	andeq	r1, r0, pc, ror r2
    24e8:	12de0602 	sbcsne	r0, lr, #2097152	; 0x200000
    24ec:	00030000 	andeq	r0, r3, r0
    24f0:	00124307 	andseq	r4, r2, r7, lsl #6
    24f4:	71370300 	teqvc	r7, r0, lsl #6
    24f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    24fc:	0000006b 	andeq	r0, r0, fp, rrx
    2500:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2504:	00004109 	andeq	r4, r0, r9, lsl #2
    2508:	04040000 	streq	r0, [r4], #-0
    250c:	000000a1 	andeq	r0, r0, r1, lsr #1
    2510:	0011f50a 	andseq	pc, r1, sl, lsl #10
    2514:	7f033000 	svcvc	0x00033000
    2518:	00000153 	andeq	r0, r0, r3, asr r1
    251c:	00230b0b 	eoreq	r0, r3, fp, lsl #22
    2520:	54810300 	strpl	r0, [r1], #768	; 0x300
    2524:	00000001 	andeq	r0, r0, r1
    2528:	0015220b 	andseq	r2, r5, fp, lsl #4
    252c:	54820300 	strpl	r0, [r2], #768	; 0x300
    2530:	04000001 	streq	r0, [r0], #-1
    2534:	0012c50b 	andseq	ip, r2, fp, lsl #10
    2538:	54850300 	strpl	r0, [r5], #768	; 0x300
    253c:	08000001 	stmdaeq	r0, {r0}
    2540:	0012620b 	andseq	r6, r2, fp, lsl #4
    2544:	54860300 	strpl	r0, [r6], #768	; 0x300
    2548:	0c000001 	stceq	0, cr0, [r0], {1}
    254c:	0012980b 	andseq	r9, r2, fp, lsl #16
    2550:	69980300 	ldmibvs	r8, {r8, r9}
    2554:	10000001 	andne	r0, r0, r1
    2558:	0012190b 	andseq	r1, r2, fp, lsl #18
    255c:	69a30300 	stmibvs	r3!, {r8, r9}
    2560:	14000001 	strne	r0, [r0], #-1
    2564:	0012a90b 	andseq	sl, r2, fp, lsl #18
    2568:	83ad0300 			; <UNDEFINED> instruction: 0x83ad0300
    256c:	18000001 	stmdane	r0, {r0}
    2570:	0014ee0b 	andseq	lr, r4, fp, lsl #28
    2574:	b0af0300 	adclt	r0, pc, r0, lsl #6
    2578:	1c000000 	stcne	0, cr0, [r0], {-0}
    257c:	0018310b 	andseq	r3, r8, fp, lsl #2
    2580:	b0b00300 	adcslt	r0, r0, r0, lsl #6
    2584:	20000000 	andcs	r0, r0, r0
    2588:	00172f0b 	andseq	r2, r7, fp, lsl #30
    258c:	b0b10300 	adcslt	r0, r1, r0, lsl #6
    2590:	24000000 	strcs	r0, [r0], #-0
    2594:	0012020b 	andseq	r0, r2, fp, lsl #4
    2598:	89b50300 	ldmibhi	r5!, {r8, r9}
    259c:	28000001 	stmdacs	r0, {r0}
    25a0:	00315b0b 	eorseq	r5, r1, fp, lsl #22
    25a4:	53b70300 			; <UNDEFINED> instruction: 0x53b70300
    25a8:	2c000000 	stccs	0, cr0, [r0], {-0}
    25ac:	04040c00 	streq	r0, [r4], #-3072	; 0xc00
    25b0:	00000153 	andeq	r0, r0, r3, asr r1
    25b4:	00009608 	andeq	r9, r0, r8, lsl #12
    25b8:	00016900 	andeq	r6, r1, r0, lsl #18
    25bc:	00530900 	subseq	r0, r3, r0, lsl #18
    25c0:	04000000 	streq	r0, [r0], #-0
    25c4:	00015a04 	andeq	r5, r1, r4, lsl #20
    25c8:	00960800 	addseq	r0, r6, r0, lsl #16
    25cc:	01830000 	orreq	r0, r3, r0
    25d0:	53090000 	movwpl	r0, #36864	; 0x9000
    25d4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    25d8:	00000053 	andeq	r0, r0, r3, asr r0
    25dc:	6f040400 	svcvs	0x00040400
    25e0:	0d000001 	stceq	0, cr0, [r0, #-4]
    25e4:	11f60704 	mvnsne	r0, r4, lsl #14
    25e8:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    25ec:	000000b6 	strheq	r0, [r0], -r6
    25f0:	000e930e 	andeq	r9, lr, lr, lsl #6
    25f4:	7c3e0100 	ldfvcs	f0, [lr], #-0
    25f8:	6c080004 	stcvs	0, cr0, [r8], {4}
    25fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2600:	0001b59c 	muleq	r1, ip, r5
    2604:	04aa0f00 	strteq	r0, [sl], #3840	; 0xf00
    2608:	021e0800 	andseq	r0, lr, #0, 16
    260c:	10000000 	andne	r0, r0, r0
    2610:	0000123c 	andeq	r1, r0, ip, lsr r2
    2614:	01c61a01 	biceq	r1, r6, r1, lsl #20
    2618:	03050000 	movweq	r0, #20480	; 0x5000
    261c:	20000630 	andcs	r0, r0, r0, lsr r6
    2620:	00004111 	andeq	r4, r0, r1, lsl r1
    2624:	122c1200 	eorne	r1, ip, #0, 4
    2628:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    262c:	0000018b 	andeq	r0, r0, fp, lsl #3
    2630:	00124a10 	andseq	r4, r2, r0, lsl sl
    2634:	e71b0100 	ldr	r0, [fp, -r0, lsl #2]
    2638:	05000001 	streq	r0, [r0, #-1]
    263c:	00016403 	andeq	r6, r1, r3, lsl #8
    2640:	00531120 	subseq	r1, r3, r0, lsr #2
    2644:	54130000 	ldrpl	r0, [r3], #-0
    2648:	fc000001 	stc2	0, cr0, [r0], {1}
    264c:	14000001 	strne	r0, [r0], #-1
    2650:	00000064 	andeq	r0, r0, r4, rrx
    2654:	75100006 	ldrvc	r0, [r0, #-6]
    2658:	01000012 	tsteq	r0, r2, lsl r0
    265c:	0001ec25 	andeq	lr, r1, r5, lsr #24
    2660:	38030500 	stmdacc	r3, {r8, sl}
    2664:	10200000 	eorne	r0, r0, r0
    2668:	0000120e 	andeq	r1, r0, lr, lsl #4
    266c:	01ec3001 	mvneq	r3, r1
    2670:	03050000 	movweq	r0, #20480	; 0x5000
    2674:	2000001c 	andcs	r0, r0, ip, lsl r0
    2678:	0012d715 	andseq	sp, r2, r5, lsl r7
    267c:	001a0400 	andseq	r0, sl, r0, lsl #8
    2680:	00000b51 	andeq	r0, r0, r1, asr fp
    2684:	08c20004 	stmiaeq	r2, {r2}^
    2688:	01040000 	mrseq	r0, (UNDEF: 4)
    268c:	000002c1 	andeq	r0, r0, r1, asr #5
    2690:	00139401 	andseq	r9, r3, r1, lsl #8
    2694:	00009a00 	andeq	r9, r0, r0, lsl #20
    2698:	00036000 	andeq	r6, r3, r0
    269c:	00000000 	andeq	r0, r0, r0
    26a0:	000b4900 	andeq	r4, fp, r0, lsl #18
    26a4:	05040200 	streq	r0, [r4, #-512]	; 0x200
    26a8:	0000071d 	andeq	r0, r0, sp, lsl r7
    26ac:	ef050202 	svc	0x00050202
    26b0:	02000006 	andeq	r0, r0, #6
    26b4:	088c0601 	stmeq	ip, {r0, r9, sl}
    26b8:	75030000 	strvc	r0, [r3, #-0]
    26bc:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    26c0:	00004527 	andeq	r4, r0, r7, lsr #10
    26c4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    26c8:	00000819 	andeq	r0, r0, r9, lsl r8
    26cc:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    26d0:	57280200 	strpl	r0, [r8, -r0, lsl #4]!
    26d4:	02000000 	andeq	r0, r0, #0
    26d8:	0a730702 	beq	1cc42e8 <__Stack_Size+0x1cc3ee8>
    26dc:	75030000 	strvc	r0, [r3, #-0]
    26e0:	29020038 	stmdbcs	r2, {r3, r4, r5}
    26e4:	00000068 	andeq	r0, r0, r8, rrx
    26e8:	8a080102 	bhi	202af8 <__Stack_Size+0x2026f8>
    26ec:	02000008 	andeq	r0, r0, #8
    26f0:	08100704 	ldmdaeq	r0, {r2, r8, r9, sl}
    26f4:	6c040000 	stcvs	0, cr0, [r4], {-0}
    26f8:	01000014 	tsteq	r0, r4, lsl r0
    26fc:	009b1604 	addseq	r1, fp, r4, lsl #12
    2700:	d4050000 	strle	r0, [r5], #-0
    2704:	00000015 	andeq	r0, r0, r5, lsl r0
    2708:	0016ef05 	andseq	lr, r6, r5, lsl #30
    270c:	f7050100 			; <UNDEFINED> instruction: 0xf7050100
    2710:	02000013 	andeq	r0, r0, #19
    2714:	00184505 	andseq	r4, r8, r5, lsl #10
    2718:	06000300 	streq	r0, [r0], -r0, lsl #6
    271c:	0000132e 	andeq	r1, r0, lr, lsr #6
    2720:	c0270308 	eorgt	r0, r7, r8, lsl #6
    2724:	07000000 	streq	r0, [r0, -r0]
    2728:	0000159d 	muleq	r0, sp, r5
    272c:	00c02903 	sbceq	r2, r0, r3, lsl #18
    2730:	07000000 	streq	r0, [r0, -r0]
    2734:	00001528 	andeq	r1, r0, r8, lsr #10
    2738:	004c2a03 	subeq	r2, ip, r3, lsl #20
    273c:	00040000 	andeq	r0, r4, r0
    2740:	005e0408 	subseq	r0, lr, r8, lsl #8
    2744:	1f090000 	svcne	0x00090000
    2748:	03000016 	movweq	r0, #22
    274c:	00009b2c 	andeq	r9, r0, ip, lsr #22
    2750:	161e0900 	ldrne	r0, [lr], -r0, lsl #18
    2754:	2c030000 	stccs	0, cr0, [r3], {-0}
    2758:	000000dc 	ldrdeq	r0, [r0], -ip
    275c:	009b0408 	addseq	r0, fp, r8, lsl #8
    2760:	42040000 	andmi	r0, r4, #0
    2764:	01000012 	tsteq	r0, r2, lsl r0
    2768:	01073003 	tsteq	r7, r3
    276c:	56050000 	strpl	r0, [r5], -r0
    2770:	00000012 	andeq	r0, r0, r2, lsl r0
    2774:	0012ec05 	andseq	lr, r2, r5, lsl #24
    2778:	7f050100 	svcvc	0x00050100
    277c:	02000012 	andeq	r0, r0, #18
    2780:	0012de05 	andseq	sp, r2, r5, lsl #28
    2784:	09000300 	stmdbeq	r0, {r8, r9}
    2788:	00001243 	andeq	r1, r0, r3, asr #4
    278c:	00e23703 	rsceq	r3, r2, r3, lsl #14
    2790:	94060000 	strls	r0, [r6], #-0
    2794:	0c000016 	stceq	0, cr0, [r0], {22}
    2798:	014f3b03 	cmpeq	pc, r3, lsl #22
    279c:	20070000 	andcs	r0, r7, r0
    27a0:	03000014 	movweq	r0, #20
    27a4:	00004c53 	andeq	r4, r0, r3, asr ip
    27a8:	e0070000 	and	r0, r7, r0
    27ac:	03000017 	movweq	r0, #23
    27b0:	00004c54 	andeq	r4, r0, r4, asr ip
    27b4:	5e070200 	cdppl	2, 0, cr0, cr7, cr0, {0}
    27b8:	03000031 	movweq	r0, #49	; 0x31
    27bc:	00004c55 	andeq	r4, r0, r5, asr ip
    27c0:	03070400 	movweq	r0, #29696	; 0x7400
    27c4:	03000017 	movweq	r0, #23
    27c8:	00015e56 	andeq	r5, r1, r6, asr lr
    27cc:	0a000800 	beq	47d4 <__Stack_Size+0x43d4>
    27d0:	000000c0 	andeq	r0, r0, r0, asr #1
    27d4:	0000015e 	andeq	r0, r0, lr, asr r1
    27d8:	00004c0b 	andeq	r4, r0, fp, lsl #24
    27dc:	04080000 	streq	r0, [r8], #-0
    27e0:	0000014f 	andeq	r0, r0, pc, asr #2
    27e4:	00169509 	andseq	r9, r6, r9, lsl #10
    27e8:	12570300 	subsne	r0, r7, #0, 6
    27ec:	06000001 	streq	r0, [r0], -r1
    27f0:	000016da 	ldrdeq	r1, [r0], -sl
    27f4:	945b0302 	ldrbls	r0, [fp], #-770	; 0x302
    27f8:	07000001 	streq	r0, [r0, -r1]
    27fc:	00001502 	andeq	r1, r0, r2, lsl #10
    2800:	005e5d03 	subseq	r5, lr, r3, lsl #26
    2804:	07000000 	streq	r0, [r0, -r0]
    2808:	0000162e 	andeq	r1, r0, lr, lsr #12
    280c:	005e5e03 	subseq	r5, lr, r3, lsl #28
    2810:	00010000 	andeq	r0, r1, r0
    2814:	0016db09 	andseq	sp, r6, r9, lsl #22
    2818:	6f600300 	svcvs	0x00600300
    281c:	0c000001 	stceq	0, cr0, [r0], {1}
    2820:	02005742 	andeq	r5, r0, #17301504	; 0x1080000
    2824:	01c36503 	biceq	r6, r3, r3, lsl #10
    2828:	620d0000 	andvs	r0, sp, #0
    282c:	03003162 	movweq	r3, #354	; 0x162
    2830:	00005e67 	andeq	r5, r0, r7, ror #28
    2834:	620d0000 	andvs	r0, sp, #0
    2838:	03003062 	movweq	r3, #98	; 0x62
    283c:	00005e68 	andeq	r5, r0, r8, ror #28
    2840:	0e000100 	adfeqs	f0, f0, f0
    2844:	df620302 	svcle	0x00620302
    2848:	0f000001 	svceq	0x00000001
    284c:	64030077 	strvs	r0, [r3], #-119	; 0x77
    2850:	0000004c 	andeq	r0, r0, ip, asr #32
    2854:	0077620f 	rsbseq	r6, r7, pc, lsl #4
    2858:	019f6a03 	orrseq	r6, pc, r3, lsl #20
    285c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2860:	00001855 	andeq	r1, r0, r5, asr r8
    2864:	01c36b03 	biceq	r6, r3, r3, lsl #22
    2868:	87060000 	strhi	r0, [r6, -r0]
    286c:	1c000013 	stcne	0, cr0, [r0], {19}
    2870:	027b6d03 	rsbseq	r6, fp, #3, 26	; 0xc0
    2874:	43070000 	movwmi	r0, #28672	; 0x7000
    2878:	03000017 	movweq	r0, #23
    287c:	00005e6f 	andeq	r5, r0, pc, ror #28
    2880:	f6070000 			; <UNDEFINED> instruction: 0xf6070000
    2884:	03000012 	movweq	r0, #18
    2888:	00005e70 	andeq	r5, r0, r0, ror lr
    288c:	d2070100 	andle	r0, r7, #0, 2
    2890:	03000014 	movweq	r0, #20
    2894:	0001df71 	andeq	sp, r1, r1, ror pc
    2898:	ad070200 	sfmge	f0, 4, [r7, #-0]
    289c:	03000013 	movweq	r0, #19
    28a0:	0001df72 	andeq	sp, r1, r2, ror pc
    28a4:	b2070400 	andlt	r0, r7, #0, 8
    28a8:	03000015 	movweq	r0, #21
    28ac:	0001df73 	andeq	sp, r1, r3, ror pc
    28b0:	e2070600 	and	r0, r7, #0, 12
    28b4:	03000016 	movweq	r0, #22
    28b8:	00005e75 	andeq	r5, r0, r5, ror lr
    28bc:	d0070800 	andle	r0, r7, r0, lsl #16
    28c0:	03000017 	movweq	r0, #23
    28c4:	00005e76 	andeq	r5, r0, r6, ror lr
    28c8:	be070900 	cdplt	9, 0, cr0, cr7, cr0, {0}
    28cc:	03000015 	movweq	r0, #21
    28d0:	00005e77 	andeq	r5, r0, r7, ror lr
    28d4:	0c070a00 	stceq	10, cr0, [r7], {-0}
    28d8:	03000016 	movweq	r0, #22
    28dc:	00005e78 	andeq	r5, r0, r8, ror lr
    28e0:	7b070b00 	blvc	1c54e8 <__Stack_Size+0x1c50e8>
    28e4:	03000016 	movweq	r0, #22
    28e8:	00005e79 	andeq	r5, r0, r9, ror lr
    28ec:	b4070c00 	strlt	r0, [r7], #-3072	; 0xc00
    28f0:	03000017 	movweq	r0, #23
    28f4:	0001647c 	andeq	r6, r1, ip, ror r4
    28f8:	09001000 	stmdbeq	r0, {ip}
    28fc:	00001388 	andeq	r1, r0, r8, lsl #7
    2900:	01ea7d03 	mvneq	r7, r3, lsl #26
    2904:	f5060000 			; <UNDEFINED> instruction: 0xf5060000
    2908:	30000011 	andcc	r0, r0, r1, lsl r0
    290c:	03237f03 	teqeq	r3, #3, 30
    2910:	0b070000 	bleq	1c2918 <__Stack_Size+0x1c2518>
    2914:	03000023 	movweq	r0, #35	; 0x23
    2918:	00032481 	andeq	r2, r3, r1, lsl #9
    291c:	22070000 	andcs	r0, r7, #0
    2920:	03000015 	movweq	r0, #21
    2924:	00032482 	andeq	r2, r3, r2, lsl #9
    2928:	c5070400 	strgt	r0, [r7, #-1024]	; 0x400
    292c:	03000012 	movweq	r0, #18
    2930:	00032485 	andeq	r2, r3, r5, lsl #9
    2934:	62070800 	andvs	r0, r7, #0, 16
    2938:	03000012 	movweq	r0, #18
    293c:	00032486 	andeq	r2, r3, r6, lsl #9
    2940:	98070c00 	stmdals	r7, {sl, fp}
    2944:	03000012 	movweq	r0, #18
    2948:	00033998 	muleq	r3, r8, r9
    294c:	19071000 	stmdbne	r7, {ip}
    2950:	03000012 	movweq	r0, #18
    2954:	000339a3 	andeq	r3, r3, r3, lsr #19
    2958:	a9071400 	stmdbge	r7, {sl, ip}
    295c:	03000012 	movweq	r0, #18
    2960:	000353ad 	andeq	r5, r3, sp, lsr #7
    2964:	ee071800 	cdp	8, 0, cr1, cr7, cr0, {0}
    2968:	03000014 	movweq	r0, #20
    296c:	00015eaf 	andeq	r5, r1, pc, lsr #29
    2970:	31071c00 	tstcc	r7, r0, lsl #24
    2974:	03000018 	movweq	r0, #24
    2978:	00015eb0 			; <UNDEFINED> instruction: 0x00015eb0
    297c:	2f072000 	svccs	0x00072000
    2980:	03000017 	movweq	r0, #23
    2984:	00015eb1 			; <UNDEFINED> instruction: 0x00015eb1
    2988:	02072400 	andeq	r2, r7, #0, 8
    298c:	03000012 	movweq	r0, #18
    2990:	000359b5 			; <UNDEFINED> instruction: 0x000359b5
    2994:	5b072800 	blpl	1cc99c <__Stack_Size+0x1cc59c>
    2998:	03000031 	movweq	r0, #49	; 0x31
    299c:	00005eb7 			; <UNDEFINED> instruction: 0x00005eb7
    29a0:	10002c00 	andne	r2, r0, r0, lsl #24
    29a4:	03230408 	teqeq	r3, #8, 8	; 0x8000000
    29a8:	070a0000 	streq	r0, [sl, -r0]
    29ac:	39000001 	stmdbcc	r0, {r0}
    29b0:	0b000003 	bleq	29c4 <__Stack_Size+0x25c4>
    29b4:	0000005e 	andeq	r0, r0, lr, asr r0
    29b8:	2a040800 	bcs	1049c0 <__Stack_Size+0x1045c0>
    29bc:	0a000003 	beq	29d0 <__Stack_Size+0x25d0>
    29c0:	00000107 	andeq	r0, r0, r7, lsl #2
    29c4:	00000353 	andeq	r0, r0, r3, asr r3
    29c8:	00005e0b 	andeq	r5, r0, fp, lsl #28
    29cc:	005e0b00 	subseq	r0, lr, r0, lsl #22
    29d0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    29d4:	00033f04 	andeq	r3, r3, r4, lsl #30
    29d8:	09041100 	stmdbeq	r4, {r8, ip}
    29dc:	000011f6 	strdeq	r1, [r0], -r6
    29e0:	0286b903 	addeq	fp, r6, #49152	; 0xc000
    29e4:	48060000 	stmdami	r6, {}	; <UNPREDICTABLE>
    29e8:	24000013 	strcs	r0, [r0], #-19
    29ec:	03dfbb03 	bicseq	fp, pc, #3072	; 0xc00
    29f0:	4a070000 	bmi	1c29f8 <__Stack_Size+0x1c25f8>
    29f4:	03000016 	movweq	r0, #22
    29f8:	000324bd 			; <UNDEFINED> instruction: 0x000324bd
    29fc:	46070000 	strmi	r0, [r7], -r0
    2a00:	03000015 	movweq	r0, #21
    2a04:	000324be 			; <UNDEFINED> instruction: 0x000324be
    2a08:	c0070400 	andgt	r0, r7, r0, lsl #8
    2a0c:	03000014 	movweq	r0, #20
    2a10:	000324bf 			; <UNDEFINED> instruction: 0x000324bf
    2a14:	5c070800 	stcpl	8, cr0, [r7], {-0}
    2a18:	03000015 	movweq	r0, #21
    2a1c:	000324c0 	andeq	r2, r3, r0, asr #9
    2a20:	60070c00 	andvs	r0, r7, r0, lsl #24
    2a24:	03000013 	movweq	r0, #19
    2a28:	000324c1 	andeq	r2, r3, r1, asr #9
    2a2c:	0c071000 	stceq	0, cr1, [r7], {-0}
    2a30:	03000017 	movweq	r0, #23
    2a34:	000324c2 	andeq	r2, r3, r2, asr #9
    2a38:	ec071400 	cfstrs	mvf1, [r7], {-0}
    2a3c:	03000017 	movweq	r0, #23
    2a40:	000324c3 	andeq	r2, r3, r3, asr #9
    2a44:	0a071800 	beq	1c8a4c <__Stack_Size+0x1c864c>
    2a48:	03000014 	movweq	r0, #20
    2a4c:	000324c4 	andeq	r2, r3, r4, asr #9
    2a50:	b8071c00 	stmdalt	r7, {sl, fp, ip}
    2a54:	03000013 	movweq	r0, #19
    2a58:	000324c5 	andeq	r2, r3, r5, asr #9
    2a5c:	09002000 	stmdbeq	r0, {sp}
    2a60:	00001349 	andeq	r1, r0, r9, asr #6
    2a64:	0366c703 	cmneq	r6, #786432	; 0xc0000
    2a68:	08120000 	ldmdaeq	r2, {}	; <UNPREDICTABLE>
    2a6c:	04231605 	strteq	r1, [r3], #-1541	; 0x605
    2a70:	4b070000 	blmi	1c2a78 <__Stack_Size+0x1c2678>
    2a74:	05000014 	streq	r0, [r0, #-20]
    2a78:	00003a18 	andeq	r3, r0, r8, lsl sl
    2a7c:	0f070000 	svceq	0x00070000
    2a80:	05000013 	streq	r0, [r0, #-19]
    2a84:	00005e19 	andeq	r5, r0, r9, lsl lr
    2a88:	6f070400 	svcvs	0x00070400
    2a8c:	05000013 	streq	r0, [r0, #-19]
    2a90:	00005e1a 	andeq	r5, r0, sl, lsl lr
    2a94:	d1070500 	tstle	r7, r0, lsl #10
    2a98:	05000016 	streq	r0, [r0, #-22]
    2a9c:	00005e1b 	andeq	r5, r0, fp, lsl lr
    2aa0:	09000600 	stmdbeq	r0, {r9, sl}
    2aa4:	00001872 	andeq	r1, r0, r2, ror r8
    2aa8:	03ea1c05 	mvneq	r1, #1280	; 0x500
    2aac:	c2040000 	andgt	r0, r4, #0
    2ab0:	01000008 	tsteq	r0, r8
    2ab4:	045f3006 	ldrbeq	r3, [pc], #-6	; 2abc <__Stack_Size+0x26bc>
    2ab8:	04050000 	streq	r0, [r5], #-0
    2abc:	00000009 	andeq	r0, r0, r9
    2ac0:	000a8605 	andeq	r8, sl, r5, lsl #12
    2ac4:	24050100 	strcs	r0, [r5], #-256	; 0x100
    2ac8:	02000005 	andeq	r0, r0, #5
    2acc:	000ac605 	andeq	ip, sl, r5, lsl #12
    2ad0:	f1050300 			; <UNDEFINED> instruction: 0xf1050300
    2ad4:	04000003 	streq	r0, [r0], #-3
    2ad8:	00086e05 	andeq	r6, r8, r5, lsl #28
    2adc:	13000500 	movwne	r0, #1280	; 0x500
    2ae0:	000016a3 	andeq	r1, r0, r3, lsr #13
    2ae4:	04e8c901 	strbteq	ip, [r8], #2305	; 0x901
    2ae8:	00180800 	andseq	r0, r8, r0, lsl #16
    2aec:	9c010000 	stcls	0, cr0, [r1], {-0}
    2af0:	00000480 	andeq	r0, r0, r0, lsl #9
    2af4:	00156e14 	andseq	r6, r5, r4, lsl lr
    2af8:	80cb0100 	sbchi	r0, fp, r0, lsl #2
    2afc:	00000004 	andeq	r0, r0, r4
    2b00:	027b0408 	rsbseq	r0, fp, #8, 8	; 0x8000000
    2b04:	74150000 	ldrvc	r0, [r5], #-0
    2b08:	01000015 	tsteq	r0, r5, lsl r0
    2b0c:	000500db 	ldrdeq	r0, [r5], -fp
    2b10:	00000c08 	andeq	r0, r0, r8, lsl #24
    2b14:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    2b18:	00001660 	andeq	r1, r0, r0, ror #12
    2b1c:	050ce801 	streq	lr, [ip, #-2049]	; 0x801
    2b20:	00140800 	andseq	r0, r4, r0, lsl #16
    2b24:	9c010000 	stcls	0, cr0, [r1], {-0}
    2b28:	00175415 	andseq	r5, r7, r5, lsl r4
    2b2c:	20fb0100 	rscscs	r0, fp, r0, lsl #2
    2b30:	02080005 	andeq	r0, r8, #5
    2b34:	01000000 	mrseq	r0, (UNDEF: 0)
    2b38:	1804169c 	stmdane	r4, {r2, r3, r4, r7, r9, sl, ip}
    2b3c:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    2b40:	00010701 	andeq	r0, r1, r1, lsl #14
    2b44:	00052400 	andeq	r2, r5, r0, lsl #8
    2b48:	00005c08 	andeq	r5, r0, r8, lsl #24
    2b4c:	009c0100 	addseq	r0, ip, r0, lsl #2
    2b50:	17000005 	strne	r0, [r0, -r5]
    2b54:	000015a8 	andeq	r1, r0, r8, lsr #11
    2b58:	5e010801 	cdppl	8, 0, cr0, cr1, cr1, {0}
    2b5c:	53000000 	movwpl	r0, #0
    2b60:	18000005 	stmdane	r0, {r0, r2}
    2b64:	000016c5 	andeq	r1, r0, r5, asr #13
    2b68:	5e010d01 	cdppl	13, 0, cr0, cr1, cr1, {0}
    2b6c:	8d000001 	stchi	0, cr0, [r0, #-4]
    2b70:	19000005 	stmdbne	r0, {r0, r2}
    2b74:	0800056a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl}
    2b78:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    2b7c:	00000074 	andeq	r0, r0, r4, ror r0
    2b80:	0013d916 	andseq	sp, r3, r6, lsl r9
    2b84:	01340100 	teqeq	r4, r0, lsl #2
    2b88:	00000107 	andeq	r0, r0, r7, lsl #2
    2b8c:	08000580 	stmdaeq	r0, {r7, r8, sl}
    2b90:	00000024 	andeq	r0, r0, r4, lsr #32
    2b94:	052b9c01 	streq	r9, [fp, #-3073]!	; 0xc01
    2b98:	a8170000 	ldmdage	r7, {}	; <UNPREDICTABLE>
    2b9c:	01000015 	tsteq	r0, r5, lsl r0
    2ba0:	005e0134 	subseq	r0, lr, r4, lsr r1
    2ba4:	05cf0000 	strbeq	r0, [pc]	; 2bac <__Stack_Size+0x27ac>
    2ba8:	16000000 	strne	r0, [r0], -r0
    2bac:	00001781 	andeq	r1, r0, r1, lsl #15
    2bb0:	07018e01 	streq	r8, [r1, -r1, lsl #28]
    2bb4:	a4000001 	strge	r0, [r0], #-1
    2bb8:	10080005 	andne	r0, r8, r5
    2bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    2bc0:	0005649c 	muleq	r5, ip, r4
    2bc4:	16141700 	ldrne	r1, [r4], -r0, lsl #14
    2bc8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2bcc:	00005e01 	andeq	r5, r0, r1, lsl #28
    2bd0:	00060900 	andeq	r0, r6, r0, lsl #18
    2bd4:	16831b00 	strne	r1, [r3], r0, lsl #22
    2bd8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2bdc:	00005e01 	andeq	r5, r0, r1, lsl #28
    2be0:	00510100 	subseq	r0, r1, r0, lsl #2
    2be4:	00149716 	andseq	r9, r4, r6, lsl r7
    2be8:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    2bec:	000000c0 	andeq	r0, r0, r0, asr #1
    2bf0:	080005b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl}
    2bf4:	00000018 	andeq	r0, r0, r8, lsl r0
    2bf8:	058f9c01 	streq	r9, [pc, #3073]	; 3801 <__Stack_Size+0x3401>
    2bfc:	55170000 	ldrpl	r0, [r7, #-0]
    2c00:	01000037 	tsteq	r0, r7, lsr r0
    2c04:	004c01a3 	subeq	r0, ip, r3, lsr #3
    2c08:	06430000 	strbeq	r0, [r3], -r0
    2c0c:	16000000 	strne	r0, [r0], -r0
    2c10:	000015ed 	andeq	r1, r0, sp, ror #11
    2c14:	c001c101 	andgt	ip, r1, r1, lsl #2
    2c18:	cc000000 	stcgt	0, cr0, [r0], {-0}
    2c1c:	2c080005 	stccs	0, cr0, [r8], {5}
    2c20:	01000000 	mrseq	r0, (UNDEF: 0)
    2c24:	0005ba9c 	muleq	r5, ip, sl
    2c28:	37551700 	ldrbcc	r1, [r5, -r0, lsl #14]
    2c2c:	c1010000 	mrsgt	r0, (UNDEF: 1)
    2c30:	00004c01 	andeq	r4, r0, r1, lsl #24
    2c34:	00066400 	andeq	r6, r6, r0, lsl #8
    2c38:	5c130000 	ldcpl	0, cr0, [r3], {-0}
    2c3c:	01000018 	tsteq	r0, r8, lsl r0
    2c40:	0005f86a 	andeq	pc, r5, sl, ror #16
    2c44:	00002408 	andeq	r2, r0, r8, lsl #8
    2c48:	eb9c0100 	bl	fe703050 <SCS_BASE+0x1e6f5050>
    2c4c:	1c000005 	stcne	0, cr0, [r0], {5}
    2c50:	080005fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl}
    2c54:	00000a50 	andeq	r0, r0, r0, asr sl
    2c58:	00060a1c 	andeq	r0, r6, ip, lsl sl
    2c5c:	000a5708 	andeq	r5, sl, r8, lsl #14
    2c60:	060e1c00 	streq	r1, [lr], -r0, lsl #24
    2c64:	0a620800 	beq	1884c6c <__Stack_Size+0x188486c>
    2c68:	13000000 	movwne	r0, #0
    2c6c:	00001511 	andeq	r1, r0, r1, lsl r5
    2c70:	061c8401 	ldreq	r8, [ip], -r1, lsl #8
    2c74:	00e00800 	rsceq	r0, r0, r0, lsl #16
    2c78:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c7c:	00000812 	andeq	r0, r0, r2, lsl r8
    2c80:	0006341d 	andeq	r3, r6, sp, lsl r4
    2c84:	000a6d08 	andeq	r6, sl, r8, lsl #26
    2c88:	00061400 	andeq	r1, r6, r0, lsl #8
    2c8c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2c90:	00007402 	andeq	r7, r0, r2, lsl #8
    2c94:	00063e1d 	andeq	r3, r6, sp, lsl lr
    2c98:	000a7f08 	andeq	r7, sl, r8, lsl #30
    2c9c:	00062f00 	andeq	r2, r6, r0, lsl #30
    2ca0:	51011a00 	tstpl	r1, r0, lsl #20
    2ca4:	02000a03 	andeq	r0, r0, #12288	; 0x3000
    2ca8:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    2cac:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    2cb0:	08000646 	stmdaeq	r0, {r1, r2, r6, r9, sl}
    2cb4:	00000a96 	muleq	r0, r6, sl
    2cb8:	00000648 	andeq	r0, r0, r8, asr #12
    2cbc:	0151011a 	cmpeq	r1, sl, lsl r1
    2cc0:	50011a40 	andpl	r1, r1, r0, asr #20
    2cc4:	00007402 	andeq	r7, r0, r2, lsl #8
    2cc8:	00064e1d 	andeq	r4, r6, sp, lsl lr
    2ccc:	000aad08 	andeq	sl, sl, r8, lsl #26
    2cd0:	00066200 	andeq	r6, r6, r0, lsl #4
    2cd4:	51011a00 	tstpl	r1, r0, lsl #20
    2cd8:	1a400802 	bne	1004ce8 <__Stack_Size+0x10048e8>
    2cdc:	74025001 	strvc	r5, [r2], #-1
    2ce0:	561d0000 	ldrpl	r0, [sp], -r0
    2ce4:	c4080006 	strgt	r0, [r8], #-6
    2ce8:	7c00000a 	stcvc	0, cr0, [r0], {10}
    2cec:	1a000006 	bne	2d0c <__Stack_Size+0x290c>
    2cf0:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    2cf4:	50011a80 	andpl	r1, r1, r0, lsl #21
    2cf8:	00007402 	andeq	r7, r0, r2, lsl #8
    2cfc:	00065c1d 	andeq	r5, r6, sp, lsl ip
    2d00:	000adb08 	andeq	sp, sl, r8, lsl #22
    2d04:	00069000 	andeq	r9, r6, r0
    2d08:	50011a00 	andpl	r1, r1, r0, lsl #20
    2d0c:	00007402 	andeq	r7, r0, r2, lsl #8
    2d10:	0006681d 	andeq	r6, r6, sp, lsl r8
    2d14:	000aed08 	andeq	lr, sl, r8, lsl #26
    2d18:	0006a400 	andeq	sl, r6, r0, lsl #8
    2d1c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2d20:	00007402 	andeq	r7, r0, r2, lsl #8
    2d24:	00066e1d 	andeq	r6, r6, sp, lsl lr
    2d28:	000b0408 	andeq	r0, fp, r8, lsl #8
    2d2c:	0006b800 	andeq	fp, r6, r0, lsl #16
    2d30:	50011a00 	andpl	r1, r1, r0, lsl #20
    2d34:	00007402 	andeq	r7, r0, r2, lsl #8
    2d38:	0006761d 	andeq	r7, r6, sp, lsl r6
    2d3c:	000a7f08 	andeq	r7, sl, r8, lsl #30
    2d40:	0006d100 	andeq	sp, r6, r0, lsl #2
    2d44:	51011a00 	tstpl	r1, r0, lsl #20
    2d48:	1a007402 	bne	1fd58 <__Stack_Size+0x1f958>
    2d4c:	31015001 	tstcc	r1, r1
    2d50:	067e1d00 	ldrbteq	r1, [lr], -r0, lsl #26
    2d54:	0ac40800 	beq	ff104d5c <SCS_BASE+0x1f0f6d5c>
    2d58:	06ea0000 	strbteq	r0, [sl], r0
    2d5c:	011a0000 	tsteq	sl, r0
    2d60:	c0080251 	andgt	r0, r8, r1, asr r2
    2d64:	0150011a 	cmpeq	r0, sl, lsl r1
    2d68:	861d0031 			; <UNDEFINED> instruction: 0x861d0031
    2d6c:	96080006 	strls	r0, [r8], -r6
    2d70:	0300000a 	movweq	r0, #10
    2d74:	1a000007 	bne	2d98 <__Stack_Size+0x2998>
    2d78:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    2d7c:	50011a20 	andpl	r1, r1, r0, lsr #20
    2d80:	1d003101 	stfnes	f3, [r0, #-4]
    2d84:	0800068e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sl}
    2d88:	00000b16 	andeq	r0, r0, r6, lsl fp
    2d8c:	0000071c 	andeq	r0, r0, ip, lsl r7
    2d90:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    2d94:	011a0074 	tsteq	sl, r4, ror r0
    2d98:	00310150 	eorseq	r0, r1, r0, asr r1
    2d9c:	0006981d 	andeq	r9, r6, sp, lsl r8
    2da0:	000a7f08 	andeq	r7, sl, r8, lsl #30
    2da4:	00073600 	andeq	r3, r7, r0, lsl #12
    2da8:	51011a00 	tstpl	r1, r0, lsl #20
    2dac:	06000a03 	streq	r0, [r0], -r3, lsl #20
    2db0:	0150011a 	cmpeq	r0, sl, lsl r1
    2db4:	a21d0032 	andsge	r0, sp, #50	; 0x32
    2db8:	c4080006 	strgt	r0, [r8], #-6
    2dbc:	5000000a 	andpl	r0, r0, sl
    2dc0:	1a000007 	bne	2de4 <__Stack_Size+0x29e4>
    2dc4:	0a035101 	beq	d71d0 <__Stack_Size+0xd6dd0>
    2dc8:	011a0100 	tsteq	sl, r0, lsl #2
    2dcc:	00320150 	eorseq	r0, r2, r0, asr r1
    2dd0:	0006aa1d 	andeq	sl, r6, sp, lsl sl
    2dd4:	000b1608 	andeq	r1, fp, r8, lsl #12
    2dd8:	00076900 	andeq	r6, r7, r0, lsl #18
    2ddc:	51011a00 	tstpl	r1, r0, lsl #20
    2de0:	1a007402 	bne	1fdf0 <__Stack_Size+0x1f9f0>
    2de4:	32015001 	andcc	r5, r1, #1
    2de8:	06b21d00 	ldrteq	r1, [r2], r0, lsl #26
    2dec:	0a960800 	beq	fe584df4 <SCS_BASE+0x1e576df4>
    2df0:	07820000 	streq	r0, [r2, r0]
    2df4:	011a0000 	tsteq	sl, r0
    2df8:	20080251 	andcs	r0, r8, r1, asr r2
    2dfc:	0150011a 	cmpeq	r0, sl, lsl r1
    2e00:	ba1d0032 	blt	742ed0 <__Stack_Size+0x742ad0>
    2e04:	7f080006 	svcvc	0x00080006
    2e08:	9b00000a 	blls	2e38 <__Stack_Size+0x2a38>
    2e0c:	1a000007 	bne	2e30 <__Stack_Size+0x2a30>
    2e10:	74025101 	strvc	r5, [r2], #-257	; 0x101
    2e14:	50011a00 	andpl	r1, r1, r0, lsl #20
    2e18:	1d003301 	stcne	3, cr3, [r0, #-4]
    2e1c:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
    2e20:	00000aad 	andeq	r0, r0, sp, lsr #21
    2e24:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
    2e28:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    2e2c:	1a01100a 	bne	46e5c <__Stack_Size+0x46a5c>
    2e30:	33015001 	movwcc	r5, #4097	; 0x1001
    2e34:	06cc1d00 	strbeq	r1, [ip], r0, lsl #26
    2e38:	0aed0800 	beq	ffb44e40 <SCS_BASE+0x1fb36e40>
    2e3c:	07ce0000 	strbeq	r0, [lr, r0]
    2e40:	011a0000 	tsteq	sl, r0
    2e44:	40080251 	andmi	r0, r8, r1, asr r2
    2e48:	0150011a 	cmpeq	r0, sl, lsl r1
    2e4c:	d61d0033 			; <UNDEFINED> instruction: 0xd61d0033
    2e50:	16080006 	strne	r0, [r8], -r6
    2e54:	e800000b 	stmda	r0, {r0, r1, r3}
    2e58:	1a000007 	bne	2e7c <__Stack_Size+0x2a7c>
    2e5c:	0a035101 	beq	d7268 <__Stack_Size+0xd6e68>
    2e60:	011a3000 	tsteq	sl, r0
    2e64:	00330150 	eorseq	r0, r3, r0, asr r1
    2e68:	0006de1d 	andeq	sp, r6, sp, lsl lr
    2e6c:	000a9608 	andeq	r9, sl, r8, lsl #12
    2e70:	00080100 	andeq	r0, r8, r0, lsl #2
    2e74:	51011a00 	tstpl	r1, r0, lsl #20
    2e78:	1a007402 	bne	1fe88 <__Stack_Size+0x1fa88>
    2e7c:	33015001 	movwcc	r5, #4097	; 0x1001
    2e80:	06e41e00 	strbteq	r1, [r4], r0, lsl #28
    2e84:	0b2d0800 	bleq	b44e8c <__Stack_Size+0xb44a8c>
    2e88:	011a0000 	tsteq	sl, r0
    2e8c:	00740250 	rsbseq	r0, r4, r0, asr r2
    2e90:	dd160000 	ldcle	0, cr0, [r6, #-0]
    2e94:	01000014 	tsteq	r0, r4, lsl r0
    2e98:	00c0015d 	sbceq	r0, r0, sp, asr r1
    2e9c:	06fc0000 	ldrbteq	r0, [ip], r0
    2ea0:	000c0800 	andeq	r0, ip, r0, lsl #16
    2ea4:	9c010000 	stcls	0, cr0, [r1], {-0}
    2ea8:	00000850 	andeq	r0, r0, r0, asr r8
    2eac:	00375517 	eorseq	r5, r7, r7, lsl r5
    2eb0:	015d0100 	cmpeq	sp, r0, lsl #2
    2eb4:	0000004c 	andeq	r0, r0, ip, asr #32
    2eb8:	00000685 	andeq	r0, r0, r5, lsl #13
    2ebc:	0007021f 	andeq	r0, r7, pc, lsl r2
    2ec0:	000b3e08 	andeq	r3, fp, r8, lsl #28
    2ec4:	51011a00 	tstpl	r1, r0, lsl #20
    2ec8:	008c0305 	addeq	r0, ip, r5, lsl #6
    2ecc:	00002000 	andeq	r2, r0, r0
    2ed0:	00182016 	andseq	r2, r8, r6, lsl r0
    2ed4:	016a0100 	cmneq	sl, r0, lsl #2
    2ed8:	000000c0 	andeq	r0, r0, r0, asr #1
    2edc:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
    2ee0:	0000000c 	andeq	r0, r0, ip
    2ee4:	088e9c01 	stmeq	lr, {r0, sl, fp, ip, pc}
    2ee8:	55170000 	ldrpl	r0, [r7, #-0]
    2eec:	01000037 	tsteq	r0, r7, lsr r0
    2ef0:	004c016a 	subeq	r0, ip, sl, ror #2
    2ef4:	06a60000 	strteq	r0, [r6], r0
    2ef8:	0e1f0000 	cdpeq	0, 1, cr0, cr15, cr0, {0}
    2efc:	3e080007 	cdpcc	0, 0, cr0, cr8, cr7, {0}
    2f00:	1a00000b 	bne	2f34 <__Stack_Size+0x2b34>
    2f04:	03055101 	movweq	r5, #20737	; 0x5101
    2f08:	20000094 	mulcs	r0, r4, r0
    2f0c:	1e160000 	cdpne	0, 1, cr0, cr6, cr0, {0}
    2f10:	01000017 	tsteq	r0, r7, lsl r0
    2f14:	00c00177 	sbceq	r0, r0, r7, ror r1
    2f18:	07140000 	ldreq	r0, [r4, -r0]
    2f1c:	00200800 	eoreq	r0, r0, r0, lsl #16
    2f20:	9c010000 	stcls	0, cr0, [r1], {-0}
    2f24:	000008ce 	andeq	r0, r0, lr, asr #17
    2f28:	00375517 	eorseq	r5, r7, r7, lsl r5
    2f2c:	01770100 	cmneq	r7, r0, lsl #2
    2f30:	0000004c 	andeq	r0, r0, ip, asr #32
    2f34:	000006c7 	andeq	r0, r0, r7, asr #13
    2f38:	0015e520 	andseq	lr, r5, r0, lsr #10
    2f3c:	017a0100 	cmneq	sl, r0, lsl #2
    2f40:	0000005e 	andeq	r0, r0, lr, asr r0
    2f44:	00072821 	andeq	r2, r7, r1, lsr #16
    2f48:	000b3e08 	andeq	r3, fp, r8, lsl #28
    2f4c:	2c220000 	stccs	0, cr0, [r2], #-0
    2f50:	01000012 	tsteq	r0, r2, lsl r0
    2f54:	00035b2e 	andeq	r5, r3, lr, lsr #22
    2f58:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    2f5c:	22200000 	eorcs	r0, r0, #0
    2f60:	00002f73 	andeq	r2, r0, r3, ror pc
    2f64:	03df3e01 	bicseq	r3, pc, #1, 28
    2f68:	03050000 	movweq	r0, #20480	; 0x5000
    2f6c:	200000bc 	strhcs	r0, [r0], -ip
    2f70:	00145322 	andseq	r5, r4, r2, lsr #6
    2f74:	94280100 	strtls	r0, [r8], #-256	; 0x100
    2f78:	05000001 	streq	r0, [r0, #-1]
    2f7c:	0000e003 	andeq	lr, r0, r3
    2f80:	17a82320 	strne	r2, [r8, r0, lsr #6]!
    2f84:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    2f88:	0000027b 	andeq	r0, r0, fp, ror r2
    2f8c:	00142c23 	andseq	r2, r4, r3, lsr #24
    2f90:	80220700 	eorhi	r0, r2, r0, lsl #14
    2f94:	24000004 	strcs	r0, [r0], #-4
    2f98:	0000005e 	andeq	r0, r0, lr, asr r0
    2f9c:	00000927 	andeq	r0, r0, r7, lsr #18
    2fa0:	00006f25 	andeq	r6, r0, r5, lsr #30
    2fa4:	23001100 	movwcs	r1, #256	; 0x100
    2fa8:	000010bf 	strheq	r1, [r0], -pc	; <UNPREDICTABLE>
    2fac:	09322f08 	ldmdbeq	r2!, {r3, r8, r9, sl, fp, sp}
    2fb0:	17260000 	strne	r0, [r6, -r0]!
    2fb4:	24000009 	strcs	r0, [r0], #-9
    2fb8:	0000005e 	andeq	r0, r0, lr, asr r0
    2fbc:	00000947 	andeq	r0, r0, r7, asr #18
    2fc0:	00006f25 	andeq	r6, r0, r5, lsr #30
    2fc4:	23004200 	movwcs	r4, #512	; 0x200
    2fc8:	0000111e 	andeq	r1, r0, lr, lsl r1
    2fcc:	09523008 	ldmdbeq	r2, {r3, ip, sp}^
    2fd0:	37260000 	strcc	r0, [r6, -r0]!
    2fd4:	24000009 	strcs	r0, [r0], #-9
    2fd8:	0000005e 	andeq	r0, r0, lr, asr r0
    2fdc:	00000967 	andeq	r0, r0, r7, ror #18
    2fe0:	00006f25 	andeq	r6, r0, r5, lsr #30
    2fe4:	23000300 	movwcs	r0, #768	; 0x300
    2fe8:	000010e1 	andeq	r1, r0, r1, ror #1
    2fec:	09723208 	ldmdbeq	r2!, {r3, r9, ip, sp}^
    2ff0:	57260000 	strpl	r0, [r6, -r0]!
    2ff4:	23000009 	movwcs	r0, #9
    2ff8:	000010a1 	andeq	r1, r0, r1, lsr #1
    2ffc:	09823308 	stmibeq	r2, {r3, r8, r9, ip, sp}
    3000:	17260000 	strne	r0, [r6, -r0]!
    3004:	24000009 	strcs	r0, [r0], #-9
    3008:	0000005e 	andeq	r0, r0, lr, asr r0
    300c:	00000997 	muleq	r0, r7, r9
    3010:	00006f25 	andeq	r6, r0, r5, lsr #30
    3014:	23003100 	movwcs	r3, #256	; 0x100
    3018:	000010ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    301c:	09a23408 	stmibeq	r2!, {r3, sl, ip, sp}
    3020:	87260000 	strhi	r0, [r6, -r0]!
    3024:	24000009 	strcs	r0, [r0], #-9
    3028:	0000005e 	andeq	r0, r0, lr, asr r0
    302c:	000009b7 			; <UNDEFINED> instruction: 0x000009b7
    3030:	00006f25 	andeq	r6, r0, r5, lsr #30
    3034:	23001900 	movwcs	r1, #2304	; 0x900
    3038:	00001140 	andeq	r1, r0, r0, asr #2
    303c:	09a73508 	stmibeq	r7!, {r3, r8, sl, ip, sp}
    3040:	fa220000 	blx	883048 <__Stack_Size+0x882c48>
    3044:	01000012 	tsteq	r0, r2, lsl r0
    3048:	00005e18 	andeq	r5, r0, r8, lsl lr
    304c:	68030500 	stmdavs	r3, {r8, sl}
    3050:	23200001 	teqcs	r0, #1
    3054:	0000030f 	andeq	r0, r0, pc, lsl #6
    3058:	09de1a01 	ldmibeq	lr, {r0, r9, fp, ip}^
    305c:	3a270000 	bcc	9c3064 <__Stack_Size+0x9c2c64>
    3060:	22000000 	andcs	r0, r0, #0
    3064:	000013ce 	andeq	r1, r0, lr, asr #7
    3068:	04231c01 	strteq	r1, [r3], #-3073	; 0xc01
    306c:	03050000 	movweq	r0, #20480	; 0x5000
    3070:	20000054 	andcs	r0, r0, r4, asr r0
    3074:	00159622 	andseq	r9, r5, r2, lsr #12
    3078:	c64b0100 	strbgt	r0, [fp], -r0, lsl #2
    307c:	05000000 	streq	r0, [r0, #-0]
    3080:	00008c03 	andeq	r8, r0, r3, lsl #24
    3084:	17be2220 	ldrne	r2, [lr, r0, lsr #4]!
    3088:	51010000 	mrspl	r0, (UNDEF: 1)
    308c:	000000c6 	andeq	r0, r0, r6, asr #1
    3090:	00940305 	addseq	r0, r4, r5, lsl #6
    3094:	c6242000 	strtgt	r2, [r4], -r0
    3098:	26000000 	strcs	r0, [r0], -r0
    309c:	2500000a 	strcs	r0, [r0, #-10]
    30a0:	0000006f 	andeq	r0, r0, pc, rrx
    30a4:	39220003 	stmdbcc	r2!, {r0, r1}
    30a8:	01000014 	tsteq	r0, r4, lsl r0
    30ac:	000a1657 	andeq	r1, sl, r7, asr r6
    30b0:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    30b4:	28200000 	stmdacs	r0!, {}	; <UNPREDICTABLE>
    30b8:	00001302 	andeq	r1, r0, r2, lsl #6
    30bc:	49010701 	stmdbmi	r1, {r0, r8, r9, sl}
    30c0:	0500000a 	streq	r0, [r0, #-10]
    30c4:	00016c03 	andeq	r6, r1, r3, lsl #24
    30c8:	05042920 	streq	r2, [r4, #-2336]	; 0x920
    30cc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    30d0:	00139f2a 	andseq	r9, r3, sl, lsr #30
    30d4:	2b540600 	blcs	15048dc <__Stack_Size+0x15044dc>
    30d8:	00001642 	andeq	r1, r0, r2, asr #12
    30dc:	01074406 	tsteq	r7, r6, lsl #8
    30e0:	7a2b0000 	bvc	ac30e8 <__Stack_Size+0xac2ce8>
    30e4:	09000013 	stmdbeq	r0, {r0, r1, r4}
    30e8:	00003a1a 	andeq	r3, r0, sl, lsl sl
    30ec:	14b62c00 	ldrtne	r2, [r6], #3072	; 0xc00
    30f0:	620a0000 	andvs	r0, sl, #0
    30f4:	000a7f02 	andeq	r7, sl, r2, lsl #30
    30f8:	004c0b00 	subeq	r0, ip, r0, lsl #22
    30fc:	2c000000 	stccs	0, cr0, [r0], {-0}
    3100:	00001324 	andeq	r1, r0, r4, lsr #6
    3104:	96026a0a 	strls	r6, [r2], -sl, lsl #20
    3108:	0b00000a 	bleq	3138 <__Stack_Size+0x2d38>
    310c:	0000005e 	andeq	r0, r0, lr, asr r0
    3110:	00004c0b 	andeq	r4, r0, fp, lsl #24
    3114:	162c0000 	strtne	r0, [ip], -r0
    3118:	0a000013 	beq	316c <__Stack_Size+0x2d6c>
    311c:	0aad026c 	beq	feb43ad4 <SCS_BASE+0x1eb35ad4>
    3120:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    3124:	0b000000 	bleq	312c <__Stack_Size+0x2d2c>
    3128:	0000004c 	andeq	r0, r0, ip, asr #32
    312c:	133c2c00 	teqne	ip, #0, 24
    3130:	840a0000 	strhi	r0, [sl], #-0
    3134:	000ac402 	andeq	ip, sl, r2, lsl #8
    3138:	005e0b00 	subseq	r0, lr, r0, lsl #22
    313c:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    3140:	00000000 	andeq	r0, r0, r0
    3144:	0014602c 	andseq	r6, r4, ip, lsr #32
    3148:	02830a00 	addeq	r0, r3, #0, 20
    314c:	00000adb 	ldrdeq	r0, [r0], -fp
    3150:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3154:	004c0b00 	subeq	r0, ip, r0, lsl #22
    3158:	2c000000 	stccs	0, cr0, [r0], {-0}
    315c:	00001770 	andeq	r1, r0, r0, ror r7
    3160:	ed02780a 	stc	8, cr7, [r2, #-40]	; 0xffffffd8
    3164:	0b00000a 	bleq	3194 <__Stack_Size+0x2d94>
    3168:	0000005e 	andeq	r0, r0, lr, asr r0
    316c:	187e2c00 	ldmdane	lr!, {sl, fp, sp}^
    3170:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
    3174:	000b0402 	andeq	r0, fp, r2, lsl #8
    3178:	005e0b00 	subseq	r0, lr, r0, lsl #22
    317c:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    3180:	00000000 	andeq	r0, r0, r0
    3184:	0011da2c 	andseq	sp, r1, ip, lsr #20
    3188:	02720a00 	rsbseq	r0, r2, #0, 20
    318c:	00000b16 	andeq	r0, r0, r6, lsl fp
    3190:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3194:	382c0000 	stmdacc	ip!, {}	; <UNPREDICTABLE>
    3198:	0a000015 	beq	31f4 <__Stack_Size+0x2df4>
    319c:	0b2d026d 	bleq	b43b58 <__Stack_Size+0xb43758>
    31a0:	5e0b0000 	cdppl	0, 0, cr0, cr11, cr0, {0}
    31a4:	0b000000 	bleq	31ac <__Stack_Size+0x2dac>
    31a8:	0000004c 	andeq	r0, r0, ip, asr #32
    31ac:	13bd2d00 			; <UNDEFINED> instruction: 0x13bd2d00
    31b0:	eb030000 	bl	c31b8 <__Stack_Size+0xc2db8>
    31b4:	00000b3e 	andeq	r0, r0, lr, lsr fp
    31b8:	00005e0b 	andeq	r5, r0, fp, lsl #28
    31bc:	7c2e0000 	stcvc	0, cr0, [lr], #-0
    31c0:	03000014 	movweq	r0, #20
    31c4:	0000c0e7 	andeq	ip, r0, r7, ror #1
    31c8:	004c0b00 	subeq	r0, ip, r0, lsl #22
    31cc:	d10b0000 	mrsle	r0, (UNDEF: 11)
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	0004ec00 	andeq	lr, r4, r0, lsl #24
    31d8:	43000400 	movwmi	r0, #1024	; 0x400
    31dc:	0400000b 	streq	r0, [r0], #-11
    31e0:	0002c101 	andeq	ip, r2, r1, lsl #2
    31e4:	18a10100 	stmiane	r1!, {r8}
    31e8:	009a0000 	addseq	r0, sl, r0
    31ec:	03d80000 	bicseq	r0, r8, #0
    31f0:	00000000 	andeq	r0, r0, r0
    31f4:	0d5d0000 	ldcleq	0, cr0, [sp, #-0]
    31f8:	04020000 	streq	r0, [r2], #-0
    31fc:	00071d05 	andeq	r1, r7, r5, lsl #26
    3200:	05020200 	streq	r0, [r2, #-512]	; 0x200
    3204:	000006ef 	andeq	r0, r0, pc, ror #13
    3208:	8c060102 	stfhis	f0, [r6], {2}
    320c:	03000008 	movweq	r0, #8
    3210:	00323375 	eorseq	r3, r2, r5, ror r3
    3214:	00452702 	subeq	r2, r5, r2, lsl #14
    3218:	04020000 	streq	r0, [r2], #-0
    321c:	00081907 	andeq	r1, r8, r7, lsl #18
    3220:	31750300 	cmncc	r5, r0, lsl #6
    3224:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    3228:	00000057 	andeq	r0, r0, r7, asr r0
    322c:	73070202 	movwvc	r0, #29186	; 0x7202
    3230:	0300000a 	movweq	r0, #10
    3234:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    3238:	00006829 	andeq	r6, r0, r9, lsr #16
    323c:	08010200 	stmdaeq	r1, {r9}
    3240:	0000088a 	andeq	r0, r0, sl, lsl #17
    3244:	0003a704 	andeq	sl, r3, r4, lsl #14
    3248:	7a2f0200 	bvc	bc3a50 <__Stack_Size+0xbc3650>
    324c:	05000000 	streq	r0, [r0, #-0]
    3250:	00000045 	andeq	r0, r0, r5, asr #32
    3254:	3e020106 	adfccs	f0, f2, f6
    3258:	00000094 	muleq	r0, r4, r0
    325c:	00047707 	andeq	r7, r4, r7, lsl #14
    3260:	f6070000 			; <UNDEFINED> instruction: 0xf6070000
    3264:	01000007 	tsteq	r0, r7
    3268:	00c60400 	sbceq	r0, r6, r0, lsl #8
    326c:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    3270:	0000007f 	andeq	r0, r0, pc, ror r0
    3274:	10070402 	andne	r0, r7, r2, lsl #8
    3278:	08000008 	stmdaeq	r0, {r3}
    327c:	014e031c 	cmpeq	lr, ip, lsl r3
    3280:	0000010b 	andeq	r0, r0, fp, lsl #2
    3284:	4c524309 	mrrcmi	3, 0, r4, r2, cr9
    3288:	01500300 	cmpeq	r0, r0, lsl #6
    328c:	0000006f 	andeq	r0, r0, pc, rrx
    3290:	52430900 	subpl	r0, r3, #0, 18
    3294:	51030048 	tstpl	r3, r8, asr #32
    3298:	00006f01 	andeq	r6, r0, r1, lsl #30
    329c:	49090400 	stmdbmi	r9, {sl}
    32a0:	03005244 	movweq	r5, #580	; 0x244
    32a4:	006f0152 	rsbeq	r0, pc, r2, asr r1	; <UNPREDICTABLE>
    32a8:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    32ac:	0052444f 	subseq	r4, r2, pc, asr #8
    32b0:	6f015303 	svcvs	0x00015303
    32b4:	0c000000 	stceq	0, cr0, [r0], {-0}
    32b8:	00005f0a 	andeq	r5, r0, sl, lsl #30
    32bc:	01540300 	cmpeq	r4, r0, lsl #6
    32c0:	0000006f 	andeq	r0, r0, pc, rrx
    32c4:	52420910 	subpl	r0, r2, #16, 18	; 0x40000
    32c8:	55030052 	strpl	r0, [r3, #-82]	; 0x52
    32cc:	00006f01 	andeq	r6, r0, r1, lsl #30
    32d0:	370a1400 	strcc	r1, [sl, -r0, lsl #8]
    32d4:	0300000b 	movweq	r0, #11
    32d8:	006f0156 	rsbeq	r0, pc, r6, asr r1	; <UNPREDICTABLE>
    32dc:	00180000 	andseq	r0, r8, r0
    32e0:	0007b10b 	andeq	fp, r7, fp, lsl #2
    32e4:	01570300 	cmpeq	r7, r0, lsl #6
    32e8:	000000a6 	andeq	r0, r0, r6, lsr #1
    32ec:	005e040c 	subseq	r0, lr, ip, lsl #8
    32f0:	420d0000 	andmi	r0, sp, #0
    32f4:	01000012 	tsteq	r0, r2, lsl r0
    32f8:	01423004 	cmpeq	r2, r4
    32fc:	56070000 	strpl	r0, [r7], -r0
    3300:	00000012 	andeq	r0, r0, r2, lsl r0
    3304:	0012ec07 	andseq	lr, r2, r7, lsl #24
    3308:	7f070100 	svcvc	0x00070100
    330c:	02000012 	andeq	r0, r0, #18
    3310:	0012de07 	andseq	sp, r2, r7, lsl #28
    3314:	04000300 	streq	r0, [r0], #-768	; 0x300
    3318:	00001243 	andeq	r1, r0, r3, asr #4
    331c:	011d3704 	tsteq	sp, r4, lsl #14
    3320:	c20d0000 	andgt	r0, sp, #0
    3324:	01000008 	tsteq	r0, r8
    3328:	017e3005 	cmneq	lr, r5
    332c:	04070000 	streq	r0, [r7], #-0
    3330:	00000009 	andeq	r0, r0, r9
    3334:	000a8607 	andeq	r8, sl, r7, lsl #12
    3338:	24070100 	strcs	r0, [r7], #-256	; 0x100
    333c:	02000005 	andeq	r0, r0, #5
    3340:	000ac607 	andeq	ip, sl, r7, lsl #12
    3344:	f1070300 			; <UNDEFINED> instruction: 0xf1070300
    3348:	04000003 	streq	r0, [r0], #-3
    334c:	00086e07 	andeq	r6, r8, r7, lsl #28
    3350:	0e000500 	cfsh32eq	mvfx0, mvfx0, #0
    3354:	000018fe 	strdeq	r1, [r0], -lr
    3358:	01012301 	tsteq	r1, r1, lsl #6
    335c:	00000198 	muleq	r0, r8, r1
    3360:	0018c70f 	andseq	ip, r8, pc, lsl #14
    3364:	01230100 	teqeq	r3, r0, lsl #2
    3368:	00000094 	muleq	r0, r4, r0
    336c:	18941000 	ldmne	r4, {ip}
    3370:	6b010000 	blvs	43378 <__Stack_Size+0x42f78>
    3374:	00073401 	andeq	r3, r7, r1, lsl #8
    3378:	00002408 	andeq	r2, r0, r8, lsl #8
    337c:	ef9c0100 	svc	0x009c0100
    3380:	11000001 	tstne	r0, r1
    3384:	0000194b 	andeq	r1, r0, fp, asr #18
    3388:	3a016b01 	bcc	5df94 <__Stack_Size+0x5db94>
    338c:	01000000 	mrseq	r0, (UNDEF: 0)
    3390:	11000007 	tstne	r0, r7
    3394:	00001961 	andeq	r1, r0, r1, ror #18
    3398:	17016b01 	strne	r6, [r1, -r1, lsl #22]
    339c:	1f000001 	svcne	0x00000001
    33a0:	12000007 	andne	r0, r0, #7
    33a4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    33a8:	5e016b01 	vmlapl.f64	d6, d1, d1
    33ac:	4d000000 	stcmi	0, cr0, [r0, #-0]
    33b0:	13000007 	movwne	r0, #7
    33b4:	00786469 	rsbseq	r6, r8, r9, ror #8
    33b8:	5e016d01 	cdppl	13, 0, cr6, cr1, cr1, {0}
    33bc:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    33c0:	00000007 	andeq	r0, r0, r7
    33c4:	00164214 	andseq	r4, r6, r4, lsl r2
    33c8:	42240100 	eormi	r0, r4, #0, 2
    33cc:	58000001 	stmdapl	r0, {r0}
    33d0:	38080007 	stmdacc	r8, {r0, r1, r2}
    33d4:	01000000 	mrseq	r0, (UNDEF: 0)
    33d8:	0002559c 	muleq	r2, ip, r5
    33dc:	328c1500 	addcc	r1, ip, #0, 10
    33e0:	27010000 	strcs	r0, [r1, -r0]
    33e4:	0000004c 	andeq	r0, r0, ip, asr #32
    33e8:	017e1601 	cmneq	lr, r1, lsl #12
    33ec:	075a0000 	ldrbeq	r0, [sl, -r0]
    33f0:	000a0800 	andeq	r0, sl, r0, lsl #16
    33f4:	2a010000 	bcs	433fc <__Stack_Size+0x42ffc>
    33f8:	00018b17 	andeq	r8, r1, r7, lsl fp
    33fc:	5a180100 	bpl	603804 <__Stack_Size+0x603404>
    3400:	0a080007 	beq	203424 <__Stack_Size+0x203024>
    3404:	17000000 	strne	r0, [r0, -r0]
    3408:	0000018b 	andeq	r0, r0, fp, lsl #3
    340c:	07641901 	strbeq	r1, [r4, -r1, lsl #18]!
    3410:	046c0800 	strbteq	r0, [ip], #-2048	; 0x800
    3414:	011a0000 	tsteq	sl, r0
    3418:	000a0351 	andeq	r0, sl, r1, asr r3
    341c:	50011a02 	andpl	r1, r1, r2, lsl #20
    3420:	0c000c05 	stceq	12, cr0, [r0], {5}
    3424:	00004001 	andeq	r4, r0, r1
    3428:	1c1b0000 	ldcne	0, cr0, [fp], {-0}
    342c:	01000019 	tsteq	r0, r9, lsl r0
    3430:	00000057 	andeq	r0, r0, r7, asr r0
    3434:	00000400 	andeq	r0, r0, r0, lsl #8
    3438:	749c0100 	ldrvc	r0, [ip], #256	; 0x100
    343c:	1c000002 	stcne	0, cr0, [r0], {2}
    3440:	00000000 	andeq	r0, r0, r0
    3444:	000001ef 	andeq	r0, r0, pc, ror #3
    3448:	017e1d00 	cmneq	lr, r0, lsl #26
    344c:	00000000 	andeq	r0, r0, r0
    3450:	001c0000 	andseq	r0, ip, r0
    3454:	9c010000 	stcls	0, cr0, [r1], {-0}
    3458:	000002dc 	ldrdeq	r0, [r0], -ip
    345c:	00018b1e 	andeq	r8, r1, lr, lsl fp
    3460:	00078200 	andeq	r8, r7, r0, lsl #4
    3464:	00001f00 	andeq	r1, r0, r0, lsl #30
    3468:	000a0000 	andeq	r0, sl, r0
    346c:	02c10000 	sbceq	r0, r1, #0
    3470:	8b1e0000 	blhi	783478 <__Stack_Size+0x783078>
    3474:	bc000001 	stclt	0, cr0, [r0], {1}
    3478:	20000007 	andcs	r0, r0, r7
    347c:	00000000 	andeq	r0, r0, r0
    3480:	0000046c 	andeq	r0, r0, ip, ror #8
    3484:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    3488:	1a02000a 	bne	834b8 <__Stack_Size+0x830b8>
    348c:	0c055001 	stceq	0, cr5, [r5], {1}
    3490:	40010c00 	andmi	r0, r1, r0, lsl #24
    3494:	00200000 	eoreq	r0, r0, r0
    3498:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    349c:	1a000004 	bne	34b4 <__Stack_Size+0x30b4>
    34a0:	0a035101 	beq	d78ac <__Stack_Size+0xd74ac>
    34a4:	011a0200 	tsteq	sl, r0, lsl #4
    34a8:	000c0550 	andeq	r0, ip, r0, asr r5
    34ac:	0040010c 	subeq	r0, r0, ip, lsl #2
    34b0:	188b1400 	stmne	fp, {sl, ip}
    34b4:	44010000 	strmi	r0, [r1], #-0
    34b8:	00000142 	andeq	r0, r0, r2, asr #2
    34bc:	00000000 	andeq	r0, r0, r0
    34c0:	00000024 	andeq	r0, r0, r4, lsr #32
    34c4:	03069c01 	movweq	r9, #27649	; 0x6c01
    34c8:	00190000 	andseq	r0, r9, r0
    34cc:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    34d0:	1a000001 	bne	34dc <__Stack_Size+0x30dc>
    34d4:	74025001 	strvc	r5, [r2], #-1
    34d8:	1b000000 	blne	34e0 <__Stack_Size+0x30e0>
    34dc:	0000082b 	andeq	r0, r0, fp, lsr #16
    34e0:	00005c01 	andeq	r5, r0, r1, lsl #24
    34e4:	00040000 	andeq	r0, r4, r0
    34e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    34ec:	00000325 	andeq	r0, r0, r5, lsr #6
    34f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    34f4:	0002dc00 	andeq	sp, r2, r0, lsl #24
    34f8:	9f210000 	svcls	0x00210000
    34fc:	01000013 	tsteq	r0, r3, lsl r0
    3500:	07900138 			; <UNDEFINED> instruction: 0x07900138
    3504:	003c0800 	eorseq	r0, ip, r0, lsl #16
    3508:	9c010000 	stcls	0, cr0, [r1], {-0}
    350c:	0000038e 	andeq	r0, r0, lr, lsl #7
    3510:	0018e022 	andseq	lr, r8, r2, lsr #32
    3514:	013a0100 	teqeq	sl, r0, lsl #2
    3518:	0000003a 	andeq	r0, r0, sl, lsr r0
    351c:	000007cf 	andeq	r0, r0, pc, asr #15
    3520:	0018ab22 	andseq	sl, r8, r2, lsr #22
    3524:	013a0100 	teqeq	sl, r0, lsl #2
    3528:	0000003a 	andeq	r0, r0, sl, lsr r0
    352c:	00000808 	andeq	r0, r0, r8, lsl #16
    3530:	0018ef22 	andseq	lr, r8, r2, lsr #30
    3534:	013a0100 	teqeq	sl, r0, lsl #2
    3538:	0000003a 	andeq	r0, r0, sl, lsr r0
    353c:	00000831 	andeq	r0, r0, r1, lsr r8
    3540:	0007ac23 	andeq	sl, r7, r3, lsr #24
    3544:	00019808 	andeq	r9, r1, r8, lsl #16
    3548:	00037e00 	andeq	r7, r3, r0, lsl #28
    354c:	52011a00 	andpl	r1, r1, #0, 20
    3550:	20003801 	andcs	r3, r0, r1, lsl #16
    3554:	080007ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl}
    3558:	00000198 	muleq	r0, r8, r1
    355c:	0152011a 	cmpeq	r2, sl, lsl r1
    3560:	21000034 	tstcs	r0, r4, lsr r0
    3564:	000009fb 	strdeq	r0, [r0], -fp
    3568:	cc015901 	stcgt	9, cr5, [r1], {1}
    356c:	2a080007 	bcs	203590 <__Stack_Size+0x203190>
    3570:	01000000 	mrseq	r0, (UNDEF: 0)
    3574:	00040e9c 	muleq	r4, ip, lr
    3578:	61641200 	cmnvs	r4, r0, lsl #4
    357c:	59010074 	stmdbpl	r1, {r2, r4, r5, r6}
    3580:	00005e01 	andeq	r5, r0, r1, lsl #28
    3584:	00084f00 	andeq	r4, r8, r0, lsl #30
    3588:	07da2300 	ldrbeq	r2, [sl, r0, lsl #6]
    358c:	049e0800 	ldreq	r0, [lr], #2048	; 0x800
    3590:	03c70000 	biceq	r0, r7, #0
    3594:	011a0000 	tsteq	sl, r0
    3598:	00310150 	eorseq	r0, r1, r0, asr r1
    359c:	0007e423 	andeq	lr, r7, r3, lsr #8
    35a0:	0004af08 	andeq	sl, r4, r8, lsl #30
    35a4:	0003e600 	andeq	lr, r3, r0, lsl #12
    35a8:	52011a00 	andpl	r1, r1, #0, 20
    35ac:	011a3101 	tsteq	sl, r1, lsl #2
    35b0:	c0080251 	andgt	r0, r8, r1, asr r2
    35b4:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    35b8:	23000074 	movwcs	r0, #116	; 0x74
    35bc:	080007ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl}
    35c0:	000004ca 	andeq	r0, r0, sl, asr #9
    35c4:	000003fe 	strdeq	r0, [r0], -lr
    35c8:	0151011a 	cmpeq	r1, sl, lsl r1
    35cc:	50011a31 	andpl	r1, r1, r1, lsr sl
    35d0:	19003101 	stmdbne	r0, {r0, r8, ip, sp}
    35d4:	080007f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, sl}
    35d8:	000004e1 	andeq	r0, r0, r1, ror #9
    35dc:	0150011a 	cmpeq	r0, sl, lsl r1
    35e0:	24000031 	strcs	r0, [r0], #-49	; 0x31
    35e4:	000018d0 	ldrdeq	r1, [r0], -r0
    35e8:	004c2d06 	subeq	r2, ip, r6, lsl #26
    35ec:	5e250000 	cdppl	0, 2, cr0, cr5, cr0, {0}
    35f0:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    35f4:	26000004 	strcs	r0, [r0], -r4
    35f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35fc:	40240019 	eormi	r0, r4, r9, lsl r0
    3600:	07000011 	smladeq	r0, r1, r0, r0
    3604:	00041935 	andeq	r1, r4, r5, lsr r9
    3608:	19512700 	ldmdbne	r1, {r8, r9, sl, sp}^
    360c:	0a010000 	beq	43614 <__Stack_Size+0x43214>
    3610:	0000003a 	andeq	r0, r0, sl, lsr r0
    3614:	01780305 	cmneq	r8, r5, lsl #6
    3618:	0f272000 	svceq	0x00272000
    361c:	01000019 	tsteq	r0, r9, lsl r0
    3620:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3624:	74030500 	strvc	r0, [r3], #-1280	; 0x500
    3628:	27200001 	strcs	r0, [r0, -r1]!
    362c:	0000030f 	andeq	r0, r0, pc, lsl #6
    3630:	04671201 	strbteq	r1, [r7], #-513	; 0x201
    3634:	03050000 	movweq	r0, #20480	; 0x5000
    3638:	20000170 	andcs	r0, r0, r0, ror r1
    363c:	00003a05 	andeq	r3, r0, r5, lsl #20
    3640:	06262800 	strteq	r2, [r6], -r0, lsl #16
    3644:	e2080000 	and	r0, r8, #0
    3648:	00000482 	andeq	r0, r0, r2, lsl #9
    364c:	00048229 	andeq	r8, r4, r9, lsr #4
    3650:	004c2900 	subeq	r2, ip, r0, lsl #18
    3654:	0c000000 	stceq	0, cr0, [r0], {-0}
    3658:	00010b04 	andeq	r0, r1, r4, lsl #22
    365c:	02a82800 	adceq	r2, r8, #0, 16
    3660:	e1080000 	mrs	r0, (UNDEF: 8)
    3664:	0000049e 	muleq	r0, lr, r4
    3668:	00048229 	andeq	r8, r4, r9, lsr #4
    366c:	004c2900 	subeq	r2, ip, r0, lsl #18
    3670:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    3674:	00000188 	andeq	r0, r0, r8, lsl #3
    3678:	04af5705 	strteq	r5, [pc], #1797	; 3680 <__Stack_Size+0x3280>
    367c:	3a290000 	bcc	a43684 <__Stack_Size+0xa43284>
    3680:	00000000 	andeq	r0, r0, r0
    3684:	00192a28 	andseq	r2, r9, r8, lsr #20
    3688:	ca190900 	bgt	645a90 <__Stack_Size+0x645690>
    368c:	29000004 	stmdbcs	r0, {r2}
    3690:	00000117 	andeq	r0, r0, r7, lsl r1
    3694:	00004c29 	andeq	r4, r0, r9, lsr #24
    3698:	004c2900 	subeq	r2, ip, r0, lsl #18
    369c:	2a000000 	bcs	36a4 <__Stack_Size+0x32a4>
    36a0:	000018ba 			; <UNDEFINED> instruction: 0x000018ba
    36a4:	e102880a 	tst	r2, sl, lsl #16
    36a8:	29000004 	stmdbcs	r0, {r2}
    36ac:	0000005e 	andeq	r0, r0, lr, asr r0
    36b0:	00004c29 	andeq	r4, r0, r9, lsr #24
    36b4:	3e2b0000 	cdpcc	0, 2, cr0, cr11, cr0, {0}
    36b8:	0a000019 	beq	3724 <__Stack_Size+0x3324>
    36bc:	5e290271 	mcrpl	2, 1, r0, cr9, cr1, {3}
    36c0:	00000000 	andeq	r0, r0, r0
    36c4:	0008b700 	andeq	fp, r8, r0, lsl #14
    36c8:	b5000400 	strlt	r0, [r0, #-1024]	; 0x400
    36cc:	0400000d 	streq	r0, [r0], #-13
    36d0:	0002c101 	andeq	ip, r2, r1, lsl #2
    36d4:	19de0100 	ldmibne	lr, {r8}^
    36d8:	009a0000 	addseq	r0, sl, r0
    36dc:	04200000 	strteq	r0, [r0], #-0
    36e0:	00000000 	andeq	r0, r0, r0
    36e4:	0ee30000 	cdpeq	0, 14, cr0, cr3, cr0, {0}
    36e8:	04020000 	streq	r0, [r2], #-0
    36ec:	00071d05 	andeq	r1, r7, r5, lsl #26
    36f0:	05020200 	streq	r0, [r2, #-512]	; 0x200
    36f4:	000006ef 	andeq	r0, r0, pc, ror #13
    36f8:	8c060102 	stfhis	f0, [r6], {2}
    36fc:	03000008 	movweq	r0, #8
    3700:	00323375 	eorseq	r3, r2, r5, ror r3
    3704:	00452702 	subeq	r2, r5, r2, lsl #14
    3708:	04020000 	streq	r0, [r2], #-0
    370c:	00081907 	andeq	r1, r8, r7, lsl #18
    3710:	31750300 	cmncc	r5, r0, lsl #6
    3714:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    3718:	00000057 	andeq	r0, r0, r7, asr r0
    371c:	73070202 	movwvc	r0, #29186	; 0x7202
    3720:	0300000a 	movweq	r0, #10
    3724:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    3728:	00006829 	andeq	r6, r0, r9, lsr #16
    372c:	08010200 	stmdaeq	r1, {r9}
    3730:	0000088a 	andeq	r0, r0, sl, lsl #17
    3734:	0003a704 	andeq	sl, r3, r4, lsl #14
    3738:	7a2f0200 	bvc	bc3f40 <__Stack_Size+0xbc3b40>
    373c:	05000000 	streq	r0, [r0, #-0]
    3740:	00000045 	andeq	r0, r0, r5, asr #32
    3744:	00023004 	andeq	r3, r2, r4
    3748:	8a300200 	bhi	c03f50 <__Stack_Size+0xc03b50>
    374c:	05000000 	streq	r0, [r0, #-0]
    3750:	00000057 	andeq	r0, r0, r7, asr r0
    3754:	3c020106 	stfccs	f0, [r2], {6}
    3758:	000000a4 	andeq	r0, r0, r4, lsr #1
    375c:	00009407 	andeq	r9, r0, r7, lsl #8
    3760:	53080000 	movwpl	r0, #32768	; 0x8000
    3764:	01005445 	tsteq	r0, r5, asr #8
    3768:	067e0400 	ldrbteq	r0, [lr], -r0, lsl #8
    376c:	3c020000 	stccc	0, cr0, [r2], {-0}
    3770:	0000008f 	andeq	r0, r0, pc, lsl #1
    3774:	3e020106 	adfccs	f0, f2, f6
    3778:	000000c4 	andeq	r0, r0, r4, asr #1
    377c:	00047707 	andeq	r7, r4, r7, lsl #14
    3780:	f6070000 			; <UNDEFINED> instruction: 0xf6070000
    3784:	01000007 	tsteq	r0, r7
    3788:	00c60400 	sbceq	r0, r6, r0, lsl #8
    378c:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    3790:	000000af 	andeq	r0, r0, pc, lsr #1
    3794:	10070402 	andne	r0, r7, r2, lsl #8
    3798:	09000008 	stmdbeq	r0, {r3}
    379c:	010c0324 	tsteq	ip, r4, lsr #6
    37a0:	00000152 	andeq	r0, r0, r2, asr r1
    37a4:	5243410a 	subpl	r4, r3, #-2147483646	; 0x80000002
    37a8:	010e0300 	mrseq	r0, ELR_hyp
    37ac:	0000006f 	andeq	r0, r0, pc, rrx
    37b0:	1a4b0b00 	bne	12c63b8 <__Stack_Size+0x12c5fb8>
    37b4:	0f030000 	svceq	0x00030000
    37b8:	00006f01 	andeq	r6, r0, r1, lsl #30
    37bc:	480b0400 	stmdami	fp, {sl}
    37c0:	0300001a 	movweq	r0, #26
    37c4:	006f0110 	rsbeq	r0, pc, r0, lsl r1	; <UNPREDICTABLE>
    37c8:	0a080000 	beq	2037d0 <__Stack_Size+0x2033d0>
    37cc:	03005253 	movweq	r5, #595	; 0x253
    37d0:	006f0111 	rsbeq	r0, pc, r1, lsl r1	; <UNPREDICTABLE>
    37d4:	0a0c0000 	beq	3037dc <__Stack_Size+0x3033dc>
    37d8:	03005243 	movweq	r5, #579	; 0x243
    37dc:	006f0112 	rsbeq	r0, pc, r2, lsl r1	; <UNPREDICTABLE>
    37e0:	0a100000 	beq	4037e8 <__Stack_Size+0x4033e8>
    37e4:	03005241 	movweq	r5, #577	; 0x241
    37e8:	006f0113 	rsbeq	r0, pc, r3, lsl r1	; <UNPREDICTABLE>
    37ec:	0b140000 	bleq	5037f4 <__Stack_Size+0x5033f4>
    37f0:	00001bf3 	strdeq	r1, [r0], -r3
    37f4:	6f011403 	svcvs	0x00011403
    37f8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    37fc:	52424f0a 	subpl	r4, r2, #10, 30	; 0x28
    3800:	01150300 	tsteq	r5, r0, lsl #6
    3804:	0000006f 	andeq	r0, r0, pc, rrx
    3808:	19f80b1c 	ldmibne	r8!, {r2, r3, r4, r8, r9, fp}^
    380c:	16030000 	strne	r0, [r3], -r0
    3810:	00006f01 	andeq	r6, r0, r1, lsl #30
    3814:	0c002000 	stceq	0, cr2, [r0], {-0}
    3818:	00001bfc 	strdeq	r1, [r0], -ip
    381c:	d6011703 	strle	r1, [r1], -r3, lsl #14
    3820:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3824:	01190310 	tsteq	r9, r0, lsl r3
    3828:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    382c:	5044520a 	subpl	r5, r4, sl, lsl #4
    3830:	011b0300 	tsteq	fp, r0, lsl #6
    3834:	0000007f 	andeq	r0, r0, pc, ror r0
    3838:	1bcd0b00 	blne	ff346440 <SCS_BASE+0x1f338440>
    383c:	1c030000 	stcne	0, cr0, [r3], {-0}
    3840:	00007f01 	andeq	r7, r0, r1, lsl #30
    3844:	d20b0200 	andle	r0, fp, #0, 4
    3848:	0300001b 	movweq	r0, #27
    384c:	007f011d 	rsbseq	r0, pc, sp, lsl r1	; <UNPREDICTABLE>
    3850:	0b040000 	bleq	103858 <__Stack_Size+0x103458>
    3854:	00001bd8 	ldrdeq	r1, [r0], -r8
    3858:	7f011e03 	svcvc	0x00011e03
    385c:	06000000 	streq	r0, [r0], -r0
    3860:	001a110b 	andseq	r1, sl, fp, lsl #2
    3864:	011f0300 	tsteq	pc, r0, lsl #6
    3868:	0000007f 	andeq	r0, r0, pc, ror r0
    386c:	1a160b08 	bne	586494 <__Stack_Size+0x586094>
    3870:	20030000 	andcs	r0, r3, r0
    3874:	00007f01 	andeq	r7, r0, r1, lsl #30
    3878:	1b0b0a00 	blne	2c6080 <__Stack_Size+0x2c5c80>
    387c:	0300001a 	movweq	r0, #26
    3880:	007f0121 	rsbseq	r0, pc, r1, lsr #2
    3884:	0b0c0000 	bleq	30388c <__Stack_Size+0x30348c>
    3888:	00001a20 	andeq	r1, r0, r0, lsr #20
    388c:	7f012203 	svcvc	0x00012203
    3890:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    3894:	1b380c00 	blne	e0689c <__Stack_Size+0xe0649c>
    3898:	23030000 	movwcs	r0, #12288	; 0x3000
    389c:	00015e01 	andeq	r5, r1, r1, lsl #28
    38a0:	04010600 	streq	r0, [r1], #-1536	; 0x600
    38a4:	0002031c 	andeq	r0, r2, ip, lsl r3
    38a8:	03ba0700 			; <UNDEFINED> instruction: 0x03ba0700
    38ac:	07010000 	streq	r0, [r1, -r0]
    38b0:	0000072b 	andeq	r0, r0, fp, lsr #14
    38b4:	00d60702 	sbcseq	r0, r6, r2, lsl #14
    38b8:	07030000 	streq	r0, [r3, -r0]
    38bc:	0000042e 	andeq	r0, r0, lr, lsr #8
    38c0:	035c0704 	cmpeq	ip, #4, 14	; 0x100000
    38c4:	00050000 	andeq	r0, r5, r0
    38c8:	00065904 	andeq	r5, r6, r4, lsl #18
    38cc:	dc220400 	cfstrsle	mvf0, [r2], #-0
    38d0:	0d000001 	stceq	0, cr0, [r0, #-4]
    38d4:	00001b28 	andeq	r1, r0, r8, lsr #22
    38d8:	03033f01 	movweq	r3, #16129	; 0x3f01
    38dc:	01000002 	tsteq	r0, r2
    38e0:	0000022c 	andeq	r0, r0, ip, lsr #4
    38e4:	001a8b0e 	andseq	r8, sl, lr, lsl #22
    38e8:	03410100 	movteq	r0, #4352	; 0x1100
    38ec:	00000203 	andeq	r0, r0, r3, lsl #4
    38f0:	06480f00 	strbeq	r0, [r8], -r0, lsl #30
    38f4:	56010000 	strpl	r0, [r1], -r0
    38f8:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
    38fc:	00000018 	andeq	r0, r0, r8, lsl r0
    3900:	02519c01 	subseq	r9, r1, #256	; 0x100
    3904:	ac100000 	ldcge	0, cr0, [r0], {-0}
    3908:	01000019 	tsteq	r0, r9, lsl r0
    390c:	00003a56 	andeq	r3, r0, r6, asr sl
    3910:	00086e00 	andeq	r6, r8, r0, lsl #28
    3914:	430f0000 	movwmi	r0, #61440	; 0xf000
    3918:	0100001b 	tsteq	r0, fp, lsl r0
    391c:	0000006a 	andeq	r0, r0, sl, rrx
    3920:	00001800 	andeq	r1, r0, r0, lsl #16
    3924:	769c0100 	ldrvc	r0, [ip], r0, lsl #2
    3928:	10000002 	andne	r0, r0, r2
    392c:	00001b12 	andeq	r1, r0, r2, lsl fp
    3930:	003a6a01 	eorseq	r6, sl, r1, lsl #20
    3934:	088f0000 	stmeq	pc, {}	; <UNPREDICTABLE>
    3938:	0f000000 	svceq	0x00000000
    393c:	00000150 	andeq	r0, r0, r0, asr r1
    3940:	08107e01 	ldmdaeq	r0, {r0, r9, sl, fp, ip, sp, lr}
    3944:	00180800 	andseq	r0, r8, r0, lsl #16
    3948:	9c010000 	stcls	0, cr0, [r1], {-0}
    394c:	0000029b 	muleq	r0, fp, r2
    3950:	001c2510 	andseq	r2, ip, r0, lsl r5
    3954:	3a7e0100 	bcc	1f83d5c <__Stack_Size+0x1f8395c>
    3958:	b0000000 	andlt	r0, r0, r0
    395c:	00000008 	andeq	r0, r0, r8
    3960:	0003d611 	andeq	sp, r3, r1, lsl r6
    3964:	00900100 	addseq	r0, r0, r0, lsl #2
    3968:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    396c:	01000000 	mrseq	r0, (UNDEF: 0)
    3970:	052c119c 	streq	r1, [ip, #-412]!	; 0x19c
    3974:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    3978:	00000000 	andeq	r0, r0, r0
    397c:	00000010 	andeq	r0, r0, r0, lsl r0
    3980:	78129c01 	ldmdavc	r2, {r0, sl, fp, ip, pc}
    3984:	0100001b 	tsteq	r0, fp, lsl r0
    3988:	003a0296 	mlaseq	sl, r6, r2, r0
    398c:	00000000 	andeq	r0, r0, r0
    3990:	000c0000 	andeq	r0, ip, r0
    3994:	9c010000 	stcls	0, cr0, [r1], {-0}
    3998:	001a2512 	andseq	r2, sl, r2, lsl r5
    399c:	02a30100 	adceq	r0, r3, #0, 2
    39a0:	0000003a 	andeq	r0, r0, sl, lsr r0
    39a4:	00000000 	andeq	r0, r0, r0
    39a8:	0000000c 	andeq	r0, r0, ip
    39ac:	de139c01 	cdple	12, 1, cr9, cr3, cr1, {0}
    39b0:	0100001a 	tsteq	r0, sl, lsl r0
    39b4:	00a402b1 	strhteq	r0, [r4], r1
    39b8:	00000000 	andeq	r0, r0, r0
    39bc:	00100000 	andseq	r0, r0, r0
    39c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    39c4:	00000314 	andeq	r0, r0, r4, lsl r3
    39c8:	00199e14 	andseq	r9, r9, r4, lsl lr
    39cc:	02b30100 	adcseq	r0, r3, #0, 2
    39d0:	000000a4 	andeq	r0, r0, r4, lsr #1
    39d4:	000008d1 	ldrdeq	r0, [r0], -r1
    39d8:	19ba1300 	ldmibne	sl!, {r8, r9, ip}
    39dc:	c7010000 	strgt	r0, [r1, -r0]
    39e0:	0000a402 	andeq	sl, r0, r2, lsl #8
    39e4:	00000000 	andeq	r0, r0, r0
    39e8:	00001000 	andeq	r1, r0, r0
    39ec:	3f9c0100 	svccc	0x009c0100
    39f0:	14000003 	strne	r0, [r0], #-3
    39f4:	00001a97 	muleq	r0, r7, sl
    39f8:	a402c901 	strge	ip, [r2], #-2305	; 0x901
    39fc:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    3a00:	00000008 	andeq	r0, r0, r8
    3a04:	00196615 	andseq	r6, r9, r5, lsl r6
    3a08:	02e20100 	rsceq	r0, r2, #0, 2
    3a0c:	00000000 	andeq	r0, r0, r0
    3a10:	00000018 	andeq	r0, r0, r8, lsl r0
    3a14:	03749c01 	cmneq	r4, #256	; 0x100
    3a18:	ea160000 	b	583a20 <__Stack_Size+0x583620>
    3a1c:	0100001b 	tsteq	r0, fp, lsl r0
    3a20:	004c02e2 	subeq	r0, ip, r2, ror #5
    3a24:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    3a28:	c7170000 	ldrgt	r0, [r7, -r0]
    3a2c:	01000018 	tsteq	r0, r8, lsl r0
    3a30:	00c402e2 	sbceq	r0, r4, r2, ror #5
    3a34:	51010000 	mrspl	r0, (UNDEF: 1)
    3a38:	1ab81300 	bne	fee08640 <SCS_BASE+0x1edfa640>
    3a3c:	01010000 	mrseq	r0, (UNDEF: 1)
    3a40:	0000a403 	andeq	sl, r0, r3, lsl #8
    3a44:	00000000 	andeq	r0, r0, r0
    3a48:	00002000 	andeq	r2, r0, r0
    3a4c:	af9c0100 	svcge	0x009c0100
    3a50:	16000003 	strne	r0, [r0], -r3
    3a54:	00001ba6 	andeq	r1, r0, r6, lsr #23
    3a58:	4c030101 	stfmis	f0, [r3], {1}
    3a5c:	56000000 	strpl	r0, [r0], -r0
    3a60:	14000009 	strne	r0, [r0], #-9
    3a64:	00001a97 	muleq	r0, r7, sl
    3a68:	a4030301 	strge	r0, [r3], #-769	; 0x301
    3a6c:	90000000 	andls	r0, r0, r0
    3a70:	00000009 	andeq	r0, r0, r9
    3a74:	0001a915 	andeq	sl, r1, r5, lsl r9
    3a78:	032e0100 	teqeq	lr, #0, 2
    3a7c:	00000000 	andeq	r0, r0, r0
    3a80:	0000000c 	andeq	r0, r0, ip
    3a84:	03d49c01 	bicseq	r9, r4, #256	; 0x100
    3a88:	a6170000 	ldrge	r0, [r7], -r0
    3a8c:	0100001b 	tsteq	r0, fp, lsl r0
    3a90:	004c032e 	subeq	r0, ip, lr, lsr #6
    3a94:	50010000 	andpl	r0, r1, r0
    3a98:	020e1800 	andeq	r1, lr, #0, 16
    3a9c:	08280000 	stmdaeq	r8!, {}	; <UNPREDICTABLE>
    3aa0:	00280800 	eoreq	r0, r8, r0, lsl #16
    3aa4:	9c010000 	stcls	0, cr0, [r1], {-0}
    3aa8:	00000400 	andeq	r0, r0, r0, lsl #8
    3aac:	00021f19 	andeq	r1, r2, r9, lsl pc
    3ab0:	0009af00 	andeq	sl, r9, r0, lsl #30
    3ab4:	08361a00 	ldmdaeq	r6!, {r9, fp, ip}
    3ab8:	000e0800 	andeq	r0, lr, r0, lsl #16
    3abc:	1f1b0000 	svcne	0x001b0000
    3ac0:	00000002 	andeq	r0, r0, r2
    3ac4:	19d81c00 	ldmibne	r8, {sl, fp, ip}^
    3ac8:	85010000 	strhi	r0, [r1, #-0]
    3acc:	04180103 	ldreq	r0, [r8], #-259	; 0x103
    3ad0:	691d0000 	ldmdbvs	sp, {}	; <UNPREDICTABLE>
    3ad4:	03870100 	orreq	r0, r7, #0, 2
    3ad8:	0000006f 	andeq	r0, r0, pc, rrx
    3adc:	1c0a1300 	stcne	3, cr1, [sl], {-0}
    3ae0:	66010000 	strvs	r0, [r1], -r0
    3ae4:	00020303 	andeq	r0, r2, r3, lsl #6
    3ae8:	00085000 	andeq	r5, r8, r0
    3aec:	00003608 	andeq	r3, r0, r8, lsl #12
    3af0:	8c9c0100 	ldfhis	f0, [ip], {0}
    3af4:	16000004 	strne	r0, [r0], -r4
    3af8:	00001ad6 	ldrdeq	r1, [r0], -r6
    3afc:	3a036601 	bcc	dd308 <__Stack_Size+0xdcf08>
    3b00:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    3b04:	14000009 	strne	r0, [r0], #-9
    3b08:	00001a90 	muleq	r0, r0, sl
    3b0c:	03036801 	movweq	r6, #14337	; 0x3801
    3b10:	ec000002 	stc	0, cr0, [r0], {2}
    3b14:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    3b18:	00000400 	andeq	r0, r0, r0, lsl #8
    3b1c:	0800085e 	stmdaeq	r0, {r1, r2, r3, r4, r6, fp}
    3b20:	00000012 	andeq	r0, r0, r2, lsl r0
    3b24:	79037001 	stmdbvc	r3, {r0, ip, sp, lr}
    3b28:	1a000004 	bne	3b40 <__Stack_Size+0x3740>
    3b2c:	0800085e 	stmdaeq	r0, {r1, r2, r3, r4, r6, fp}
    3b30:	00000012 	andeq	r0, r0, r2, lsl r0
    3b34:	00040d1f 	andeq	r0, r4, pc, lsl sp
    3b38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3b3c:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
    3b40:	0e080008 	cdpeq	0, 0, cr0, cr8, cr8, {0}
    3b44:	20000002 	andcs	r0, r0, r2
    3b48:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
    3b4c:	0000020e 	andeq	r0, r0, lr, lsl #4
    3b50:	0a942100 	beq	fe50bf58 <SCS_BASE+0x1e4fdf58>
    3b54:	ad010000 	stcge	0, cr0, [r1, #-0]
    3b58:	00000203 	andeq	r0, r0, r3, lsl #4
    3b5c:	00000000 	andeq	r0, r0, r0
    3b60:	00000040 	andeq	r0, r0, r0, asr #32
    3b64:	04ea9c01 	strbteq	r9, [sl], #3073	; 0xc01
    3b68:	a1100000 	tstge	r0, r0
    3b6c:	0100001a 	tsteq	r0, sl, lsl r0
    3b70:	00003aad 	andeq	r3, r0, sp, lsr #21
    3b74:	000a2100 	andeq	r2, sl, r0, lsl #2
    3b78:	1a902200 	bne	fe40c380 <SCS_BASE+0x1e3fe380>
    3b7c:	af010000 	svcge	0x00010000
    3b80:	00000203 	andeq	r0, r0, r3, lsl #4
    3b84:	00000a4d 	andeq	r0, r0, sp, asr #20
    3b88:	00000023 	andeq	r0, r0, r3, lsr #32
    3b8c:	00041800 	andeq	r1, r4, r0, lsl #16
    3b90:	0004d800 	andeq	sp, r4, r0, lsl #16
    3b94:	50012400 	andpl	r2, r1, r0, lsl #8
    3b98:	0fff0a03 	svceq	0x00ff0a03
    3b9c:	00002500 	andeq	r2, r0, r0, lsl #10
    3ba0:	04180000 	ldreq	r0, [r8], #-0
    3ba4:	01240000 	teqeq	r4, r0
    3ba8:	ff0a0350 			; <UNDEFINED> instruction: 0xff0a0350
    3bac:	2100000f 	tstcs	r0, pc
    3bb0:	000019fd 	strdeq	r1, [r0], -sp
    3bb4:	0203d401 	andeq	sp, r3, #16777216	; 0x1000000
    3bb8:	00000000 	andeq	r0, r0, r0
    3bbc:	003c0000 	eorseq	r0, ip, r0
    3bc0:	9c010000 	stcls	0, cr0, [r1], {-0}
    3bc4:	00000539 	andeq	r0, r0, r9, lsr r5
    3bc8:	001a9022 	andseq	r9, sl, r2, lsr #32
    3bcc:	03d60100 	bicseq	r0, r6, #0, 2
    3bd0:	77000002 	strvc	r0, [r0, -r2]
    3bd4:	2300000a 	movwcs	r0, #10
    3bd8:	00000000 	andeq	r0, r0, r0
    3bdc:	00000418 	andeq	r0, r0, r8, lsl r4
    3be0:	00000527 	andeq	r0, r0, r7, lsr #10
    3be4:	03500124 	cmpeq	r0, #36, 2
    3be8:	000fff0a 	andeq	pc, pc, sl, lsl #30
    3bec:	00000025 	andeq	r0, r0, r5, lsr #32
    3bf0:	00041800 	andeq	r1, r4, r0, lsl #16
    3bf4:	50012400 	andpl	r2, r1, r0, lsl #8
    3bf8:	0fff0a03 	svceq	0x00ff0a03
    3bfc:	87210000 	strhi	r0, [r1, -r0]!
    3c00:	01000019 	tsteq	r0, r9, lsl r0
    3c04:	000203f7 	strdeq	r0, [r2], -r7
    3c08:	00000000 	andeq	r0, r0, r0
    3c0c:	00007000 	andeq	r7, r0, r0
    3c10:	9b9c0100 	blls	fe704018 <SCS_BASE+0x1e6f6018>
    3c14:	22000005 	andcs	r0, r0, #5
    3c18:	00001a90 	muleq	r0, r0, sl
    3c1c:	0203f901 	andeq	pc, r3, #16384	; 0x4000
    3c20:	0aa10000 	beq	fe843c28 <SCS_BASE+0x1e835c28>
    3c24:	00230000 	eoreq	r0, r3, r0
    3c28:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3c2c:	76000004 	strvc	r0, [r0], -r4
    3c30:	24000005 	strcs	r0, [r0], #-5
    3c34:	0a035001 	beq	d7c40 <__Stack_Size+0xd7840>
    3c38:	23000fff 	movwcs	r0, #4095	; 0xfff
    3c3c:	00000000 	andeq	r0, r0, r0
    3c40:	00000418 	andeq	r0, r0, r8, lsl r4
    3c44:	0000058b 	andeq	r0, r0, fp, lsl #11
    3c48:	03500124 	cmpeq	r0, #36, 2
    3c4c:	000fff0a 	andeq	pc, pc, sl, lsl #30
    3c50:	00000025 	andeq	r0, r0, r5, lsr #32
    3c54:	00041800 	andeq	r1, r4, r0, lsl #16
    3c58:	50012400 	andpl	r2, r1, r0, lsl #8
    3c5c:	00003f01 	andeq	r3, r0, r1, lsl #30
    3c60:	00118613 	andseq	r8, r1, r3, lsl r6
    3c64:	01360100 	teqeq	r6, r0, lsl #2
    3c68:	00000203 	andeq	r0, r0, r3, lsl #4
    3c6c:	08000888 	stmdaeq	r0, {r3, r7, fp}
    3c70:	00000048 	andeq	r0, r0, r8, asr #32
    3c74:	061b9c01 	ldreq	r9, [fp], -r1, lsl #24
    3c78:	66160000 	ldrvs	r0, [r6], -r0
    3c7c:	01000036 	tsteq	r0, r6, lsr r0
    3c80:	003a0136 	eorseq	r0, sl, r6, lsr r1
    3c84:	0ad60000 	beq	ff583c8c <SCS_BASE+0x1f575c8c>
    3c88:	0d160000 	ldceq	0, cr0, [r6, #-0]
    3c8c:	0100001b 	tsteq	r0, fp, lsl r0
    3c90:	003a0136 	eorseq	r0, sl, r6, lsr r1
    3c94:	0b020000 	bleq	83c9c <__Stack_Size+0x8389c>
    3c98:	90140000 	andsls	r0, r4, r0
    3c9c:	0100001a 	tsteq	r0, sl, lsl r0
    3ca0:	02030138 	andeq	r0, r3, #56, 2
    3ca4:	0b2e0000 	bleq	b83cac <__Stack_Size+0xb838ac>
    3ca8:	94230000 	strtls	r0, [r3], #-0
    3cac:	18080008 	stmdane	r8, {r3}
    3cb0:	f8000004 			; <UNDEFINED> instruction: 0xf8000004
    3cb4:	24000005 	strcs	r0, [r0], #-5
    3cb8:	3f015001 	svccc	0x00015001
    3cbc:	08ac2300 	stmiaeq	ip!, {r8, r9, sp}
    3cc0:	04180800 	ldreq	r0, [r8], #-2048	; 0x800
    3cc4:	060b0000 	streq	r0, [fp], -r0
    3cc8:	01240000 	teqeq	r4, r0
    3ccc:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    3cd0:	0008ba25 	andeq	fp, r8, r5, lsr #20
    3cd4:	00041808 	andeq	r1, r4, r8, lsl #16
    3cd8:	50012400 	andpl	r2, r1, r0, lsl #8
    3cdc:	00003f01 	andeq	r3, r0, r1, lsl #30
    3ce0:	001b9013 	andseq	r9, fp, r3, lsl r0
    3ce4:	01710100 	cmneq	r1, r0, lsl #2
    3ce8:	00000203 	andeq	r0, r0, r3, lsl #4
    3cec:	00000000 	andeq	r0, r0, r0
    3cf0:	00000038 	andeq	r0, r0, r8, lsr r0
    3cf4:	06889c01 	streq	r9, [r8], r1, lsl #24
    3cf8:	66160000 	ldrvs	r0, [r6], -r0
    3cfc:	01000036 	tsteq	r0, r6, lsr r0
    3d00:	003a0171 	eorseq	r0, sl, r1, ror r1
    3d04:	0b630000 	bleq	18c3d0c <__Stack_Size+0x18c390c>
    3d08:	0d160000 	ldceq	0, cr0, [r6, #-0]
    3d0c:	0100001b 	tsteq	r0, fp, lsl r0
    3d10:	004c0171 	subeq	r0, ip, r1, ror r1
    3d14:	0b8f0000 	bleq	fe3c3d1c <SCS_BASE+0x1e3b5d1c>
    3d18:	90140000 	andsls	r0, r4, r0
    3d1c:	0100001a 	tsteq	r0, sl, lsl r0
    3d20:	02030173 	andeq	r0, r3, #-1073741796	; 0xc000001c
    3d24:	0bb00000 	bleq	fec03d2c <SCS_BASE+0x1ebf5d2c>
    3d28:	00230000 	eoreq	r0, r3, r0
    3d2c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3d30:	78000004 	stmdavc	r0, {r2}
    3d34:	24000006 	strcs	r0, [r0], #-6
    3d38:	3f015001 	svccc	0x00015001
    3d3c:	00002500 	andeq	r2, r0, r0, lsl #10
    3d40:	04180000 	ldreq	r0, [r8], #-0
    3d44:	01240000 	teqeq	r4, r0
    3d48:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    3d4c:	1b5c1300 	blne	1708954 <__Stack_Size+0x1708554>
    3d50:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    3d54:	00020301 	andeq	r0, r2, r1, lsl #6
    3d58:	00000000 	andeq	r0, r0, r0
    3d5c:	00004400 	andeq	r4, r0, r0, lsl #8
    3d60:	f59c0100 			; <UNDEFINED> instruction: 0xf59c0100
    3d64:	16000006 	strne	r0, [r0], -r6
    3d68:	00003666 	andeq	r3, r0, r6, ror #12
    3d6c:	3a019901 	bcc	6a178 <__Stack_Size+0x69d78>
    3d70:	da000000 	ble	3d78 <__Stack_Size+0x3978>
    3d74:	1600000b 	strne	r0, [r0], -fp
    3d78:	00001b0d 	andeq	r1, r0, sp, lsl #22
    3d7c:	5e019901 	cdppl	9, 0, cr9, cr1, cr1, {0}
    3d80:	06000000 	streq	r0, [r0], -r0
    3d84:	1400000c 	strne	r0, [r0], #-12
    3d88:	00001a90 	muleq	r0, r0, sl
    3d8c:	03019b01 	movweq	r9, #6913	; 0x1b01
    3d90:	27000002 	strcs	r0, [r0, -r2]
    3d94:	2300000c 	movwcs	r0, #12
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	00000418 	andeq	r0, r0, r8, lsl r4
    3da0:	000006e5 	andeq	r0, r0, r5, ror #13
    3da4:	01500124 	cmpeq	r0, r4, lsr #2
    3da8:	0025003f 	eoreq	r0, r5, pc, lsr r0
    3dac:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3db0:	24000004 	strcs	r0, [r0], #-4
    3db4:	3f015001 	svccc	0x00015001
    3db8:	b1130000 	tstlt	r3, r0
    3dbc:	0100001b 	tsteq	r0, fp, lsl r0
    3dc0:	020301ca 	andeq	r0, r3, #-2147483598	; 0x80000032
    3dc4:	00000000 	andeq	r0, r0, r0
    3dc8:	009c0000 	addseq	r0, ip, r0
    3dcc:	9c010000 	stcls	0, cr0, [r1], {-0}
    3dd0:	000007cb 	andeq	r0, r0, fp, asr #15
    3dd4:	001bde16 	andseq	sp, fp, r6, lsl lr
    3dd8:	01ca0100 	biceq	r0, sl, r0, lsl #2
    3ddc:	0000003a 	andeq	r0, r0, sl, lsr r0
    3de0:	00000c51 	andeq	r0, r0, r1, asr ip
    3de4:	001b0814 	andseq	r0, fp, r4, lsl r8
    3de8:	01cc0100 	biceq	r0, ip, r0, lsl #2
    3dec:	0000004c 	andeq	r0, r0, ip, asr #32
    3df0:	00000c9a 	muleq	r0, sl, ip
    3df4:	001acc14 	andseq	ip, sl, r4, lsl ip
    3df8:	01cc0100 	biceq	r0, ip, r0, lsl #2
    3dfc:	0000004c 	andeq	r0, r0, ip, asr #32
    3e00:	00000ce6 	andeq	r0, r0, r6, ror #25
    3e04:	00197514 	andseq	r7, r9, r4, lsl r5
    3e08:	01cc0100 	biceq	r0, ip, r0, lsl #2
    3e0c:	0000004c 	andeq	r0, r0, ip, asr #32
    3e10:	00000d3e 	andeq	r0, r0, lr, lsr sp
    3e14:	001aae14 	andseq	sl, sl, r4, lsl lr
    3e18:	01cc0100 	biceq	r0, ip, r0, lsl #2
    3e1c:	0000004c 	andeq	r0, r0, ip, asr #32
    3e20:	00000d9a 	muleq	r0, sl, sp
    3e24:	001a9014 	andseq	r9, sl, r4, lsl r0
    3e28:	01ce0100 	biceq	r0, lr, r0, lsl #2
    3e2c:	00000203 	andeq	r0, r0, r3, lsl #4
    3e30:	00000de2 	andeq	r0, r0, r2, ror #27
    3e34:	00000023 	andeq	r0, r0, r3, lsr #32
    3e38:	00041800 	andeq	r1, r4, r0, lsl #16
    3e3c:	00078200 	andeq	r8, r7, r0, lsl #4
    3e40:	50012400 	andpl	r2, r1, r0, lsl #8
    3e44:	23003f01 	movwcs	r3, #3841	; 0xf01
    3e48:	00000000 	andeq	r0, r0, r0
    3e4c:	00000418 	andeq	r0, r0, r8, lsl r4
    3e50:	00000795 	muleq	r0, r5, r7
    3e54:	01500124 	cmpeq	r0, r4, lsr #2
    3e58:	0023003f 	eoreq	r0, r3, pc, lsr r0
    3e5c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3e60:	a8000004 	stmdage	r0, {r2}
    3e64:	24000007 	strcs	r0, [r0], #-7
    3e68:	3f015001 	svccc	0x00015001
    3e6c:	00002300 	andeq	r2, r0, r0, lsl #6
    3e70:	04180000 	ldreq	r0, [r8], #-0
    3e74:	07bb0000 	ldreq	r0, [fp, r0]!
    3e78:	01240000 	teqeq	r4, r0
    3e7c:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    3e80:	00000025 	andeq	r0, r0, r5, lsr #32
    3e84:	00041800 	andeq	r1, r4, r0, lsl #16
    3e88:	50012400 	andpl	r2, r1, r0, lsl #8
    3e8c:	00003f01 	andeq	r3, r0, r1, lsl #30
    3e90:	001a7313 	andseq	r7, sl, r3, lsl r3
    3e94:	02190100 	andseq	r0, r9, #0, 2
    3e98:	00000203 	andeq	r0, r0, r3, lsl #4
    3e9c:	00000000 	andeq	r0, r0, r0
    3ea0:	0000008c 	andeq	r0, r0, ip, lsl #1
    3ea4:	08419c01 	stmdaeq	r1, {r0, sl, fp, ip, pc}^
    3ea8:	c7160000 	ldrgt	r0, [r6, -r0]
    3eac:	01000018 	tsteq	r0, r8, lsl r0
    3eb0:	00c40219 	sbceq	r0, r4, r9, lsl r2
    3eb4:	0e380000 	cdpeq	0, 3, cr0, cr8, cr0, {0}
    3eb8:	90140000 	andsls	r0, r4, r0
    3ebc:	0100001a 	tsteq	r0, sl, lsl r0
    3ec0:	0203021b 	andeq	r0, r3, #-1342177279	; 0xb0000001
    3ec4:	0e590000 	cdpeq	0, 5, cr0, cr9, cr0, {0}
    3ec8:	00230000 	eoreq	r0, r3, r0
    3ecc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3ed0:	1a000004 	bne	3ee8 <__Stack_Size+0x3ae8>
    3ed4:	24000008 	strcs	r0, [r0], #-8
    3ed8:	0a035001 	beq	d7ee4 <__Stack_Size+0xd7ae4>
    3edc:	23000fff 	movwcs	r0, #4095	; 0xfff
    3ee0:	00000000 	andeq	r0, r0, r0
    3ee4:	00000418 	andeq	r0, r0, r8, lsl r4
    3ee8:	0000082f 	andeq	r0, r0, pc, lsr #16
    3eec:	03500124 	cmpeq	r0, #36, 2
    3ef0:	000fff0a 	andeq	pc, pc, sl, lsl #30
    3ef4:	00000025 	andeq	r0, r0, r5, lsr #32
    3ef8:	00041800 	andeq	r1, r4, r0, lsl #16
    3efc:	50012400 	andpl	r2, r1, r0, lsl #8
    3f00:	0fff0a03 	svceq	0x00ff0a03
    3f04:	50260000 	eorpl	r0, r6, r0
    3f08:	0100001a 	tsteq	r0, sl, lsl r0
    3f0c:	0203026a 	andeq	r0, r3, #-1610612730	; 0xa0000006
    3f10:	00000000 	andeq	r0, r0, r0
    3f14:	00540000 	subseq	r0, r4, r0
    3f18:	9c010000 	stcls	0, cr0, [r1], {-0}
    3f1c:	001a6b16 	andseq	r6, sl, r6, lsl fp
    3f20:	026a0100 	rsbeq	r0, sl, #0, 2
    3f24:	0000004c 	andeq	r0, r0, ip, asr #32
    3f28:	00000e8e 	andeq	r0, r0, lr, lsl #29
    3f2c:	00197f16 	andseq	r7, r9, r6, lsl pc
    3f30:	026a0100 	rsbeq	r0, sl, #0, 2
    3f34:	0000004c 	andeq	r0, r0, ip, asr #32
    3f38:	00000eaf 	andeq	r0, r0, pc, lsr #29
    3f3c:	001aff16 	andseq	pc, sl, r6, lsl pc	; <UNPREDICTABLE>
    3f40:	026a0100 	rsbeq	r0, sl, #0, 2
    3f44:	0000004c 	andeq	r0, r0, ip, asr #32
    3f48:	00000ed0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3f4c:	001a9014 	andseq	r9, sl, r4, lsl r0
    3f50:	026c0100 	rsbeq	r0, ip, #0, 2
    3f54:	00000203 	andeq	r0, r0, r3, lsl #4
    3f58:	00000ef1 	strdeq	r0, [r0], -r1
    3f5c:	00000023 	andeq	r0, r0, r3, lsr #32
    3f60:	00041800 	andeq	r1, r4, r0, lsl #16
    3f64:	0008aa00 	andeq	sl, r8, r0, lsl #20
    3f68:	50012400 	andpl	r2, r1, r0, lsl #8
    3f6c:	25003f01 	strcs	r3, [r0, #-3841]	; 0xf01
    3f70:	00000000 	andeq	r0, r0, r0
    3f74:	00000418 	andeq	r0, r0, r8, lsl r4
    3f78:	01500124 	cmpeq	r0, r4, lsr #2
    3f7c:	0000003f 	andeq	r0, r0, pc, lsr r0
    3f80:	00000743 	andeq	r0, r0, r3, asr #14
    3f84:	10030004 	andne	r0, r3, r4
    3f88:	01040000 	mrseq	r0, (UNDEF: 4)
    3f8c:	000002c1 	andeq	r0, r0, r1, asr #5
    3f90:	001c8e01 	andseq	r8, ip, r1, lsl #28
    3f94:	00009a00 	andeq	r9, r0, r0, lsl #20
    3f98:	0004e000 	andeq	lr, r4, r0
    3f9c:	00000000 	andeq	r0, r0, r0
    3fa0:	0011ec00 	andseq	lr, r1, r0, lsl #24
    3fa4:	05040200 	streq	r0, [r4, #-512]	; 0x200
    3fa8:	0000071d 	andeq	r0, r0, sp, lsl r7
    3fac:	ef050202 	svc	0x00050202
    3fb0:	02000006 	andeq	r0, r0, #6
    3fb4:	088c0601 	stmeq	ip, {r0, r9, sl}
    3fb8:	75030000 	strvc	r0, [r3, #-0]
    3fbc:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    3fc0:	00004527 	andeq	r4, r0, r7, lsr #10
    3fc4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3fc8:	00000819 	andeq	r0, r0, r9, lsl r8
    3fcc:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    3fd0:	57280200 	strpl	r0, [r8, -r0, lsl #4]!
    3fd4:	02000000 	andeq	r0, r0, #0
    3fd8:	0a730702 	beq	1cc5be8 <__Stack_Size+0x1cc57e8>
    3fdc:	75030000 	strvc	r0, [r3, #-0]
    3fe0:	29020038 	stmdbcs	r2, {r3, r4, r5}
    3fe4:	00000068 	andeq	r0, r0, r8, rrx
    3fe8:	8a080102 	bhi	2043f8 <__Stack_Size+0x203ff8>
    3fec:	04000008 	streq	r0, [r0], #-8
    3ff0:	000003a7 	andeq	r0, r0, r7, lsr #7
    3ff4:	007a2f02 	rsbseq	r2, sl, r2, lsl #30
    3ff8:	45050000 	strmi	r0, [r5, #-0]
    3ffc:	06000000 	streq	r0, [r0], -r0
    4000:	943e0201 	ldrtls	r0, [lr], #-513	; 0x201
    4004:	07000000 	streq	r0, [r0, -r0]
    4008:	00000477 	andeq	r0, r0, r7, ror r4
    400c:	07f60700 	ldrbeq	r0, [r6, r0, lsl #14]!
    4010:	00010000 	andeq	r0, r1, r0
    4014:	0000c604 	andeq	ip, r0, r4, lsl #12
    4018:	7f3e0200 	svcvc	0x003e0200
    401c:	02000000 	andeq	r0, r0, #0
    4020:	08100704 	ldmdaeq	r0, {r2, r8, r9, sl}
    4024:	1c080000 	stcne	0, cr0, [r8], {-0}
    4028:	0b014e03 	bleq	5783c <__Stack_Size+0x5743c>
    402c:	09000001 	stmdbeq	r0, {r0}
    4030:	004c5243 	subeq	r5, ip, r3, asr #4
    4034:	6f015003 	svcvs	0x00015003
    4038:	00000000 	andeq	r0, r0, r0
    403c:	48524309 	ldmdami	r2, {r0, r3, r8, r9, lr}^
    4040:	01510300 	cmpeq	r1, r0, lsl #6
    4044:	0000006f 	andeq	r0, r0, pc, rrx
    4048:	44490904 	strbmi	r0, [r9], #-2308	; 0x904
    404c:	52030052 	andpl	r0, r3, #82	; 0x52
    4050:	00006f01 	andeq	r6, r0, r1, lsl #30
    4054:	4f090800 	svcmi	0x00090800
    4058:	03005244 	movweq	r5, #580	; 0x244
    405c:	006f0153 	rsbeq	r0, pc, r3, asr r1	; <UNPREDICTABLE>
    4060:	0a0c0000 	beq	304068 <__Stack_Size+0x303c68>
    4064:	0000005f 	andeq	r0, r0, pc, asr r0
    4068:	6f015403 	svcvs	0x00015403
    406c:	10000000 	andne	r0, r0, r0
    4070:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
    4074:	01550300 	cmpeq	r5, r0, lsl #6
    4078:	0000006f 	andeq	r0, r0, pc, rrx
    407c:	0b370a14 	bleq	dc68d4 <__Stack_Size+0xdc64d4>
    4080:	56030000 	strpl	r0, [r3], -r0
    4084:	00006f01 	andeq	r6, r0, r1, lsl #30
    4088:	0b001800 	bleq	a090 <__Stack_Size+0x9c90>
    408c:	000007b1 			; <UNDEFINED> instruction: 0x000007b1
    4090:	a6015703 	strge	r5, [r1], -r3, lsl #14
    4094:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4098:	01590318 	cmpeq	r9, r8, lsl r3
    409c:	00000148 	andeq	r0, r0, r8, asr #2
    40a0:	001dee0a 	andseq	lr, sp, sl, lsl #28
    40a4:	015b0300 	cmpeq	fp, r0, lsl #6
    40a8:	0000006f 	andeq	r0, r0, pc, rrx
    40ac:	1dd30a00 	vldrne	s1, [r3]
    40b0:	5c030000 	stcpl	0, cr0, [r3], {-0}
    40b4:	00006f01 	andeq	r6, r0, r1, lsl #30
    40b8:	a70a0400 	strge	r0, [sl, -r0, lsl #8]
    40bc:	0300001c 	movweq	r0, #28
    40c0:	0158015d 	cmpeq	r8, sp, asr r1
    40c4:	00080000 	andeq	r0, r8, r0
    40c8:	00006f0c 	andeq	r6, r0, ip, lsl #30
    40cc:	00015800 	andeq	r5, r1, r0, lsl #16
    40d0:	009f0d00 	addseq	r0, pc, r0, lsl #26
    40d4:	00030000 	andeq	r0, r3, r0
    40d8:	00014805 	andeq	r4, r1, r5, lsl #16
    40dc:	1dbc0b00 	ldcne	11, cr0, [ip]
    40e0:	5e030000 	cdppl	0, 0, cr0, cr3, cr0, {0}
    40e4:	00011701 	andeq	r1, r1, r1, lsl #14
    40e8:	04010600 	streq	r0, [r1], #-1536	; 0x600
    40ec:	00018423 	andeq	r8, r1, r3, lsr #8
    40f0:	02700700 	rsbseq	r0, r0, #0, 14
    40f4:	07010000 	streq	r0, [r1, -r0]
    40f8:	00000199 	muleq	r0, r9, r1
    40fc:	089d0702 	ldmeq	sp, {r1, r8, r9, sl}
    4100:	00030000 	andeq	r0, r3, r0
    4104:	00068904 	andeq	r8, r6, r4, lsl #18
    4108:	69270400 	stmdbvs	r7!, {sl}
    410c:	06000001 	streq	r0, [r0], -r1
    4110:	c92e0401 	stmdbgt	lr!, {r0, sl}
    4114:	07000001 	streq	r0, [r0, -r1]
    4118:	0000069b 	muleq	r0, fp, r6
    411c:	0ad00700 	beq	ff405d24 <SCS_BASE+0x1f3f7d24>
    4120:	07040000 	streq	r0, [r4, -r0]
    4124:	0000031c 	andeq	r0, r0, ip, lsl r3
    4128:	034e0728 	movteq	r0, #59176	; 0xe728
    412c:	00c80000 	sbceq	r0, r8, r0
    4130:	00037707 	andeq	r7, r3, r7, lsl #14
    4134:	00071400 	andeq	r1, r7, r0, lsl #8
    4138:	10000000 	andne	r0, r0, r0
    413c:	0005f707 	andeq	pc, r5, r7, lsl #14
    4140:	0d071c00 	stceq	12, cr1, [r7, #-0]
    4144:	18000007 	stmdane	r0, {r0, r1, r2}
    4148:	07c60400 	strbeq	r0, [r6, r0, lsl #8]
    414c:	36040000 	strcc	r0, [r4], -r0
    4150:	0000018f 	andeq	r0, r0, pc, lsl #3
    4154:	3e04040e 	cdpcc	4, 0, cr0, cr4, cr14, {0}
    4158:	00000201 	andeq	r0, r0, r1, lsl #4
    415c:	0000780f 	andeq	r7, r0, pc, lsl #16
    4160:	4c400400 	cfstrdmi	mvd0, [r0], {-0}
    4164:	00000000 	andeq	r0, r0, r0
    4168:	000a620f 	andeq	r6, sl, pc, lsl #4
    416c:	84410400 	strbhi	r0, [r1], #-1024	; 0x400
    4170:	02000001 	andeq	r0, r0, #1
    4174:	0000640f 	andeq	r6, r0, pc, lsl #8
    4178:	c9420400 	stmdbgt	r2, {sl}^
    417c:	03000001 	movweq	r0, #1
    4180:	08790400 	ldmdaeq	r9!, {sl}^
    4184:	43040000 	movwmi	r0, #16384	; 0x4000
    4188:	000001d4 	ldrdeq	r0, [r0], -r4
    418c:	47040106 	strmi	r0, [r4, -r6, lsl #2]
    4190:	00000221 	andeq	r0, r0, r1, lsr #4
    4194:	00009007 	andeq	r9, r0, r7
    4198:	be070000 	cdplt	0, 0, cr0, cr7, cr0, {0}
    419c:	01000007 	tsteq	r0, r7
    41a0:	1dc90400 	cfstrdne	mvd0, [r9]
    41a4:	49040000 	stmdbmi	r4, {}	; <UNPREDICTABLE>
    41a8:	0000020c 	andeq	r0, r0, ip, lsl #4
    41ac:	001cc610 	andseq	ip, ip, r0, lsl r6
    41b0:	00330100 	eorseq	r0, r3, r0, lsl #2
    41b4:	a4000000 	strge	r0, [r0], #-0
    41b8:	01000000 	mrseq	r0, (UNDEF: 0)
    41bc:	00030d9c 	muleq	r3, ip, sp
    41c0:	1dd81100 	ldfnee	f1, [r8]
    41c4:	33010000 	movwcc	r0, #4096	; 0x1000
    41c8:	0000030d 	andeq	r0, r0, sp, lsl #6
    41cc:	00000f1b 	andeq	r0, r0, fp, lsl pc
    41d0:	00000012 	andeq	r0, r0, r2, lsl r0
    41d4:	00073300 	andeq	r3, r7, r0, lsl #6
    41d8:	00026800 	andeq	r6, r2, r0, lsl #16
    41dc:	51011300 	mrspl	r1, SP_irq
    41e0:	01133101 	tsteq	r3, r1, lsl #2
    41e4:	00340150 	eorseq	r0, r4, r0, asr r1
    41e8:	00000012 	andeq	r0, r0, r2, lsl r0
    41ec:	00073300 	andeq	r3, r7, r0, lsl #6
    41f0:	00028100 	andeq	r8, r2, r0, lsl #2
    41f4:	51011300 	mrspl	r1, SP_irq
    41f8:	01133101 	tsteq	r3, r1, lsl #2
    41fc:	40080250 	andmi	r0, r8, r0, asr r2
    4200:	00001200 	andeq	r1, r0, r0, lsl #4
    4204:	07330000 	ldreq	r0, [r3, -r0]!
    4208:	02990000 	addseq	r0, r9, #0
    420c:	01130000 	tsteq	r3, r0
    4210:	13310151 	teqne	r1, #1073741844	; 0x40000014
    4214:	38015001 	stmdacc	r1, {r0, ip, lr}
    4218:	00001200 	andeq	r1, r0, r0, lsl #4
    421c:	07330000 	ldreq	r0, [r3, -r0]!
    4220:	02b10000 	adcseq	r0, r1, #0
    4224:	01130000 	tsteq	r3, r0
    4228:	13310151 	teqne	r1, #1073741844	; 0x40000014
    422c:	40015001 	andmi	r5, r1, r1
    4230:	00001200 	andeq	r1, r0, r0, lsl #4
    4234:	07330000 	ldreq	r0, [r3, -r0]!
    4238:	02ca0000 	sbceq	r0, sl, #0
    423c:	01130000 	tsteq	r3, r0
    4240:	13310151 	teqne	r1, #1073741844	; 0x40000014
    4244:	08025001 	stmdaeq	r2, {r0, ip, lr}
    4248:	00120020 	andseq	r0, r2, r0, lsr #32
    424c:	33000000 	movwcc	r0, #0
    4250:	e3000007 	movw	r0, #7
    4254:	13000002 	movwne	r0, #2
    4258:	31015101 	tstcc	r1, r1, lsl #2
    425c:	02500113 	subseq	r0, r0, #-1073741820	; 0xc0000004
    4260:	12008008 	andne	r8, r0, #8
    4264:	00000000 	andeq	r0, r0, r0
    4268:	00000733 	andeq	r0, r0, r3, lsr r7
    426c:	000002fd 	strdeq	r0, [r0], -sp
    4270:	01510113 	cmpeq	r1, r3, lsl r1
    4274:	50011331 	andpl	r1, r1, r1, lsr r3
    4278:	01000a03 	tsteq	r0, r3, lsl #20
    427c:	00001400 	andeq	r1, r0, r0, lsl #8
    4280:	07330000 	ldreq	r0, [r3, -r0]!
    4284:	01130000 	tsteq	r3, r0
    4288:	00300151 	eorseq	r0, r0, r1, asr r1
    428c:	0b041500 	bleq	109694 <__Stack_Size+0x109294>
    4290:	10000001 	andne	r0, r0, r1
    4294:	00001e0a 	andeq	r1, r0, sl, lsl #28
    4298:	00006b01 	andeq	r6, r0, r1, lsl #22
    429c:	00160000 	andseq	r0, r6, r0
    42a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    42a4:	00000355 	andeq	r0, r0, r5, asr r3
    42a8:	00000012 	andeq	r0, r0, r2, lsl r0
    42ac:	00073300 	andeq	r3, r7, r0, lsl #6
    42b0:	00034000 	andeq	r4, r3, r0
    42b4:	51011300 	mrspl	r1, SP_irq
    42b8:	01133101 	tsteq	r3, r1, lsl #2
    42bc:	00310150 	eorseq	r0, r1, r0, asr r1
    42c0:	00000014 	andeq	r0, r0, r4, lsl r0
    42c4:	00073300 	andeq	r3, r7, r0, lsl #6
    42c8:	51011300 	mrspl	r1, SP_irq
    42cc:	01133001 	tsteq	r3, r1
    42d0:	00310150 	eorseq	r0, r1, r0, asr r1
    42d4:	01681000 	cmneq	r8, r0
    42d8:	7c010000 	stcvc	0, cr0, [r1], {-0}
    42dc:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
    42e0:	0000009c 	muleq	r0, ip, r0
    42e4:	03e19c01 	mvneq	r9, #256	; 0x100
    42e8:	d8160000 	ldmdale	r6, {}	; <UNPREDICTABLE>
    42ec:	0100001d 	tsteq	r0, sp, lsl r0
    42f0:	00030d7c 	andeq	r0, r3, ip, ror sp
    42f4:	11500100 	cmpne	r0, r0, lsl #2
    42f8:	00001dde 	ldrdeq	r1, [r0], -lr
    42fc:	03e17c01 	mvneq	r7, #256	; 0x100
    4300:	0fdd0000 	svceq	0x00dd0000
    4304:	19170000 	ldmdbne	r7, {}	; <UNPREDICTABLE>
    4308:	0100001d 	tsteq	r0, sp, lsl r0
    430c:	00003a7e 	andeq	r3, r0, lr, ror sl
    4310:	000ffe00 	andeq	pc, pc, r0, lsl #28
    4314:	1d8d1700 	stcne	7, cr1, [sp]
    4318:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    431c:	0000003a 	andeq	r0, r0, sl, lsr r0
    4320:	0000102d 	andeq	r1, r0, sp, lsr #32
    4324:	001c3a17 	andseq	r3, ip, r7, lsl sl
    4328:	3a7e0100 	bcc	1f84730 <__Stack_Size+0x1f84330>
    432c:	57000000 	strpl	r0, [r0, -r0]
    4330:	18000010 	stmdane	r0, {r4}
    4334:	00736f70 	rsbseq	r6, r3, r0, ror pc
    4338:	003a7e01 	eorseq	r7, sl, r1, lsl #28
    433c:	108d0000 	addne	r0, sp, r0
    4340:	0a170000 	beq	5c4348 <__Stack_Size+0x5c3f48>
    4344:	0100001d 	tsteq	r0, sp, lsl r0
    4348:	00003a7f 	andeq	r3, r0, pc, ror sl
    434c:	00110900 	andseq	r0, r1, r0, lsl #18
    4350:	1cae1700 	stcne	7, cr1, [lr]
    4354:	7f010000 	svcvc	0x00010000
    4358:	0000003a 	andeq	r0, r0, sl, lsr r0
    435c:	00001133 	andeq	r1, r0, r3, lsr r1
    4360:	01041500 	tsteq	r4, r0, lsl #10
    4364:	10000002 	andne	r0, r0, r2
    4368:	00001c69 	andeq	r1, r0, r9, ror #24
    436c:	0000e501 	andeq	lr, r0, r1, lsl #10
    4370:	00100000 	andseq	r0, r0, r0
    4374:	9c010000 	stcls	0, cr0, [r1], {-0}
    4378:	0000040a 	andeq	r0, r0, sl, lsl #8
    437c:	001dde16 	andseq	sp, sp, r6, lsl lr
    4380:	e1e50100 	mvn	r0, r0, lsl #2
    4384:	01000003 	tsteq	r0, r3
    4388:	f4190050 			; <UNDEFINED> instruction: 0xf4190050
    438c:	0100001c 	tsteq	r0, ip, lsl r0
    4390:	00005ef6 	strdeq	r5, [r0], -r6
    4394:	00000000 	andeq	r0, r0, r0
    4398:	00000c00 	andeq	r0, r0, r0, lsl #24
    439c:	4f9c0100 	svcmi	0x009c0100
    43a0:	11000004 	tstne	r0, r4
    43a4:	00001dd8 	ldrdeq	r1, [r0], -r8
    43a8:	030df601 	movweq	pc, #54785	; 0xd601	; <UNPREDICTABLE>
    43ac:	117b0000 	cmnne	fp, r0
    43b0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    43b4:	01000000 	mrseq	r0, (UNDEF: 0)
    43b8:	00004cf6 	strdeq	r4, [r0], -r6
    43bc:	17510100 	ldrbne	r0, [r1, -r0, lsl #2]
    43c0:	00001a97 	muleq	r0, r7, sl
    43c4:	005ef801 	subseq	pc, lr, r1, lsl #16
    43c8:	119c0000 	orrsne	r0, ip, r0
    43cc:	1a000000 	bne	43d4 <__Stack_Size+0x3fd4>
    43d0:	00001d5f 	andeq	r1, r0, pc, asr sp
    43d4:	4c011001 	stcmi	0, cr1, [r1], {1}
    43d8:	00000000 	andeq	r0, r0, r0
    43dc:	06000000 	streq	r0, [r0], -r0
    43e0:	01000000 	mrseq	r0, (UNDEF: 0)
    43e4:	00047a9c 	muleq	r4, ip, sl
    43e8:	1dd81b00 	vldrne	d17, [r8]
    43ec:	10010000 	andne	r0, r1, r0
    43f0:	00030d01 	andeq	r0, r3, r1, lsl #26
    43f4:	0011c600 	andseq	ip, r1, r0, lsl #12
    43f8:	f31a0000 	vhadd.u16	d0, d10, d0
    43fc:	0100001d 	tsteq	r0, sp, lsl r0
    4400:	005e0121 	subseq	r0, lr, r1, lsr #2
    4404:	00000000 	andeq	r0, r0, r0
    4408:	000c0000 	andeq	r0, ip, r0
    440c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4410:	000004c3 	andeq	r0, r0, r3, asr #9
    4414:	001dd81b 	andseq	sp, sp, fp, lsl r8
    4418:	01210100 	teqeq	r1, r0, lsl #2
    441c:	0000030d 	andeq	r0, r0, sp, lsl #6
    4420:	000011e7 	andeq	r1, r0, r7, ror #3
    4424:	0000781c 	andeq	r7, r0, ip, lsl r8
    4428:	01210100 	teqeq	r1, r0, lsl #2
    442c:	0000004c 	andeq	r0, r0, ip, asr #32
    4430:	971d5101 	ldrls	r5, [sp, -r1, lsl #2]
    4434:	0100001a 	tsteq	r0, sl, lsl r0
    4438:	005e0123 	subseq	r0, lr, r3, lsr #2
    443c:	12080000 	andne	r0, r8, #0
    4440:	1a000000 	bne	4448 <__Stack_Size+0x4048>
    4444:	00001c41 	andeq	r1, r0, r1, asr #24
    4448:	4c013b01 	stcmi	11, cr3, [r1], {1}
    444c:	00000000 	andeq	r0, r0, r0
    4450:	06000000 	streq	r0, [r0], -r0
    4454:	01000000 	mrseq	r0, (UNDEF: 0)
    4458:	0004ee9c 	muleq	r4, ip, lr
    445c:	1dd81b00 	vldrne	d17, [r8]
    4460:	3b010000 	blcc	44468 <__Stack_Size+0x44068>
    4464:	00030d01 	andeq	r0, r3, r1, lsl #26
    4468:	00123200 	andseq	r3, r2, r0, lsl #4
    446c:	a81e0000 	ldmdage	lr, {}	; <UNPREDICTABLE>
    4470:	01000002 	tsteq	r0, r2
    4474:	096c014d 	stmdbeq	ip!, {r0, r2, r3, r6, r8}^
    4478:	00040800 	andeq	r0, r4, r0, lsl #16
    447c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4480:	00000521 	andeq	r0, r0, r1, lsr #10
    4484:	001dd81c 	andseq	sp, sp, ip, lsl r8
    4488:	014d0100 	mrseq	r0, (UNDEF: 93)
    448c:	0000030d 	andeq	r0, r0, sp, lsl #6
    4490:	781c5001 	ldmdavc	ip, {r0, ip, lr}
    4494:	01000000 	mrseq	r0, (UNDEF: 0)
    4498:	004c014d 	subeq	r0, ip, sp, asr #2
    449c:	51010000 	mrspl	r0, (UNDEF: 1)
    44a0:	06261e00 	strteq	r1, [r6], -r0, lsl #28
    44a4:	60010000 	andvs	r0, r1, r0
    44a8:	00097001 	andeq	r7, r9, r1
    44ac:	00000408 	andeq	r0, r0, r8, lsl #8
    44b0:	549c0100 	ldrpl	r0, [ip], #256	; 0x100
    44b4:	1c000005 	stcne	0, cr0, [r0], {5}
    44b8:	00001dd8 	ldrdeq	r1, [r0], -r8
    44bc:	0d016001 	stceq	0, cr6, [r1, #-4]
    44c0:	01000003 	tsteq	r0, r3
    44c4:	00781c50 	rsbseq	r1, r8, r0, asr ip
    44c8:	60010000 	andvs	r0, r1, r0
    44cc:	00004c01 	andeq	r4, r0, r1, lsl #24
    44d0:	00510100 	subseq	r0, r1, r0, lsl #2
    44d4:	001c801e 	andseq	r8, ip, lr, lsl r0
    44d8:	01760100 	cmneq	r6, r0, lsl #2
    44dc:	00000000 	andeq	r0, r0, r0
    44e0:	0000000a 	andeq	r0, r0, sl
    44e4:	05959c01 	ldreq	r9, [r5, #3073]	; 0xc01
    44e8:	d81c0000 	ldmdale	ip, {}	; <UNPREDICTABLE>
    44ec:	0100001d 	tsteq	r0, sp, lsl r0
    44f0:	030d0176 	movweq	r0, #53622	; 0xd176
    44f4:	50010000 	andpl	r0, r1, r0
    44f8:	0000781c 	andeq	r7, r0, ip, lsl r8
    44fc:	01760100 	cmneq	r6, r0, lsl #2
    4500:	0000004c 	andeq	r0, r0, ip, asr #32
    4504:	791c5101 	ldmdbvc	ip, {r0, r8, ip, lr}
    4508:	0100001c 	tsteq	r0, ip, lsl r0
    450c:	02210176 	eoreq	r0, r1, #-2147483619	; 0x8000001d
    4510:	52010000 	andpl	r0, r1, #0
    4514:	1d981e00 	ldcne	14, cr1, [r8]
    4518:	90010000 	andls	r0, r1, r0
    451c:	00000001 	andeq	r0, r0, r1
    4520:	00000400 	andeq	r0, r0, r0, lsl #8
    4524:	c89c0100 	ldmgt	ip, {r8}
    4528:	1c000005 	stcne	0, cr0, [r0], {5}
    452c:	00001dd8 	ldrdeq	r1, [r0], -r8
    4530:	0d019001 	stceq	0, cr9, [r1, #-4]
    4534:	01000003 	tsteq	r0, r3
    4538:	1d111c50 	ldcne	12, cr1, [r1, #-320]	; 0xfffffec0
    453c:	90010000 	andls	r0, r1, r0
    4540:	00004c01 	andeq	r4, r0, r1, lsl #24
    4544:	00510100 	subseq	r0, r1, r0, lsl #2
    4548:	001d7a1e 	andseq	r7, sp, lr, lsl sl
    454c:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    4550:	00000000 	andeq	r0, r0, r0
    4554:	00000010 	andeq	r0, r0, r0, lsl r0
    4558:	060b9c01 	streq	r9, [fp], -r1, lsl #24
    455c:	d81c0000 	ldmdale	ip, {}	; <UNPREDICTABLE>
    4560:	0100001d 	tsteq	r0, sp, lsl r0
    4564:	030d01a2 	movweq	r0, #53666	; 0xd1a2
    4568:	50010000 	andpl	r0, r1, r0
    456c:	0000781c 	andeq	r7, r0, ip, lsl r8
    4570:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    4574:	0000004c 	andeq	r0, r0, ip, asr #32
    4578:	741f5101 	ldrvc	r5, [pc], #-257	; 4580 <__Stack_Size+0x4180>
    457c:	0100706d 	tsteq	r0, sp, rrx
    4580:	003a01a4 	eorseq	r0, sl, r4, lsr #3
    4584:	12530000 	subsne	r0, r3, #0
    4588:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    458c:	00001cd2 	ldrdeq	r1, [r0], -r2
    4590:	0001c301 	andeq	ip, r1, r1, lsl #6
    4594:	1c000000 	stcne	0, cr0, [r0], {-0}
    4598:	01000000 	mrseq	r0, (UNDEF: 0)
    459c:	0006529c 	muleq	r6, ip, r2
    45a0:	1cb61b00 	vldmiane	r6!, {d1-d0}
    45a4:	c3010000 	movwgt	r0, #4096	; 0x1000
    45a8:	00005e01 	andeq	r5, r0, r1, lsl #28
    45ac:	00127400 	andseq	r7, r2, r0, lsl #8
    45b0:	1d391b00 	vldmdbne	r9!, {d1-d0}
    45b4:	c3010000 	movwgt	r0, #4096	; 0x1000
    45b8:	00005e01 	andeq	r5, r0, r1, lsl #28
    45bc:	00129500 	andseq	r9, r2, r0, lsl #10
    45c0:	1d0a1d00 	stcne	13, cr1, [sl, #-0]
    45c4:	c5010000 	strgt	r0, [r1, #-0]
    45c8:	00003a01 	andeq	r3, r0, r1, lsl #20
    45cc:	0012b600 	andseq	fp, r2, r0, lsl #12
    45d0:	551e0000 	ldrpl	r0, [lr, #-0]
    45d4:	0100001c 	tsteq	r0, ip, lsl r0
    45d8:	000001dc 	ldrdeq	r0, [r0], -ip
    45dc:	000c0000 	andeq	r0, ip, r0
    45e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    45e4:	00000677 	andeq	r0, r0, r7, ror r6
    45e8:	0018c71c 	andseq	ip, r8, ip, lsl r7
    45ec:	01dc0100 	bicseq	r0, ip, r0, lsl #2
    45f0:	00000094 	muleq	r0, r4, r0
    45f4:	1e005001 	cdpne	0, 0, cr5, cr0, cr1, {0}
    45f8:	00001d25 	andeq	r1, r0, r5, lsr #26
    45fc:	00020701 	andeq	r0, r2, r1, lsl #14
    4600:	54000000 	strpl	r0, [r0], #-0
    4604:	01000000 	mrseq	r0, (UNDEF: 0)
    4608:	0006ec9c 	muleq	r6, ip, ip
    460c:	1ce91b00 	vstmiane	r9!, {d17-d16}
    4610:	07010000 	streq	r0, [r1, -r0]
    4614:	00003a02 	andeq	r3, r0, r2, lsl #20
    4618:	0012f500 	andseq	pc, r2, r0, lsl #10
    461c:	18c71c00 	stmiane	r7, {sl, fp, ip}^
    4620:	07010000 	streq	r0, [r1, -r0]
    4624:	00009402 	andeq	r9, r0, r2, lsl #8
    4628:	1f510100 	svcne	0x00510100
    462c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    4630:	3a020901 	bcc	86a3c <__Stack_Size+0x8663c>
    4634:	16000000 	strne	r0, [r0], -r0
    4638:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    463c:	00001da3 	andeq	r1, r0, r3, lsr #27
    4640:	3a020901 	bcc	86a4c <__Stack_Size+0x8664c>
    4644:	47000000 	strmi	r0, [r0, -r0]
    4648:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    464c:	00001d0a 	andeq	r1, r0, sl, lsl #26
    4650:	3a020901 	bcc	86a5c <__Stack_Size+0x8665c>
    4654:	7c000000 	stcvc	0, cr0, [r0], {-0}
    4658:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    465c:	00001d72 	andeq	r1, r0, r2, ror sp
    4660:	3a020901 	bcc	86a6c <__Stack_Size+0x8666c>
    4664:	9b000000 	blls	466c <__Stack_Size+0x426c>
    4668:	00000013 	andeq	r0, r0, r3, lsl r0
    466c:	001da81e 	andseq	sl, sp, lr, lsl r8
    4670:	02390100 	eorseq	r0, r9, #0, 2
    4674:	00000000 	andeq	r0, r0, r0
    4678:	0000002a 	andeq	r0, r0, sl, lsr #32
    467c:	07339c01 	ldreq	r9, [r3, -r1, lsl #24]!
    4680:	b61b0000 	ldrlt	r0, [fp], -r0
    4684:	0100001c 	tsteq	r0, ip, lsl r0
    4688:	005e0239 	subseq	r0, lr, r9, lsr r2
    468c:	13d60000 	bicsne	r0, r6, #0
    4690:	391b0000 	ldmdbcc	fp, {}	; <UNPREDICTABLE>
    4694:	0100001d 	tsteq	r0, sp, lsl r0
    4698:	005e0239 	subseq	r0, lr, r9, lsr r2
    469c:	13f70000 	mvnsne	r0, #0
    46a0:	741f0000 	ldrvc	r0, [pc], #-0	; 46a8 <__Stack_Size+0x42a8>
    46a4:	0100706d 	tsteq	r0, sp, rrx
    46a8:	003a023b 	eorseq	r0, sl, fp, lsr r2
    46ac:	14180000 	ldrne	r0, [r8], #-0
    46b0:	20000000 	andcs	r0, r0, r0
    46b4:	00001d48 	andeq	r1, r0, r8, asr #26
    46b8:	21011405 	tstcs	r1, r5, lsl #8
    46bc:	0000003a 	andeq	r0, r0, sl, lsr r0
    46c0:	00009421 	andeq	r9, r0, r1, lsr #8
    46c4:	6d000000 	stcvs	0, cr0, [r0, #-0]
    46c8:	04000008 	streq	r0, [r0], #-8
    46cc:	0011eb00 	andseq	lr, r1, r0, lsl #22
    46d0:	c1010400 	tstgt	r1, r0, lsl #8
    46d4:	01000002 	tsteq	r0, r2
    46d8:	00001e5f 	andeq	r1, r0, pc, asr lr
    46dc:	0000009a 	muleq	r0, sl, r0
    46e0:	00000570 	andeq	r0, r0, r0, ror r5
    46e4:	00000000 	andeq	r0, r0, r0
    46e8:	00001420 	andeq	r1, r0, r0, lsr #8
    46ec:	1d050402 	cfstrsne	mvf0, [r5, #-8]
    46f0:	02000007 	andeq	r0, r0, #7
    46f4:	06ef0502 	strbteq	r0, [pc], r2, lsl #10
    46f8:	01020000 	mrseq	r0, (UNDEF: 2)
    46fc:	00088c06 	andeq	r8, r8, r6, lsl #24
    4700:	33750300 	cmncc	r5, #0, 6
    4704:	27020032 	smladxcs	r2, r2, r0, r0
    4708:	00000045 	andeq	r0, r0, r5, asr #32
    470c:	19070402 	stmdbne	r7, {r1, sl}
    4710:	03000008 	movweq	r0, #8
    4714:	00363175 	eorseq	r3, r6, r5, ror r1
    4718:	00572802 	subseq	r2, r7, r2, lsl #16
    471c:	02020000 	andeq	r0, r2, #0
    4720:	000a7307 	andeq	r7, sl, r7, lsl #6
    4724:	38750300 	ldmdacc	r5!, {r8, r9}^
    4728:	68290200 	stmdavs	r9!, {r9}
    472c:	02000000 	andeq	r0, r0, #0
    4730:	088a0801 	stmeq	sl, {r0, fp}
    4734:	75030000 	strvc	r0, [r3, #-0]
    4738:	02003863 	andeq	r3, r0, #6488064	; 0x630000
    473c:	00007a2d 	andeq	r7, r0, sp, lsr #20
    4740:	00680400 	rsbeq	r0, r8, r0, lsl #8
    4744:	a7050000 	strge	r0, [r5, -r0]
    4748:	02000003 	andeq	r0, r0, #3
    474c:	00008a2f 	andeq	r8, r0, pc, lsr #20
    4750:	00450600 	subeq	r0, r5, r0, lsl #12
    4754:	76030000 	strvc	r0, [r3], -r0
    4758:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    475c:	00009a31 	andeq	r9, r0, r1, lsr sl
    4760:	00680600 	rsbeq	r0, r8, r0, lsl #12
    4764:	01070000 	mrseq	r0, (UNDEF: 7)
    4768:	00b43c02 	adcseq	r3, r4, r2, lsl #24
    476c:	94080000 	strls	r0, [r8], #-0
    4770:	00000000 	andeq	r0, r0, r0
    4774:	54455309 	strbpl	r5, [r5], #-777	; 0x309
    4778:	05000100 	streq	r0, [r0, #-256]	; 0x100
    477c:	0000067e 	andeq	r0, r0, lr, ror r6
    4780:	009f3c02 	addseq	r3, pc, r2, lsl #24
    4784:	86050000 	strhi	r0, [r5], -r0
    4788:	0200001e 	andeq	r0, r0, #30
    478c:	00009f3c 	andeq	r9, r0, ip, lsr pc
    4790:	02010700 	andeq	r0, r1, #0, 14
    4794:	0000df3e 	andeq	sp, r0, lr, lsr pc
    4798:	04770800 	ldrbteq	r0, [r7], #-2048	; 0x800
    479c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    47a0:	000007f6 	strdeq	r0, [r0], -r6
    47a4:	c6050001 	strgt	r0, [r5], -r1
    47a8:	02000000 	andeq	r0, r0, #0
    47ac:	0000ca3e 	andeq	ip, r0, lr, lsr sl
    47b0:	02010700 	andeq	r0, r1, #0, 14
    47b4:	0000ff41 	andeq	pc, r0, r1, asr #30
    47b8:	12f00800 	rscsne	r0, r0, #0, 16
    47bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    47c0:	0000125a 	andeq	r1, r0, sl, asr r2
    47c4:	fb050001 	blx	1447d2 <__Stack_Size+0x1443d2>
    47c8:	02000000 	andeq	r0, r0, #0
    47cc:	0000ea41 	andeq	lr, r0, r1, asr #20
    47d0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    47d4:	00000810 	andeq	r0, r0, r0, lsl r8
    47d8:	aa03280a 	bge	ce808 <__Stack_Size+0xce408>
    47dc:	00019c01 	andeq	r9, r1, r1, lsl #24
    47e0:	52430b00 	subpl	r0, r3, #0, 22
    47e4:	01ac0300 			; <UNDEFINED> instruction: 0x01ac0300
    47e8:	0000007f 	andeq	r0, r0, pc, ror r0
    47ec:	1ee00c00 	cdpne	12, 14, cr0, cr0, cr0, {0}
    47f0:	ad030000 	stcge	0, cr0, [r3, #-0]
    47f4:	00007f01 	andeq	r7, r0, r1, lsl #30
    47f8:	430b0400 	movwmi	r0, #46080	; 0xb400
    47fc:	03005249 	movweq	r5, #585	; 0x249
    4800:	007f01ae 	rsbseq	r0, pc, lr, lsr #3
    4804:	0c080000 	stceq	0, cr0, [r8], {-0}
    4808:	00001f45 	andeq	r1, r0, r5, asr #30
    480c:	7f01af03 	svcvc	0x0001af03
    4810:	0c000000 	stceq	0, cr0, [r0], {-0}
    4814:	001e260c 	andseq	r2, lr, ip, lsl #12
    4818:	01b00300 	lslseq	r0, r0, #6
    481c:	0000007f 	andeq	r0, r0, pc, ror r0
    4820:	1f670c10 	svcne	0x00670c10
    4824:	b1030000 	mrslt	r0, (UNDEF: 3)
    4828:	00007f01 	andeq	r7, r0, r1, lsl #30
    482c:	8f0c1400 	svchi	0x000c1400
    4830:	0300001f 	movweq	r0, #31
    4834:	007f01b2 	ldrhteq	r0, [pc], #-18
    4838:	0c180000 	ldceq	0, cr0, [r8], {-0}
    483c:	00001ef4 	strdeq	r1, [r0], -r4
    4840:	7f01b303 	svcvc	0x0001b303
    4844:	1c000000 	stcne	0, cr0, [r0], {-0}
    4848:	001e8f0c 	andseq	r8, lr, ip, lsl #30
    484c:	01b40300 			; <UNDEFINED> instruction: 0x01b40300
    4850:	0000007f 	andeq	r0, r0, pc, ror r0
    4854:	53430b20 	movtpl	r0, #15136	; 0x3b20
    4858:	b5030052 	strlt	r0, [r3, #-82]	; 0x52
    485c:	00007f01 	andeq	r7, r0, r1, lsl #30
    4860:	0d002400 	cfstrseq	mvf2, [r0, #-0]
    4864:	00001e1a 	andeq	r1, r0, sl, lsl lr
    4868:	1101b603 	tstne	r1, r3, lsl #12
    486c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    4870:	ed190414 	cfldrs	mvf0, [r9, #-80]	; 0xffffffb0
    4874:	0f000001 	svceq	0x00000001
    4878:	00002044 	andeq	r2, r0, r4, asr #32
    487c:	003a1b04 	eorseq	r1, sl, r4, lsl #22
    4880:	0f000000 	svceq	0x00000000
    4884:	00001ee5 	andeq	r1, r0, r5, ror #29
    4888:	003a1c04 	eorseq	r1, sl, r4, lsl #24
    488c:	0f040000 	svceq	0x00040000
    4890:	0000209c 	muleq	r0, ip, r0
    4894:	003a1d04 	eorseq	r1, sl, r4, lsl #26
    4898:	0f080000 	svceq	0x00080000
    489c:	00002060 	andeq	r2, r0, r0, rrx
    48a0:	003a1e04 	eorseq	r1, sl, r4, lsl #28
    48a4:	0f0c0000 	svceq	0x000c0000
    48a8:	00001fd7 	ldrdeq	r1, [r0], -r7
    48ac:	003a1f04 	eorseq	r1, sl, r4, lsl #30
    48b0:	00100000 	andseq	r0, r0, r0
    48b4:	001ead05 	andseq	sl, lr, r5, lsl #26
    48b8:	a8200400 	stmdage	r0!, {sl}
    48bc:	10000001 	andne	r0, r0, r1
    48c0:	00000038 	andeq	r0, r0, r8, lsr r0
    48c4:	09747c01 	ldmdbeq	r4!, {r0, sl, fp, ip, sp, lr}^
    48c8:	003c0800 	eorseq	r0, ip, r0, lsl #16
    48cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    48d0:	0004e611 	andeq	lr, r4, r1, lsl r6
    48d4:	b09f0100 	addslt	r0, pc, r0, lsl #2
    48d8:	38080009 	stmdacc	r8, {r0, r3}
    48dc:	01000000 	mrseq	r0, (UNDEF: 0)
    48e0:	00022c9c 	muleq	r2, ip, ip
    48e4:	20831200 	addcs	r1, r3, r0, lsl #4
    48e8:	9f010000 	svcls	0x00010000
    48ec:	0000003a 	andeq	r0, r0, sl, lsr r0
    48f0:	11005001 	tstne	r0, r1
    48f4:	00001fb9 			; <UNDEFINED> instruction: 0x00001fb9
    48f8:	0000e901 	andeq	lr, r0, r1, lsl #18
    48fc:	00140000 	andseq	r0, r4, r0
    4900:	9c010000 	stcls	0, cr0, [r1], {-0}
    4904:	00000260 	andeq	r0, r0, r0, ror #4
    4908:	001fc313 	andseq	ip, pc, r3, lsl r3	; <UNPREDICTABLE>
    490c:	5ee90100 	cdppl	1, 14, cr0, cr9, cr0, {0}
    4910:	55000000 	strpl	r0, [r0, #-0]
    4914:	14000014 	strne	r0, [r0], #-20
    4918:	00001d0a 	andeq	r1, r0, sl, lsl #26
    491c:	003aeb01 	eorseq	lr, sl, r1, lsl #22
    4920:	14760000 	ldrbtne	r0, [r6], #-0
    4924:	15000000 	strne	r0, [r0, #-0]
    4928:	00002106 	andeq	r2, r0, r6, lsl #2
    492c:	00010601 	andeq	r0, r1, r1, lsl #12
    4930:	0c000000 	stceq	0, cr0, [r0], {-0}
    4934:	01000000 	mrseq	r0, (UNDEF: 0)
    4938:	0002859c 	muleq	r2, ip, r5
    493c:	18c71600 	stmiane	r7, {r9, sl, ip}^
    4940:	06010000 	streq	r0, [r1], -r0
    4944:	0000df01 	andeq	sp, r0, r1, lsl #30
    4948:	00500100 	subseq	r0, r0, r0, lsl #2
    494c:	00011315 	andeq	r1, r1, r5, lsl r3
    4950:	011f0100 	tsteq	pc, r0, lsl #2
    4954:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
    4958:	00000014 	andeq	r0, r0, r4, lsl r0
    495c:	02cc9c01 	sbceq	r9, ip, #256	; 0x100
    4960:	f1170000 			; <UNDEFINED> instruction: 0xf1170000
    4964:	0100001f 	tsteq	r0, pc, lsl r0
    4968:	003a011f 	eorseq	r0, sl, pc, lsl r1
    496c:	14a00000 	strtne	r0, [r0], #0
    4970:	bf170000 	svclt	0x00170000
    4974:	0100001e 	tsteq	r0, lr, lsl r0
    4978:	003a011f 	eorseq	r0, sl, pc, lsl r1
    497c:	14c10000 	strbne	r0, [r1], #0
    4980:	0a180000 	beq	604988 <__Stack_Size+0x604588>
    4984:	0100001d 	tsteq	r0, sp, lsl r0
    4988:	003a0121 	eorseq	r0, sl, r1, lsr #2
    498c:	14e20000 	strbtne	r0, [r2], #0
    4990:	15000000 	strne	r0, [r0, #-0]
    4994:	00000a07 	andeq	r0, r0, r7, lsl #20
    4998:	fc013c01 	stc2	12, cr3, [r1], {1}
    499c:	0c080009 	stceq	0, cr0, [r8], {9}
    49a0:	01000000 	mrseq	r0, (UNDEF: 0)
    49a4:	0002f19c 	muleq	r2, ip, r1
    49a8:	18c71600 	stmiane	r7, {r9, sl, ip}^
    49ac:	3c010000 	stccc	0, cr0, [r1], {-0}
    49b0:	0000df01 	andeq	sp, r0, r1, lsl #30
    49b4:	00500100 	subseq	r0, r0, r0, lsl #2
    49b8:	00001815 	andeq	r1, r0, r5, lsl r8
    49bc:	014f0100 	mrseq	r0, (UNDEF: 95)
    49c0:	08000a08 	stmdaeq	r0, {r3, r9, fp}
    49c4:	00000014 	andeq	r0, r0, r4, lsl r0
    49c8:	03289c01 	teqeq	r8, #256	; 0x100
    49cc:	8b170000 	blhi	5c49d4 <__Stack_Size+0x5c45d4>
    49d0:	01000020 	tsteq	r0, r0, lsr #32
    49d4:	003a014f 	eorseq	r0, sl, pc, asr #2
    49d8:	151f0000 	ldrne	r0, [pc, #-0]	; 49e0 <__Stack_Size+0x45e0>
    49dc:	0a180000 	beq	6049e4 <__Stack_Size+0x6045e4>
    49e0:	0100001d 	tsteq	r0, sp, lsl r0
    49e4:	003a0151 	eorseq	r0, sl, r1, asr r1
    49e8:	15400000 	strbne	r0, [r0, #-0]
    49ec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    49f0:	000007e2 	andeq	r0, r0, r2, ror #15
    49f4:	5e016d01 	cdppl	13, 0, cr6, cr1, cr1, {0}
    49f8:	1c000000 	stcne	0, cr0, [r0], {-0}
    49fc:	1008000a 	andne	r0, r8, sl
    4a00:	01000000 	mrseq	r0, (UNDEF: 0)
    4a04:	059e159c 	ldreq	r1, [lr, #1436]	; 0x59c
    4a08:	84010000 	strhi	r0, [r1], #-0
    4a0c:	000a2c01 	andeq	r2, sl, r1, lsl #24
    4a10:	00001408 	andeq	r1, r0, r8, lsl #8
    4a14:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
    4a18:	17000003 	strne	r0, [r0, -r3]
    4a1c:	0000202f 	andeq	r2, r0, pc, lsr #32
    4a20:	3a018401 	bcc	65a2c <__Stack_Size+0x6562c>
    4a24:	6a000000 	bvs	4a2c <__Stack_Size+0x462c>
    4a28:	18000015 	stmdane	r0, {r0, r2, r4}
    4a2c:	00001d0a 	andeq	r1, r0, sl, lsl #26
    4a30:	3a018601 	bcc	6623c <__Stack_Size+0x65e3c>
    4a34:	8b000000 	blhi	4a3c <__Stack_Size+0x463c>
    4a38:	00000015 	andeq	r0, r0, r5, lsl r0
    4a3c:	0005dd15 	andeq	sp, r5, r5, lsl sp
    4a40:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
    4a44:	08000a40 	stmdaeq	r0, {r6, r9, fp}
    4a48:	00000014 	andeq	r0, r0, r4, lsl r0
    4a4c:	03ac9c01 			; <UNDEFINED> instruction: 0x03ac9c01
    4a50:	2f170000 	svccs	0x00170000
    4a54:	0100001e 	tsteq	r0, lr, lsl r0
    4a58:	003a01a5 	eorseq	r0, sl, r5, lsr #3
    4a5c:	15b50000 	ldrne	r0, [r5, #0]!
    4a60:	0a180000 	beq	604a68 <__Stack_Size+0x604668>
    4a64:	0100001d 	tsteq	r0, sp, lsl r0
    4a68:	003a01a7 	eorseq	r0, sl, r7, lsr #3
    4a6c:	15d60000 	ldrbne	r0, [r6]
    4a70:	15000000 	strne	r0, [r0, #-0]
    4a74:	00000172 	andeq	r0, r0, r2, ror r1
    4a78:	5401c601 	strpl	ip, [r1], #-1537	; 0x601
    4a7c:	1408000a 	strne	r0, [r8], #-10
    4a80:	01000000 	mrseq	r0, (UNDEF: 0)
    4a84:	0003e39c 	muleq	r3, ip, r3
    4a88:	1e2f1700 	cdpne	7, 2, cr1, cr15, cr0, {0}
    4a8c:	c6010000 	strgt	r0, [r1], -r0
    4a90:	00003a01 	andeq	r3, r0, r1, lsl #20
    4a94:	00160000 	andseq	r0, r6, r0
    4a98:	1d0a1800 	stcne	8, cr1, [sl, #-0]
    4a9c:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    4aa0:	00003a01 	andeq	r3, r0, r1, lsl #20
    4aa4:	00162100 	andseq	r2, r6, r0, lsl #2
    4aa8:	70150000 	andsvc	r0, r5, r0
    4aac:	01000020 	tsteq	r0, r0, lsr #32
    4ab0:	000001e9 	andeq	r0, r0, r9, ror #3
    4ab4:	00180000 	andseq	r0, r8, r0
    4ab8:	9c010000 	stcls	0, cr0, [r1], {-0}
    4abc:	00000418 	andeq	r0, r0, r8, lsl r4
    4ac0:	00211917 	eoreq	r1, r1, r7, lsl r9
    4ac4:	01e90100 	mvneq	r0, r0, lsl #2
    4ac8:	0000005e 	andeq	r0, r0, lr, asr r0
    4acc:	0000164b 	andeq	r1, r0, fp, asr #12
    4ad0:	0018c716 	andseq	ip, r8, r6, lsl r7
    4ad4:	01e90100 	mvneq	r0, r0, lsl #2
    4ad8:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4adc:	15005101 	strne	r5, [r0, #-257]	; 0x101
    4ae0:	00000666 	andeq	r0, r0, r6, ror #12
    4ae4:	68020801 	stmdavs	r2, {r0, fp}
    4ae8:	0c08000a 	stceq	0, cr0, [r8], {10}
    4aec:	01000000 	mrseq	r0, (UNDEF: 0)
    4af0:	00043d9c 	muleq	r4, ip, sp
    4af4:	20101600 	andscs	r1, r0, r0, lsl #12
    4af8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4afc:	00003a02 	andeq	r3, r0, r2, lsl #20
    4b00:	00500100 	subseq	r0, r0, r0, lsl #2
    4b04:	001e3815 	andseq	r3, lr, r5, lsl r8
    4b08:	021d0100 	andseq	r0, sp, #0, 2
    4b0c:	00000000 	andeq	r0, r0, r0
    4b10:	00000014 	andeq	r0, r0, r4, lsl r0
    4b14:	04749c01 	ldrbteq	r9, [r4], #-3073	; 0xc01
    4b18:	a3170000 	tstge	r7, #0
    4b1c:	0100001e 	tsteq	r0, lr, lsl r0
    4b20:	003a021d 	eorseq	r0, sl, sp, lsl r2
    4b24:	16850000 	strne	r0, [r5], r0
    4b28:	0a180000 	beq	604b30 <__Stack_Size+0x604730>
    4b2c:	0100001d 	tsteq	r0, sp, lsl r0
    4b30:	003a021f 	eorseq	r0, sl, pc, lsl r2
    4b34:	16a60000 	strtne	r0, [r6], r0
    4b38:	15000000 	strne	r0, [r0, #-0]
    4b3c:	000020ac 	andeq	r2, r0, ip, lsr #1
    4b40:	00023c01 	andeq	r3, r2, r1, lsl #24
    4b44:	20000000 	andcs	r0, r0, r0
    4b48:	01000000 	mrseq	r0, (UNDEF: 0)
    4b4c:	0004999c 	muleq	r4, ip, r9
    4b50:	1e771600 	cdpne	6, 7, cr1, cr7, cr0, {0}
    4b54:	3c010000 	stccc	0, cr0, [r1], {-0}
    4b58:	00005e02 	andeq	r5, r0, r2, lsl #28
    4b5c:	00500100 	subseq	r0, r0, r0, lsl #2
    4b60:	001f3a15 	andseq	r3, pc, r5, lsl sl	; <UNPREDICTABLE>
    4b64:	02630100 	rsbeq	r0, r3, #0, 2
    4b68:	00000000 	andeq	r0, r0, r0
    4b6c:	0000000c 	andeq	r0, r0, ip
    4b70:	04be9c01 	ldrteq	r9, [lr], #3073	; 0xc01
    4b74:	c7160000 	ldrgt	r0, [r6, -r0]
    4b78:	01000018 	tsteq	r0, r8, lsl r0
    4b7c:	00df0263 	sbcseq	r0, pc, r3, ror #4
    4b80:	50010000 	andpl	r0, r1, r0
    4b84:	1fff1500 	svcne	0x00ff1500
    4b88:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    4b8c:	00000002 	andeq	r0, r0, r2
    4b90:	00001000 	andeq	r1, r0, r0
    4b94:	e59c0100 	ldr	r0, [ip, #256]	; 0x100
    4b98:	17000004 	strne	r0, [r0, -r4]
    4b9c:	00001f0a 	andeq	r1, r0, sl, lsl #30
    4ba0:	3a027901 	bcc	a2fac <__Stack_Size+0xa2bac>
    4ba4:	d0000000 	andle	r0, r0, r0
    4ba8:	00000016 	andeq	r0, r0, r6, lsl r0
    4bac:	0020dd15 	eoreq	sp, r0, r5, lsl sp
    4bb0:	028c0100 	addeq	r0, ip, #0, 2
    4bb4:	00000000 	andeq	r0, r0, r0
    4bb8:	0000000c 	andeq	r0, r0, ip
    4bbc:	050a9c01 	streq	r9, [sl, #-3073]	; 0xc01
    4bc0:	c7160000 	ldrgt	r0, [r6, -r0]
    4bc4:	01000018 	tsteq	r0, r8, lsl r0
    4bc8:	00df028c 	sbcseq	r0, pc, ip, lsl #5
    4bcc:	50010000 	andpl	r0, r1, r0
    4bd0:	20cb1500 	sbccs	r1, fp, r0, lsl #10
    4bd4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4bd8:	00000002 	andeq	r0, r0, r2
    4bdc:	00008400 	andeq	r8, r0, r0, lsl #8
    4be0:	6f9c0100 	svcvs	0x009c0100
    4be4:	16000005 	strne	r0, [r0], -r5
    4be8:	00002055 	andeq	r2, r0, r5, asr r0
    4bec:	6f029c01 	svcvs	0x00029c01
    4bf0:	01000005 	tsteq	r0, r5
    4bf4:	6d741a50 	vldmdbvs	r4!, {s3-s82}
    4bf8:	9e010070 	mcrls	0, 0, r0, cr1, cr0, {3}
    4bfc:	00003a02 	andeq	r3, r0, r2, lsl #20
    4c00:	0016f100 	andseq	pc, r6, r0, lsl #2
    4c04:	1f321800 	svcne	0x00321800
    4c08:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    4c0c:	00003a02 	andeq	r3, r0, r2, lsl #20
    4c10:	00177500 	andseq	r7, r7, r0, lsl #10
    4c14:	1f5d1800 	svcne	0x005d1800
    4c18:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    4c1c:	00003a02 	andeq	r3, r0, r2, lsl #20
    4c20:	0017a500 	andseq	sl, r7, r0, lsl #10
    4c24:	207d1800 	rsbscs	r1, sp, r0, lsl #16
    4c28:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    4c2c:	00003a02 	andeq	r3, r0, r2, lsl #20
    4c30:	0017ca00 	andseq	ip, r7, r0, lsl #20
    4c34:	041b0000 	ldreq	r0, [fp], #-0
    4c38:	000001ed 	andeq	r0, r0, sp, ror #3
    4c3c:	001eca15 	andseq	ip, lr, r5, lsl sl
    4c40:	03000100 	movweq	r0, #256	; 0x100
    4c44:	00000000 	andeq	r0, r0, r0
    4c48:	00000018 	andeq	r0, r0, r8, lsl r0
    4c4c:	05aa9c01 	streq	r9, [sl, #3073]!	; 0xc01
    4c50:	20170000 	andscs	r0, r7, r0
    4c54:	01000021 	tsteq	r0, r1, lsr #32
    4c58:	003a0300 	eorseq	r0, sl, r0, lsl #6
    4c5c:	18550000 	ldmdane	r5, {}^	; <UNPREDICTABLE>
    4c60:	c7160000 	ldrgt	r0, [r6, -r0]
    4c64:	01000018 	tsteq	r0, r8, lsl r0
    4c68:	00df0300 	sbcseq	r0, pc, r0, lsl #6
    4c6c:	51010000 	mrspl	r0, (UNDEF: 1)
    4c70:	09cb1500 	stmibeq	fp, {r8, sl, ip}^
    4c74:	21010000 	mrscs	r0, (UNDEF: 1)
    4c78:	000a7403 	andeq	r7, sl, r3, lsl #8
    4c7c:	00001808 	andeq	r1, r0, r8, lsl #16
    4c80:	df9c0100 	svcle	0x009c0100
    4c84:	17000005 	strne	r0, [r0, -r5]
    4c88:	00001e94 	muleq	r0, r4, lr
    4c8c:	3a032101 	bcc	cd098 <__Stack_Size+0xccc98>
    4c90:	8f000000 	svchi	0x00000000
    4c94:	16000018 			; <UNDEFINED> instruction: 0x16000018
    4c98:	000018c7 	andeq	r1, r0, r7, asr #17
    4c9c:	df032101 	svcle	0x00032101
    4ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ca4:	78150051 	ldmdavc	r5, {r0, r4, r6}
    4ca8:	0100001f 	tsteq	r0, pc, lsl r0
    4cac:	00000343 	andeq	r0, r0, r3, asr #6
    4cb0:	00180000 	andseq	r0, r8, r0
    4cb4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4cb8:	00000614 	andeq	r0, r0, r4, lsl r6
    4cbc:	001f4e17 	andseq	r4, pc, r7, lsl lr	; <UNPREDICTABLE>
    4cc0:	03430100 	movteq	r0, #12544	; 0x3100
    4cc4:	0000003a 	andeq	r0, r0, sl, lsr r0
    4cc8:	000018c9 	andeq	r1, r0, r9, asr #17
    4ccc:	0018c716 	andseq	ip, r8, r6, lsl r7
    4cd0:	03430100 	movteq	r0, #12544	; 0x3100
    4cd4:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4cd8:	15005101 	strne	r5, [r0, #-257]	; 0x101
    4cdc:	00001d48 	andeq	r1, r0, r8, asr #26
    4ce0:	00036301 	andeq	r6, r3, r1, lsl #6
    4ce4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4ce8:	01000000 	mrseq	r0, (UNDEF: 0)
    4cec:	0006499c 	muleq	r6, ip, r9
    4cf0:	1e941700 	cdpne	7, 9, cr1, cr4, cr0, {0}
    4cf4:	63010000 	movwvs	r0, #4096	; 0x1000
    4cf8:	00003a03 	andeq	r3, r0, r3, lsl #20
    4cfc:	00190300 	andseq	r0, r9, r0, lsl #6
    4d00:	18c71600 	stmiane	r7, {r9, sl, ip}^
    4d04:	63010000 	movwvs	r0, #4096	; 0x1000
    4d08:	0000df03 	andeq	sp, r0, r3, lsl #30
    4d0c:	00510100 	subseq	r0, r1, r0, lsl #2
    4d10:	001f1b15 	andseq	r1, pc, r5, lsl fp	; <UNPREDICTABLE>
    4d14:	03840100 	orreq	r0, r4, #0, 2
    4d18:	00000000 	andeq	r0, r0, r0
    4d1c:	00000018 	andeq	r0, r0, r8, lsl r0
    4d20:	067e9c01 	ldrbteq	r9, [lr], -r1, lsl #24
    4d24:	4e170000 	cdpmi	0, 1, cr0, cr7, cr0, {0}
    4d28:	0100001f 	tsteq	r0, pc, lsl r0
    4d2c:	003a0384 	eorseq	r0, sl, r4, lsl #7
    4d30:	193d0000 	ldmdbne	sp!, {}	; <UNPREDICTABLE>
    4d34:	c7160000 	ldrgt	r0, [r6, -r0]
    4d38:	01000018 	tsteq	r0, r8, lsl r0
    4d3c:	00df0384 	sbcseq	r0, pc, r4, lsl #7
    4d40:	51010000 	mrspl	r0, (UNDEF: 1)
    4d44:	1fa61500 	svcne	0x00a61500
    4d48:	9c010000 	stcls	0, cr0, [r1], {-0}
    4d4c:	00000003 	andeq	r0, r0, r3
    4d50:	00000c00 	andeq	r0, r0, r0, lsl #24
    4d54:	a39c0100 	orrsge	r0, ip, #0, 2
    4d58:	16000006 	strne	r0, [r0], -r6
    4d5c:	000018c7 	andeq	r1, r0, r7, asr #17
    4d60:	df039c01 	svcle	0x00039c01
    4d64:	01000000 	mrseq	r0, (UNDEF: 0)
    4d68:	eb150050 	bl	544eb0 <__Stack_Size+0x544ab0>
    4d6c:	01000020 	tsteq	r0, r0, lsr #32
    4d70:	000003ac 	andeq	r0, r0, ip, lsr #7
    4d74:	000c0000 	andeq	r0, ip, r0
    4d78:	9c010000 	stcls	0, cr0, [r1], {-0}
    4d7c:	000006c8 	andeq	r0, r0, r8, asr #13
    4d80:	0018c716 	andseq	ip, r8, r6, lsl r7
    4d84:	03ac0100 			; <UNDEFINED> instruction: 0x03ac0100
    4d88:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4d8c:	15005001 	strne	r5, [r0, #-1]
    4d90:	00001efc 	strdeq	r1, [r0], -ip
    4d94:	0003c101 	andeq	ip, r3, r1, lsl #2
    4d98:	0c000000 	stceq	0, cr0, [r0], {-0}
    4d9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4da0:	0006ed9c 	muleq	r6, ip, sp
    4da4:	21111600 	tstcs	r1, r0, lsl #12
    4da8:	c1010000 	mrsgt	r0, (UNDEF: 1)
    4dac:	00005e03 	andeq	r5, r0, r3, lsl #28
    4db0:	00500100 	subseq	r0, r0, r0, lsl #2
    4db4:	0006771c 	andeq	r7, r6, ip, lsl r7
    4db8:	03dd0100 	bicseq	r0, sp, #0, 2
    4dbc:	000000b4 	strheq	r0, [r0], -r4
    4dc0:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    4dc4:	00000028 	andeq	r0, r0, r8, lsr #32
    4dc8:	07489c01 	strbeq	r9, [r8, -r1, lsl #24]
    4dcc:	e8170000 	ldmda	r7, {}	; <UNPREDICTABLE>
    4dd0:	0100001f 	tsteq	r0, pc, lsl r0
    4dd4:	005e03dd 	ldrsbeq	r0, [lr], #-61	; 0xffffffc3
    4dd8:	19770000 	ldmdbne	r7!, {}^	; <UNPREDICTABLE>
    4ddc:	741a0000 	ldrvc	r0, [sl], #-0
    4de0:	0100706d 	tsteq	r0, sp, rrx
    4de4:	003a03df 	ldrsbteq	r0, [sl], -pc
    4de8:	19980000 	ldmibne	r8, {}	; <UNPREDICTABLE>
    4dec:	6e180000 	cdpvs	0, 1, cr0, cr8, cr0, {0}
    4df0:	0100001f 	tsteq	r0, pc, lsl r0
    4df4:	003a03e0 	eorseq	r0, sl, r0, ror #7
    4df8:	19f20000 	ldmibne	r2!, {}^	; <UNPREDICTABLE>
    4dfc:	97180000 	ldrls	r0, [r8, -r0]
    4e00:	0100001a 	tsteq	r0, sl, lsl r0
    4e04:	00b403e1 	adcseq	r0, r4, r1, ror #7
    4e08:	1a280000 	bne	a04e10 <__Stack_Size+0xa04a10>
    4e0c:	1d000000 	stcne	0, cr0, [r0, #-0]
    4e10:	000001be 			; <UNDEFINED> instruction: 0x000001be
    4e14:	00ffc601 	rscseq	ip, pc, r1, lsl #12
    4e18:	0ab40000 	beq	fed04e20 <SCS_BASE+0x1ecf6e20>
    4e1c:	002e0800 	eoreq	r0, lr, r0, lsl #16
    4e20:	9c010000 	stcls	0, cr0, [r1], {-0}
    4e24:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    4e28:	001f971e 	andseq	r9, pc, lr, lsl r7	; <UNPREDICTABLE>
    4e2c:	7fc80100 	svcvc	0x00c80100
    4e30:	02000000 	andeq	r0, r0, #0
    4e34:	90147491 	mulsls	r4, r1, r4
    4e38:	0100001a 	tsteq	r0, sl, lsl r0
    4e3c:	0000ffc9 	andeq	pc, r0, r9, asr #31
    4e40:	001a5300 	andseq	r5, sl, r0, lsl #6
    4e44:	203a1400 	eorscs	r1, sl, r0, lsl #8
    4e48:	ca010000 	bgt	44e50 <__Stack_Size+0x44a50>
    4e4c:	000000b4 	strheq	r0, [r0], -r4
    4e50:	00001a78 	andeq	r1, r0, r8, ror sl
    4e54:	000ac01f 	andeq	ip, sl, pc, lsl r0
    4e58:	0006ed08 	andeq	lr, r6, r8, lsl #26
    4e5c:	0007a100 	andeq	sl, r7, r0, lsl #2
    4e60:	50012000 	andpl	r2, r1, r0
    4e64:	00310802 	eorseq	r0, r1, r2, lsl #16
    4e68:	000ad621 	andeq	sp, sl, r1, lsr #12
    4e6c:	0006ed08 	andeq	lr, r6, r8, lsl #26
    4e70:	50012000 	andpl	r2, r1, r0
    4e74:	00310802 	eorseq	r0, r1, r2, lsl #16
    4e78:	20212200 	eorcs	r2, r1, r0, lsl #4
    4e7c:	10010000 	andne	r0, r1, r0
    4e80:	00000004 	andeq	r0, r0, r4
    4e84:	00001000 	andeq	r1, r0, r0
    4e88:	1c9c0100 	ldfnes	f0, [ip], {0}
    4e8c:	00001e7f 	andeq	r1, r0, pc, ror lr
    4e90:	bf042401 	svclt	0x00042401
    4e94:	00000000 	andeq	r0, r0, r0
    4e98:	14000000 	strne	r0, [r0], #-0
    4e9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4ea0:	0007ff9c 	muleq	r7, ip, pc	; <UNPREDICTABLE>
    4ea4:	21191700 	tstcs	r9, r0, lsl #14
    4ea8:	24010000 	strcs	r0, [r1], #-0
    4eac:	00005e04 	andeq	r5, r0, r4, lsl #28
    4eb0:	001a8b00 	andseq	r8, sl, r0, lsl #22
    4eb4:	1a971800 	bne	fe5caebc <SCS_BASE+0x1e5bcebc>
    4eb8:	26010000 	strcs	r0, [r1], -r0
    4ebc:	0000bf04 	andeq	fp, r0, r4, lsl #30
    4ec0:	001aac00 	andseq	sl, sl, r0, lsl #24
    4ec4:	49150000 	ldmdbmi	r5, {}	; <UNPREDICTABLE>
    4ec8:	0100001e 	tsteq	r0, lr, lsl r0
    4ecc:	00000447 	andeq	r0, r0, r7, asr #8
    4ed0:	000c0000 	andeq	r0, ip, r0
    4ed4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4ed8:	00000824 	andeq	r0, r0, r4, lsr #16
    4edc:	00211916 	eoreq	r1, r1, r6, lsl r9
    4ee0:	04470100 	strbeq	r0, [r7], #-256	; 0x100
    4ee4:	0000005e 	andeq	r0, r0, lr, asr r0
    4ee8:	23005001 	movwcs	r5, #1
    4eec:	0000006f 	andeq	r0, r0, pc, rrx
    4ef0:	00000834 	andeq	r0, r0, r4, lsr r8
    4ef4:	00010a24 	andeq	r0, r1, r4, lsr #20
    4ef8:	1e000f00 	cdpne	15, 0, cr0, cr0, cr0, {0}
    4efc:	000020ba 	strheq	r2, [r0], -sl
    4f00:	08456f01 	stmdaeq	r5, {r0, r8, r9, sl, fp, sp, lr}^
    4f04:	03050000 	movweq	r0, #20480	; 0x5000
    4f08:	00000000 	andeq	r0, r0, r0
    4f0c:	00082404 	andeq	r2, r8, r4, lsl #8
    4f10:	006f2300 	rsbeq	r2, pc, r0, lsl #6
    4f14:	085a0000 	ldmdaeq	sl, {}^	; <UNPREDICTABLE>
    4f18:	0a240000 	beq	904f20 <__Stack_Size+0x904b20>
    4f1c:	03000001 	movweq	r0, #1
    4f20:	212e1e00 	teqcs	lr, r0, lsl #28
    4f24:	70010000 	andvc	r0, r1, r0
    4f28:	0000086b 	andeq	r0, r0, fp, ror #16
    4f2c:	00000305 	andeq	r0, r0, r5, lsl #6
    4f30:	4a040000 	bmi	104f38 <__Stack_Size+0x104b38>
    4f34:	00000008 	andeq	r0, r0, r8
    4f38:	00001f44 	andeq	r1, r0, r4, asr #30
    4f3c:	14120004 	ldrne	r0, [r2], #-4
    4f40:	01040000 	mrseq	r0, (UNDEF: 4)
    4f44:	000002c1 	andeq	r0, r0, r1, asr #5
    4f48:	0026fd01 	eoreq	pc, r6, r1, lsl #26
    4f4c:	00009a00 	andeq	r9, r0, r0, lsl #20
    4f50:	00069000 	andeq	r9, r6, r0
    4f54:	00000000 	andeq	r0, r0, r0
    4f58:	00173600 	andseq	r3, r7, r0, lsl #12
    4f5c:	05040200 	streq	r0, [r4, #-512]	; 0x200
    4f60:	0000071d 	andeq	r0, r0, sp, lsl r7
    4f64:	ef050202 	svc	0x00050202
    4f68:	02000006 	andeq	r0, r0, #6
    4f6c:	088c0601 	stmeq	ip, {r0, r9, sl}
    4f70:	75030000 	strvc	r0, [r3, #-0]
    4f74:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    4f78:	00004527 	andeq	r4, r0, r7, lsr #10
    4f7c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    4f80:	00000819 	andeq	r0, r0, r9, lsl r8
    4f84:	36317503 	ldrtcc	r7, [r1], -r3, lsl #10
    4f88:	57280200 	strpl	r0, [r8, -r0, lsl #4]!
    4f8c:	02000000 	andeq	r0, r0, #0
    4f90:	0a730702 	beq	1cc6ba0 <__Stack_Size+0x1cc67a0>
    4f94:	75030000 	strvc	r0, [r3, #-0]
    4f98:	29020038 	stmdbcs	r2, {r3, r4, r5}
    4f9c:	00000068 	andeq	r0, r0, r8, rrx
    4fa0:	8a080102 	bhi	2053b0 <__Stack_Size+0x204fb0>
    4fa4:	04000008 	streq	r0, [r0], #-8
    4fa8:	000003a7 	andeq	r0, r0, r7, lsr #7
    4fac:	007a2f02 	rsbseq	r2, sl, r2, lsl #30
    4fb0:	45050000 	strmi	r0, [r5, #-0]
    4fb4:	04000000 	streq	r0, [r0], #-0
    4fb8:	00000230 	andeq	r0, r0, r0, lsr r2
    4fbc:	008a3002 	addeq	r3, sl, r2
    4fc0:	57050000 	strpl	r0, [r5, -r0]
    4fc4:	06000000 	streq	r0, [r0], -r0
    4fc8:	a43c0201 	ldrtge	r0, [ip], #-513	; 0x201
    4fcc:	07000000 	streq	r0, [r0, -r0]
    4fd0:	00000094 	muleq	r0, r4, r0
    4fd4:	45530800 	ldrbmi	r0, [r3, #-2048]	; 0x800
    4fd8:	00010054 	andeq	r0, r1, r4, asr r0
    4fdc:	00067e04 	andeq	r7, r6, r4, lsl #28
    4fe0:	8f3c0200 	svchi	0x003c0200
    4fe4:	04000000 	streq	r0, [r0], #-0
    4fe8:	00001e86 	andeq	r1, r0, r6, lsl #29
    4fec:	008f3c02 	addeq	r3, pc, r2, lsl #24
    4ff0:	01060000 	mrseq	r0, (UNDEF: 6)
    4ff4:	00cf3e02 	sbceq	r3, pc, r2, lsl #28
    4ff8:	77070000 	strvc	r0, [r7, -r0]
    4ffc:	00000004 	andeq	r0, r0, r4
    5000:	0007f607 	andeq	pc, r7, r7, lsl #12
    5004:	04000100 	streq	r0, [r0], #-256	; 0x100
    5008:	000000c6 	andeq	r0, r0, r6, asr #1
    500c:	00ba3e02 	adcseq	r3, sl, r2, lsl #28
    5010:	04020000 	streq	r0, [r2], #-0
    5014:	00081007 	andeq	r1, r8, r7
    5018:	03500900 	cmpeq	r0, #0, 18
    501c:	02f2020b 	rscseq	r0, r2, #-1342177280	; 0xb0000000
    5020:	430a0000 	movwmi	r0, #40960	; 0xa000
    5024:	03003152 	movweq	r3, #338	; 0x152
    5028:	007f020d 	rsbseq	r0, pc, sp, lsl #4
    502c:	0b000000 	bleq	5034 <__Stack_Size+0x4c34>
    5030:	000006a9 	andeq	r0, r0, r9, lsr #13
    5034:	4c020e03 	stcmi	14, cr0, [r2], {3}
    5038:	02000000 	andeq	r0, r0, #0
    503c:	3252430a 	subscc	r4, r2, #671088640	; 0x28000000
    5040:	020f0300 	andeq	r0, pc, #0, 6
    5044:	0000007f 	andeq	r0, r0, pc, ror r0
    5048:	06b30b04 	ldrteq	r0, [r3], r4, lsl #22
    504c:	10030000 	andne	r0, r3, r0
    5050:	00004c02 	andeq	r4, r0, r2, lsl #24
    5054:	e10b0600 	tst	fp, r0, lsl #12
    5058:	03000004 	movweq	r0, #4
    505c:	007f0211 	rsbseq	r0, pc, r1, lsl r2	; <UNPREDICTABLE>
    5060:	0b080000 	bleq	205068 <__Stack_Size+0x204c68>
    5064:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    5068:	4c021203 	sfmmi	f1, 4, [r2], {3}
    506c:	0a000000 	beq	5074 <__Stack_Size+0x4c74>
    5070:	0003c50b 	andeq	ip, r3, fp, lsl #10
    5074:	02130300 	andseq	r0, r3, #0, 6
    5078:	0000007f 	andeq	r0, r0, pc, ror r0
    507c:	06c70b0c 	strbeq	r0, [r7], ip, lsl #22
    5080:	14030000 	strne	r0, [r3], #-0
    5084:	00004c02 	andeq	r4, r0, r2, lsl #24
    5088:	530a0e00 	movwpl	r0, #44544	; 0xae00
    508c:	15030052 	strne	r0, [r3, #-82]	; 0x52
    5090:	00007f02 	andeq	r7, r0, r2, lsl #30
    5094:	d10b1000 	mrsle	r1, (UNDEF: 11)
    5098:	03000006 	movweq	r0, #6
    509c:	004c0216 	subeq	r0, ip, r6, lsl r2
    50a0:	0a120000 	beq	4850a8 <__Stack_Size+0x484ca8>
    50a4:	00524745 	subseq	r4, r2, r5, asr #14
    50a8:	7f021703 	svcvc	0x00021703
    50ac:	14000000 	strne	r0, [r0], #-0
    50b0:	0006db0b 	andeq	sp, r6, fp, lsl #22
    50b4:	02180300 	andseq	r0, r8, #0, 6
    50b8:	0000004c 	andeq	r0, r0, ip, asr #32
    50bc:	02640b16 	rsbeq	r0, r4, #22528	; 0x5800
    50c0:	19030000 	stmdbne	r3, {}	; <UNPREDICTABLE>
    50c4:	00007f02 	andeq	r7, r0, r2, lsl #30
    50c8:	e50b1800 	str	r1, [fp, #-2048]	; 0x800
    50cc:	03000006 	movweq	r0, #6
    50d0:	004c021a 	subeq	r0, ip, sl, lsl r2
    50d4:	0b1a0000 	bleq	6850dc <__Stack_Size+0x684cdc>
    50d8:	0000026a 	andeq	r0, r0, sl, ror #4
    50dc:	7f021b03 	svcvc	0x00021b03
    50e0:	1c000000 	stcne	0, cr0, [r0], {-0}
    50e4:	000ae60b 	andeq	lr, sl, fp, lsl #12
    50e8:	021c0300 	andseq	r0, ip, #0, 6
    50ec:	0000004c 	andeq	r0, r0, ip, asr #32
    50f0:	045f0b1e 	ldrbeq	r0, [pc], #-2846	; 50f8 <__Stack_Size+0x4cf8>
    50f4:	1d030000 	stcne	0, cr0, [r3, #-0]
    50f8:	00007f02 	andeq	r7, r0, r2, lsl #30
    50fc:	f90b2000 			; <UNDEFINED> instruction: 0xf90b2000
    5100:	03000006 	movweq	r0, #6
    5104:	004c021e 	subeq	r0, ip, lr, lsl r2
    5108:	0a220000 	beq	885110 <__Stack_Size+0x884d10>
    510c:	00544e43 	subseq	r4, r4, r3, asr #28
    5110:	7f021f03 	svcvc	0x00021f03
    5114:	24000000 	strcs	r0, [r0], #-0
    5118:	0007030b 	andeq	r0, r7, fp, lsl #6
    511c:	02200300 	eoreq	r0, r0, #0, 6
    5120:	0000004c 	andeq	r0, r0, ip, asr #32
    5124:	53500a26 	cmppl	r0, #155648	; 0x26000
    5128:	21030043 	tstcs	r3, r3, asr #32
    512c:	00007f02 	andeq	r7, r0, r2, lsl #30
    5130:	100b2800 	andne	r2, fp, r0, lsl #16
    5134:	03000009 	movweq	r0, #9
    5138:	004c0222 	subeq	r0, ip, r2, lsr #4
    513c:	0a2a0000 	beq	a85144 <__Stack_Size+0xa84d44>
    5140:	00525241 	subseq	r5, r2, r1, asr #4
    5144:	7f022303 	svcvc	0x00022303
    5148:	2c000000 	stccs	0, cr0, [r0], {-0}
    514c:	00091b0b 	andeq	r1, r9, fp, lsl #22
    5150:	02240300 	eoreq	r0, r4, #0, 6
    5154:	0000004c 	andeq	r0, r0, ip, asr #32
    5158:	43520a2e 	cmpmi	r2, #188416	; 0x2e000
    515c:	25030052 	strcs	r0, [r3, #-82]	; 0x52
    5160:	00007f02 	andeq	r7, r0, r2, lsl #30
    5164:	260b3000 	strcs	r3, [fp], -r0
    5168:	03000009 	movweq	r0, #9
    516c:	004c0226 	subeq	r0, ip, r6, lsr #4
    5170:	0b320000 	bleq	c85178 <__Stack_Size+0xc84d78>
    5174:	00000250 	andeq	r0, r0, r0, asr r2
    5178:	7f022703 	svcvc	0x00022703
    517c:	34000000 	strcc	r0, [r0], #-0
    5180:	0009310b 	andeq	r3, r9, fp, lsl #2
    5184:	02280300 	eoreq	r0, r8, #0, 6
    5188:	0000004c 	andeq	r0, r0, ip, asr #32
    518c:	02550b36 	subseq	r0, r5, #55296	; 0xd800
    5190:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    5194:	00007f02 	andeq	r7, r0, r2, lsl #30
    5198:	3c0b3800 	stccc	8, cr3, [fp], {-0}
    519c:	03000009 	movweq	r0, #9
    51a0:	004c022a 	subeq	r0, ip, sl, lsr #4
    51a4:	0b3a0000 	bleq	e851ac <__Stack_Size+0xe84dac>
    51a8:	0000025a 	andeq	r0, r0, sl, asr r2
    51ac:	7f022b03 	svcvc	0x00022b03
    51b0:	3c000000 	stccc	0, cr0, [r0], {-0}
    51b4:	0009470b 	andeq	r4, r9, fp, lsl #14
    51b8:	022c0300 	eoreq	r0, ip, #0, 6
    51bc:	0000004c 	andeq	r0, r0, ip, asr #32
    51c0:	025f0b3e 	subseq	r0, pc, #63488	; 0xf800
    51c4:	2d030000 	stccs	0, cr0, [r3, #-0]
    51c8:	00007f02 	andeq	r7, r0, r2, lsl #30
    51cc:	520b4000 	andpl	r4, fp, #0
    51d0:	03000009 	movweq	r0, #9
    51d4:	004c022e 	subeq	r0, ip, lr, lsr #4
    51d8:	0b420000 	bleq	10851e0 <__Stack_Size+0x1084de0>
    51dc:	0000022b 	andeq	r0, r0, fp, lsr #4
    51e0:	7f022f03 	svcvc	0x00022f03
    51e4:	44000000 	strmi	r0, [r0], #-0
    51e8:	00095d0b 	andeq	r5, r9, fp, lsl #26
    51ec:	02300300 	eorseq	r0, r0, #0, 6
    51f0:	0000004c 	andeq	r0, r0, ip, asr #32
    51f4:	43440a46 	movtmi	r0, #19014	; 0x4a46
    51f8:	31030052 	qaddcc	r0, r2, r3
    51fc:	00007f02 	andeq	r7, r0, r2, lsl #30
    5200:	680b4800 	stmdavs	fp, {fp, lr}
    5204:	03000009 	movweq	r0, #9
    5208:	004c0232 	subeq	r0, ip, r2, lsr r2
    520c:	0b4a0000 	bleq	1285214 <__Stack_Size+0x1284e14>
    5210:	00000726 	andeq	r0, r0, r6, lsr #14
    5214:	7f023303 	svcvc	0x00023303
    5218:	4c000000 	stcmi	0, cr0, [r0], {-0}
    521c:	0009730b 	andeq	r7, r9, fp, lsl #6
    5220:	02340300 	eorseq	r0, r4, #0, 6
    5224:	0000004c 	andeq	r0, r0, ip, asr #32
    5228:	d40c004e 	strle	r0, [ip], #-78	; 0x4e
    522c:	03000001 	movweq	r0, #1
    5230:	00e10235 	rsceq	r0, r1, r5, lsr r2
    5234:	0a0d0000 	beq	34523c <__Stack_Size+0x344e3c>
    5238:	03431b04 	movteq	r1, #15108	; 0x3b04
    523c:	ac0e0000 	stcge	0, cr0, [lr], {-0}
    5240:	04000003 	streq	r0, [r0], #-3
    5244:	00004c1d 	andeq	r4, r0, sp, lsl ip
    5248:	b70e0000 	strlt	r0, [lr, -r0]
    524c:	04000004 	streq	r0, [r0], #-4
    5250:	00004c1e 	andeq	r4, r0, lr, lsl ip
    5254:	d20e0200 	andle	r0, lr, #0, 4
    5258:	04000005 	streq	r0, [r0], #-5
    525c:	00004c1f 	andeq	r4, r0, pc, lsl ip
    5260:	0b0e0400 	bleq	386268 <__Stack_Size+0x385e68>
    5264:	04000002 	streq	r0, [r0], #-2
    5268:	00004c20 	andeq	r4, r0, r0, lsr #24
    526c:	fb0e0600 	blx	386a76 <__Stack_Size+0x386676>
    5270:	04000003 	streq	r0, [r0], #-3
    5274:	00005e21 	andeq	r5, r0, r1, lsr #28
    5278:	04000800 	streq	r0, [r0], #-2048	; 0x800
    527c:	00000a1c 	andeq	r0, r0, ip, lsl sl
    5280:	02fe2204 	rscseq	r2, lr, #4, 4	; 0x40000000
    5284:	100d0000 	andne	r0, sp, r0
    5288:	03b72504 			; <UNDEFINED> instruction: 0x03b72504
    528c:	9d0e0000 	stcls	0, cr0, [lr, #-0]
    5290:	04000028 	streq	r0, [r0], #-40	; 0x28
    5294:	00004c27 	andeq	r4, r0, r7, lsr #24
    5298:	480e0000 	stmdami	lr, {}	; <UNPREDICTABLE>
    529c:	04000024 	streq	r0, [r0], #-36	; 0x24
    52a0:	00004c28 	andeq	r4, r0, r8, lsr #24
    52a4:	830e0200 	movwhi	r0, #57856	; 0xe200
    52a8:	04000029 	streq	r0, [r0], #-41	; 0x29
    52ac:	00004c29 	andeq	r4, r0, r9, lsr #24
    52b0:	2b0e0400 	blcs	3862b8 <__Stack_Size+0x385eb8>
    52b4:	04000024 	streq	r0, [r0], #-36	; 0x24
    52b8:	00004c2a 	andeq	r4, r0, sl, lsr #24
    52bc:	f10e0600 			; <UNDEFINED> instruction: 0xf10e0600
    52c0:	04000021 	streq	r0, [r0], #-33	; 0x21
    52c4:	00004c2b 	andeq	r4, r0, fp, lsr #24
    52c8:	390e0800 	stmdbcc	lr, {fp}
    52cc:	04000026 	streq	r0, [r0], #-38	; 0x26
    52d0:	00004c2c 	andeq	r4, r0, ip, lsr #24
    52d4:	450e0a00 	strmi	r0, [lr, #-2560]	; 0xa00
    52d8:	04000023 	streq	r0, [r0], #-35	; 0x23
    52dc:	00004c2d 	andeq	r4, r0, sp, lsr #24
    52e0:	680e0c00 	stmdavs	lr, {sl, fp}
    52e4:	04000027 	streq	r0, [r0], #-39	; 0x27
    52e8:	00004c2e 	andeq	r4, r0, lr, lsr #24
    52ec:	04000e00 	streq	r0, [r0], #-3584	; 0xe00
    52f0:	000021df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    52f4:	034e2f04 	movteq	r2, #61188	; 0xef04
    52f8:	0a0d0000 	beq	345300 <__Stack_Size+0x344f00>
    52fc:	04073204 	streq	r3, [r7], #-516	; 0x204
    5300:	ca0e0000 	bgt	385308 <__Stack_Size+0x384f08>
    5304:	04000027 	streq	r0, [r0], #-39	; 0x27
    5308:	00004c34 	andeq	r4, r0, r4, lsr ip
    530c:	c50e0000 	strgt	r0, [lr, #-0]
    5310:	04000028 	streq	r0, [r0], #-40	; 0x28
    5314:	00004c35 	andeq	r4, r0, r5, lsr ip
    5318:	550e0200 	strpl	r0, [lr, #-512]	; 0x200
    531c:	04000028 	streq	r0, [r0], #-40	; 0x28
    5320:	00004c36 	andeq	r4, r0, r6, lsr ip
    5324:	660e0400 	strvs	r0, [lr], -r0, lsl #8
    5328:	04000025 	streq	r0, [r0], #-37	; 0x25
    532c:	00004c37 	andeq	r4, r0, r7, lsr ip
    5330:	b20e0600 	andlt	r0, lr, #0, 12
    5334:	0400002a 	streq	r0, [r0], #-42	; 0x2a
    5338:	00004c38 	andeq	r4, r0, r8, lsr ip
    533c:	04000800 	streq	r0, [r0], #-2048	; 0x800
    5340:	00002245 	andeq	r2, r0, r5, asr #4
    5344:	03c23904 	biceq	r3, r2, #4, 18	; 0x10000
    5348:	0e0d0000 	cdpeq	0, 0, cr0, cr13, cr0, {0}
    534c:	046f3c04 	strbteq	r3, [pc], #-3076	; 5354 <__Stack_Size+0x4f54>
    5350:	b70e0000 	strlt	r0, [lr, -r0]
    5354:	04000028 	streq	r0, [r0], #-40	; 0x28
    5358:	00004c3e 	andeq	r4, r0, lr, lsr ip
    535c:	b70e0000 	strlt	r0, [lr, -r0]
    5360:	04000023 	streq	r0, [r0], #-35	; 0x23
    5364:	00004c3f 	andeq	r4, r0, pc, lsr ip
    5368:	390e0200 	stmdbcc	lr, {r9}
    536c:	04000025 	streq	r0, [r0], #-37	; 0x25
    5370:	00004c40 	andeq	r4, r0, r0, asr #24
    5374:	d50e0400 	strle	r0, [lr, #-1024]	; 0x400
    5378:	04000029 	streq	r0, [r0], #-41	; 0x29
    537c:	00004c41 	andeq	r4, r0, r1, asr #24
    5380:	2f0e0600 	svccs	0x000e0600
    5384:	04000026 	streq	r0, [r0], #-38	; 0x26
    5388:	00004c42 	andeq	r4, r0, r2, asr #24
    538c:	e00e0800 	and	r0, lr, r0, lsl #16
    5390:	04000024 	streq	r0, [r0], #-36	; 0x24
    5394:	00004c43 	andeq	r4, r0, r3, asr #24
    5398:	5d0e0a00 	vstrpl	s0, [lr, #-0]
    539c:	04000029 	streq	r0, [r0], #-41	; 0x29
    53a0:	00004c44 	andeq	r4, r0, r4, asr #24
    53a4:	04000c00 	streq	r0, [r0], #-3072	; 0xc00
    53a8:	000025bc 			; <UNDEFINED> instruction: 0x000025bc
    53ac:	04124504 	ldreq	r4, [r2], #-1284	; 0x504
    53b0:	e70f0000 	str	r0, [pc, -r0]
    53b4:	0100002a 	tsteq	r0, sl, lsr #32
    53b8:	ac010518 	cfstr32ge	mvfx0, [r1], {24}
    53bc:	10000004 	andne	r0, r0, r4
    53c0:	0000236f 	andeq	r2, r0, pc, ror #6
    53c4:	ac051801 	stcge	8, cr1, [r5], {1}
    53c8:	10000004 	andne	r0, r0, r4
    53cc:	00002257 	andeq	r2, r0, r7, asr r2
    53d0:	4c051801 	stcmi	8, cr1, [r5], {1}
    53d4:	11000000 	mrsne	r0, (UNDEF: 0)
    53d8:	00002355 	andeq	r2, r0, r5, asr r3
    53dc:	4c051a01 	stcmi	10, cr1, [r5], {1}
    53e0:	00000000 	andeq	r0, r0, r0
    53e4:	02f20412 	rscseq	r0, r2, #301989888	; 0x12000000
    53e8:	f0130000 			; <UNDEFINED> instruction: 0xf0130000
    53ec:	01000023 	tsteq	r0, r3, lsr #32
    53f0:	00000bed 	andeq	r0, r0, sp, ror #23
    53f4:	00320000 	eorseq	r0, r2, r0
    53f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    53fc:	00000527 	andeq	r0, r0, r7, lsr #10
    5400:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5404:	0bed0100 	bleq	ffb4580c <SCS_BASE+0x1fb3780c>
    5408:	000004ac 	andeq	r0, r0, ip, lsr #9
    540c:	c5155001 	ldrgt	r5, [r5, #-1]
    5410:	01000028 	tsteq	r0, r8, lsr #32
    5414:	004c0bed 	subeq	r0, ip, sp, ror #23
    5418:	1aeb0000 	bne	ffac5420 <SCS_BASE+0x1fab7420>
    541c:	55150000 	ldrpl	r0, [r5, #-0]
    5420:	01000028 	tsteq	r0, r8, lsr #32
    5424:	004c0bed 	subeq	r0, ip, sp, ror #23
    5428:	1b0c0000 	blne	305430 <__Stack_Size+0x305030>
    542c:	b2150000 	andslt	r0, r5, #0
    5430:	0100002a 	tsteq	r0, sl, lsr #32
    5434:	004c0bee 	subeq	r0, ip, lr, ror #23
    5438:	1b2d0000 	blne	b45440 <__Stack_Size+0xb45040>
    543c:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    5440:	01000027 	tsteq	r0, r7, lsr #32
    5444:	004c0bf0 	strdeq	r0, [ip], #-176	; 0xffffff50
    5448:	1b4e0000 	blne	1385450 <__Stack_Size+0x1385050>
    544c:	b1160000 	tstlt	r6, r0
    5450:	01000024 	tsteq	r0, r4, lsr #32
    5454:	004c0bf0 	strdeq	r0, [ip], #-176	; 0xffffff50
    5458:	1b780000 	blne	1e05460 <__Stack_Size+0x1e05060>
    545c:	13000000 	movwne	r0, #0
    5460:	00002227 	andeq	r2, r0, r7, lsr #4
    5464:	000c1b01 	andeq	r1, ip, r1, lsl #22
    5468:	3a000000 	bcc	5470 <__Stack_Size+0x5070>
    546c:	01000000 	mrseq	r0, (UNDEF: 0)
    5470:	0005ac9c 	muleq	r5, ip, ip
    5474:	236f1400 	cmncs	pc, #0, 8
    5478:	1b010000 	blne	45480 <__Stack_Size+0x45080>
    547c:	0004ac0c 	andeq	sl, r4, ip, lsl #24
    5480:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    5484:	000028c5 	andeq	r2, r0, r5, asr #17
    5488:	4c0c1b01 	stcmi	11, cr1, [ip], {1}
    548c:	a2000000 	andge	r0, r0, #0
    5490:	1500001b 	strne	r0, [r0, #-27]
    5494:	00002855 	andeq	r2, r0, r5, asr r8
    5498:	4c0c1b01 	stcmi	11, cr1, [ip], {1}
    549c:	c3000000 	movwgt	r0, #0
    54a0:	1500001b 	strne	r0, [r0, #-27]
    54a4:	00002ab2 			; <UNDEFINED> instruction: 0x00002ab2
    54a8:	4c0c1c01 	stcmi	12, cr1, [ip], {1}
    54ac:	e4000000 	str	r0, [r0], #-0
    54b0:	1600001b 			; <UNDEFINED> instruction: 0x1600001b
    54b4:	000027b8 			; <UNDEFINED> instruction: 0x000027b8
    54b8:	4c0c1e01 	stcmi	14, cr1, [ip], {1}
    54bc:	05000000 	streq	r0, [r0, #-0]
    54c0:	1600001c 			; <UNDEFINED> instruction: 0x1600001c
    54c4:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    54c8:	4c0c1e01 	stcmi	14, cr1, [ip], {1}
    54cc:	54000000 	strpl	r0, [r0], #-0
    54d0:	1700001c 	smladne	r0, ip, r0, r0
    54d4:	00706d74 	rsbseq	r6, r0, r4, ror sp
    54d8:	4c0c1e01 	stcmi	14, cr1, [ip], {1}
    54dc:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    54e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    54e4:	0029e218 	eoreq	lr, r9, r8, lsl r2
    54e8:	00860100 	addeq	r0, r6, r0, lsl #2
    54ec:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    54f0:	01000000 	mrseq	r0, (UNDEF: 0)
    54f4:	0006b89c 	muleq	r6, ip, r8
    54f8:	236f1900 	cmncs	pc, #0, 18
    54fc:	86010000 	strhi	r0, [r1], -r0
    5500:	000004ac 	andeq	r0, r0, ip, lsr #9
    5504:	00001cb1 			; <UNDEFINED> instruction: 0x00001cb1
    5508:	0000001a 	andeq	r0, r0, sl, lsl r0
    550c:	001f1d00 	andseq	r1, pc, r0, lsl #26
    5510:	0005e800 	andeq	lr, r5, r0, lsl #16
    5514:	51011b00 	tstpl	r1, r0, lsl #22
    5518:	011b3101 	tsteq	fp, r1, lsl #2
    551c:	00310150 	eorseq	r0, r1, r0, asr r1
    5520:	0000001a 	andeq	r0, r0, sl, lsl r0
    5524:	001f3400 	andseq	r3, pc, r0, lsl #8
    5528:	00060200 	andeq	r0, r6, r0, lsl #4
    552c:	51011b00 	tstpl	r1, r0, lsl #22
    5530:	011b3101 	tsteq	fp, r1, lsl #2
    5534:	000a0350 	andeq	r0, sl, r0, asr r3
    5538:	001a0008 	andseq	r0, sl, r8
    553c:	1d000000 	stcne	0, cr0, [r0, #-0]
    5540:	1a00001f 	bne	55c4 <__Stack_Size+0x51c4>
    5544:	1b000006 	blne	5564 <__Stack_Size+0x5164>
    5548:	31015101 	tstcc	r1, r1, lsl #2
    554c:	0150011b 	cmpeq	r0, fp, lsl r1
    5550:	001c0032 	andseq	r0, ip, r2, lsr r0
    5554:	1d000000 	stcne	0, cr0, [r0, #-0]
    5558:	2d00001f 	stccs	0, cr0, [r0, #-124]	; 0xffffff84
    555c:	1b000006 	blne	557c <__Stack_Size+0x517c>
    5560:	30015101 	andcc	r5, r1, r1, lsl #2
    5564:	00001a00 	andeq	r1, r0, r0, lsl #20
    5568:	1f1d0000 	svcne	0x001d0000
    556c:	06450000 	strbeq	r0, [r5], -r0
    5570:	011b0000 	tsteq	fp, r0
    5574:	1b310151 	blne	c45ac0 <__Stack_Size+0xc456c0>
    5578:	34015001 	strcc	r5, [r1], #-1
    557c:	00001a00 	andeq	r1, r0, r0, lsl #20
    5580:	1f1d0000 	svcne	0x001d0000
    5584:	065d0000 	ldrbeq	r0, [sp], -r0
    5588:	011b0000 	tsteq	fp, r0
    558c:	1b310151 	blne	c45ad8 <__Stack_Size+0xc456d8>
    5590:	38015001 	stmdacc	r1, {r0, ip, lr}
    5594:	00001a00 	andeq	r1, r0, r0, lsl #20
    5598:	1f1d0000 	svcne	0x001d0000
    559c:	06750000 	ldrbteq	r0, [r5], -r0
    55a0:	011b0000 	tsteq	fp, r0
    55a4:	1b310151 	blne	c45af0 <__Stack_Size+0xc456f0>
    55a8:	40015001 	andmi	r5, r1, r1
    55ac:	00001a00 	andeq	r1, r0, r0, lsl #20
    55b0:	1f1d0000 	svcne	0x001d0000
    55b4:	068e0000 	streq	r0, [lr], r0
    55b8:	011b0000 	tsteq	fp, r0
    55bc:	1b310151 	blne	c45b08 <__Stack_Size+0xc45708>
    55c0:	08025001 	stmdaeq	r2, {r0, ip, lr}
    55c4:	001a0020 	andseq	r0, sl, r0, lsr #32
    55c8:	34000000 	strcc	r0, [r0], #-0
    55cc:	a800001f 	stmdage	r0, {r0, r1, r2, r3, r4}
    55d0:	1b000006 	blne	55f0 <__Stack_Size+0x51f0>
    55d4:	31015101 	tstcc	r1, r1, lsl #2
    55d8:	0350011b 	cmpeq	r0, #-1073741818	; 0xc0000006
    55dc:	0020000a 	eoreq	r0, r0, sl
    55e0:	0000001d 	andeq	r0, r0, sp, lsl r0
    55e4:	001f3400 	andseq	r3, pc, r0, lsl #8
    55e8:	51011b00 	tstpl	r1, r0, lsl #22
    55ec:	00003001 	andeq	r3, r0, r1
    55f0:	000b0a18 	andeq	r0, fp, r8, lsl sl
    55f4:	00c60100 	sbceq	r0, r6, r0, lsl #2
    55f8:	3c000000 	stccc	0, cr0, [r0], {-0}
    55fc:	01000000 	mrseq	r0, (UNDEF: 0)
    5600:	0006e89c 	muleq	r6, ip, r8
    5604:	236f1e00 	cmncs	pc, #0, 28
    5608:	c6010000 	strgt	r0, [r1], -r0
    560c:	000004ac 	andeq	r0, r0, ip, lsr #9
    5610:	0a1e5001 	beq	79961c <__Stack_Size+0x79921c>
    5614:	01000025 	tsteq	r0, r5, lsr #32
    5618:	0006e8c6 	andeq	lr, r6, r6, asr #17
    561c:	00510100 	subseq	r0, r1, r0, lsl #2
    5620:	03430412 	movteq	r0, #13330	; 0x3412
    5624:	04180000 	ldreq	r0, [r8], #-0
    5628:	01000023 	tsteq	r0, r3, lsr #32
    562c:	000000ed 	andeq	r0, r0, sp, ror #1
    5630:	00007400 	andeq	r7, r0, r0, lsl #8
    5634:	4d9c0100 	ldfmis	f0, [ip]
    5638:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    563c:	0000236f 	andeq	r2, r0, pc, ror #6
    5640:	04aced01 	strteq	lr, [ip], #3329	; 0xd01
    5644:	50010000 	andpl	r0, r1, r0
    5648:	00272419 	eoreq	r2, r7, r9, lsl r4
    564c:	4ded0100 	stfmie	f0, [sp]
    5650:	8c000007 	stchi	0, cr0, [r0], {7}
    5654:	1f00001d 	svcne	0x0000001d
    5658:	0000287d 	andeq	r2, r0, sp, ror r8
    565c:	004cef01 	subeq	lr, ip, r1, lsl #30
    5660:	1dad0000 	stcne	0, cr0, [sp]
    5664:	b11f0000 	tstlt	pc, r0
    5668:	01000024 	tsteq	r0, r4, lsr #32
    566c:	00004cef 	andeq	r4, r0, pc, ror #25
    5670:	001dcc00 	andseq	ip, sp, r0, lsl #24
    5674:	2a851f00 	bcs	fe14d27c <SCS_BASE+0x1e13f27c>
    5678:	ef010000 	svc	0x00010000
    567c:	0000004c 	andeq	r0, r0, ip, asr #32
    5680:	00001df6 	strdeq	r1, [r0], -r6
    5684:	b7041200 	strlt	r1, [r4, -r0, lsl #4]
    5688:	20000003 	andcs	r0, r0, r3
    568c:	000023cc 	andeq	r2, r0, ip, asr #7
    5690:	00014801 	andeq	r4, r1, r1, lsl #16
    5694:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    5698:	01000000 	mrseq	r0, (UNDEF: 0)
    569c:	0007b69c 	muleq	r7, ip, r6
    56a0:	236f1400 	cmncs	pc, #0, 8
    56a4:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    56a8:	0004ac01 	andeq	sl, r4, r1, lsl #24
    56ac:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    56b0:	00002724 	andeq	r2, r0, r4, lsr #14
    56b4:	4d014801 	stcmi	8, cr4, [r1, #-4]
    56b8:	01000007 	tsteq	r0, r7
    56bc:	287d1651 	ldmdacs	sp!, {r0, r4, r6, r9, sl, ip}^
    56c0:	4a010000 	bmi	456c8 <__Stack_Size+0x452c8>
    56c4:	00004c01 	andeq	r4, r0, r1, lsl #24
    56c8:	001e5300 	andseq	r5, lr, r0, lsl #6
    56cc:	24b11600 	ldrtcs	r1, [r1], #1536	; 0x600
    56d0:	4a010000 	bmi	456d8 <__Stack_Size+0x452d8>
    56d4:	00004c01 	andeq	r4, r0, r1, lsl #24
    56d8:	001e7200 	andseq	r7, lr, r0, lsl #4
    56dc:	2a851600 	bcs	fe14aee4 <SCS_BASE+0x1e13cee4>
    56e0:	4a010000 	bmi	456e8 <__Stack_Size+0x452e8>
    56e4:	00004c01 	andeq	r4, r0, r1, lsl #24
    56e8:	001ebd00 	andseq	fp, lr, r0, lsl #26
    56ec:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
    56f0:	01000024 	tsteq	r0, r4, lsr #32
    56f4:	000001a4 	andeq	r0, r0, r4, lsr #3
    56f8:	00840000 	addeq	r0, r4, r0
    56fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    5700:	00000819 	andeq	r0, r0, r9, lsl r8
    5704:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5708:	01a40100 			; <UNDEFINED> instruction: 0x01a40100
    570c:	000004ac 	andeq	r0, r0, ip, lsr #9
    5710:	24145001 	ldrcs	r5, [r4], #-1
    5714:	01000027 	tsteq	r0, r7, lsr #32
    5718:	074d01a4 	strbeq	r0, [sp, -r4, lsr #3]
    571c:	51010000 	mrspl	r0, (UNDEF: 1)
    5720:	00287d16 	eoreq	r7, r8, r6, lsl sp
    5724:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    5728:	0000004c 	andeq	r0, r0, ip, asr #32
    572c:	00001ef2 	strdeq	r1, [r0], -r2
    5730:	0024b116 	eoreq	fp, r4, r6, lsl r1
    5734:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    5738:	0000004c 	andeq	r0, r0, ip, asr #32
    573c:	00001f11 	andeq	r1, r0, r1, lsl pc
    5740:	002a8516 	eoreq	r8, sl, r6, lsl r5
    5744:	01a60100 			; <UNDEFINED> instruction: 0x01a60100
    5748:	0000004c 	andeq	r0, r0, ip, asr #32
    574c:	00001f67 	andeq	r1, r0, r7, ror #30
    5750:	26dd2000 	ldrbcs	r2, [sp], r0
    5754:	00010000 	andeq	r0, r1, r0
    5758:	00000002 	andeq	r0, r0, r2
    575c:	00006800 	andeq	r6, r0, r0, lsl #16
    5760:	7e9c0100 	fmlvce	f0, f4, f0
    5764:	14000008 	strne	r0, [r0], #-8
    5768:	0000236f 	andeq	r2, r0, pc, ror #6
    576c:	ac020001 	stcge	0, cr0, [r2], {1}
    5770:	01000004 	tsteq	r0, r4
    5774:	27241550 			; <UNDEFINED> instruction: 0x27241550
    5778:	00010000 	andeq	r0, r1, r0
    577c:	00074d02 	andeq	r4, r7, r2, lsl #26
    5780:	001f9c00 	andseq	r9, pc, r0, lsl #24
    5784:	287d1600 	ldmdacs	sp!, {r9, sl, ip}^
    5788:	02010000 	andeq	r0, r1, #0
    578c:	00004c02 	andeq	r4, r0, r2, lsl #24
    5790:	001fbd00 	andseq	fp, pc, r0, lsl #26
    5794:	24b11600 	ldrtcs	r1, [r1], #1536	; 0x600
    5798:	02010000 	andeq	r0, r1, #0
    579c:	00004c02 	andeq	r4, r0, r2, lsl #24
    57a0:	001fdc00 	andseq	sp, pc, r0, lsl #24
    57a4:	2a851600 	bcs	fe14afac <SCS_BASE+0x1e13cfac>
    57a8:	02010000 	andeq	r0, r1, #0
    57ac:	00004c02 	andeq	r4, r0, r2, lsl #24
    57b0:	00200600 	eoreq	r0, r0, r0, lsl #12
    57b4:	fa200000 	blx	8057bc <__Stack_Size+0x8053bc>
    57b8:	01000028 	tsteq	r0, r8, lsr #32
    57bc:	000002d1 	ldrdeq	r0, [r0], -r1
    57c0:	00220000 	eoreq	r0, r2, r0
    57c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    57c8:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    57cc:	00236f14 	eoreq	r6, r3, r4, lsl pc
    57d0:	02d10100 	sbcseq	r0, r1, #0, 2
    57d4:	000004ac 	andeq	r0, r0, ip, lsr #9
    57d8:	9e145001 	cdpls	0, 1, cr5, cr4, cr1, {0}
    57dc:	01000024 	tsteq	r0, r4, lsr #32
    57e0:	08b102d1 	ldmeq	r1!, {r0, r4, r6, r7, r9}
    57e4:	51010000 	mrspl	r0, (UNDEF: 1)
    57e8:	6f041200 	svcvs	0x00041200
    57ec:	20000004 	andcs	r0, r0, r4
    57f0:	0000299f 	muleq	r0, pc, r9	; <UNPREDICTABLE>
    57f4:	0002ee01 	andeq	lr, r2, r1, lsl #28
    57f8:	12000000 	andne	r0, r0, #0
    57fc:	01000000 	mrseq	r0, (UNDEF: 0)
    5800:	0008dc9c 	muleq	r8, ip, ip
    5804:	250a1400 	strcs	r1, [sl, #-1024]	; 0x400
    5808:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    580c:	0006e802 	andeq	lr, r6, r2, lsl #16
    5810:	00500100 	subseq	r0, r0, r0, lsl #2
    5814:	0022c020 	eoreq	ip, r2, r0, lsr #32
    5818:	03000100 	movweq	r0, #256	; 0x100
    581c:	00000000 	andeq	r0, r0, r0
    5820:	00000014 	andeq	r0, r0, r4, lsl r0
    5824:	09019c01 	stmdbeq	r1, {r0, sl, fp, ip, pc}
    5828:	24140000 	ldrcs	r0, [r4], #-0
    582c:	01000027 	tsteq	r0, r7, lsr #32
    5830:	074d0300 	strbeq	r0, [sp, -r0, lsl #6]
    5834:	50010000 	andpl	r0, r1, r0
    5838:	21642000 	cmncs	r4, r0
    583c:	15010000 	strne	r0, [r1, #-0]
    5840:	00000003 	andeq	r0, r0, r3
    5844:	00001000 	andeq	r1, r0, r0
    5848:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
    584c:	14000009 	strne	r0, [r0], #-9
    5850:	0000268b 	andeq	r2, r0, fp, lsl #13
    5854:	26031501 	strcs	r1, [r3], -r1, lsl #10
    5858:	01000009 	tsteq	r0, r9
    585c:	04120050 	ldreq	r0, [r2], #-80	; 0x50
    5860:	00000407 	andeq	r0, r0, r7, lsl #8
    5864:	002a1a20 	eoreq	r1, sl, r0, lsr #20
    5868:	03270100 	teqeq	r7, #0, 2
    586c:	00000000 	andeq	r0, r0, r0
    5870:	00000012 	andeq	r0, r0, r2, lsl r0
    5874:	09519c01 	ldmdbeq	r1, {r0, sl, fp, ip, pc}^
    5878:	9e140000 	cdpls	0, 1, cr0, cr4, cr0, {0}
    587c:	01000024 	tsteq	r0, r4, lsr #32
    5880:	08b10327 	ldmeq	r1!, {r0, r1, r2, r5, r8, r9}
    5884:	50010000 	andpl	r0, r1, r0
    5888:	04262000 	strteq	r2, [r6], #-0
    588c:	3c010000 	stccc	0, cr0, [r1], {-0}
    5890:	00000003 	andeq	r0, r0, r3
    5894:	00001800 	andeq	r1, r0, r0, lsl #16
    5898:	849c0100 	ldrhi	r0, [ip], #256	; 0x100
    589c:	14000009 	strne	r0, [r0], #-9
    58a0:	0000236f 	andeq	r2, r0, pc, ror #6
    58a4:	ac033c01 	stcge	12, cr3, [r3], {1}
    58a8:	01000004 	tsteq	r0, r4
    58ac:	18c71450 	stmiane	r7, {r4, r6, sl, ip}^
    58b0:	3c010000 	stccc	0, cr0, [r1], {-0}
    58b4:	0000cf03 	andeq	ip, r0, r3, lsl #30
    58b8:	00510100 	subseq	r0, r1, r0, lsl #2
    58bc:	0028d420 	eoreq	sp, r8, r0, lsr #8
    58c0:	03570100 	cmpeq	r7, #0, 2
    58c4:	00000000 	andeq	r0, r0, r0
    58c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    58cc:	09b79c01 	ldmibeq	r7!, {r0, sl, fp, ip, pc}
    58d0:	6f140000 	svcvs	0x00140000
    58d4:	01000023 	tsteq	r0, r3, lsr #32
    58d8:	04ac0357 	strteq	r0, [ip], #855	; 0x357
    58dc:	50010000 	andpl	r0, r1, r0
    58e0:	0018c714 	andseq	ip, r8, r4, lsl r7
    58e4:	03570100 	cmpeq	r7, #0, 2
    58e8:	000000cf 	andeq	r0, r0, pc, asr #1
    58ec:	20005101 	andcs	r5, r0, r1, lsl #2
    58f0:	00000770 	andeq	r0, r0, r0, ror r7
    58f4:	00037d01 	andeq	r7, r3, r1, lsl #26
    58f8:	12000000 	andne	r0, r0, #0
    58fc:	01000000 	mrseq	r0, (UNDEF: 0)
    5900:	0009fa9c 	muleq	r9, ip, sl
    5904:	236f1400 	cmncs	pc, #0, 8
    5908:	7d010000 	stcvc	0, cr0, [r1, #-0]
    590c:	0004ac03 	andeq	sl, r4, r3, lsl #24
    5910:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    5914:	00002a8c 	andeq	r2, r0, ip, lsl #21
    5918:	4c037d01 	stcmi	13, cr7, [r3], {1}
    591c:	30000000 	andcc	r0, r0, r0
    5920:	14000020 	strne	r0, [r0], #-32
    5924:	000018c7 	andeq	r1, r0, r7, asr #17
    5928:	cf037d01 	svcgt	0x00037d01
    592c:	01000000 	mrseq	r0, (UNDEF: 0)
    5930:	e5200052 	str	r0, [r0, #-82]!	; 0x52
    5934:	01000025 	tsteq	r0, r5, lsr #32
    5938:	000003a0 	andeq	r0, r0, r0, lsr #7
    593c:	00040000 	andeq	r0, r4, r0
    5940:	9c010000 	stcls	0, cr0, [r1], {-0}
    5944:	00000a2d 	andeq	r0, r0, sp, lsr #20
    5948:	00236f14 	eoreq	r6, r3, r4, lsl pc
    594c:	03a00100 	moveq	r0, #0, 2
    5950:	000004ac 	andeq	r0, r0, ip, lsr #9
    5954:	a8145001 	ldmdage	r4, {r0, ip, lr}
    5958:	01000027 	tsteq	r0, r7, lsr #32
    595c:	004c03a0 	subeq	r0, ip, r0, lsr #7
    5960:	51010000 	mrspl	r0, (UNDEF: 1)
    5964:	24902000 	ldrcs	r2, [r0], #0
    5968:	bf010000 	svclt	0x00010000
    596c:	00000003 	andeq	r0, r0, r3
    5970:	00000800 	andeq	r0, r0, r0, lsl #16
    5974:	709c0100 	addsvc	r0, ip, r0, lsl #2
    5978:	1400000a 	strne	r0, [r0], #-10
    597c:	0000236f 	andeq	r2, r0, pc, ror #6
    5980:	ac03bf01 	stcge	15, cr11, [r3], {1}
    5984:	01000004 	tsteq	r0, r4
    5988:	25b01450 	ldrcs	r1, [r0, #1104]!	; 0x450
    598c:	bf010000 	svclt	0x00010000
    5990:	00004c03 	andeq	r4, r0, r3, lsl #24
    5994:	15510100 	ldrbne	r0, [r1, #-256]	; 0x100
    5998:	00002435 	andeq	r2, r0, r5, lsr r4
    599c:	4c03bf01 	stcmi	15, cr11, [r3], {1}
    59a0:	6a000000 	bvs	59a8 <__Stack_Size+0x55a8>
    59a4:	00000020 	andeq	r0, r0, r0, lsr #32
    59a8:	00299420 	eoreq	r9, r9, r0, lsr #8
    59ac:	03dc0100 	bicseq	r0, ip, #0, 2
    59b0:	00000000 	andeq	r0, r0, r0
    59b4:	00000012 	andeq	r0, r0, r2, lsl r0
    59b8:	0ab39c01 	beq	fecec9c4 <SCS_BASE+0x1ecde9c4>
    59bc:	6f140000 	svcvs	0x00140000
    59c0:	01000023 	tsteq	r0, r3, lsr #32
    59c4:	04ac03dc 	strteq	r0, [ip], #988	; 0x3dc
    59c8:	50010000 	andpl	r0, r1, r0
    59cc:	002abf15 	eoreq	fp, sl, r5, lsl pc
    59d0:	03dc0100 	bicseq	r0, ip, #0, 2
    59d4:	0000004c 	andeq	r0, r0, ip, asr #32
    59d8:	0000208b 	andeq	r2, r0, fp, lsl #1
    59dc:	0018c714 	andseq	ip, r8, r4, lsl r7
    59e0:	03dc0100 	bicseq	r0, ip, #0, 2
    59e4:	000000cf 	andeq	r0, r0, pc, asr #1
    59e8:	20005201 	andcs	r5, r0, r1, lsl #4
    59ec:	0000280d 	andeq	r2, r0, sp, lsl #16
    59f0:	0003f801 	andeq	pc, r3, r1, lsl #16
    59f4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    59f8:	01000000 	mrseq	r0, (UNDEF: 0)
    59fc:	000ad89c 	muleq	sl, ip, r8
    5a00:	236f1400 	cmncs	pc, #0, 8
    5a04:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    5a08:	0004ac03 	andeq	sl, r4, r3, lsl #24
    5a0c:	00500100 	subseq	r0, r0, r0, lsl #2
    5a10:	00247420 	eoreq	r7, r4, r0, lsr #8
    5a14:	040e0100 	streq	r0, [lr], #-256	; 0x100
    5a18:	00000000 	andeq	r0, r0, r0
    5a1c:	0000001a 	andeq	r0, r0, sl, lsl r0
    5a20:	0b419c01 	bleq	106ca2c <__Stack_Size+0x106c62c>
    5a24:	6f140000 	svcvs	0x00140000
    5a28:	01000023 	tsteq	r0, r3, lsr #32
    5a2c:	04ac040e 	strteq	r0, [ip], #1038	; 0x40e
    5a30:	50010000 	andpl	r0, r1, r0
    5a34:	00225715 	eoreq	r5, r2, r5, lsl r7
    5a38:	040e0100 	streq	r0, [lr], #-256	; 0x100
    5a3c:	0000004c 	andeq	r0, r0, ip, asr #32
    5a40:	000020c5 	andeq	r2, r0, r5, asr #1
    5a44:	00047a21 	andeq	r7, r4, r1, lsr #20
    5a48:	00000000 	andeq	r0, r0, r0
    5a4c:	00000e00 	andeq	r0, r0, r0, lsl #28
    5a50:	04150100 	ldreq	r0, [r5], #-256	; 0x100
    5a54:	00049322 	andeq	r9, r4, r2, lsr #6
    5a58:	0020c500 	eoreq	ip, r0, r0, lsl #10
    5a5c:	04872300 	streq	r2, [r7], #768	; 0x300
    5a60:	50010000 	andpl	r0, r1, r0
    5a64:	00000024 	andeq	r0, r0, r4, lsr #32
    5a68:	00000e00 	andeq	r0, r0, r0, lsl #28
    5a6c:	049f2500 	ldreq	r2, [pc], #1280	; 5a74 <__Stack_Size+0x5674>
    5a70:	20e60000 	rsccs	r0, r6, r0
    5a74:	00000000 	andeq	r0, r0, r0
    5a78:	292e2000 	stmdbcs	lr!, {sp}
    5a7c:	2d010000 	stccs	0, cr0, [r1, #-0]
    5a80:	00000004 	andeq	r0, r0, r4
    5a84:	00003400 	andeq	r3, r0, r0, lsl #8
    5a88:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
    5a8c:	1500000b 	strne	r0, [r0, #-11]
    5a90:	0000236f 	andeq	r2, r0, pc, ror #6
    5a94:	ac042d01 	stcge	13, cr2, [r4], {1}
    5a98:	1b000004 	blne	5ab0 <__Stack_Size+0x56b0>
    5a9c:	15000021 	strne	r0, [r0, #-33]	; 0x21
    5aa0:	00002649 	andeq	r2, r0, r9, asr #12
    5aa4:	4c042d01 	stcmi	13, cr2, [r4], {1}
    5aa8:	4f000000 	svcmi	0x00000000
    5aac:	15000021 	strne	r0, [r0, #-33]	; 0x21
    5ab0:	000028c5 	andeq	r2, r0, r5, asr #17
    5ab4:	4c042e01 	stcmi	14, cr2, [r4], {1}
    5ab8:	70000000 	andvc	r0, r0, r0
    5abc:	15000021 	strne	r0, [r0, #-33]	; 0x21
    5ac0:	00002ab6 			; <UNDEFINED> instruction: 0x00002ab6
    5ac4:	4c042e01 	stcmi	14, cr2, [r4], {1}
    5ac8:	91000000 	mrsls	r0, (UNDEF: 0)
    5acc:	26000021 	strcs	r0, [r0], -r1, lsr #32
    5ad0:	0000047a 	andeq	r0, r0, sl, ror r4
    5ad4:	00000000 	andeq	r0, r0, r0
    5ad8:	0000000e 	andeq	r0, r0, lr
    5adc:	cd044101 	stfgts	f4, [r4, #-4]
    5ae0:	2300000b 	movwcs	r0, #11
    5ae4:	00000493 	muleq	r0, r3, r4
    5ae8:	87235501 	strhi	r5, [r3, -r1, lsl #10]!
    5aec:	01000004 	tsteq	r0, r4
    5af0:	00002454 	andeq	r2, r0, r4, asr r4
    5af4:	000e0000 	andeq	r0, lr, r0
    5af8:	9f250000 	svcls	0x00250000
    5afc:	cb000004 	blgt	5b14 <__Stack_Size+0x5714>
    5b00:	00000021 	andeq	r0, r0, r1, lsr #32
    5b04:	00001a00 	andeq	r1, r0, r0, lsl #20
    5b08:	05270000 	streq	r0, [r7, #-0]!
    5b0c:	0be60000 	bleq	ff985b14 <SCS_BASE+0x1f977b14>
    5b10:	011b0000 	tsteq	fp, r0
    5b14:	1b310152 	blne	c46064 <__Stack_Size+0xc45c64>
    5b18:	74025001 	strvc	r5, [r2], #-1
    5b1c:	00270000 	eoreq	r0, r7, r0
    5b20:	b2000000 	andlt	r0, r0, #0
    5b24:	00000004 	andeq	r0, r0, r4
    5b28:	00277920 	eoreq	r7, r7, r0, lsr #18
    5b2c:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    5b30:	00000000 	andeq	r0, r0, r0
    5b34:	00000014 	andeq	r0, r0, r4, lsl r0
    5b38:	0c539c01 	mrrceq	12, 0, r9, r3, cr1
    5b3c:	6f140000 	svcvs	0x00140000
    5b40:	01000023 	tsteq	r0, r3, lsr #32
    5b44:	04ac04b1 	strteq	r0, [ip], #1201	; 0x4b1
    5b48:	50010000 	andpl	r0, r1, r0
    5b4c:	00226e15 	eoreq	r6, r2, r5, lsl lr
    5b50:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    5b54:	0000004c 	andeq	r0, r0, ip, asr #32
    5b58:	000021f5 	strdeq	r2, [r0], -r5
    5b5c:	002a5314 	eoreq	r5, sl, r4, lsl r3
    5b60:	04b10100 	ldrteq	r0, [r1], #256	; 0x100
    5b64:	0000004c 	andeq	r0, r0, ip, asr #32
    5b68:	35155201 	ldrcc	r5, [r5, #-513]	; 0x201
    5b6c:	01000027 	tsteq	r0, r7, lsr #32
    5b70:	004c04b2 	strheq	r0, [ip], #-66	; 0xffffffbe
    5b74:	22160000 	andscs	r0, r6, #0
    5b78:	55160000 	ldrpl	r0, [r6, #-0]
    5b7c:	01000023 	tsteq	r0, r3, lsr #32
    5b80:	004c04b4 	strheq	r0, [ip], #-68	; 0xffffffbc
    5b84:	22370000 	eorscs	r0, r7, #0
    5b88:	20000000 	andcs	r0, r0, r0
    5b8c:	00002865 	andeq	r2, r0, r5, ror #16
    5b90:	00045b01 	andeq	r5, r4, r1, lsl #22
    5b94:	1a000000 	bne	5b9c <__Stack_Size+0x579c>
    5b98:	01000000 	mrseq	r0, (UNDEF: 0)
    5b9c:	000cca9c 	muleq	ip, ip, sl
    5ba0:	236f1500 	cmncs	pc, #0, 10
    5ba4:	5b010000 	blpl	45bac <__Stack_Size+0x457ac>
    5ba8:	0004ac04 	andeq	sl, r4, r4, lsl #24
    5bac:	00226600 	eoreq	r6, r2, r0, lsl #12
    5bb0:	226e1500 	rsbcs	r1, lr, #0, 10
    5bb4:	5b010000 	blpl	45bbc <__Stack_Size+0x457bc>
    5bb8:	00004c04 	andeq	r4, r0, r4, lsl #24
    5bbc:	00228400 	eoreq	r8, r2, r0, lsl #8
    5bc0:	2a531500 	bcs	14cafc8 <__Stack_Size+0x14cabc8>
    5bc4:	5b010000 	blpl	45bcc <__Stack_Size+0x457cc>
    5bc8:	00004c04 	andeq	r4, r0, r4, lsl #24
    5bcc:	0022a500 	eoreq	sl, r2, r0, lsl #10
    5bd0:	27351500 	ldrcs	r1, [r5, -r0, lsl #10]!
    5bd4:	5c010000 	stcpl	0, cr0, [r1], {-0}
    5bd8:	00004c04 	andeq	r4, r0, r4, lsl #24
    5bdc:	0022c600 	eoreq	ip, r2, r0, lsl #12
    5be0:	23551600 	cmpcs	r5, #0, 12
    5be4:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    5be8:	00004c04 	andeq	r4, r0, r4, lsl #24
    5bec:	0022e700 	eoreq	lr, r2, r0, lsl #14
    5bf0:	00002800 	andeq	r2, r0, r0, lsl #16
    5bf4:	0bf00000 	bleq	ffc05bfc <SCS_BASE+0x1fbf7bfc>
    5bf8:	011b0000 	tsteq	fp, r0
    5bfc:	00740250 	rsbseq	r0, r4, r0, asr r2
    5c00:	d8200000 	stmdale	r0!, {}	; <UNPREDICTABLE>
    5c04:	01000023 	tsteq	r0, r3, lsr #32
    5c08:	0000048d 	andeq	r0, r0, sp, lsl #9
    5c0c:	00140000 	andseq	r0, r4, r0
    5c10:	9c010000 	stcls	0, cr0, [r1], {-0}
    5c14:	00000d31 	andeq	r0, r0, r1, lsr sp
    5c18:	00236f15 	eoreq	r6, r3, r5, lsl pc
    5c1c:	048d0100 	streq	r0, [sp], #256	; 0x100
    5c20:	000004ac 	andeq	r0, r0, ip, lsr #9
    5c24:	00002324 	andeq	r2, r0, r4, lsr #6
    5c28:	00226e15 	eoreq	r6, r2, r5, lsl lr
    5c2c:	048d0100 	streq	r0, [sp], #256	; 0x100
    5c30:	0000004c 	andeq	r0, r0, ip, asr #32
    5c34:	00002342 	andeq	r2, r0, r2, asr #6
    5c38:	002a5315 	eoreq	r5, sl, r5, lsl r3
    5c3c:	048e0100 	streq	r0, [lr], #256	; 0x100
    5c40:	0000004c 	andeq	r0, r0, ip, asr #32
    5c44:	00002363 	andeq	r2, r0, r3, ror #6
    5c48:	00273515 	eoreq	r3, r7, r5, lsl r5
    5c4c:	048e0100 	streq	r0, [lr], #256	; 0x100
    5c50:	0000004c 	andeq	r0, r0, ip, asr #32
    5c54:	00002384 	andeq	r2, r0, r4, lsl #7
    5c58:	00000028 	andeq	r0, r0, r8, lsr #32
    5c5c:	000bf000 	andeq	pc, fp, r0
    5c60:	50011b00 	andpl	r1, r1, r0, lsl #22
    5c64:	00007402 	andeq	r7, r0, r2, lsl #8
    5c68:	0af02000 	beq	ffc0dc70 <SCS_BASE+0x1fbffc70>
    5c6c:	d6010000 	strle	r0, [r1], -r0
    5c70:	00000004 	andeq	r0, r0, r4
    5c74:	00000600 	andeq	r0, r0, r0, lsl #12
    5c78:	729c0100 	addsvc	r0, ip, #0, 2
    5c7c:	1400000d 	strne	r0, [r0], #-13
    5c80:	0000236f 	andeq	r2, r0, pc, ror #6
    5c84:	ac04d601 	stcge	6, cr13, [r4], {1}
    5c88:	01000004 	tsteq	r0, r4
    5c8c:	282f1450 	stmdacs	pc!, {r4, r6, sl, ip}	; <UNPREDICTABLE>
    5c90:	d6010000 	strle	r0, [r1], -r0
    5c94:	00004c04 	andeq	r4, r0, r4, lsl #24
    5c98:	14510100 	ldrbne	r0, [r1], #-256	; 0x100
    5c9c:	00002582 	andeq	r2, r0, r2, lsl #11
    5ca0:	4c04d601 	stcmi	6, cr13, [r4], {1}
    5ca4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ca8:	a7200052 			; <UNDEFINED> instruction: 0xa7200052
    5cac:	01000026 	tsteq	r0, r6, lsr #32
    5cb0:	000004f2 	strdeq	r0, [r0], -r2
    5cb4:	00100000 	andseq	r0, r0, r0
    5cb8:	9c010000 	stcls	0, cr0, [r1], {-0}
    5cbc:	00000db7 			; <UNDEFINED> instruction: 0x00000db7
    5cc0:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5cc4:	04f20100 	ldrbteq	r0, [r2], #256	; 0x100
    5cc8:	000004ac 	andeq	r0, r0, ip, lsr #9
    5ccc:	b7155001 	ldrlt	r5, [r5, -r1]
    5cd0:	01000004 	tsteq	r0, r4
    5cd4:	004c04f2 	strdeq	r0, [ip], #-66	; 0xffffffbe
    5cd8:	23a50000 			; <UNDEFINED> instruction: 0x23a50000
    5cdc:	c5160000 	ldrgt	r0, [r6, #-0]
    5ce0:	01000023 	tsteq	r0, r3, lsr #32
    5ce4:	004c04f4 	strdeq	r0, [ip], #-68	; 0xffffffbc
    5ce8:	23c60000 	biccs	r0, r6, #0
    5cec:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    5cf0:	0000047a 	andeq	r0, r0, sl, ror r4
    5cf4:	00000000 	andeq	r0, r0, r0
    5cf8:	00000010 	andeq	r0, r0, r0, lsl r0
    5cfc:	0de49c01 	stcleq	12, cr9, [r4, #4]!
    5d00:	87230000 	strhi	r0, [r3, -r0]!
    5d04:	01000004 	tsteq	r0, r4
    5d08:	04932250 	ldreq	r2, [r3], #592	; 0x250
    5d0c:	23fb0000 	mvnscs	r0, #0
    5d10:	9f250000 	svcls	0x00250000
    5d14:	1c000004 	stcne	0, cr0, [r0], {4}
    5d18:	00000024 	andeq	r0, r0, r4, lsr #32
    5d1c:	00260b20 	eoreq	r0, r6, r0, lsr #22
    5d20:	05450100 	strbeq	r0, [r5, #-256]	; 0x100
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	0000003c 	andeq	r0, r0, ip, lsr r0
    5d2c:	0e699c01 	cdpeq	12, 6, cr9, cr9, cr1, {0}
    5d30:	6f140000 	svcvs	0x00140000
    5d34:	01000023 	tsteq	r0, r3, lsr #32
    5d38:	04ac0545 	strteq	r0, [ip], #1349	; 0x545
    5d3c:	50010000 	andpl	r0, r1, r0
    5d40:	00255615 	eoreq	r5, r5, r5, lsl r6
    5d44:	05450100 	strbeq	r0, [r5, #-256]	; 0x100
    5d48:	0000004c 	andeq	r0, r0, ip, asr #32
    5d4c:	00002451 	andeq	r2, r0, r1, asr r4
    5d50:	00232515 	eoreq	r2, r3, r5, lsl r5
    5d54:	05460100 	strbeq	r0, [r6, #-256]	; 0x100
    5d58:	0000004c 	andeq	r0, r0, ip, asr #32
    5d5c:	00002472 	andeq	r2, r0, r2, ror r4
    5d60:	00238515 	eoreq	r8, r3, r5, lsl r5
    5d64:	05460100 	strbeq	r0, [r6, #-256]	; 0x100
    5d68:	0000004c 	andeq	r0, r0, ip, asr #32
    5d6c:	00002493 	muleq	r0, r3, r4
    5d70:	00235516 	eoreq	r5, r3, r6, lsl r5
    5d74:	05480100 	strbeq	r0, [r8, #-256]	; 0x100
    5d78:	0000004c 	andeq	r0, r0, ip, asr #32
    5d7c:	000024b4 			; <UNDEFINED> instruction: 0x000024b4
    5d80:	0027b816 	eoreq	fp, r7, r6, lsl r8
    5d84:	05490100 	strbeq	r0, [r9, #-256]	; 0x100
    5d88:	0000004c 	andeq	r0, r0, ip, asr #32
    5d8c:	000024e9 	andeq	r2, r0, r9, ror #9
    5d90:	0024b116 	eoreq	fp, r4, r6, lsl r1
    5d94:	054a0100 	strbeq	r0, [sl, #-256]	; 0x100
    5d98:	0000004c 	andeq	r0, r0, ip, asr #32
    5d9c:	00002513 	andeq	r2, r0, r3, lsl r5
    5da0:	29b62000 	ldmibcs	r6!, {sp}
    5da4:	7f010000 	svcvc	0x00010000
    5da8:	00000005 	andeq	r0, r0, r5
    5dac:	00001000 	andeq	r1, r0, r0
    5db0:	ae9c0100 	fmlgee	f0, f4, f0
    5db4:	1400000e 	strne	r0, [r0], #-14
    5db8:	0000236f 	andeq	r2, r0, pc, ror #6
    5dbc:	ac057f01 	stcge	15, cr7, [r5], {1}
    5dc0:	01000004 	tsteq	r0, r4
    5dc4:	23741550 	cmncs	r4, #80, 10	; 0x14000000
    5dc8:	7f010000 	svcvc	0x00010000
    5dcc:	00004c05 	andeq	r4, r0, r5, lsl #24
    5dd0:	00253d00 	eoreq	r3, r5, r0, lsl #26
    5dd4:	27b81600 	ldrcs	r1, [r8, r0, lsl #12]!
    5dd8:	81010000 	mrshi	r0, (UNDEF: 1)
    5ddc:	00004c05 	andeq	r4, r0, r5, lsl #24
    5de0:	00255e00 	eoreq	r5, r5, r0, lsl #28
    5de4:	ac200000 	stcge	0, cr0, [r0], #-0
    5de8:	01000022 	tsteq	r0, r2, lsr #32
    5dec:	000005a1 	andeq	r0, r0, r1, lsr #11
    5df0:	00140000 	andseq	r0, r4, r0
    5df4:	9c010000 	stcls	0, cr0, [r1], {-0}
    5df8:	00000ef3 	strdeq	r0, [r0], -r3
    5dfc:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5e00:	05a10100 	streq	r0, [r1, #256]!	; 0x100
    5e04:	000004ac 	andeq	r0, r0, ip, lsr #9
    5e08:	74155001 	ldrvc	r5, [r5], #-1
    5e0c:	01000023 	tsteq	r0, r3, lsr #32
    5e10:	004c05a1 	subeq	r0, ip, r1, lsr #11
    5e14:	25930000 	ldrcs	r0, [r3]
    5e18:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    5e1c:	01000027 	tsteq	r0, r7, lsr #32
    5e20:	004c05a3 	subeq	r0, ip, r3, lsr #11
    5e24:	25b40000 	ldrcs	r0, [r4, #0]!
    5e28:	20000000 	andcs	r0, r0, r0
    5e2c:	00002a93 	muleq	r0, r3, sl
    5e30:	0005c301 	andeq	ip, r5, r1, lsl #6
    5e34:	10000000 	andne	r0, r0, r0
    5e38:	01000000 	mrseq	r0, (UNDEF: 0)
    5e3c:	000f389c 	muleq	pc, ip, r8	; <UNPREDICTABLE>
    5e40:	236f1400 	cmncs	pc, #0, 8
    5e44:	c3010000 	movwgt	r0, #4096	; 0x1000
    5e48:	0004ac05 	andeq	sl, r4, r5, lsl #24
    5e4c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    5e50:	00002374 	andeq	r2, r0, r4, ror r3
    5e54:	4c05c301 	stcmi	3, cr12, [r5], {1}
    5e58:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    5e5c:	16000025 	strne	r0, [r0], -r5, lsr #32
    5e60:	000027c1 	andeq	r2, r0, r1, asr #15
    5e64:	4c05c501 	cfstr32mi	mvfx12, [r5], {1}
    5e68:	0a000000 	beq	5e70 <__Stack_Size+0x5a70>
    5e6c:	00000026 	andeq	r0, r0, r6, lsr #32
    5e70:	0026e920 	eoreq	lr, r6, r0, lsr #18
    5e74:	05e50100 	strbeq	r0, [r5, #256]!	; 0x100
    5e78:	00000000 	andeq	r0, r0, r0
    5e7c:	00000014 	andeq	r0, r0, r4, lsl r0
    5e80:	0f7d9c01 	svceq	0x007d9c01
    5e84:	6f140000 	svcvs	0x00140000
    5e88:	01000023 	tsteq	r0, r3, lsr #32
    5e8c:	04ac05e5 	strteq	r0, [ip], #1509	; 0x5e5
    5e90:	50010000 	andpl	r0, r1, r0
    5e94:	00237415 	eoreq	r7, r3, r5, lsl r4
    5e98:	05e50100 	strbeq	r0, [r5, #256]!	; 0x100
    5e9c:	0000004c 	andeq	r0, r0, ip, asr #32
    5ea0:	0000263f 	andeq	r2, r0, pc, lsr r6
    5ea4:	0027c116 	eoreq	ip, r7, r6, lsl r1
    5ea8:	05e70100 	strbeq	r0, [r7, #256]!	; 0x100
    5eac:	0000004c 	andeq	r0, r0, ip, asr #32
    5eb0:	00002660 	andeq	r2, r0, r0, ror #12
    5eb4:	29192000 	ldmdbcs	r9, {sp}
    5eb8:	02010000 	andeq	r0, r1, #0
    5ebc:	00000006 	andeq	r0, r0, r6
    5ec0:	00001800 	andeq	r1, r0, r0, lsl #16
    5ec4:	b09c0100 	addslt	r0, ip, r0, lsl #2
    5ec8:	1400000f 	strne	r0, [r0], #-15
    5ecc:	0000236f 	andeq	r2, r0, pc, ror #6
    5ed0:	ac060201 	sfmge	f0, 4, [r6], {1}
    5ed4:	01000004 	tsteq	r0, r4
    5ed8:	18c71450 	stmiane	r7, {r4, r6, sl, ip}^
    5edc:	02010000 	andeq	r0, r1, #0
    5ee0:	0000cf06 	andeq	ip, r0, r6, lsl #30
    5ee4:	00510100 	subseq	r0, r1, r0, lsl #2
    5ee8:	0027d620 	eoreq	sp, r7, r0, lsr #12
    5eec:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
    5ef0:	00000000 	andeq	r0, r0, r0
    5ef4:	00000018 	andeq	r0, r0, r8, lsl r0
    5ef8:	0fe39c01 	svceq	0x00e39c01
    5efc:	6f140000 	svcvs	0x00140000
    5f00:	01000023 	tsteq	r0, r3, lsr #32
    5f04:	04ac061d 	strteq	r0, [ip], #1565	; 0x61d
    5f08:	50010000 	andpl	r0, r1, r0
    5f0c:	0018c714 	andseq	ip, r8, r4, lsl r7
    5f10:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
    5f14:	000000cf 	andeq	r0, r0, pc, asr #1
    5f18:	20005101 	andcs	r5, r0, r1, lsl #2
    5f1c:	000022e9 	andeq	r2, r0, r9, ror #5
    5f20:	00063901 	andeq	r3, r6, r1, lsl #18
    5f24:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5f28:	01000000 	mrseq	r0, (UNDEF: 0)
    5f2c:	0010169c 	mulseq	r0, ip, r6
    5f30:	236f1400 	cmncs	pc, #0, 8
    5f34:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    5f38:	0004ac06 	andeq	sl, r4, r6, lsl #24
    5f3c:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    5f40:	000018c7 	andeq	r1, r0, r7, asr #17
    5f44:	cf063901 	svcgt	0x00063901
    5f48:	01000000 	mrseq	r0, (UNDEF: 0)
    5f4c:	e4200051 	strt	r0, [r0], #-81	; 0x51
    5f50:	01000027 	tsteq	r0, r7, lsr #32
    5f54:	00000655 	andeq	r0, r0, r5, asr r6
    5f58:	00180000 	andseq	r0, r8, r0
    5f5c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5f60:	00001049 	andeq	r1, r0, r9, asr #32
    5f64:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5f68:	06550100 	ldrbeq	r0, [r5], -r0, lsl #2
    5f6c:	000004ac 	andeq	r0, r0, ip, lsr #9
    5f70:	c7145001 	ldrgt	r5, [r4, -r1]
    5f74:	01000018 	tsteq	r0, r8, lsl r0
    5f78:	00cf0655 	sbceq	r0, pc, r5, asr r6	; <UNPREDICTABLE>
    5f7c:	51010000 	mrspl	r0, (UNDEF: 1)
    5f80:	23102000 	tstcs	r0, #0
    5f84:	74010000 	strvc	r0, [r1], #-0
    5f88:	00000006 	andeq	r0, r0, r6
    5f8c:	00001000 	andeq	r1, r0, r0
    5f90:	8e9c0100 	fmlhie	f0, f4, f0
    5f94:	14000010 	strne	r0, [r0], #-16
    5f98:	0000236f 	andeq	r2, r0, pc, ror #6
    5f9c:	ac067401 	cfstrsge	mvf7, [r6], {1}
    5fa0:	01000004 	tsteq	r0, r4
    5fa4:	21d11550 	bicscs	r1, r1, r0, asr r5
    5fa8:	74010000 	strvc	r0, [r1], #-0
    5fac:	00004c06 	andeq	r4, r0, r6, lsl #24
    5fb0:	00269500 	eoreq	r9, r6, r0, lsl #10
    5fb4:	27b81600 	ldrcs	r1, [r8, r0, lsl #12]!
    5fb8:	76010000 	strvc	r0, [r1], -r0
    5fbc:	00004c06 	andeq	r4, r0, r6, lsl #24
    5fc0:	0026b600 	eoreq	fp, r6, r0, lsl #12
    5fc4:	97200000 	strls	r0, [r0, -r0]!
    5fc8:	01000022 	tsteq	r0, r2, lsr #32
    5fcc:	00000695 	muleq	r0, r5, r6
    5fd0:	00140000 	andseq	r0, r4, r0
    5fd4:	9c010000 	stcls	0, cr0, [r1], {-0}
    5fd8:	000010d3 	ldrdeq	r1, [r0], -r3
    5fdc:	00236f14 	eoreq	r6, r3, r4, lsl pc
    5fe0:	06950100 	ldreq	r0, [r5], r0, lsl #2
    5fe4:	000004ac 	andeq	r0, r0, ip, lsr #9
    5fe8:	d1155001 	tstle	r5, r1
    5fec:	01000021 	tsteq	r0, r1, lsr #32
    5ff0:	004c0695 	umaaleq	r0, ip, r5, r6
    5ff4:	26eb0000 	strbtcs	r0, [fp], r0
    5ff8:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    5ffc:	01000027 	tsteq	r0, r7, lsr #32
    6000:	004c0697 	umaaleq	r0, ip, r7, r6
    6004:	270c0000 	strcs	r0, [ip, -r0]
    6008:	20000000 	andcs	r0, r0, r0
    600c:	00002200 	andeq	r2, r0, r0, lsl #4
    6010:	0006b601 	andeq	fp, r6, r1, lsl #12
    6014:	10000000 	andne	r0, r0, r0
    6018:	01000000 	mrseq	r0, (UNDEF: 0)
    601c:	0011189c 	mulseq	r1, ip, r8
    6020:	236f1400 	cmncs	pc, #0, 8
    6024:	b6010000 	strlt	r0, [r1], -r0
    6028:	0004ac06 	andeq	sl, r4, r6, lsl #24
    602c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6030:	000021d1 	ldrdeq	r2, [r0], -r1
    6034:	4c06b601 	stcmi	6, cr11, [r6], {1}
    6038:	41000000 	mrsmi	r0, (UNDEF: 0)
    603c:	16000027 	strne	r0, [r0], -r7, lsr #32
    6040:	000027c1 	andeq	r2, r0, r1, asr #15
    6044:	4c06b801 	stcmi	8, cr11, [r6], {1}
    6048:	62000000 	andvs	r0, r0, #0
    604c:	00000027 	andeq	r0, r0, r7, lsr #32
    6050:	00217520 	eoreq	r7, r1, r0, lsr #10
    6054:	06d70100 	ldrbeq	r0, [r7], r0, lsl #2
    6058:	00000000 	andeq	r0, r0, r0
    605c:	00000014 	andeq	r0, r0, r4, lsl r0
    6060:	115d9c01 	cmpne	sp, r1, lsl #24
    6064:	6f140000 	svcvs	0x00140000
    6068:	01000023 	tsteq	r0, r3, lsr #32
    606c:	04ac06d7 	strteq	r0, [ip], #1751	; 0x6d7
    6070:	50010000 	andpl	r0, r1, r0
    6074:	0021d115 	eoreq	sp, r1, r5, lsl r1
    6078:	06d70100 	ldrbeq	r0, [r7], r0, lsl #2
    607c:	0000004c 	andeq	r0, r0, ip, asr #32
    6080:	00002797 	muleq	r0, r7, r7
    6084:	0027c116 	eoreq	ip, r7, r6, lsl r1
    6088:	06d90100 	ldrbeq	r0, [r9], r0, lsl #2
    608c:	0000004c 	andeq	r0, r0, ip, asr #32
    6090:	000027b8 			; <UNDEFINED> instruction: 0x000027b8
    6094:	27562000 	ldrbcs	r2, [r6, -r0]
    6098:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    609c:	00000006 	andeq	r0, r0, r6
    60a0:	00001000 	andeq	r1, r0, r0
    60a4:	a29c0100 	addsge	r0, ip, #0, 2
    60a8:	14000011 	strne	r0, [r0], #-17
    60ac:	0000236f 	andeq	r2, r0, pc, ror #6
    60b0:	ac06f701 	stcge	7, cr15, [r6], {1}
    60b4:	01000004 	tsteq	r0, r4
    60b8:	22321550 	eorscs	r1, r2, #80, 10	; 0x14000000
    60bc:	f7010000 			; <UNDEFINED> instruction: 0xf7010000
    60c0:	00004c06 	andeq	r4, r0, r6, lsl #24
    60c4:	0027ed00 	eoreq	lr, r7, r0, lsl #26
    60c8:	27b81600 	ldrcs	r1, [r8, r0, lsl #12]!
    60cc:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    60d0:	00004c06 	andeq	r4, r0, r6, lsl #24
    60d4:	00280e00 	eoreq	r0, r8, r0, lsl #28
    60d8:	ce200000 	cdpgt	0, 2, cr0, cr0, cr0, {0}
    60dc:	01000024 	tsteq	r0, r4, lsr #32
    60e0:	00000718 	andeq	r0, r0, r8, lsl r7
    60e4:	00140000 	andseq	r0, r4, r0
    60e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    60ec:	000011e7 	andeq	r1, r0, r7, ror #3
    60f0:	00236f14 	eoreq	r6, r3, r4, lsl pc
    60f4:	07180100 	ldreq	r0, [r8, -r0, lsl #2]
    60f8:	000004ac 	andeq	r0, r0, ip, lsr #9
    60fc:	32155001 	andscc	r5, r5, #1
    6100:	01000022 	tsteq	r0, r2, lsr #32
    6104:	004c0718 	subeq	r0, ip, r8, lsl r7
    6108:	28430000 	stmdacs	r3, {}^	; <UNPREDICTABLE>
    610c:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    6110:	01000027 	tsteq	r0, r7, lsr #32
    6114:	004c071a 	subeq	r0, ip, sl, lsl r7
    6118:	28640000 	stmdacs	r4!, {}^	; <UNPREDICTABLE>
    611c:	20000000 	andcs	r0, r0, r0
    6120:	0000235d 	andeq	r2, r0, sp, asr r3
    6124:	00073901 	andeq	r3, r7, r1, lsl #18
    6128:	10000000 	andne	r0, r0, r0
    612c:	01000000 	mrseq	r0, (UNDEF: 0)
    6130:	00122c9c 	mulseq	r2, ip, ip
    6134:	236f1400 	cmncs	pc, #0, 8
    6138:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    613c:	0004ac07 	andeq	sl, r4, r7, lsl #24
    6140:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6144:	00002232 	andeq	r2, r0, r2, lsr r2
    6148:	4c073901 	stcmi	9, cr3, [r7], {1}
    614c:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    6150:	16000028 	strne	r0, [r0], -r8, lsr #32
    6154:	000027c1 	andeq	r2, r0, r1, asr #15
    6158:	4c073b01 	stcmi	11, cr3, [r7], {1}
    615c:	ba000000 	blt	6164 <__Stack_Size+0x5d64>
    6160:	00000028 	andeq	r0, r0, r8, lsr #32
    6164:	00213c20 	eoreq	r3, r1, r0, lsr #24
    6168:	075a0100 	ldrbeq	r0, [sl, -r0, lsl #2]
    616c:	00000000 	andeq	r0, r0, r0
    6170:	00000014 	andeq	r0, r0, r4, lsl r0
    6174:	12719c01 	rsbsne	r9, r1, #256	; 0x100
    6178:	6f140000 	svcvs	0x00140000
    617c:	01000023 	tsteq	r0, r3, lsr #32
    6180:	04ac075a 	strteq	r0, [ip], #1882	; 0x75a
    6184:	50010000 	andpl	r0, r1, r0
    6188:	00223215 	eoreq	r3, r2, r5, lsl r2
    618c:	075a0100 	ldrbeq	r0, [sl, -r0, lsl #2]
    6190:	0000004c 	andeq	r0, r0, ip, asr #32
    6194:	000028ef 	andeq	r2, r0, pc, ror #17
    6198:	0027c116 	eoreq	ip, r7, r6, lsl r1
    619c:	075c0100 	ldrbeq	r0, [ip, -r0, lsl #2]
    61a0:	0000004c 	andeq	r0, r0, ip, asr #32
    61a4:	00002910 	andeq	r2, r0, r0, lsl r9
    61a8:	2a2d2000 	bcs	b4e1b0 <__Stack_Size+0xb4ddb0>
    61ac:	7b010000 	blvc	461b4 <__Stack_Size+0x45db4>
    61b0:	00000007 	andeq	r0, r0, r7
    61b4:	00001000 	andeq	r1, r0, r0
    61b8:	b69c0100 	ldrlt	r0, [ip], r0, lsl #2
    61bc:	14000012 	strne	r0, [r0], #-18
    61c0:	0000236f 	andeq	r2, r0, pc, ror #6
    61c4:	ac077b01 	stcge	11, cr7, [r7], {1}
    61c8:	01000004 	tsteq	r0, r4
    61cc:	25761550 	ldrbcs	r1, [r6, #-1360]!	; 0x550
    61d0:	7b010000 	blvc	461d8 <__Stack_Size+0x45dd8>
    61d4:	00004c07 	andeq	r4, r0, r7, lsl #24
    61d8:	00294500 	eoreq	r4, r9, r0, lsl #10
    61dc:	27b81600 	ldrcs	r1, [r8, r0, lsl #12]!
    61e0:	7d010000 	stcvc	0, cr0, [r1, #-0]
    61e4:	00004c07 	andeq	r4, r0, r7, lsl #24
    61e8:	00296600 	eoreq	r6, r9, r0, lsl #12
    61ec:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    61f0:	01000029 	tsteq	r0, r9, lsr #32
    61f4:	0000079b 	muleq	r0, fp, r7
    61f8:	00100000 	andseq	r0, r0, r0
    61fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    6200:	000012fb 	strdeq	r1, [r0], -fp
    6204:	00236f14 	eoreq	r6, r3, r4, lsl pc
    6208:	079b0100 	ldreq	r0, [fp, r0, lsl #2]
    620c:	000004ac 	andeq	r0, r0, ip, lsr #9
    6210:	76155001 	ldrvc	r5, [r5], -r1
    6214:	01000025 	tsteq	r0, r5, lsr #32
    6218:	004c079b 	umaaleq	r0, ip, fp, r7
    621c:	299b0000 	ldmibcs	fp, {}	; <UNPREDICTABLE>
    6220:	b8160000 	ldmdalt	r6, {}	; <UNPREDICTABLE>
    6224:	01000027 	tsteq	r0, r7, lsr #32
    6228:	004c079d 	umaaleq	r0, ip, sp, r7
    622c:	29bc0000 	ldmibcs	ip!, {}	; <UNPREDICTABLE>
    6230:	20000000 	andcs	r0, r0, r0
    6234:	000026cd 	andeq	r2, r0, sp, asr #13
    6238:	0007bb01 	andeq	fp, r7, r1, lsl #22
    623c:	10000000 	andne	r0, r0, r0
    6240:	01000000 	mrseq	r0, (UNDEF: 0)
    6244:	0013409c 	mulseq	r3, ip, r0
    6248:	236f1400 	cmncs	pc, #0, 8
    624c:	bb010000 	bllt	46254 <__Stack_Size+0x45e54>
    6250:	0004ac07 	andeq	sl, r4, r7, lsl #24
    6254:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6258:	00002576 	andeq	r2, r0, r6, ror r5
    625c:	4c07bb01 	stcmi	11, cr11, [r7], {1}
    6260:	e6000000 	str	r0, [r0], -r0
    6264:	16000029 	strne	r0, [r0], -r9, lsr #32
    6268:	000027c1 	andeq	r2, r0, r1, asr #15
    626c:	4c07bd01 	stcmi	13, cr11, [r7], {1}
    6270:	07000000 	streq	r0, [r0, -r0]
    6274:	0000002a 	andeq	r0, r0, sl, lsr #32
    6278:	00246420 	eoreq	r6, r4, r0, lsr #8
    627c:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
    6280:	00000000 	andeq	r0, r0, r0
    6284:	00000010 	andeq	r0, r0, r0, lsl r0
    6288:	13859c01 	orrne	r9, r5, #256	; 0x100
    628c:	6f140000 	svcvs	0x00140000
    6290:	01000023 	tsteq	r0, r3, lsr #32
    6294:	04ac07db 	strteq	r0, [ip], #2011	; 0x7db
    6298:	50010000 	andpl	r0, r1, r0
    629c:	00257615 	eoreq	r7, r5, r5, lsl r6
    62a0:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
    62a4:	0000004c 	andeq	r0, r0, ip, asr #32
    62a8:	00002a3c 	andeq	r2, r0, ip, lsr sl
    62ac:	0027c116 	eoreq	ip, r7, r6, lsl r1
    62b0:	07dd0100 	ldrbeq	r0, [sp, r0, lsl #2]
    62b4:	0000004c 	andeq	r0, r0, ip, asr #32
    62b8:	00002a5d 	andeq	r2, r0, sp, asr sl
    62bc:	214e2000 	mrscs	r2, (UNDEF: 78)
    62c0:	fb010000 	blx	462ca <__Stack_Size+0x45eca>
    62c4:	00000007 	andeq	r0, r0, r7
    62c8:	00001000 	andeq	r1, r0, r0
    62cc:	ca9c0100 	bgt	fe7066d4 <SCS_BASE+0x1e6f86d4>
    62d0:	14000013 	strne	r0, [r0], #-19
    62d4:	0000236f 	andeq	r2, r0, pc, ror #6
    62d8:	ac07fb01 	stcge	11, cr15, [r7], {1}
    62dc:	01000004 	tsteq	r0, r4
    62e0:	21f11550 	mvnscs	r1, r0, asr r5
    62e4:	fb010000 	blx	462ee <__Stack_Size+0x45eee>
    62e8:	00004c07 	andeq	r4, r0, r7, lsl #24
    62ec:	002a8700 	eoreq	r8, sl, r0, lsl #14
    62f0:	24b11600 	ldrtcs	r1, [r1], #1536	; 0x600
    62f4:	fd010000 	stc2	0, cr0, [r1, #-0]
    62f8:	00004c07 	andeq	r4, r0, r7, lsl #24
    62fc:	002aa800 	eoreq	sl, sl, r0, lsl #16
    6300:	87200000 	strhi	r0, [r0, -r0]!
    6304:	01000027 	tsteq	r0, r7, lsr #32
    6308:	00000818 	andeq	r0, r0, r8, lsl r8
    630c:	00100000 	andseq	r0, r0, r0
    6310:	9c010000 	stcls	0, cr0, [r1], {-0}
    6314:	0000140f 	andeq	r1, r0, pc, lsl #8
    6318:	00236f14 	eoreq	r6, r3, r4, lsl pc
    631c:	08180100 	ldmdaeq	r8, {r8}
    6320:	000004ac 	andeq	r0, r0, ip, lsr #9
    6324:	39155001 	ldmdbcc	r5, {r0, ip, lr}
    6328:	01000026 	tsteq	r0, r6, lsr #32
    632c:	004c0818 	subeq	r0, ip, r8, lsl r8
    6330:	2add0000 	bcs	ff746338 <SCS_BASE+0x1f738338>
    6334:	b1160000 	tstlt	r6, r0
    6338:	01000024 	tsteq	r0, r4, lsr #32
    633c:	004c081a 	subeq	r0, ip, sl, lsl r8
    6340:	2afe0000 	bcs	fff86348 <SCS_BASE+0x1ff78348>
    6344:	20000000 	andcs	r0, r0, r0
    6348:	00002afe 	strdeq	r2, [r0], -lr
    634c:	00083601 	andeq	r3, r8, r1, lsl #12
    6350:	14000000 	strne	r0, [r0], #-0
    6354:	01000000 	mrseq	r0, (UNDEF: 0)
    6358:	0014549c 	mulseq	r4, ip, r4
    635c:	236f1400 	cmncs	pc, #0, 8
    6360:	36010000 	strcc	r0, [r1], -r0
    6364:	0004ac08 	andeq	sl, r4, r8, lsl #24
    6368:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    636c:	000021f1 	strdeq	r2, [r0], -r1
    6370:	4c083601 	stcmi	6, cr3, [r8], {1}
    6374:	33000000 	movwcc	r0, #0
    6378:	1600002b 	strne	r0, [r0], -fp, lsr #32
    637c:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6380:	4c083801 	stcmi	8, cr3, [r8], {1}
    6384:	54000000 	strpl	r0, [r0], #-0
    6388:	0000002b 	andeq	r0, r0, fp, lsr #32
    638c:	0029ed20 	eoreq	lr, r9, r0, lsr #26
    6390:	08530100 	ldmdaeq	r3, {r8}^
    6394:	00000000 	andeq	r0, r0, r0
    6398:	00000014 	andeq	r0, r0, r4, lsl r0
    639c:	14999c01 	ldrne	r9, [r9], #3073	; 0xc01
    63a0:	6f140000 	svcvs	0x00140000
    63a4:	01000023 	tsteq	r0, r3, lsr #32
    63a8:	04ac0853 	strteq	r0, [ip], #2131	; 0x853
    63ac:	50010000 	andpl	r0, r1, r0
    63b0:	00263915 	eoreq	r3, r6, r5, lsl r9
    63b4:	08530100 	ldmdaeq	r3, {r8}^
    63b8:	0000004c 	andeq	r0, r0, ip, asr #32
    63bc:	00002b89 	andeq	r2, r0, r9, lsl #23
    63c0:	0024b116 	eoreq	fp, r4, r6, lsl r1
    63c4:	08550100 	ldmdaeq	r5, {r8}^
    63c8:	0000004c 	andeq	r0, r0, ip, asr #32
    63cc:	00002baa 	andeq	r2, r0, sl, lsr #23
    63d0:	2a3d2000 	bcs	f4e3d8 <__Stack_Size+0xf4dfd8>
    63d4:	71010000 	mrsvc	r0, (UNDEF: 1)
    63d8:	00000008 	andeq	r0, r0, r8
    63dc:	00001400 	andeq	r1, r0, r0, lsl #8
    63e0:	de9c0100 	fmllee	f0, f4, f0
    63e4:	14000014 	strne	r0, [r0], #-20
    63e8:	0000236f 	andeq	r2, r0, pc, ror #6
    63ec:	ac087101 	stfges	f7, [r8], {1}
    63f0:	01000004 	tsteq	r0, r4
    63f4:	21f11550 	mvnscs	r1, r0, asr r5
    63f8:	71010000 	mrsvc	r0, (UNDEF: 1)
    63fc:	00004c08 	andeq	r4, r0, r8, lsl #24
    6400:	002bdf00 	eoreq	sp, fp, r0, lsl #30
    6404:	24b11600 	ldrtcs	r1, [r1], #1536	; 0x600
    6408:	73010000 	movwvc	r0, #4096	; 0x1000
    640c:	00004c08 	andeq	r4, r0, r8, lsl #24
    6410:	002c0000 	eoreq	r0, ip, r0
    6414:	ba200000 	blt	80641c <__Stack_Size+0x80601c>
    6418:	01000021 	tsteq	r0, r1, lsr #32
    641c:	0000088e 	andeq	r0, r0, lr, lsl #17
    6420:	00140000 	andseq	r0, r4, r0
    6424:	9c010000 	stcls	0, cr0, [r1], {-0}
    6428:	00001523 	andeq	r1, r0, r3, lsr #10
    642c:	00236f14 	eoreq	r6, r3, r4, lsl pc
    6430:	088e0100 	stmeq	lr, {r8}
    6434:	000004ac 	andeq	r0, r0, ip, lsr #9
    6438:	39155001 	ldmdbcc	r5, {r0, ip, lr}
    643c:	01000026 	tsteq	r0, r6, lsr #32
    6440:	004c088e 	subeq	r0, ip, lr, lsl #17
    6444:	2c350000 	ldccs	0, cr0, [r5], #-0
    6448:	b1160000 	tstlt	r6, r0
    644c:	01000024 	tsteq	r0, r4, lsr #32
    6450:	004c0890 	umaaleq	r0, ip, r0, r8
    6454:	2c560000 	mracs	r0, r6, acc0
    6458:	20000000 	andcs	r0, r0, r0
    645c:	00002a04 	andeq	r2, r0, r4, lsl #20
    6460:	0008ac01 	andeq	sl, r8, r1, lsl #24
    6464:	14000000 	strne	r0, [r0], #-0
    6468:	01000000 	mrseq	r0, (UNDEF: 0)
    646c:	0015689c 	mulseq	r5, ip, r8
    6470:	236f1400 	cmncs	pc, #0, 8
    6474:	ac010000 	stcge	0, cr0, [r1], {-0}
    6478:	0004ac08 	andeq	sl, r4, r8, lsl #24
    647c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6480:	000021f1 	strdeq	r2, [r0], -r1
    6484:	4c08ac01 	stcmi	12, cr10, [r8], {1}
    6488:	8b000000 	blhi	6490 <__Stack_Size+0x6090>
    648c:	1600002c 	strne	r0, [r0], -ip, lsr #32
    6490:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6494:	4c08ae01 	stcmi	14, cr10, [r8], {1}
    6498:	ac000000 	stcge	0, cr0, [r0], {-0}
    649c:	0000002c 	andeq	r0, r0, ip, lsr #32
    64a0:	00259420 	eoreq	r9, r5, r0, lsr #8
    64a4:	08ce0100 	stmiaeq	lr, {r8}^
    64a8:	00000000 	andeq	r0, r0, r0
    64ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    64b0:	15ab9c01 	strne	r9, [fp, #3073]!	; 0xc01
    64b4:	6f140000 	svcvs	0x00140000
    64b8:	01000023 	tsteq	r0, r3, lsr #32
    64bc:	04ac08ce 	strteq	r0, [ip], #2254	; 0x8ce
    64c0:	50010000 	andpl	r0, r1, r0
    64c4:	0027ca14 	eoreq	ip, r7, r4, lsl sl
    64c8:	08ce0100 	stmiaeq	lr, {r8}^
    64cc:	0000004c 	andeq	r0, r0, ip, asr #32
    64d0:	39155101 	ldmdbcc	r5, {r0, r8, ip, lr}
    64d4:	01000028 	tsteq	r0, r8, lsr #32
    64d8:	004c08ce 	subeq	r0, ip, lr, asr #17
    64dc:	2ce10000 	stclcs	0, cr0, [r1]
    64e0:	20000000 	andcs	r0, r0, r0
    64e4:	00002282 	andeq	r2, r0, r2, lsl #5
    64e8:	0008ea01 	andeq	lr, r8, r1, lsl #20
    64ec:	1c000000 	stcne	0, cr0, [r0], {-0}
    64f0:	01000000 	mrseq	r0, (UNDEF: 0)
    64f4:	0015ee9c 	mulseq	r5, ip, lr
    64f8:	236f1400 	cmncs	pc, #0, 8
    64fc:	ea010000 	b	46504 <__Stack_Size+0x46104>
    6500:	0004ac08 	andeq	sl, r4, r8, lsl #24
    6504:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    6508:	000027ca 	andeq	r2, r0, sl, asr #15
    650c:	4c08ea01 	stcmi	10, cr14, [r8], {1}
    6510:	01000000 	mrseq	r0, (UNDEF: 0)
    6514:	26261551 			; <UNDEFINED> instruction: 0x26261551
    6518:	ea010000 	b	46520 <__Stack_Size+0x46120>
    651c:	00004c08 	andeq	r4, r0, r8, lsl #24
    6520:	002d0200 	eoreq	r0, sp, r0, lsl #4
    6524:	21200000 	teqcs	r0, r0
    6528:	01000025 	tsteq	r0, r5, lsr #32
    652c:	00000912 	andeq	r0, r0, r2, lsl r9
    6530:	00440000 	subeq	r0, r4, r0
    6534:	9c010000 	stcls	0, cr0, [r1], {-0}
    6538:	00001635 	andeq	r1, r0, r5, lsr r6
    653c:	00236f15 	eoreq	r6, r3, r5, lsl pc
    6540:	09120100 	ldmdbeq	r2, {r8}
    6544:	000004ac 	andeq	r0, r0, ip, lsr #9
    6548:	00002d23 	andeq	r2, r0, r3, lsr #26
    654c:	0027ca15 	eoreq	ip, r7, r5, lsl sl
    6550:	09120100 	ldmdbeq	r2, {r8}
    6554:	0000004c 	andeq	r0, r0, ip, asr #32
    6558:	00002d43 	andeq	r2, r0, r3, asr #26
    655c:	00289d15 	eoreq	r9, r8, r5, lsl sp
    6560:	09120100 	ldmdbeq	r2, {r8}
    6564:	0000004c 	andeq	r0, r0, ip, asr #32
    6568:	00002d7d 	andeq	r2, r0, sp, ror sp
    656c:	26622000 	strbtcs	r2, [r2], -r0
    6570:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    6574:	00000009 	andeq	r0, r0, r9
    6578:	00001800 	andeq	r1, r0, r0, lsl #16
    657c:	689c0100 	ldmvs	ip, {r8}
    6580:	14000016 	strne	r0, [r0], #-22
    6584:	0000236f 	andeq	r2, r0, pc, ror #6
    6588:	ac093801 	stcge	8, cr3, [r9], {1}
    658c:	01000004 	tsteq	r0, r4
    6590:	18c71450 	stmiane	r7, {r4, r6, sl, ip}^
    6594:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    6598:	0000cf09 	andeq	ip, r0, r9, lsl #30
    659c:	00510100 	subseq	r0, r1, r0, lsl #2
    65a0:	0022d120 	eoreq	sp, r2, r0, lsr #2
    65a4:	09550100 	ldmdbeq	r5, {r8}^
    65a8:	00000000 	andeq	r0, r0, r0
    65ac:	00000018 	andeq	r0, r0, r8, lsl r0
    65b0:	169b9c01 	ldrne	r9, [fp], r1, lsl #24
    65b4:	6f140000 	svcvs	0x00140000
    65b8:	01000023 	tsteq	r0, r3, lsr #32
    65bc:	04ac0955 	strteq	r0, [ip], #2389	; 0x955
    65c0:	50010000 	andpl	r0, r1, r0
    65c4:	00267a14 	eoreq	r7, r6, r4, lsl sl
    65c8:	09550100 	ldmdbeq	r5, {r8}^
    65cc:	0000004c 	andeq	r0, r0, ip, asr #32
    65d0:	20005101 	andcs	r5, r0, r1, lsl #2
    65d4:	000025d0 	ldrdeq	r2, [r0], -r0
    65d8:	00097001 	andeq	r7, r9, r1
    65dc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    65e0:	01000000 	mrseq	r0, (UNDEF: 0)
    65e4:	0016ce9c 	mulseq	r6, ip, lr
    65e8:	236f1400 	cmncs	pc, #0, 8
    65ec:	70010000 	andvc	r0, r1, r0
    65f0:	0004ac09 	andeq	sl, r4, r9, lsl #24
    65f4:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    65f8:	000018c7 	andeq	r1, r0, r7, asr #17
    65fc:	cf097001 	svcgt	0x00097001
    6600:	01000000 	mrseq	r0, (UNDEF: 0)
    6604:	86200051 			; <UNDEFINED> instruction: 0x86200051
    6608:	01000028 	tsteq	r0, r8, lsr #32
    660c:	0000098d 	andeq	r0, r0, sp, lsl #19
    6610:	00160000 	andseq	r0, r6, r0
    6614:	9c010000 	stcls	0, cr0, [r1], {-0}
    6618:	00001703 	andeq	r1, r0, r3, lsl #14
    661c:	00236f14 	eoreq	r6, r3, r4, lsl pc
    6620:	098d0100 	stmibeq	sp, {r8}
    6624:	000004ac 	andeq	r0, r0, ip, lsr #9
    6628:	f9155001 			; <UNDEFINED> instruction: 0xf9155001
    662c:	01000022 	tsteq	r0, r2, lsr #32
    6630:	004c098d 	subeq	r0, ip, sp, lsl #19
    6634:	2d9e0000 	ldccs	0, cr0, [lr]
    6638:	20000000 	andcs	r0, r0, r0
    663c:	000024f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    6640:	0009ae01 	andeq	sl, r9, r1, lsl #28
    6644:	16000000 	strne	r0, [r0], -r0
    6648:	01000000 	mrseq	r0, (UNDEF: 0)
    664c:	0017389c 	mulseq	r7, ip, r8
    6650:	236f1400 	cmncs	pc, #0, 8
    6654:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    6658:	0004ac09 	andeq	sl, r4, r9, lsl #24
    665c:	15500100 	ldrbne	r0, [r0, #-256]	; 0x100
    6660:	000028a8 	andeq	r2, r0, r8, lsr #17
    6664:	4c09ae01 	stcmi	14, cr10, [r9], {1}
    6668:	bf000000 	svclt	0x00000000
    666c:	0000002d 	andeq	r0, r0, sp, lsr #32
    6670:	00274220 	eoreq	r4, r7, r0, lsr #4
    6674:	09ca0100 	stmibeq	sl, {r8}^
    6678:	00000000 	andeq	r0, r0, r0
    667c:	00000016 	andeq	r0, r0, r6, lsl r0
    6680:	176d9c01 	strbne	r9, [sp, -r1, lsl #24]!
    6684:	6f140000 	svcvs	0x00140000
    6688:	01000023 	tsteq	r0, r3, lsr #32
    668c:	04ac09ca 	strteq	r0, [ip], #2506	; 0x9ca
    6690:	50010000 	andpl	r0, r1, r0
    6694:	0023a915 	eoreq	sl, r3, r5, lsl r9
    6698:	09ca0100 	stmibeq	sl, {r8}^
    669c:	0000004c 	andeq	r0, r0, ip, asr #32
    66a0:	00002de0 	andeq	r2, r0, r0, ror #27
    66a4:	2acd2000 	bcs	ff34e6ac <SCS_BASE+0x1f3406ac>
    66a8:	e4010000 	str	r0, [r1], #-0
    66ac:	00000009 	andeq	r0, r0, r9
    66b0:	00001600 	andeq	r1, r0, r0, lsl #12
    66b4:	a29c0100 	addsge	r0, ip, #0, 2
    66b8:	14000017 	strne	r0, [r0], #-23
    66bc:	0000236f 	andeq	r2, r0, pc, ror #6
    66c0:	ac09e401 	cfstrsge	mvf14, [r9], {1}
    66c4:	01000004 	tsteq	r0, r4
    66c8:	29491550 	stmdbcs	r9, {r4, r6, r8, sl, ip}^
    66cc:	e4010000 	str	r0, [r1], #-0
    66d0:	00004c09 	andeq	r4, r0, r9, lsl #24
    66d4:	002e0100 	eoreq	r0, lr, r0, lsl #2
    66d8:	47200000 	strmi	r0, [r0, -r0]!
    66dc:	01000025 	tsteq	r0, r5, lsr #32
    66e0:	000009f9 	strdeq	r0, [r0], -r9
    66e4:	00040000 	andeq	r0, r4, r0
    66e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    66ec:	000017d5 	ldrdeq	r1, [r0], -r5
    66f0:	00236f14 	eoreq	r6, r3, r4, lsl pc
    66f4:	09f90100 	ldmibeq	r9!, {r8}^
    66f8:	000004ac 	andeq	r0, r0, ip, lsr #9
    66fc:	9b145001 	blls	51a708 <__Stack_Size+0x51a308>
    6700:	0100002b 	tsteq	r0, fp, lsr #32
    6704:	004c09f9 	strdeq	r0, [ip], #-153	; 0xffffff67
    6708:	51010000 	mrspl	r0, (UNDEF: 1)
    670c:	29712000 	ldmdbcs	r1!, {sp}^
    6710:	0a010000 	beq	46718 <__Stack_Size+0x46318>
    6714:	0000000a 	andeq	r0, r0, sl
    6718:	00000400 	andeq	r0, r0, r0, lsl #8
    671c:	089c0100 	ldmeq	ip, {r8}
    6720:	14000018 	strne	r0, [r0], #-24
    6724:	0000236f 	andeq	r2, r0, pc, ror #6
    6728:	ac0a0a01 	stcge	10, cr0, [sl], {1}
    672c:	01000004 	tsteq	r0, r4
    6730:	29781450 	ldmdbcs	r8!, {r4, r6, sl, ip}^
    6734:	0a010000 	beq	4673c <__Stack_Size+0x4633c>
    6738:	00004c0a 	andeq	r4, r0, sl, lsl #24
    673c:	00510100 	subseq	r0, r1, r0, lsl #2
    6740:	00218a20 	eoreq	r8, r1, r0, lsr #20
    6744:	0a1c0100 	beq	706b4c <__Stack_Size+0x70674c>
    6748:	00000000 	andeq	r0, r0, r0
    674c:	00000004 	andeq	r0, r0, r4
    6750:	183b9c01 	ldmdane	fp!, {r0, sl, fp, ip, pc}
    6754:	6f140000 	svcvs	0x00140000
    6758:	01000023 	tsteq	r0, r3, lsr #32
    675c:	04ac0a1c 	strteq	r0, [ip], #2588	; 0xa1c
    6760:	50010000 	andpl	r0, r1, r0
    6764:	00219114 	eoreq	r9, r1, r4, lsl r1
    6768:	0a1c0100 	beq	706b70 <__Stack_Size+0x706770>
    676c:	0000004c 	andeq	r0, r0, ip, asr #32
    6770:	20005101 	andcs	r5, r0, r1, lsl #2
    6774:	0000219a 	muleq	r0, sl, r1
    6778:	000a2e01 	andeq	r2, sl, r1, lsl #28
    677c:	04000000 	streq	r0, [r0], #-0
    6780:	01000000 	mrseq	r0, (UNDEF: 0)
    6784:	00186e9c 	mulseq	r8, ip, lr
    6788:	236f1400 	cmncs	pc, #0, 8
    678c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6790:	0004ac0a 	andeq	sl, r4, sl, lsl #24
    6794:	14500100 	ldrbne	r0, [r0], #-256	; 0x100
    6798:	000021a1 	andeq	r2, r0, r1, lsr #3
    679c:	4c0a2e01 	stcmi	14, cr2, [sl], {1}
    67a0:	01000000 	mrseq	r0, (UNDEF: 0)
    67a4:	bd200051 	stclt	0, cr0, [r0, #-324]!	; 0xfffffebc
    67a8:	01000026 	tsteq	r0, r6, lsr #32
    67ac:	00000a40 	andeq	r0, r0, r0, asr #20
    67b0:	00040000 	andeq	r0, r4, r0
    67b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    67b8:	000018a1 	andeq	r1, r0, r1, lsr #17
    67bc:	00236f14 	eoreq	r6, r3, r4, lsl pc
    67c0:	0a400100 	beq	1006bc8 <__Stack_Size+0x10067c8>
    67c4:	000004ac 	andeq	r0, r0, ip, lsr #9
    67c8:	c4145001 	ldrgt	r5, [r4], #-1
    67cc:	01000026 	tsteq	r0, r6, lsr #32
    67d0:	004c0a40 	subeq	r0, ip, r0, asr #20
    67d4:	51010000 	mrspl	r0, (UNDEF: 1)
    67d8:	21aa2000 			; <UNDEFINED> instruction: 0x21aa2000
    67dc:	52010000 	andpl	r0, r1, #0
    67e0:	0000000a 	andeq	r0, r0, sl
    67e4:	00000600 	andeq	r0, r0, r0, lsl #12
    67e8:	d49c0100 	ldrle	r0, [ip], #256	; 0x100
    67ec:	14000018 	strne	r0, [r0], #-24
    67f0:	0000236f 	andeq	r2, r0, pc, ror #6
    67f4:	ac0a5201 	sfmge	f5, 4, [sl], {1}
    67f8:	01000004 	tsteq	r0, r4
    67fc:	21b11450 			; <UNDEFINED> instruction: 0x21b11450
    6800:	52010000 	andpl	r0, r1, #0
    6804:	00004c0a 	andeq	r4, r0, sl, lsl #24
    6808:	00510100 	subseq	r0, r1, r0, lsl #2
    680c:	00282520 	eoreq	r2, r8, r0, lsr #10
    6810:	0a6a0100 	beq	1a86c18 <__Stack_Size+0x1a86818>
    6814:	00000000 	andeq	r0, r0, r0
    6818:	00000016 	andeq	r0, r0, r6, lsl r0
    681c:	19099c01 	stmdbne	r9, {r0, sl, fp, ip, pc}
    6820:	6f140000 	svcvs	0x00140000
    6824:	01000023 	tsteq	r0, r3, lsr #32
    6828:	04ac0a6a 	strteq	r0, [ip], #2666	; 0xa6a
    682c:	50010000 	andpl	r0, r1, r0
    6830:	00279e15 	eoreq	r9, r7, r5, lsl lr
    6834:	0a6a0100 	beq	1a86c3c <__Stack_Size+0x1a8683c>
    6838:	0000004c 	andeq	r0, r0, ip, asr #32
    683c:	00002e22 	andeq	r2, r0, r2, lsr #28
    6840:	25f72000 	ldrbcs	r2, [r7, #0]!
    6844:	86010000 	strhi	r0, [r1], -r0
    6848:	0000000a 	andeq	r0, r0, sl
    684c:	00001a00 	andeq	r1, r0, r0, lsl #20
    6850:	3e9c0100 	fmlcce	f0, f4, f0
    6854:	14000019 	strne	r0, [r0], #-25
    6858:	0000236f 	andeq	r2, r0, pc, ror #6
    685c:	ac0a8601 	stcge	6, cr8, [sl], {1}
    6860:	01000004 	tsteq	r0, r4
    6864:	279e1550 			; <UNDEFINED> instruction: 0x279e1550
    6868:	86010000 	strhi	r0, [r1], -r0
    686c:	00004c0a 	andeq	r4, r0, sl, lsl #24
    6870:	002e4300 	eoreq	r4, lr, r0, lsl #6
    6874:	66200000 	strtvs	r0, [r0], -r0
    6878:	0100002a 	tsteq	r0, sl, lsr #32
    687c:	0000028a 	andeq	r0, r0, sl, lsl #5
    6880:	006e0000 	rsbeq	r0, lr, r0
    6884:	9c010000 	stcls	0, cr0, [r1], {-0}
    6888:	00001a40 	andeq	r1, r0, r0, asr #20
    688c:	00236f15 	eoreq	r6, r3, r5, lsl pc
    6890:	028a0100 	addeq	r0, sl, #0, 2
    6894:	000004ac 	andeq	r0, r0, ip, lsr #9
    6898:	00002e64 	andeq	r2, r0, r4, ror #28
    689c:	00268b15 	eoreq	r8, r6, r5, lsl fp
    68a0:	028a0100 	addeq	r0, sl, #0, 2
    68a4:	00000926 	andeq	r0, r0, r6, lsr #18
    68a8:	00002eca 	andeq	r2, r0, sl, asr #29
    68ac:	0028e716 	eoreq	lr, r8, r6, lsl r7
    68b0:	028c0100 	addeq	r0, ip, #0, 2
    68b4:	0000004c 	andeq	r0, r0, ip, asr #32
    68b8:	00002f0f 	andeq	r2, r0, pc, lsl #30
    68bc:	0027f916 	eoreq	pc, r7, r6, lsl r9	; <UNPREDICTABLE>
    68c0:	028d0100 	addeq	r0, sp, #0, 2
    68c4:	0000004c 	andeq	r0, r0, ip, asr #32
    68c8:	00002f39 	andeq	r2, r0, r9, lsr pc
    68cc:	0000001a 	andeq	r0, r0, sl, lsl r0
    68d0:	0004b200 	andeq	fp, r4, r0, lsl #4
    68d4:	0019a800 	andseq	sl, r9, r0, lsl #16
    68d8:	50011b00 	andpl	r1, r1, r0, lsl #22
    68dc:	00007502 	andeq	r7, r0, r2, lsl #10
    68e0:	0000001a 	andeq	r0, r0, sl, lsl r0
    68e4:	0018d400 	andseq	sp, r8, r0, lsl #8
    68e8:	0019bc00 	andseq	fp, r9, r0, lsl #24
    68ec:	50011b00 	andpl	r1, r1, r0, lsl #22
    68f0:	00007502 	andeq	r7, r0, r2, lsl #10
    68f4:	0000001a 	andeq	r0, r0, sl, lsl r0
    68f8:	00052700 	andeq	r2, r5, r0, lsl #14
    68fc:	0019dc00 	andseq	sp, r9, r0, lsl #24
    6900:	52011b00 	andpl	r1, r1, #0, 22
    6904:	1b007602 	blne	24114 <__Stack_Size+0x23d14>
    6908:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    690c:	50011b00 	andpl	r1, r1, r0, lsl #22
    6910:	00007502 	andeq	r7, r0, r2, lsl #10
    6914:	0000001c 	andeq	r0, r0, ip, lsl r0
    6918:	00190900 	andseq	r0, r9, r0, lsl #18
    691c:	0019f100 	andseq	pc, r9, r0, lsl #2
    6920:	50011b00 	andpl	r1, r1, r0, lsl #22
    6924:	5001f303 	andpl	pc, r1, r3, lsl #6
    6928:	00002700 	andeq	r2, r0, r0, lsl #14
    692c:	05270000 	streq	r0, [r7, #-0]!
    6930:	001a0000 	andseq	r0, sl, r0
    6934:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6938:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
    693c:	1b00001a 	blne	69ac <__Stack_Size+0x65ac>
    6940:	75025001 	strvc	r5, [r2, #-1]
    6944:	001a0000 	andseq	r0, sl, r0
    6948:	b2000000 	andlt	r0, r0, #0
    694c:	2e000004 	cdpcs	0, 0, cr0, cr0, cr4, {0}
    6950:	1b00001a 	blne	69c0 <__Stack_Size+0x65c0>
    6954:	76025201 	strvc	r5, [r2], -r1, lsl #4
    6958:	51011b00 	tstpl	r1, r0, lsl #22
    695c:	1b007702 	blne	2456c <__Stack_Size+0x2416c>
    6960:	75025001 	strvc	r5, [r2, #-1]
    6964:	001d0000 	andseq	r0, sp, r0
    6968:	d4000000 	strle	r0, [r0], #-0
    696c:	1b000018 	blne	69d4 <__Stack_Size+0x65d4>
    6970:	f3035001 	vhadd.u8	d5, d3, d1
    6974:	00005001 	andeq	r5, r0, r1
    6978:	00284120 	eoreq	r4, r8, r0, lsr #2
    697c:	0aa20100 	beq	fe886d84 <SCS_BASE+0x1e878d84>
    6980:	00000000 	andeq	r0, r0, r0
    6984:	00000016 	andeq	r0, r0, r6, lsl r0
    6988:	1a759c01 	bne	1d6d994 <__Stack_Size+0x1d6d594>
    698c:	6f140000 	svcvs	0x00140000
    6990:	01000023 	tsteq	r0, r3, lsr #32
    6994:	04ac0aa2 	strteq	r0, [ip], #2722	; 0xaa2
    6998:	50010000 	andpl	r0, r1, r0
    699c:	00279e15 	eoreq	r9, r7, r5, lsl lr
    69a0:	0aa20100 	beq	fe886da8 <SCS_BASE+0x1e878da8>
    69a4:	0000004c 	andeq	r0, r0, ip, asr #32
    69a8:	00002f63 	andeq	r2, r0, r3, ror #30
    69ac:	23952000 	orrscs	r2, r5, #0
    69b0:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    69b4:	0000000a 	andeq	r0, r0, sl
    69b8:	00001a00 	andeq	r1, r0, r0, lsl #20
    69bc:	aa9c0100 	bge	fe706dc4 <SCS_BASE+0x1e6f8dc4>
    69c0:	1400001a 	strne	r0, [r0], #-26
    69c4:	0000236f 	andeq	r2, r0, pc, ror #6
    69c8:	ac0abe01 	stcge	14, cr11, [sl], {1}
    69cc:	01000004 	tsteq	r0, r4
    69d0:	279e1550 			; <UNDEFINED> instruction: 0x279e1550
    69d4:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    69d8:	00004c0a 	andeq	r4, r0, sl, lsl #24
    69dc:	002f8400 	eoreq	r8, pc, r0, lsl #8
    69e0:	9c2a0000 	stcls	0, cr0, [sl], #-0
    69e4:	01000026 	tsteq	r0, r6, lsr #32
    69e8:	0c010c4b 	stceq	12, cr0, [r1], {75}	; 0x4b
    69ec:	1000001b 	andne	r0, r0, fp, lsl r0
    69f0:	0000236f 	andeq	r2, r0, pc, ror #6
    69f4:	ac0c4b01 	stcge	11, cr4, [ip], {1}
    69f8:	10000004 	andne	r0, r0, r4
    69fc:	000028c5 	andeq	r2, r0, r5, asr #17
    6a00:	4c0c4b01 	stcmi	11, cr4, [ip], {1}
    6a04:	10000000 	andne	r0, r0, r0
    6a08:	00002855 	andeq	r2, r0, r5, asr r8
    6a0c:	4c0c4b01 	stcmi	11, cr4, [ip], {1}
    6a10:	10000000 	andne	r0, r0, r0
    6a14:	00002ab2 			; <UNDEFINED> instruction: 0x00002ab2
    6a18:	4c0c4c01 	stcmi	12, cr4, [ip], {1}
    6a1c:	11000000 	mrsne	r0, (UNDEF: 0)
    6a20:	000027c1 	andeq	r2, r0, r1, asr #15
    6a24:	4c0c4e01 	stcmi	14, cr4, [ip], {1}
    6a28:	11000000 	mrsne	r0, (UNDEF: 0)
    6a2c:	000024b1 			; <UNDEFINED> instruction: 0x000024b1
    6a30:	4c0c4e01 	stcmi	14, cr4, [ip], {1}
    6a34:	2b000000 	blcs	6a3c <__Stack_Size+0x663c>
    6a38:	00706d74 	rsbseq	r6, r0, r4, ror sp
    6a3c:	4c0c4e01 	stcmi	14, cr4, [ip], {1}
    6a40:	00000000 	andeq	r0, r0, r0
    6a44:	0029ca2a 	eoreq	ip, r9, sl, lsr #20
    6a48:	0c7a0100 	ldfeqe	f0, [sl], #-0
    6a4c:	001b6e01 	andseq	r6, fp, r1, lsl #28
    6a50:	236f1000 	cmncs	pc, #0
    6a54:	7a010000 	bvc	46a5c <__Stack_Size+0x4665c>
    6a58:	0004ac0c 	andeq	sl, r4, ip, lsl #24
    6a5c:	28c51000 	stmiacs	r5, {ip}^
    6a60:	7a010000 	bvc	46a68 <__Stack_Size+0x46668>
    6a64:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6a68:	28551000 	ldmdacs	r5, {ip}^
    6a6c:	7a010000 	bvc	46a74 <__Stack_Size+0x46674>
    6a70:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6a74:	2ab21000 	bcs	fec8aa7c <SCS_BASE+0x1ec7ca7c>
    6a78:	7b010000 	blvc	46a80 <__Stack_Size+0x46680>
    6a7c:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6a80:	27c11100 	strbcs	r1, [r1, r0, lsl #2]
    6a84:	7d010000 	stcvc	0, cr0, [r1, #-0]
    6a88:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6a8c:	24b11100 	ldrtcs	r1, [r1], #256	; 0x100
    6a90:	7d010000 	stcvc	0, cr0, [r1, #-0]
    6a94:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6a98:	6d742b00 	vldmdbvs	r4!, {d18-d17}
    6a9c:	7d010070 	stcvc	0, cr0, [r1, #-448]	; 0xfffffe40
    6aa0:	00004c0c 	andeq	r4, r0, ip, lsl #24
    6aa4:	a7200000 	strge	r0, [r0, -r0]!
    6aa8:	0100002a 	tsteq	r0, sl, lsr #32
    6aac:	00000249 	andeq	r0, r0, r9, asr #4
    6ab0:	00b40000 	adcseq	r0, r4, r0
    6ab4:	9c010000 	stcls	0, cr0, [r1], {-0}
    6ab8:	00001cca 	andeq	r1, r0, sl, asr #25
    6abc:	00236f15 	eoreq	r6, r3, r5, lsl pc
    6ac0:	02490100 	subeq	r0, r9, #0, 2
    6ac4:	000004ac 	andeq	r0, r0, ip, lsr #9
    6ac8:	00002fa5 	andeq	r2, r0, r5, lsr #31
    6acc:	00268b15 	eoreq	r8, r6, r5, lsl fp
    6ad0:	02490100 	subeq	r0, r9, #0, 2
    6ad4:	00000926 	andeq	r0, r0, r6, lsr #18
    6ad8:	0000303d 	andeq	r3, r0, sp, lsr r0
    6adc:	001aaa2c 	andseq	sl, sl, ip, lsr #20
    6ae0:	00000000 	andeq	r0, r0, r0
    6ae4:	00067800 	andeq	r7, r6, r0, lsl #16
    6ae8:	026a0100 	rsbeq	r0, sl, #0, 2
    6aec:	00001bfe 	strdeq	r1, [r0], -lr
    6af0:	001adb22 	andseq	sp, sl, r2, lsr #22
    6af4:	0030b400 	eorseq	fp, r0, r0, lsl #8
    6af8:	1acf2200 	bne	ff3cf300 <SCS_BASE+0x1f3c1300>
    6afc:	30d60000 	sbcscc	r0, r6, r0
    6b00:	c3220000 	teqgt	r2, #0
    6b04:	f800001a 			; <UNDEFINED> instruction: 0xf800001a
    6b08:	22000030 	andcs	r0, r0, #48	; 0x30
    6b0c:	00001ab7 			; <UNDEFINED> instruction: 0x00001ab7
    6b10:	0000311a 	andeq	r3, r0, sl, lsl r1
    6b14:	0006782d 	andeq	r7, r6, sp, lsr #16
    6b18:	1ae72500 	bne	ff9cff20 <SCS_BASE+0x1f9c1f20>
    6b1c:	313b0000 	teqcc	fp, r0
    6b20:	f3250000 	vhadd.u32	d0, d5, d0
    6b24:	6500001a 	strvs	r0, [r0, #-26]
    6b28:	25000031 	strcs	r0, [r0, #-49]	; 0x31
    6b2c:	00001aff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    6b30:	000031c3 	andeq	r3, r0, r3, asr #3
    6b34:	0c260000 	stceq	0, cr0, [r6], #-0
    6b38:	0000001b 	andeq	r0, r0, fp, lsl r0
    6b3c:	34000000 	strcc	r0, [r0], #-0
    6b40:	01000000 	mrseq	r0, (UNDEF: 0)
    6b44:	1c5c0274 	lfmne	f0, 2, [ip], {116}	; 0x74
    6b48:	3d220000 	stccc	0, cr0, [r2, #-0]
    6b4c:	fa00001b 	blx	6bc0 <__Stack_Size+0x67c0>
    6b50:	22000031 	andcs	r0, r0, #49	; 0x31
    6b54:	00001b31 	andeq	r1, r0, r1, lsr fp
    6b58:	0000321c 	andeq	r3, r0, ip, lsl r2
    6b5c:	001b2522 	andseq	r2, fp, r2, lsr #10
    6b60:	00323e00 	eorseq	r3, r2, r0, lsl #28
    6b64:	1b192200 	blne	64f36c <__Stack_Size+0x64ef6c>
    6b68:	32600000 	rsbcc	r0, r0, #0
    6b6c:	00240000 	eoreq	r0, r4, r0
    6b70:	34000000 	strcc	r0, [r0], #-0
    6b74:	25000000 	strcs	r0, [r0, #-0]
    6b78:	00001b49 	andeq	r1, r0, r9, asr #22
    6b7c:	00003281 	andeq	r3, r0, r1, lsl #5
    6b80:	001b5525 	andseq	r5, fp, r5, lsr #10
    6b84:	0032ab00 	eorseq	sl, r2, r0, lsl #22
    6b88:	1b612500 	blne	184ff90 <__Stack_Size+0x184fb90>
    6b8c:	33090000 	movwcc	r0, #36864	; 0x9000
    6b90:	00000000 	andeq	r0, r0, r0
    6b94:	0000001a 	andeq	r0, r0, sl, lsl r0
    6b98:	0004b200 	andeq	fp, r4, r0, lsl #4
    6b9c:	001c7000 	andseq	r7, ip, r0
    6ba0:	50011b00 	andpl	r1, r1, r0, lsl #22
    6ba4:	00007402 	andeq	r7, r0, r2, lsl #8
    6ba8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6bac:	0018d400 	andseq	sp, r8, r0, lsl #8
    6bb0:	001c8500 	andseq	r8, ip, r0, lsl #10
    6bb4:	50011b00 	andpl	r1, r1, r0, lsl #22
    6bb8:	5001f303 	andpl	pc, r1, r3, lsl #6
    6bbc:	00002700 	andeq	r2, r0, r0, lsl #14
    6bc0:	05270000 	streq	r0, [r7, #-0]!
    6bc4:	001c0000 	andseq	r0, ip, r0
    6bc8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    6bcc:	a3000019 	movwge	r0, #25
    6bd0:	1b00001c 	blne	6c48 <__Stack_Size+0x6848>
    6bd4:	f3035001 	vhadd.u8	d5, d3, d1
    6bd8:	1c005001 	stcne	0, cr5, [r0], {1}
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	00001a40 	andeq	r1, r0, r0, asr #20
    6be4:	00001cb8 			; <UNDEFINED> instruction: 0x00001cb8
    6be8:	0350011b 	cmpeq	r0, #-1073741818	; 0xc0000006
    6bec:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    6bf0:	0000001d 	andeq	r0, r0, sp, lsl r0
    6bf4:	001a7500 	andseq	r7, sl, r0, lsl #10
    6bf8:	50011b00 	andpl	r1, r1, r0, lsl #22
    6bfc:	5001f303 	andpl	pc, r1, r3, lsl #6
    6c00:	b9200000 	stmdblt	r0!, {}	; <UNPREDICTABLE>
    6c04:	01000024 	tsteq	r0, r4, lsr #32
    6c08:	00000ad8 	ldrdeq	r0, [r0], -r8
    6c0c:	00100000 	andseq	r0, r0, r0
    6c10:	9c010000 	stcls	0, cr0, [r1], {-0}
    6c14:	00001cff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    6c18:	00236f14 	eoreq	r6, r3, r4, lsl pc
    6c1c:	0ad80100 	beq	ff607024 <SCS_BASE+0x1f5f9024>
    6c20:	000004ac 	andeq	r0, r0, ip, lsr #9
    6c24:	3d155001 	ldccc	0, cr5, [r5, #-4]
    6c28:	01000022 	tsteq	r0, r2, lsr #32
    6c2c:	004c0ad8 	ldrdeq	r0, [ip], #-168	; 0xffffff58
    6c30:	33400000 	movtcc	r0, #0
    6c34:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    6c38:	00002335 	andeq	r2, r0, r5, lsr r3
    6c3c:	4c0aec01 	stcmi	12, cr14, [sl], {1}
    6c40:	00000000 	andeq	r0, r0, r0
    6c44:	06000000 	streq	r0, [r0], -r0
    6c48:	01000000 	mrseq	r0, (UNDEF: 0)
    6c4c:	001d2a9c 	mulseq	sp, ip, sl
    6c50:	236f1500 	cmncs	pc, #0, 10
    6c54:	ec010000 	stc	0, cr0, [r1], {-0}
    6c58:	0004ac0a 	andeq	sl, r4, sl, lsl #24
    6c5c:	00336100 	eorseq	r6, r3, r0, lsl #2
    6c60:	fb2e0000 	blx	b86c6a <__Stack_Size+0xb8686a>
    6c64:	01000023 	tsteq	r0, r3, lsr #32
    6c68:	004c0afd 	strdeq	r0, [ip], #-173	; 0xffffff53
    6c6c:	00000000 	andeq	r0, r0, r0
    6c70:	00060000 	andeq	r0, r6, r0
    6c74:	9c010000 	stcls	0, cr0, [r1], {-0}
    6c78:	00001d55 	andeq	r1, r0, r5, asr sp
    6c7c:	00236f15 	eoreq	r6, r3, r5, lsl pc
    6c80:	0afd0100 	beq	fff47088 <SCS_BASE+0x1ff39088>
    6c84:	000004ac 	andeq	r0, r0, ip, lsr #9
    6c88:	00003382 	andeq	r3, r0, r2, lsl #7
    6c8c:	240b2e00 	strcs	r2, [fp], #-3584	; 0xe00
    6c90:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    6c94:	00004c0b 	andeq	r4, r0, fp, lsl #24
    6c98:	00000000 	andeq	r0, r0, r0
    6c9c:	00000600 	andeq	r0, r0, r0, lsl #12
    6ca0:	809c0100 	addshi	r0, ip, r0, lsl #2
    6ca4:	1500001d 	strne	r0, [r0, #-29]
    6ca8:	0000236f 	andeq	r2, r0, pc, ror #6
    6cac:	ac0b0e01 	stcge	14, cr0, [fp], {1}
    6cb0:	a3000004 	movwge	r0, #4
    6cb4:	00000033 	andeq	r0, r0, r3, lsr r0
    6cb8:	00241b2e 	eoreq	r1, r4, lr, lsr #22
    6cbc:	0b1f0100 	bleq	7c70c4 <__Stack_Size+0x7c6cc4>
    6cc0:	0000004c 	andeq	r0, r0, ip, asr #32
    6cc4:	00000000 	andeq	r0, r0, r0
    6cc8:	00000008 	andeq	r0, r0, r8
    6ccc:	1dab9c01 	stcne	12, cr9, [fp, #4]!
    6cd0:	6f150000 	svcvs	0x00150000
    6cd4:	01000023 	tsteq	r0, r3, lsr #32
    6cd8:	04ac0b1f 	strteq	r0, [ip], #2847	; 0xb1f
    6cdc:	33c40000 	biccc	r0, r4, #0
    6ce0:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    6ce4:	00002715 	andeq	r2, r0, r5, lsl r7
    6ce8:	4c0b2f01 	stcmi	15, cr2, [fp], {1}
    6cec:	00000000 	andeq	r0, r0, r0
    6cf0:	06000000 	streq	r0, [r0], -r0
    6cf4:	01000000 	mrseq	r0, (UNDEF: 0)
    6cf8:	001dd69c 	mulseq	sp, ip, r6
    6cfc:	236f1500 	cmncs	pc, #0, 10
    6d00:	2f010000 	svccs	0x00010000
    6d04:	0004ac0b 	andeq	sl, r4, fp, lsl #24
    6d08:	0033e500 	eorseq	lr, r3, r0, lsl #10
    6d0c:	9f2e0000 	svcls	0x002e0000
    6d10:	01000025 	tsteq	r0, r5, lsr #32
    6d14:	004c0b3f 	subeq	r0, ip, pc, lsr fp
    6d18:	00000000 	andeq	r0, r0, r0
    6d1c:	00060000 	andeq	r0, r6, r0
    6d20:	9c010000 	stcls	0, cr0, [r1], {-0}
    6d24:	00001e01 	andeq	r1, r0, r1, lsl #28
    6d28:	00236f15 	eoreq	r6, r3, r5, lsl pc
    6d2c:	0b3f0100 	bleq	fc7134 <__Stack_Size+0xfc6d34>
    6d30:	000004ac 	andeq	r0, r0, ip, lsr #9
    6d34:	00003406 	andeq	r3, r0, r6, lsl #8
    6d38:	22152e00 	andscs	r2, r5, #0, 28
    6d3c:	5d010000 	stcpl	0, cr0, [r1, #-0]
    6d40:	0000a40b 	andeq	sl, r0, fp, lsl #8
    6d44:	00000000 	andeq	r0, r0, r0
    6d48:	00000c00 	andeq	r0, r0, r0, lsl #24
    6d4c:	4a9c0100 	bmi	fe707154 <SCS_BASE+0x1e6f9154>
    6d50:	1500001e 	strne	r0, [r0, #-30]
    6d54:	0000236f 	andeq	r2, r0, pc, ror #6
    6d58:	ac0b5d01 	stcge	13, cr5, [fp], {1}
    6d5c:	27000004 	strcs	r0, [r0, -r4]
    6d60:	14000034 	strne	r0, [r0], #-52	; 0x34
    6d64:	00002530 	andeq	r2, r0, r0, lsr r5
    6d68:	4c0b5d01 	stcmi	13, cr5, [fp], {1}
    6d6c:	01000000 	mrseq	r0, (UNDEF: 0)
    6d70:	1a971651 	bne	fe5cc6bc <SCS_BASE+0x1e5be6bc>
    6d74:	5f010000 	svcpl	0x00010000
    6d78:	0000af0b 	andeq	sl, r0, fp, lsl #30
    6d7c:	00344800 	eorseq	r4, r4, r0, lsl #16
    6d80:	1d200000 	stcne	0, cr0, [r0, #-0]
    6d84:	01000002 	tsteq	r0, r2
    6d88:	00000b86 	andeq	r0, r0, r6, lsl #23
    6d8c:	00080000 	andeq	r0, r8, r0
    6d90:	9c010000 	stcls	0, cr0, [r1], {-0}
    6d94:	00001e7f 	andeq	r1, r0, pc, ror lr
    6d98:	00236f14 	eoreq	r6, r3, r4, lsl pc
    6d9c:	0b860100 	bleq	fe1871a4 <SCS_BASE+0x1e1791a4>
    6da0:	000004ac 	andeq	r0, r0, ip, lsr #9
    6da4:	30155001 	andscc	r5, r5, r1
    6da8:	01000025 	tsteq	r0, r5, lsr #32
    6dac:	004c0b86 	subeq	r0, ip, r6, lsl #23
    6db0:	34700000 	ldrbtcc	r0, [r0], #-0
    6db4:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    6db8:	00002a75 	andeq	r2, r0, r5, ror sl
    6dbc:	af0ba201 	svcge	0x000ba201
    6dc0:	00000000 	andeq	r0, r0, r0
    6dc4:	16000000 	strne	r0, [r0], -r0
    6dc8:	01000000 	mrseq	r0, (UNDEF: 0)
    6dcc:	001ee89c 	mulseq	lr, ip, r8
    6dd0:	236f1500 	cmncs	pc, #0, 10
    6dd4:	a2010000 	andge	r0, r1, #0
    6dd8:	0004ac0b 	andeq	sl, r4, fp, lsl #24
    6ddc:	00349100 	eorseq	r9, r4, r0, lsl #2
    6de0:	2a8c1400 	bcs	fe30bde8 <SCS_BASE+0x1e2fdde8>
    6de4:	a2010000 	andge	r0, r1, #0
    6de8:	00004c0b 	andeq	r4, r0, fp, lsl #24
    6dec:	16510100 	ldrbne	r0, [r1], -r0, lsl #2
    6df0:	00001a97 	muleq	r0, r7, sl
    6df4:	af0ba401 	svcge	0x000ba401
    6df8:	b2000000 	andlt	r0, r0, #0
    6dfc:	16000034 			; <UNDEFINED> instruction: 0x16000034
    6e00:	00001a98 	muleq	r0, r8, sl
    6e04:	4c0ba501 	cfstr32mi	mvfx10, [fp], {1}
    6e08:	d1000000 	mrsle	r0, (UNDEF: 0)
    6e0c:	16000034 			; <UNDEFINED> instruction: 0x16000034
    6e10:	0000228e 	andeq	r2, r0, lr, lsl #5
    6e14:	4c0ba501 	cfstr32mi	mvfx10, [fp], {1}
    6e18:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    6e1c:	00000034 	andeq	r0, r0, r4, lsr r0
    6e20:	000cce20 	andeq	ip, ip, r0, lsr #28
    6e24:	0bcd0100 	bleq	ff34722c <SCS_BASE+0x1f33922c>
    6e28:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
    6e2c:	00000008 	andeq	r0, r0, r8
    6e30:	1f1d9c01 	svcne	0x001d9c01
    6e34:	6f140000 	svcvs	0x00140000
    6e38:	01000023 	tsteq	r0, r3, lsr #32
    6e3c:	04ac0bcd 	strteq	r0, [ip], #3021	; 0xbcd
    6e40:	50010000 	andpl	r0, r1, r0
    6e44:	002a8c15 	eoreq	r8, sl, r5, lsl ip
    6e48:	0bcd0100 	bleq	ff347250 <SCS_BASE+0x1f339250>
    6e4c:	0000004c 	andeq	r0, r0, ip, asr #32
    6e50:	00003519 	andeq	r3, r0, r9, lsl r5
    6e54:	1f1b2f00 	svcne	0x001b2f00
    6e58:	15050000 	strne	r0, [r5, #-0]
    6e5c:	001f3401 	andseq	r3, pc, r1, lsl #8
    6e60:	003a3000 	eorseq	r3, sl, r0
    6e64:	cf300000 	svcgt	0x00300000
    6e68:	00000000 	andeq	r0, r0, r0
    6e6c:	001d4831 	andseq	r4, sp, r1, lsr r8
    6e70:	01140500 	tsteq	r4, r0, lsl #10
    6e74:	00003a30 	andeq	r3, r0, r0, lsr sl
    6e78:	00cf3000 	sbceq	r3, pc, r0
    6e7c:	00000000 	andeq	r0, r0, r0
    6e80:	00000207 	andeq	r0, r0, r7, lsl #4
    6e84:	16d00004 	ldrbne	r0, [r0], r4
    6e88:	01040000 	mrseq	r0, (UNDEF: 4)
    6e8c:	000002c1 	andeq	r0, r0, r1, asr #5
    6e90:	002b2701 	eoreq	r2, fp, r1, lsl #14
    6e94:	00009a00 	andeq	r9, r0, r0, lsl #20
    6e98:	00096000 	andeq	r6, r9, r0
    6e9c:	00000000 	andeq	r0, r0, r0
    6ea0:	00205500 	eoreq	r5, r0, r0, lsl #10
    6ea4:	05040200 	streq	r0, [r4, #-512]	; 0x200
    6ea8:	0000071d 	andeq	r0, r0, sp, lsl r7
    6eac:	ef050202 	svc	0x00050202
    6eb0:	02000006 	andeq	r0, r0, #6
    6eb4:	088c0601 	stmeq	ip, {r0, r9, sl}
    6eb8:	75030000 	strvc	r0, [r3, #-0]
    6ebc:	02003233 	andeq	r3, r0, #805306371	; 0x30000003
    6ec0:	00004527 	andeq	r4, r0, r7, lsr #10
    6ec4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6ec8:	00000819 	andeq	r0, r0, r9, lsl r8
    6ecc:	73070202 	movwvc	r0, #29186	; 0x7202
    6ed0:	0300000a 	movweq	r0, #10
    6ed4:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    6ed8:	00005d29 	andeq	r5, r0, r9, lsr #26
    6edc:	08010200 	stmdaeq	r1, {r9}
    6ee0:	0000088a 	andeq	r0, r0, sl, lsl #17
    6ee4:	0003a704 	andeq	sl, r3, r4, lsl #14
    6ee8:	6f2f0200 	svcvs	0x002f0200
    6eec:	05000000 	streq	r0, [r0, #-0]
    6ef0:	00000045 	andeq	r0, r0, r5, asr #32
    6ef4:	002bbb04 	eoreq	fp, fp, r4, lsl #22
    6ef8:	7f330200 	svcvc	0x00330200
    6efc:	06000000 	streq	r0, [r0], -r0
    6f00:	0000006f 	andeq	r0, r0, pc, rrx
    6f04:	3c020107 	stfccs	f0, [r2], {7}
    6f08:	00000099 	muleq	r0, r9, r0
    6f0c:	00009408 	andeq	r9, r0, r8, lsl #8
    6f10:	53090000 	movwpl	r0, #36864	; 0x9000
    6f14:	01005445 	tsteq	r0, r5, asr #8
    6f18:	067e0400 	ldrbteq	r0, [lr], -r0, lsl #8
    6f1c:	3c020000 	stccc	0, cr0, [r2], {-0}
    6f20:	00000084 	andeq	r0, r0, r4, lsl #1
    6f24:	3e020107 	adfccs	f0, f2, f7
    6f28:	000000b9 	strheq	r0, [r0], -r9
    6f2c:	00047708 	andeq	r7, r4, r8, lsl #14
    6f30:	f6080000 			; <UNDEFINED> instruction: 0xf6080000
    6f34:	01000007 	tsteq	r0, r7
    6f38:	00c60400 	sbceq	r0, r6, r0, lsl #8
    6f3c:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    6f40:	000000a4 	andeq	r0, r0, r4, lsr #1
    6f44:	10070402 	andne	r0, r7, r2, lsl #8
    6f48:	0a000008 	beq	6f70 <__Stack_Size+0x6b70>
    6f4c:	02020310 	andeq	r0, r2, #16, 6	; 0x40000000
    6f50:	00000109 	andeq	r0, r0, r9, lsl #2
    6f54:	002b8e0b 	eoreq	r8, fp, fp, lsl #28
    6f58:	02040300 	andeq	r0, r4, #0, 6
    6f5c:	00000064 	andeq	r0, r0, r4, rrx
    6f60:	2bc10b00 	blcs	ff049b68 <SCS_BASE+0x1f03bb68>
    6f64:	05030000 	streq	r0, [r3, #-0]
    6f68:	00006402 	andeq	r6, r0, r2, lsl #8
    6f6c:	560c0400 	strpl	r0, [ip], -r0, lsl #8
    6f70:	03004c41 	movweq	r4, #3137	; 0xc41
    6f74:	00640206 	rsbeq	r0, r4, r6, lsl #4
    6f78:	0b080000 	bleq	206f80 <__Stack_Size+0x206b80>
    6f7c:	00002b78 	andeq	r2, r0, r8, ror fp
    6f80:	74020703 	strvc	r0, [r2], #-1795	; 0x703
    6f84:	0c000000 	stceq	0, cr0, [r0], {-0}
    6f88:	2b7e0d00 	blcs	1f8a390 <__Stack_Size+0x1f89f90>
    6f8c:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    6f90:	0000cb02 	andeq	ip, r0, r2, lsl #22
    6f94:	2ba30e00 	blcs	fe8ca79c <SCS_BASE+0x1e8bc79c>
    6f98:	2b010000 	blcs	46fa0 <__Stack_Size+0x46ba0>
    6f9c:	00000000 	andeq	r0, r0, r0
    6fa0:	00000018 	andeq	r0, r0, r8, lsl r0
    6fa4:	01389c01 	teqeq	r8, r1, lsl #24
    6fa8:	c60f0000 	strgt	r0, [pc], -r0
    6fac:	0100002b 	tsteq	r0, fp, lsr #32
    6fb0:	00003a2b 	andeq	r3, r0, fp, lsr #20
    6fb4:	00500100 	subseq	r0, r0, r0, lsl #2
    6fb8:	002b430e 	eoreq	r4, fp, lr, lsl #6
    6fbc:	00420100 	subeq	r0, r2, r0, lsl #2
    6fc0:	0c000000 	stceq	0, cr0, [r0], {-0}
    6fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    6fc8:	00015b9c 	muleq	r1, ip, fp
    6fcc:	2b4e0f00 	blcs	138abd4 <__Stack_Size+0x138a7d4>
    6fd0:	42010000 	andmi	r0, r1, #0
    6fd4:	0000003a 	andeq	r0, r0, sl, lsr r0
    6fd8:	0e005001 	cdpeq	0, 0, cr5, cr0, cr1, {0}
    6fdc:	0000077d 	andeq	r0, r0, sp, ror r7
    6fe0:	0aec5501 	beq	ffb1c3ec <SCS_BASE+0x1fb0e3ec>
    6fe4:	00280800 	eoreq	r0, r8, r0, lsl #16
    6fe8:	9c010000 	stcls	0, cr0, [r1], {-0}
    6fec:	00000180 	andeq	r0, r0, r0, lsl #3
    6ff0:	002b9310 	eoreq	r9, fp, r0, lsl r3
    6ff4:	3a550100 	bcc	15473fc <__Stack_Size+0x1546ffc>
    6ff8:	3a000000 	bcc	7000 <__Stack_Size+0x6c00>
    6ffc:	00000035 	andeq	r0, r0, r5, lsr r0
    7000:	002bd80e 	eoreq	sp, fp, lr, lsl #16
    7004:	00700100 	rsbseq	r0, r0, r0, lsl #2
    7008:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    700c:	01000000 	mrseq	r0, (UNDEF: 0)
    7010:	0001a39c 	muleq	r1, ip, r3
    7014:	18c70f00 	stmiane	r7, {r8, r9, sl, fp}^
    7018:	70010000 	andvc	r0, r1, r0
    701c:	000000b9 	strheq	r0, [r0], -r9
    7020:	11005001 	tstne	r0, r1
    7024:	00002b14 	andeq	r2, r0, r4, lsl fp
    7028:	003a8601 	eorseq	r8, sl, r1, lsl #12
    702c:	00000000 	andeq	r0, r0, r0
    7030:	000c0000 	andeq	r0, ip, r0
    7034:	9c010000 	stcls	0, cr0, [r1], {-0}
    7038:	002b5512 	eoreq	r5, fp, r2, lsl r5
    703c:	99960100 	ldmibls	r6, {r8}
    7040:	00000000 	andeq	r0, r0, r0
    7044:	1c000000 	stcne	0, cr0, [r0], {-0}
    7048:	01000000 	mrseq	r0, (UNDEF: 0)
    704c:	2b6b109c 	blcs	1acb2c4 <__Stack_Size+0x1acaec4>
    7050:	96010000 	strls	r0, [r1], -r0
    7054:	00000053 	andeq	r0, r0, r3, asr r0
    7058:	00003575 	andeq	r3, r0, r5, ror r5
    705c:	001f6e13 	andseq	r6, pc, r3, lsl lr	; <UNPREDICTABLE>
    7060:	3a980100 	bcc	fe607468 <SCS_BASE+0x1e5f9468>
    7064:	96000000 	strls	r0, [r0], -r0
    7068:	14000035 	strne	r0, [r0], #-53	; 0x35
    706c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    7070:	003a9801 	eorseq	r9, sl, r1, lsl #16
    7074:	35b50000 	ldrcc	r0, [r5, #0]!
    7078:	97130000 	ldrls	r0, [r3, -r0]
    707c:	0100001a 	tsteq	r0, sl, lsl r0
    7080:	00009999 	muleq	r0, r9, r9
    7084:	0035cf00 	eorseq	ip, r5, r0, lsl #30
    7088:	26000000 	strcs	r0, [r0], -r0
    708c:	0400000a 	streq	r0, [r0], #-10
    7090:	0017f800 	andseq	pc, r7, r0, lsl #16
    7094:	c1010400 	tstgt	r1, r0, lsl #8
    7098:	01000002 	tsteq	r0, r2
    709c:	00002d8a 	andeq	r2, r0, sl, lsl #27
    70a0:	0000009a 	muleq	r0, sl, r0
    70a4:	00000998 	muleq	r0, r8, r9
    70a8:	00000000 	andeq	r0, r0, r0
    70ac:	00002137 	andeq	r2, r0, r7, lsr r1
    70b0:	1e070402 	cdpne	4, 0, cr0, cr7, cr2, {0}
    70b4:	02000008 	andeq	r0, r0, #8
    70b8:	071d0504 	ldreq	r0, [sp, -r4, lsl #10]
    70bc:	02020000 	andeq	r0, r2, #0
    70c0:	0006ef05 	andeq	lr, r6, r5, lsl #30
    70c4:	06010200 	streq	r0, [r1], -r0, lsl #4
    70c8:	0000088c 	andeq	r0, r0, ip, lsl #17
    70cc:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    70d0:	4c270200 	sfmmi	f0, 4, [r7], #-0
    70d4:	02000000 	andeq	r0, r0, #0
    70d8:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    70dc:	75030000 	strvc	r0, [r3, #-0]
    70e0:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    70e4:	00005e28 	andeq	r5, r0, r8, lsr #28
    70e8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    70ec:	00000a73 	andeq	r0, r0, r3, ror sl
    70f0:	00387503 	eorseq	r7, r8, r3, lsl #10
    70f4:	006f2902 	rsbeq	r2, pc, r2, lsl #18
    70f8:	01020000 	mrseq	r0, (UNDEF: 2)
    70fc:	00088a08 	andeq	r8, r8, r8, lsl #20
    7100:	03a70400 			; <UNDEFINED> instruction: 0x03a70400
    7104:	2f020000 	svccs	0x00020000
    7108:	00000081 	andeq	r0, r0, r1, lsl #1
    710c:	00004c05 	andeq	r4, r0, r5, lsl #24
    7110:	02300400 	eorseq	r0, r0, #0, 8
    7114:	30020000 	andcc	r0, r2, r0
    7118:	00000091 	muleq	r0, r1, r0
    711c:	00005e05 	andeq	r5, r0, r5, lsl #28
    7120:	02010600 	andeq	r0, r1, #0, 12
    7124:	0000ab3c 	andeq	sl, r0, ip, lsr fp
    7128:	00940700 	addseq	r0, r4, r0, lsl #14
    712c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7130:	00544553 	subseq	r4, r4, r3, asr r5
    7134:	7e040001 	cdpvc	0, 0, cr0, cr4, cr1, {0}
    7138:	02000006 	andeq	r0, r0, #6
    713c:	0000963c 	andeq	r9, r0, ip, lsr r6
    7140:	1e860400 	cdpne	4, 8, cr0, cr6, cr0, {0}
    7144:	3c020000 	stccc	0, cr0, [r2], {-0}
    7148:	00000096 	muleq	r0, r6, r0
    714c:	3e020106 	adfccs	f0, f2, f6
    7150:	000000d6 	ldrdeq	r0, [r0], -r6
    7154:	00047707 	andeq	r7, r4, r7, lsl #14
    7158:	f6070000 			; <UNDEFINED> instruction: 0xf6070000
    715c:	01000007 	tsteq	r0, r7
    7160:	00c60400 	sbceq	r0, r6, r0, lsl #8
    7164:	3e020000 	cdpcc	0, 0, cr0, cr2, cr0, {0}
    7168:	000000c1 	andeq	r0, r0, r1, asr #1
    716c:	10070402 	andne	r0, r7, r2, lsl #8
    7170:	09000008 	stmdbeq	r0, {r3}
    7174:	0238031c 	eorseq	r0, r8, #28, 6	; 0x70000000
    7178:	000001a6 	andeq	r0, r0, r6, lsr #3
    717c:	0052530a 	subseq	r5, r2, sl, lsl #6
    7180:	86023a03 	strhi	r3, [r2], -r3, lsl #20
    7184:	00000000 	andeq	r0, r0, r0
    7188:	0006a90b 	andeq	sl, r6, fp, lsl #18
    718c:	023b0300 	eorseq	r0, fp, #0, 6
    7190:	00000053 	andeq	r0, r0, r3, asr r0
    7194:	52440a02 	subpl	r0, r4, #8192	; 0x2000
    7198:	023c0300 	eorseq	r0, ip, #0, 6
    719c:	00000086 	andeq	r0, r0, r6, lsl #1
    71a0:	06b30b04 	ldrteq	r0, [r3], r4, lsl #22
    71a4:	3d030000 	stccc	0, cr0, [r3, #-0]
    71a8:	00005302 	andeq	r5, r0, r2, lsl #6
    71ac:	420a0600 	andmi	r0, sl, #0, 12
    71b0:	03005252 	movweq	r5, #594	; 0x252
    71b4:	0086023e 	addeq	r0, r6, lr, lsr r2
    71b8:	0b080000 	bleq	2071c0 <__Stack_Size+0x206dc0>
    71bc:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    71c0:	53023f03 	movwpl	r3, #12035	; 0x2f03
    71c4:	0a000000 	beq	71cc <__Stack_Size+0x6dcc>
    71c8:	3152430a 	cmpcc	r2, sl, lsl #6
    71cc:	02400300 	subeq	r0, r0, #0, 6
    71d0:	00000086 	andeq	r0, r0, r6, lsl #1
    71d4:	06c70b0c 	strbeq	r0, [r7], ip, lsl #22
    71d8:	41030000 	mrsmi	r0, (UNDEF: 3)
    71dc:	00005302 	andeq	r5, r0, r2, lsl #6
    71e0:	430a0e00 	movwmi	r0, #44544	; 0xae00
    71e4:	03003252 	movweq	r3, #594	; 0x252
    71e8:	00860242 	addeq	r0, r6, r2, asr #4
    71ec:	0b100000 	bleq	4071f4 <__Stack_Size+0x406df4>
    71f0:	000006d1 	ldrdeq	r0, [r0], -r1
    71f4:	53024303 	movwpl	r4, #8963	; 0x2303
    71f8:	12000000 	andne	r0, r0, #0
    71fc:	3352430a 	cmpcc	r2, #671088640	; 0x28000000
    7200:	02440300 	subeq	r0, r4, #0, 6
    7204:	00000086 	andeq	r0, r0, r6, lsl #1
    7208:	06db0b14 			; <UNDEFINED> instruction: 0x06db0b14
    720c:	45030000 	strmi	r0, [r3, #-0]
    7210:	00005302 	andeq	r5, r0, r2, lsl #6
    7214:	b90b1600 	stmdblt	fp, {r9, sl, ip}
    7218:	03000001 	movweq	r0, #1
    721c:	00860246 	addeq	r0, r6, r6, asr #4
    7220:	0b180000 	bleq	607228 <__Stack_Size+0x606e28>
    7224:	000006e5 	andeq	r0, r0, r5, ror #13
    7228:	53024703 	movwpl	r4, #9987	; 0x2703
    722c:	1a000000 	bne	7234 <__Stack_Size+0x6e34>
    7230:	03e30c00 	mvneq	r0, #0, 24
    7234:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    7238:	0000e802 	andeq	lr, r0, r2, lsl #16
    723c:	04100d00 	ldreq	r0, [r0], #-3328	; 0xd00
    7240:	0002031a 	andeq	r0, r2, sl, lsl r3
    7244:	01f70e00 	mvnseq	r0, r0, lsl #28
    7248:	1c040000 	stcne	0, cr0, [r4], {-0}
    724c:	00000041 	andeq	r0, r0, r1, asr #32
    7250:	01210e00 	teqeq	r1, r0, lsl #28
    7254:	1d040000 	stcne	0, cr0, [r4, #-0]
    7258:	00000053 	andeq	r0, r0, r3, asr r0
    725c:	01410e04 	cmpeq	r1, r4, lsl #28
    7260:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    7264:	00000053 	andeq	r0, r0, r3, asr r0
    7268:	09be0e06 	ldmibeq	lr!, {r1, r2, r9, sl, fp}
    726c:	1f040000 	svcne	0x00040000
    7270:	00000053 	andeq	r0, r0, r3, asr r0
    7274:	04d60e08 	ldrbeq	r0, [r6], #3592	; 0xe08
    7278:	20040000 	andcs	r0, r4, r0
    727c:	00000053 	andeq	r0, r0, r3, asr r0
    7280:	04f40e0a 	ldrbteq	r0, [r4], #3594	; 0xe0a
    7284:	21040000 	mrscs	r0, (UNDEF: 4)
    7288:	00000053 	andeq	r0, r0, r3, asr r0
    728c:	9104000c 	tstls	r4, ip
    7290:	04000009 	streq	r0, [r0], #-9
    7294:	0001b222 	andeq	fp, r1, r2, lsr #4
    7298:	04080d00 	streq	r0, [r8], #-3328	; 0xd00
    729c:	00024725 	andeq	r4, r2, r5, lsr #14
    72a0:	2dfd0e00 	ldclcs	14, cr0, [sp]
    72a4:	27040000 	strcs	r0, [r4, -r0]
    72a8:	00000053 	andeq	r0, r0, r3, asr r0
    72ac:	2ebf0e00 	cdpcs	14, 11, cr0, cr15, cr0, {0}
    72b0:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    72b4:	00000053 	andeq	r0, r0, r3, asr r0
    72b8:	2bf80e02 	blcs	ffe0aac8 <SCS_BASE+0x1fdfcac8>
    72bc:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    72c0:	00000053 	andeq	r0, r0, r3, asr r0
    72c4:	2ed10e04 	cdpcs	14, 13, cr0, cr1, cr4, {0}
    72c8:	2a040000 	bcs	1072d0 <__Stack_Size+0x106ed0>
    72cc:	00000053 	andeq	r0, r0, r3, asr r0
    72d0:	31040006 	tstcc	r4, r6
    72d4:	0400002c 	streq	r0, [r0], #-44	; 0x2c
    72d8:	00020e2b 	andeq	r0, r2, fp, lsr #28
    72dc:	05140d00 	ldreq	r0, [r4, #-3328]	; 0xd00
    72e0:	00029719 	andeq	r9, r2, r9, lsl r7
    72e4:	20440e00 	subcs	r0, r4, r0, lsl #28
    72e8:	1b050000 	blne	1472f0 <__Stack_Size+0x146ef0>
    72ec:	00000041 	andeq	r0, r0, r1, asr #32
    72f0:	1ee50e00 	cdpne	14, 14, cr0, cr5, cr0, {0}
    72f4:	1c050000 	stcne	0, cr0, [r5], {-0}
    72f8:	00000041 	andeq	r0, r0, r1, asr #32
    72fc:	209c0e04 	addscs	r0, ip, r4, lsl #28
    7300:	1d050000 	stcne	0, cr0, [r5, #-0]
    7304:	00000041 	andeq	r0, r0, r1, asr #32
    7308:	20600e08 	rsbcs	r0, r0, r8, lsl #28
    730c:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    7310:	00000041 	andeq	r0, r0, r1, asr #32
    7314:	1fd70e0c 	svcne	0x00d70e0c
    7318:	1f050000 	svcne	0x00050000
    731c:	00000041 	andeq	r0, r0, r1, asr #32
    7320:	ad040010 	stcge	0, cr0, [r4, #-64]	; 0xffffffc0
    7324:	0500001e 	streq	r0, [r0, #-30]
    7328:	00025220 	andeq	r5, r2, r0, lsr #4
    732c:	08d00f00 	ldmeq	r0, {r8, r9, sl, fp}^
    7330:	5a010000 	bpl	47338 <__Stack_Size+0x46f38>
    7334:	00000000 	andeq	r0, r0, r0
    7338:	00000094 	muleq	r0, r4, r0
    733c:	03729c01 	cmneq	r2, #256	; 0x100
    7340:	83100000 	tsthi	r0, #0
    7344:	0100002d 	tsteq	r0, sp, lsr #32
    7348:	0003725a 	andeq	r7, r3, sl, asr r2
    734c:	0035f800 	eorseq	pc, r5, r0, lsl #16
    7350:	00001100 	andeq	r1, r0, r0, lsl #2
    7354:	09e30000 	stmibeq	r3!, {}^	; <UNPREDICTABLE>
    7358:	02e00000 	rsceq	r0, r0, #0
    735c:	01120000 	tsteq	r2, r0
    7360:	12310151 	eorsne	r0, r1, #1073741844	; 0x40000014
    7364:	0a035001 	beq	db370 <__Stack_Size+0xdaf70>
    7368:	13004000 	movwne	r4, #0
    736c:	00000000 	andeq	r0, r0, r0
    7370:	000009e3 	andeq	r0, r0, r3, ror #19
    7374:	000002fa 	strdeq	r0, [r0], -sl
    7378:	01510112 	cmpeq	r1, r2, lsl r1
    737c:	50011230 	andpl	r1, r1, r0, lsr r2
    7380:	40000a03 	andmi	r0, r0, r3, lsl #20
    7384:	00001100 	andeq	r1, r0, r0, lsl #2
    7388:	09fa0000 	ldmibeq	sl!, {}^	; <UNPREDICTABLE>
    738c:	03140000 	tsteq	r4, #0
    7390:	01120000 	tsteq	r2, r0
    7394:	12310151 	eorsne	r0, r1, #1073741844	; 0x40000014
    7398:	40035001 	andmi	r5, r3, r1
    739c:	1100243d 	tstne	r0, sp, lsr r4
    73a0:	00000000 	andeq	r0, r0, r0
    73a4:	000009fa 	strdeq	r0, [r0], -sl
    73a8:	0000032e 	andeq	r0, r0, lr, lsr #6
    73ac:	01510112 	cmpeq	r1, r2, lsl r1
    73b0:	50011231 	andpl	r1, r1, r1, lsr r2
    73b4:	243e4003 	ldrtcs	r4, [lr], #-3
    73b8:	00001100 	andeq	r1, r0, r0, lsl #2
    73bc:	09fa0000 	ldmibeq	sl!, {}^	; <UNPREDICTABLE>
    73c0:	03480000 	movteq	r0, #32768	; 0x8000
    73c4:	01120000 	tsteq	r2, r0
    73c8:	12310151 	eorsne	r0, r1, #1073741844	; 0x40000014
    73cc:	40035001 	andmi	r5, r3, r1
    73d0:	1100243f 	tstne	r0, pc, lsr r4
    73d4:	00000000 	andeq	r0, r0, r0
    73d8:	000009fa 	strdeq	r0, [r0], -sl
    73dc:	00000362 	andeq	r0, r0, r2, ror #6
    73e0:	01510112 	cmpeq	r1, r2, lsl r1
    73e4:	50011231 	andpl	r1, r1, r1, lsr r2
    73e8:	24404003 	strbcs	r4, [r0], #-3
    73ec:	00001400 	andeq	r1, r0, r0, lsl #8
    73f0:	09fa0000 	ldmibeq	sl!, {}^	; <UNPREDICTABLE>
    73f4:	01120000 	tsteq	r2, r0
    73f8:	00300151 	eorseq	r0, r0, r1, asr r1
    73fc:	a6041500 	strge	r1, [r4], -r0, lsl #10
    7400:	0f000001 	svceq	0x00000001
    7404:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7408:	00008c01 	andeq	r8, r0, r1, lsl #24
    740c:	00880000 	addeq	r0, r8, r0
    7410:	9c010000 	stcls	0, cr0, [r1], {-0}
    7414:	00000415 	andeq	r0, r0, r5, lsl r4
    7418:	002d8310 	eoreq	r8, sp, r0, lsl r3
    741c:	728c0100 	addvc	r0, ip, #0, 2
    7420:	88000003 	stmdahi	r0, {r0, r1}
    7424:	10000036 	andne	r0, r0, r6, lsr r0
    7428:	00002da4 	andeq	r2, r0, r4, lsr #27
    742c:	04158c01 	ldreq	r8, [r5], #-3073	; 0xc01
    7430:	36b40000 	ldrtcc	r0, [r4], r0
    7434:	0a160000 	beq	58743c <__Stack_Size+0x58703c>
    7438:	0100001d 	tsteq	r0, sp, lsl r0
    743c:	0000418e 	andeq	r4, r0, lr, lsl #3
    7440:	0036e000 	eorseq	lr, r6, r0
    7444:	2c9d1600 	ldccs	6, cr1, [sp], {0}
    7448:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    744c:	00000041 	andeq	r0, r0, r1, asr #32
    7450:	00003828 	andeq	r3, r0, r8, lsr #16
    7454:	002be916 	eoreq	lr, fp, r6, lsl r9
    7458:	418f0100 	orrmi	r0, pc, r0, lsl #2
    745c:	a1000000 	mrsge	r0, (UNDEF: 0)
    7460:	16000038 			; <UNDEFINED> instruction: 0x16000038
    7464:	00002e3c 	andeq	r2, r0, ip, lsr lr
    7468:	00419001 	subeq	r9, r1, r1
    746c:	391a0000 	ldmdbcc	sl, {}	; <UNPREDICTABLE>
    7470:	33160000 	tstcc	r6, #0
    7474:	0100002d 	tsteq	r0, sp, lsr #32
    7478:	00004191 	muleq	r0, r1, r1
    747c:	00368800 	eorseq	r8, r6, r0, lsl #16
    7480:	2d3e1700 	ldccs	7, cr1, [lr, #-0]
    7484:	92010000 	andls	r0, r1, #0
    7488:	00000297 	muleq	r0, r7, r2
    748c:	185c9102 	ldmdane	ip, {r1, r8, ip, pc}^
    7490:	00000000 	andeq	r0, r0, r0
    7494:	00000a11 	andeq	r0, r0, r1, lsl sl
    7498:	02500112 	subseq	r0, r0, #-2147483644	; 0x80000004
    749c:	00005c91 	muleq	r0, r1, ip
    74a0:	02030415 	andeq	r0, r3, #352321536	; 0x15000000
    74a4:	e80f0000 	stmda	pc, {}	; <UNPREDICTABLE>
    74a8:	0100002e 	tsteq	r0, lr, lsr #32
    74ac:	000000e8 	andeq	r0, r0, r8, ror #1
    74b0:	00001600 	andeq	r1, r0, r0, lsl #12
    74b4:	3e9c0100 	fmlcce	f0, f4, f0
    74b8:	19000004 	stmdbne	r0, {r2}
    74bc:	00002da4 	andeq	r2, r0, r4, lsr #27
    74c0:	0415e801 	ldreq	lr, [r5], #-2049	; 0x801
    74c4:	50010000 	andpl	r0, r1, r0
    74c8:	2e8c0f00 	cdpcs	15, 8, cr0, cr12, cr0, {0}
    74cc:	ff010000 			; <UNDEFINED> instruction: 0xff010000
    74d0:	00000000 	andeq	r0, r0, r0
    74d4:	00000020 	andeq	r0, r0, r0, lsr #32
    74d8:	04809c01 	streq	r9, [r0], #3073	; 0xc01
    74dc:	83190000 	tsthi	r9, #0
    74e0:	0100002d 	tsteq	r0, sp, lsr #32
    74e4:	000372ff 	strdeq	r7, [r3], -pc	; <UNPREDICTABLE>
    74e8:	10500100 	subsne	r0, r0, r0, lsl #2
    74ec:	00002cfa 	strdeq	r2, [r0], -sl
    74f0:	0480ff01 	streq	pc, [r0], #3841	; 0xf01
    74f4:	3a420000 	bcc	10874fc <__Stack_Size+0x10870fc>
    74f8:	0a1a0000 	beq	687500 <__Stack_Size+0x687100>
    74fc:	0100001d 	tsteq	r0, sp, lsl r0
    7500:	00410101 	subeq	r0, r1, r1, lsl #2
    7504:	3a630000 	bcc	18c750c <__Stack_Size+0x18c710c>
    7508:	15000000 	strne	r0, [r0, #-0]
    750c:	00024704 	andeq	r4, r2, r4, lsl #14
    7510:	2d1d1b00 	vldrcs	d1, [sp, #-0]
    7514:	23010000 	movwcs	r0, #4096	; 0x1000
    7518:	00000001 	andeq	r0, r0, r1
    751c:	00000c00 	andeq	r0, r0, r0, lsl #24
    7520:	ab9c0100 	blge	fe707928 <SCS_BASE+0x1e6f9928>
    7524:	1c000004 	stcne	0, cr0, [r0], {4}
    7528:	00002cfa 	strdeq	r2, [r0], -sl
    752c:	80012301 	andhi	r2, r1, r1, lsl #6
    7530:	01000004 	tsteq	r0, r4
    7534:	e01b0050 	ands	r0, fp, r0, asr r0
    7538:	01000001 	tsteq	r0, r1
    753c:	00000137 	andeq	r0, r0, r7, lsr r1
    7540:	00180000 	andseq	r0, r8, r0
    7544:	9c010000 	stcls	0, cr0, [r1], {-0}
    7548:	000004de 	ldrdeq	r0, [r0], -lr
    754c:	002d831c 	eoreq	r8, sp, ip, lsl r3
    7550:	01370100 	teqeq	r7, r0, lsl #2
    7554:	00000372 	andeq	r0, r0, r2, ror r3
    7558:	c71c5001 	ldrgt	r5, [ip, -r1]
    755c:	01000018 	tsteq	r0, r8, lsl r0
    7560:	00d60137 	sbcseq	r0, r6, r7, lsr r1
    7564:	51010000 	mrspl	r0, (UNDEF: 1)
    7568:	03001b00 	movweq	r1, #2816	; 0xb00
    756c:	62010000 	andvs	r0, r1, #0
    7570:	00000001 	andeq	r0, r0, r1
    7574:	00003000 	andeq	r3, r0, r0
    7578:	619c0100 	orrsvs	r0, ip, r0, lsl #2
    757c:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    7580:	00002d83 	andeq	r2, r0, r3, lsl #27
    7584:	72016201 	andvc	r6, r1, #268435456	; 0x10000000
    7588:	9d000003 	stcls	0, cr0, [r0, #-12]
    758c:	1d00003a 	stcne	0, cr0, [r0, #-232]	; 0xffffff18
    7590:	00002c85 	andeq	r2, r0, r5, lsl #25
    7594:	53016201 	movwpl	r6, #4609	; 0x1201
    7598:	d6000000 	strle	r0, [r0], -r0
    759c:	1c00003a 	stcne	0, cr0, [r0], {58}	; 0x3a
    75a0:	000018c7 	andeq	r1, r0, r7, asr #17
    75a4:	d6016201 	strle	r6, [r1], -r1, lsl #4
    75a8:	01000000 	mrseq	r0, (UNDEF: 0)
    75ac:	2edf1a52 	mrccs	10, 6, r1, cr15, cr2, {2}
    75b0:	64010000 	strvs	r0, [r1], #-0
    75b4:	00004101 	andeq	r4, r0, r1, lsl #2
    75b8:	003af700 	eorseq	pc, sl, r0, lsl #14
    75bc:	2dc41a00 	vstrcs	s3, [r4]
    75c0:	64010000 	strvs	r0, [r1], #-0
    75c4:	00004101 	andeq	r4, r0, r1, lsl #2
    75c8:	003b1600 	eorseq	r1, fp, r0, lsl #12
    75cc:	2eca1a00 	vdivcs.f32	s3, s20, s0
    75d0:	64010000 	strvs	r0, [r1], #-0
    75d4:	00004101 	andeq	r4, r0, r1, lsl #2
    75d8:	003b3d00 	eorseq	r3, fp, r0, lsl #26
    75dc:	2d331e00 	ldccs	14, cr1, [r3, #-0]
    75e0:	65010000 	strvs	r0, [r1, #-0]
    75e4:	00004101 	andeq	r4, r0, r1, lsl #2
    75e8:	00500100 	subseq	r0, r0, r0, lsl #2
    75ec:	002c781b 	eoreq	r7, ip, fp, lsl r8
    75f0:	019d0100 	orrseq	r0, sp, r0, lsl #2
    75f4:	00000000 	andeq	r0, r0, r0
    75f8:	00000012 	andeq	r0, r0, r2, lsl r0
    75fc:	05a49c01 	streq	r9, [r4, #3073]!	; 0xc01
    7600:	831c0000 	tsthi	ip, #0
    7604:	0100002d 	tsteq	r0, sp, lsr #32
    7608:	0372019d 	cmneq	r2, #1073741863	; 0x40000027
    760c:	50010000 	andpl	r0, r1, r0
    7610:	002d101d 	eoreq	r1, sp, sp, lsl r0
    7614:	019d0100 	orrseq	r0, sp, r0, lsl #2
    7618:	00000053 	andeq	r0, r0, r3, asr r0
    761c:	00003b67 	andeq	r3, r0, r7, ror #22
    7620:	0018c71c 	andseq	ip, r8, ip, lsl r7
    7624:	019d0100 	orrseq	r0, sp, r0, lsl #2
    7628:	000000d6 	ldrdeq	r0, [r0], -r6
    762c:	1b005201 	blne	1be38 <__Stack_Size+0x1ba38>
    7630:	00002d4f 	andeq	r2, r0, pc, asr #26
    7634:	0001bc01 	andeq	fp, r1, r1, lsl #24
    7638:	16000000 	strne	r0, [r0], -r0
    763c:	01000000 	mrseq	r0, (UNDEF: 0)
    7640:	0005d99c 	muleq	r5, ip, r9
    7644:	2d831c00 	stccs	12, cr1, [r3]
    7648:	bc010000 	stclt	0, cr0, [r1], {-0}
    764c:	00037201 	andeq	r7, r3, r1, lsl #4
    7650:	1d500100 	ldfnee	f0, [r0, #-0]
    7654:	00002db5 			; <UNDEFINED> instruction: 0x00002db5
    7658:	6501bc01 	strvs	fp, [r1, #-3073]	; 0xc01
    765c:	a1000000 	mrsge	r0, (UNDEF: 0)
    7660:	0000003b 	andeq	r0, r0, fp, lsr r0
    7664:	002e9c1b 	eoreq	r9, lr, fp, lsl ip
    7668:	01d50100 	bicseq	r0, r5, r0, lsl #2
    766c:	00000000 	andeq	r0, r0, r0
    7670:	00000016 	andeq	r0, r0, r6, lsl r0
    7674:	060e9c01 	streq	r9, [lr], -r1, lsl #24
    7678:	831c0000 	tsthi	ip, #0
    767c:	0100002d 	tsteq	r0, sp, lsr #32
    7680:	037201d5 	cmneq	r2, #1073741877	; 0x40000035
    7684:	50010000 	andpl	r0, r1, r0
    7688:	002c6b1d 	eoreq	r6, ip, sp, lsl fp
    768c:	01d50100 	bicseq	r0, r5, r0, lsl #2
    7690:	00000053 	andeq	r0, r0, r3, asr r0
    7694:	00003bc2 	andeq	r3, r0, r2, asr #23
    7698:	2e091b00 	vmlacs.f64	d1, d9, d0
    769c:	ea010000 	b	476a4 <__Stack_Size+0x472a4>
    76a0:	00000001 	andeq	r0, r0, r1
    76a4:	00001800 	andeq	r1, r0, r0, lsl #16
    76a8:	419c0100 	orrsmi	r0, ip, r0, lsl #2
    76ac:	1c000006 	stcne	0, cr0, [r0], {6}
    76b0:	00002d83 	andeq	r2, r0, r3, lsl #27
    76b4:	7201ea01 	andvc	lr, r1, #4096	; 0x1000
    76b8:	01000003 	tsteq	r0, r3
    76bc:	18c71c50 	stmiane	r7, {r4, r6, sl, fp, ip}^
    76c0:	ea010000 	b	476c8 <__Stack_Size+0x472c8>
    76c4:	0000d601 	andeq	sp, r0, r1, lsl #12
    76c8:	00510100 	subseq	r0, r1, r0, lsl #2
    76cc:	002cce1b 	eoreq	ip, ip, fp, lsl lr
    76d0:	020a0100 	andeq	r0, sl, #0, 2
    76d4:	00000000 	andeq	r0, r0, r0
    76d8:	00000016 	andeq	r0, r0, r6, lsl r0
    76dc:	06769c01 	ldrbteq	r9, [r6], -r1, lsl #24
    76e0:	831c0000 	tsthi	ip, #0
    76e4:	0100002d 	tsteq	r0, sp, lsr #32
    76e8:	0372020a 	cmneq	r2, #-1610612736	; 0xa0000000
    76ec:	50010000 	andpl	r0, r1, r0
    76f0:	002c161d 	eoreq	r1, ip, sp, lsl r6
    76f4:	020a0100 	andeq	r0, sl, #0, 2
    76f8:	00000053 	andeq	r0, r0, r3, asr r0
    76fc:	00003be3 	andeq	r3, r0, r3, ror #23
    7700:	2e2f1b00 	vmulcs.f64	d1, d15, d0
    7704:	1f010000 	svcne	0x00010000
    7708:	00000002 	andeq	r0, r0, r2
    770c:	00001800 	andeq	r1, r0, r0, lsl #16
    7710:	a99c0100 	ldmibge	ip, {r8}
    7714:	1c000006 	stcne	0, cr0, [r0], {6}
    7718:	00002d83 	andeq	r2, r0, r3, lsl #27
    771c:	72021f01 	andvc	r1, r2, #1, 30
    7720:	01000003 	tsteq	r0, r3
    7724:	18c71c50 	stmiane	r7, {r4, r6, sl, fp, ip}^
    7728:	1f010000 	svcne	0x00010000
    772c:	0000d602 	andeq	sp, r0, r2, lsl #12
    7730:	00510100 	subseq	r0, r1, r0, lsl #2
    7734:	002c481b 	eoreq	r4, ip, fp, lsl r8
    7738:	023b0100 	eorseq	r0, fp, #0, 2
    773c:	00000000 	andeq	r0, r0, r0
    7740:	00000008 	andeq	r0, r0, r8
    7744:	06de9c01 	ldrbeq	r9, [lr], r1, lsl #24
    7748:	831c0000 	tsthi	ip, #0
    774c:	0100002d 	tsteq	r0, sp, lsr #32
    7750:	0372023b 	cmneq	r2, #-1342177277	; 0xb0000003
    7754:	50010000 	andpl	r0, r1, r0
    7758:	001b0d1d 	andseq	r0, fp, sp, lsl sp
    775c:	023b0100 	eorseq	r0, fp, #0, 2
    7760:	00000053 	andeq	r0, r0, r3, asr r0
    7764:	00003c04 	andeq	r3, r0, r4, lsl #24
    7768:	0c9b1f00 	ldceq	15, cr1, [fp], {0}
    776c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    7770:	00005302 	andeq	r5, r0, r2, lsl #6
    7774:	000b1400 	andeq	r1, fp, r0, lsl #8
    7778:	00000808 	andeq	r0, r0, r8, lsl #16
    777c:	099c0100 	ldmibeq	ip, {r8}
    7780:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    7784:	00002d83 	andeq	r2, r0, r3, lsl #27
    7788:	72024e01 	andvc	r4, r2, #1, 28
    778c:	25000003 	strcs	r0, [r0, #-3]
    7790:	0000003c 	andeq	r0, r0, ip, lsr r0
    7794:	002d731b 	eoreq	r7, sp, fp, lsl r3
    7798:	02600100 	rsbeq	r0, r0, #0, 2
    779c:	00000000 	andeq	r0, r0, r0
    77a0:	0000000c 	andeq	r0, r0, ip
    77a4:	072e9c01 	streq	r9, [lr, -r1, lsl #24]!
    77a8:	831c0000 	tsthi	ip, #0
    77ac:	0100002d 	tsteq	r0, sp, lsr #32
    77b0:	03720260 	cmneq	r2, #96, 4
    77b4:	50010000 	andpl	r0, r1, r0
    77b8:	2d601b00 	vstmdbcs	r0!, {d17-d16}
    77bc:	73010000 	movwvc	r0, #4096	; 0x1000
    77c0:	00000002 	andeq	r0, r0, r2
    77c4:	00001200 	andeq	r1, r0, r0, lsl #4
    77c8:	639c0100 	orrsvs	r0, ip, #0, 2
    77cc:	1c000007 	stcne	0, cr0, [r0], {7}
    77d0:	00002d83 	andeq	r2, r0, r3, lsl #27
    77d4:	72027301 	andvc	r7, r2, #67108864	; 0x4000000
    77d8:	01000003 	tsteq	r0, r3
    77dc:	2cbe1d50 	ldccs	13, cr1, [lr], #320	; 0x140
    77e0:	73010000 	movwvc	r0, #4096	; 0x1000
    77e4:	00006502 	andeq	r6, r0, r2, lsl #10
    77e8:	003c4600 	eorseq	r4, ip, r0, lsl #12
    77ec:	031b0000 	tsteq	fp, #0
    77f0:	0100002c 	tsteq	r0, ip, lsr #32
    77f4:	00000289 	andeq	r0, r0, r9, lsl #5
    77f8:	00120000 	andseq	r0, r2, r0
    77fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    7800:	00000798 	muleq	r0, r8, r7
    7804:	002d831c 	eoreq	r8, sp, ip, lsl r3
    7808:	02890100 	addeq	r0, r9, #0, 2
    780c:	00000372 	andeq	r0, r0, r2, ror r3
    7810:	af1d5001 	svcge	0x001d5001
    7814:	0100002e 	tsteq	r0, lr, lsr #32
    7818:	00650289 	rsbeq	r0, r5, r9, lsl #5
    781c:	3c670000 	stclcc	0, cr0, [r7], #-0
    7820:	1b000000 	blne	7828 <__Stack_Size+0x7428>
    7824:	00002e79 	andeq	r2, r0, r9, ror lr
    7828:	00029f01 	andeq	r9, r2, r1, lsl #30
    782c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    7830:	01000000 	mrseq	r0, (UNDEF: 0)
    7834:	0007cb9c 	muleq	r7, ip, fp
    7838:	2d831c00 	stccs	12, cr1, [r3]
    783c:	9f010000 	svcls	0x00010000
    7840:	00037202 	andeq	r7, r3, r2, lsl #4
    7844:	1c500100 	ldfnee	f0, [r0], {-0}
    7848:	000018c7 	andeq	r1, r0, r7, asr #17
    784c:	d6029f01 	strle	r9, [r2], -r1, lsl #30
    7850:	01000000 	mrseq	r0, (UNDEF: 0)
    7854:	4e1b0051 	mrcmi	0, 0, r0, cr11, cr1, {2}
    7858:	0100002e 	tsteq	r0, lr, lsr #32
    785c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    7860:	00180000 	andseq	r0, r8, r0
    7864:	9c010000 	stcls	0, cr0, [r1], {-0}
    7868:	000007fe 	strdeq	r0, [r0], -lr
    786c:	002d831c 	eoreq	r8, sp, ip, lsl r3
    7870:	02bc0100 	adcseq	r0, ip, #0, 2
    7874:	00000372 	andeq	r0, r0, r2, ror r3
    7878:	c71c5001 	ldrgt	r5, [ip, -r1]
    787c:	01000018 	tsteq	r0, r8, lsl r0
    7880:	00d602bc 	ldrheq	r0, [r6], #44	; 0x2c
    7884:	51010000 	mrspl	r0, (UNDEF: 1)
    7888:	2c571b00 	mrrccs	11, 0, r1, r7, cr0
    788c:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    7890:	00000002 	andeq	r0, r0, r2
    7894:	00001800 	andeq	r1, r0, r0, lsl #16
    7898:	319c0100 	orrscc	r0, ip, r0, lsl #2
    789c:	1c000008 	stcne	0, cr0, [r0], {8}
    78a0:	00002d83 	andeq	r2, r0, r3, lsl #27
    78a4:	7202d901 	andvc	sp, r2, #16384	; 0x4000
    78a8:	01000003 	tsteq	r0, r3
    78ac:	18c71c50 	stmiane	r7, {r4, r6, sl, fp, ip}^
    78b0:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    78b4:	0000d602 	andeq	sp, r0, r2, lsl #12
    78b8:	00510100 	subseq	r0, r1, r0, lsl #2
    78bc:	002dec1b 	eoreq	lr, sp, fp, lsl ip
    78c0:	02f80100 	rscseq	r0, r8, #0, 2
    78c4:	00000000 	andeq	r0, r0, r0
    78c8:	00000016 	andeq	r0, r0, r6, lsl r0
    78cc:	08669c01 	stmdaeq	r6!, {r0, sl, fp, ip, pc}^
    78d0:	831c0000 	tsthi	ip, #0
    78d4:	0100002d 	tsteq	r0, sp, lsr #32
    78d8:	037202f8 	cmneq	r2, #248, 4	; 0x8000000f
    78dc:	50010000 	andpl	r0, r1, r0
    78e0:	002c8e1d 	eoreq	r8, ip, sp, lsl lr
    78e4:	02f80100 	rscseq	r0, r8, #0, 2
    78e8:	00000053 	andeq	r0, r0, r3, asr r0
    78ec:	00003c88 	andeq	r3, r0, r8, lsl #25
    78f0:	2e211b00 	vmulcs.f64	d1, d1, d0
    78f4:	0d010000 	stceq	0, cr0, [r1, #-0]
    78f8:	00000003 	andeq	r0, r0, r3
    78fc:	00001800 	andeq	r1, r0, r0, lsl #16
    7900:	999c0100 	ldmibls	ip, {r8}
    7904:	1c000008 	stcne	0, cr0, [r0], {8}
    7908:	00002d83 	andeq	r2, r0, r3, lsl #27
    790c:	72030d01 	andvc	r0, r3, #1, 26	; 0x40
    7910:	01000003 	tsteq	r0, r3
    7914:	18c71c50 	stmiane	r7, {r4, r6, sl, fp, ip}^
    7918:	0d010000 	stceq	0, cr0, [r1, #-0]
    791c:	0000d603 	andeq	sp, r0, r3, lsl #12
    7920:	00510100 	subseq	r0, r1, r0, lsl #2
    7924:	002e651f 	eoreq	r6, lr, pc, lsl r5
    7928:	03350100 	teqeq	r5, #0, 2
    792c:	000000ab 	andeq	r0, r0, fp, lsr #1
    7930:	00000000 	andeq	r0, r0, r0
    7934:	0000000c 	andeq	r0, r0, ip
    7938:	08e29c01 	stmiaeq	r2!, {r0, sl, fp, ip, pc}^
    793c:	831d0000 	tsthi	sp, #0
    7940:	0100002d 	tsteq	r0, sp, lsr #32
    7944:	03720335 	cmneq	r2, #-738197504	; 0xd4000000
    7948:	3ca90000 	stccc	0, cr0, [r9]
    794c:	ef1c0000 	svc	0x001c0000
    7950:	0100002c 	tsteq	r0, ip, lsr #32
    7954:	00530335 	subseq	r0, r3, r5, lsr r3
    7958:	51010000 	mrspl	r0, (UNDEF: 1)
    795c:	001a971a 	andseq	r9, sl, sl, lsl r7
    7960:	03370100 	teqeq	r7, #0, 2
    7964:	000000ab 	andeq	r0, r0, fp, lsr #1
    7968:	00003cca 	andeq	r3, r0, sl, asr #25
    796c:	2dca1b00 	vstrcs	d17, [sl]
    7970:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    7974:	00000003 	andeq	r0, r0, r3
    7978:	00000800 	andeq	r0, r0, r0, lsl #16
    797c:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    7980:	1c000009 	stcne	0, cr0, [r0], {9}
    7984:	00002d83 	andeq	r2, r0, r3, lsl #27
    7988:	72036901 	andvc	r6, r3, #16384	; 0x4000
    798c:	01000003 	tsteq	r0, r3
    7990:	2cef1d50 	stclcs	13, cr1, [pc], #320	; 7ad8 <__Stack_Size+0x76d8>
    7994:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    7998:	00005303 	andeq	r5, r0, r3, lsl #6
    799c:	003cf200 	eorseq	pc, ip, r0, lsl #4
    79a0:	da1f0000 	ble	7c79a8 <__Stack_Size+0x7c75a8>
    79a4:	0100002d 	tsteq	r0, sp, lsr #32
    79a8:	00b6038a 	adcseq	r0, r6, sl, lsl #7
    79ac:	00000000 	andeq	r0, r0, r0
    79b0:	00400000 	subeq	r0, r0, r0
    79b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    79b8:	00000992 	muleq	r0, r2, r9
    79bc:	002d831d 	eoreq	r8, sp, sp, lsl r3
    79c0:	038a0100 	orreq	r0, sl, #0, 2
    79c4:	00000372 	andeq	r0, r0, r2, ror r3
    79c8:	00003d13 	andeq	r3, r0, r3, lsl sp
    79cc:	002c851d 	eoreq	r8, ip, sp, lsl r5
    79d0:	038a0100 	orreq	r0, sl, #0, 2
    79d4:	00000053 	andeq	r0, r0, r3, asr r0
    79d8:	00003d4d 	andeq	r3, r0, sp, asr #26
    79dc:	002dc31a 	eoreq	ip, sp, sl, lsl r3
    79e0:	038c0100 	orreq	r0, ip, #0, 2
    79e4:	00000041 	andeq	r0, r0, r1, asr #32
    79e8:	00003d79 	andeq	r3, r0, r9, ror sp
    79ec:	002eca1a 	eoreq	ip, lr, sl, lsl sl
    79f0:	038c0100 	orreq	r0, ip, #0, 2
    79f4:	00000041 	andeq	r0, r0, r1, asr #32
    79f8:	00003dda 	ldrdeq	r3, [r0], -sl
    79fc:	002edf1a 	eoreq	sp, lr, sl, lsl pc
    7a00:	038c0100 	orreq	r0, ip, #0, 2
    7a04:	00000041 	andeq	r0, r0, r1, asr #32
    7a08:	00003e22 	andeq	r3, r0, r2, lsr #28
    7a0c:	001a971a 	andseq	r9, sl, sl, lsl r7
    7a10:	038d0100 	orreq	r0, sp, #0, 2
    7a14:	000000b6 	strheq	r0, [r0], -r6
    7a18:	00003e41 	andeq	r3, r0, r1, asr #28
    7a1c:	2ca61b00 	vstmiacs	r6!, {d1-d0}
    7a20:	da010000 	ble	47a28 <__Stack_Size+0x47628>
    7a24:	00000003 	andeq	r0, r0, r3
    7a28:	00000e00 	andeq	r0, r0, r0, lsl #28
    7a2c:	e39c0100 	orrs	r0, ip, #0, 2
    7a30:	1c000009 	stcne	0, cr0, [r0], {9}
    7a34:	00002d83 	andeq	r2, r0, r3, lsl #27
    7a38:	7203da01 	andvc	sp, r3, #4096	; 0x1000
    7a3c:	01000003 	tsteq	r0, r3
    7a40:	2c851d50 	stccs	13, cr1, [r5], {80}	; 0x50
    7a44:	da010000 	ble	47a4c <__Stack_Size+0x4764c>
    7a48:	00005303 	andeq	r5, r0, r3, lsl #6
    7a4c:	003e6000 	eorseq	r6, lr, r0
    7a50:	2dc31a00 	vstrcs	s3, [r3]
    7a54:	dc010000 	stcle	0, cr0, [r1], {-0}
    7a58:	00005303 	andeq	r5, r0, r3, lsl #6
    7a5c:	003e8100 	eorseq	r8, lr, r0, lsl #2
    7a60:	2eca2000 	cdpcs	0, 12, cr2, cr10, cr0, {0}
    7a64:	dc010000 	stcle	0, cr0, [r1], {-0}
    7a68:	00005303 	andeq	r5, r0, r3, lsl #6
    7a6c:	48210000 	stmdami	r1!, {}	; <UNPREDICTABLE>
    7a70:	0500001d 	streq	r0, [r0, #-29]
    7a74:	09fa0114 	ldmibeq	sl!, {r2, r4, r8}^
    7a78:	41220000 	teqmi	r2, r0
    7a7c:	22000000 	andcs	r0, r0, #0
    7a80:	000000d6 	ldrdeq	r0, [r0], -r6
    7a84:	1f1b2100 	svcne	0x001b2100
    7a88:	15050000 	strne	r0, [r5, #-0]
    7a8c:	000a1101 	andeq	r1, sl, r1, lsl #2
    7a90:	00412200 	subeq	r2, r1, r0, lsl #4
    7a94:	d6220000 	strtle	r0, [r2], -r0
    7a98:	00000000 	andeq	r0, r0, r0
    7a9c:	0020cb21 	eoreq	ip, r0, r1, lsr #22
    7aa0:	01100500 	tsteq	r0, r0, lsl #10
    7aa4:	00000a23 	andeq	r0, r0, r3, lsr #20
    7aa8:	000a2322 	andeq	r2, sl, r2, lsr #6
    7aac:	04150000 	ldreq	r0, [r5], #-0
    7ab0:	00000297 	muleq	r0, r7, r2
    7ab4:	0000ec00 	andeq	lr, r0, r0, lsl #24
    7ab8:	e5000400 	str	r0, [r0, #-1024]	; 0x400
    7abc:	04000019 	streq	r0, [r0], #-25
    7ac0:	0002c101 	andeq	ip, r2, r1, lsl #2
    7ac4:	2f070100 	svccs	0x00070100
    7ac8:	009a0000 	addseq	r0, sl, r0
    7acc:	0a780000 	beq	1e07ad4 <__Stack_Size+0x1e076d4>
    7ad0:	00000000 	andeq	r0, r0, r0
    7ad4:	245e0000 	ldrbcs	r0, [lr], #-0
    7ad8:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    7adc:	0100002f 	tsteq	r0, pc, lsr #32
    7ae0:	000b1cd7 	ldrdeq	r1, [fp], -r7
    7ae4:	00005008 	andeq	r5, r0, r8
    7ae8:	5e9c0100 	fmlple	f0, f4, f0
    7aec:	03000000 	movweq	r0, #0
    7af0:	00002f32 	andeq	r2, r0, r2, lsr pc
    7af4:	005ed901 	subseq	sp, lr, r1, lsl #18
    7af8:	22040000 	andcs	r0, r4, #0
    7afc:	0100002f 	tsteq	r0, pc, lsr #32
    7b00:	00005ed9 	ldrdeq	r5, [r0], -r9
    7b04:	003ea800 	eorseq	sl, lr, r0, lsl #16
    7b08:	0b500500 	bleq	1408f10 <__Stack_Size+0x1408b10>
    7b0c:	00dd0800 	sbcseq	r0, sp, r0, lsl #16
    7b10:	06000000 	streq	r0, [r0], -r0
    7b14:	00006404 	andeq	r6, r0, r4, lsl #8
    7b18:	07040700 	streq	r0, [r4, -r0, lsl #14]
    7b1c:	00000819 	andeq	r0, r0, r9, lsl r8
    7b20:	002f2a08 	eoreq	r2, pc, r8, lsl #20
    7b24:	645f0100 	ldrbvs	r0, [pc], #-256	; 7b2c <__Stack_Size+0x772c>
    7b28:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7b2c:	00002f54 	andeq	r2, r0, r4, asr pc
    7b30:	00646101 	rsbeq	r6, r4, r1, lsl #2
    7b34:	61080000 	mrsvs	r0, (UNDEF: 8)
    7b38:	0100002f 	tsteq	r0, pc, lsr #32
    7b3c:	00006463 	andeq	r6, r0, r3, ror #8
    7b40:	2f5b0800 	svccs	0x005b0800
    7b44:	66010000 	strvs	r0, [r1], -r0
    7b48:	00000064 	andeq	r0, r0, r4, rrx
    7b4c:	002ef908 	eoreq	pc, lr, r8, lsl #18
    7b50:	64680100 	strbtvs	r0, [r8], #-256	; 0x100
    7b54:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7b58:	00002eff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    7b5c:	c00a6b01 	andgt	r6, sl, r1, lsl #22
    7b60:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
    7b64:	0b000000 	bleq	7b6c <__Stack_Size+0x776c>
    7b68:	000000b9 	strheq	r0, [r0], -r9
    7b6c:	0407004c 	streq	r0, [r7], #-76	; 0x4c
    7b70:	00081007 	andeq	r1, r8, r7
    7b74:	c6040600 	strgt	r0, [r4], -r0, lsl #12
    7b78:	0c000000 	stceq	0, cr0, [r0], {-0}
    7b7c:	002f470d 	eoreq	r4, pc, sp, lsl #14
    7b80:	d87f0100 	ldmdale	pc!, {r8}^	; <UNPREDICTABLE>
    7b84:	05000000 	streq	r0, [r0, #-0]
    7b88:	00000003 	andeq	r0, r0, r3
    7b8c:	00a90e08 	adceq	r0, r9, r8, lsl #28
    7b90:	8f0f0000 	svchi	0x000f0000
    7b94:	0100000a 	tsteq	r0, sl
    7b98:	0000e872 	andeq	lr, r0, r2, ror r8
    7b9c:	05041000 	streq	r1, [r4, #-0]
    7ba0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    7ba4:	0003f600 	andeq	pc, r3, r0, lsl #12
    7ba8:	bd000400 	cfstrslt	mvf0, [r0, #-0]
    7bac:	0400001a 	streq	r0, [r0], #-26
    7bb0:	0002c101 	andeq	ip, r2, r1, lsl #2
    7bb4:	2f8a0100 	svccs	0x008a0100
    7bb8:	009a0000 	addseq	r0, sl, r0
    7bbc:	0a880000 	beq	fe207bc4 <SCS_BASE+0x1e1f9bc4>
    7bc0:	00000000 	andeq	r0, r0, r0
    7bc4:	24bb0000 	ldrtcs	r0, [fp], #0
    7bc8:	04020000 	streq	r0, [r2], #-0
    7bcc:	00071d05 	andeq	r1, r7, r5, lsl #26
    7bd0:	05020200 	streq	r0, [r2, #-512]	; 0x200
    7bd4:	000006ef 	andeq	r0, r0, pc, ror #13
    7bd8:	8c060102 	stfhis	f0, [r6], {2}
    7bdc:	02000008 	andeq	r0, r0, #8
    7be0:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    7be4:	75030000 	strvc	r0, [r3, #-0]
    7be8:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    7bec:	00004c28 	andeq	r4, r0, r8, lsr #24
    7bf0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    7bf4:	00000a73 	andeq	r0, r0, r3, ror sl
    7bf8:	00387503 	eorseq	r7, r8, r3, lsl #10
    7bfc:	005d2902 	subseq	r2, sp, r2, lsl #18
    7c00:	01020000 	mrseq	r0, (UNDEF: 2)
    7c04:	00088a08 	andeq	r8, r8, r8, lsl #20
    7c08:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7c0c:	00000810 	andeq	r0, r0, r0, lsl r8
    7c10:	00530404 	subseq	r0, r3, r4, lsl #8
    7c14:	42050000 	andmi	r0, r5, #0
    7c18:	01000012 	tsteq	r0, r2, lsl r0
    7c1c:	00963003 	addseq	r3, r6, r3
    7c20:	56060000 	strpl	r0, [r6], -r0
    7c24:	00000012 	andeq	r0, r0, r2, lsl r0
    7c28:	0012ec06 	andseq	lr, r2, r6, lsl #24
    7c2c:	7f060100 	svcvc	0x00060100
    7c30:	02000012 	andeq	r0, r0, #18
    7c34:	0012de06 	andseq	sp, r2, r6, lsl #28
    7c38:	07000300 	streq	r0, [r0, -r0, lsl #6]
    7c3c:	00001243 	andeq	r1, r0, r3, asr #4
    7c40:	00713703 	rsbseq	r3, r1, r3, lsl #14
    7c44:	94080000 	strls	r0, [r8], #-0
    7c48:	0c000016 	stceq	0, cr0, [r0], {22}
    7c4c:	00de3b03 	sbcseq	r3, lr, r3, lsl #22
    7c50:	20090000 	andcs	r0, r9, r0
    7c54:	03000014 	movweq	r0, #20
    7c58:	00004153 	andeq	r4, r0, r3, asr r1
    7c5c:	e0090000 	and	r0, r9, r0
    7c60:	03000017 	movweq	r0, #23
    7c64:	00004154 	andeq	r4, r0, r4, asr r1
    7c68:	5e090200 	cdppl	2, 0, cr0, cr9, cr0, {0}
    7c6c:	03000031 	movweq	r0, #49	; 0x31
    7c70:	00004155 	andeq	r4, r0, r5, asr r1
    7c74:	03090400 	movweq	r0, #37888	; 0x9400
    7c78:	03000017 	movweq	r0, #23
    7c7c:	0000ed56 	andeq	lr, r0, r6, asr sp
    7c80:	0a000800 	beq	9c88 <__Stack_Size+0x9888>
    7c84:	0000006b 	andeq	r0, r0, fp, rrx
    7c88:	000000ed 	andeq	r0, r0, sp, ror #1
    7c8c:	0000410b 	andeq	r4, r0, fp, lsl #2
    7c90:	04040000 	streq	r0, [r4], #-0
    7c94:	000000de 	ldrdeq	r0, [r0], -lr
    7c98:	00169507 	andseq	r9, r6, r7, lsl #10
    7c9c:	a1570300 	cmpge	r7, r0, lsl #6
    7ca0:	0c000000 	stceq	0, cr0, [r0], {-0}
    7ca4:	02005742 	andeq	r5, r0, #17301504	; 0x1080000
    7ca8:	01226503 	teqeq	r2, r3, lsl #10
    7cac:	620d0000 	andvs	r0, sp, #0
    7cb0:	03003162 	movweq	r3, #354	; 0x162
    7cb4:	00005367 	andeq	r5, r0, r7, ror #6
    7cb8:	620d0000 	andvs	r0, sp, #0
    7cbc:	03003062 	movweq	r3, #98	; 0x62
    7cc0:	00005368 	andeq	r5, r0, r8, ror #6
    7cc4:	0e000100 	adfeqs	f0, f0, f0
    7cc8:	3e620302 	cdpcc	3, 6, cr0, cr2, cr2, {0}
    7ccc:	0f000001 	svceq	0x00000001
    7cd0:	64030077 	strvs	r0, [r3], #-119	; 0x77
    7cd4:	00000041 	andeq	r0, r0, r1, asr #32
    7cd8:	0077620f 	rsbseq	r6, r7, pc, lsl #4
    7cdc:	00fe6a03 	rscseq	r6, lr, r3, lsl #20
    7ce0:	07000000 	streq	r0, [r0, -r0]
    7ce4:	00001855 	andeq	r1, r0, r5, asr r8
    7ce8:	01226b03 	teqeq	r2, r3, lsl #22
    7cec:	87080000 	strhi	r0, [r8, -r0]
    7cf0:	1c000013 	stcne	0, cr0, [r0], {19}
    7cf4:	01da6d03 	bicseq	r6, sl, r3, lsl #26
    7cf8:	43090000 	movwmi	r0, #36864	; 0x9000
    7cfc:	03000017 	movweq	r0, #23
    7d00:	0000536f 	andeq	r5, r0, pc, ror #6
    7d04:	f6090000 			; <UNDEFINED> instruction: 0xf6090000
    7d08:	03000012 	movweq	r0, #18
    7d0c:	00005370 	andeq	r5, r0, r0, ror r3
    7d10:	d2090100 	andle	r0, r9, #0, 2
    7d14:	03000014 	movweq	r0, #20
    7d18:	00013e71 	andeq	r3, r1, r1, ror lr
    7d1c:	ad090200 	sfmge	f0, 4, [r9, #-0]
    7d20:	03000013 	movweq	r0, #19
    7d24:	00013e72 	andeq	r3, r1, r2, ror lr
    7d28:	b2090400 	andlt	r0, r9, #0, 8
    7d2c:	03000015 	movweq	r0, #21
    7d30:	00013e73 	andeq	r3, r1, r3, ror lr
    7d34:	e2090600 	and	r0, r9, #0, 12
    7d38:	03000016 	movweq	r0, #22
    7d3c:	00005375 	andeq	r5, r0, r5, ror r3
    7d40:	d0090800 	andle	r0, r9, r0, lsl #16
    7d44:	03000017 	movweq	r0, #23
    7d48:	00005376 	andeq	r5, r0, r6, ror r3
    7d4c:	be090900 	cdplt	9, 0, cr0, cr9, cr0, {0}
    7d50:	03000015 	movweq	r0, #21
    7d54:	00005377 	andeq	r5, r0, r7, ror r3
    7d58:	0c090a00 	stceq	10, cr0, [r9], {-0}
    7d5c:	03000016 	movweq	r0, #22
    7d60:	00005378 	andeq	r5, r0, r8, ror r3
    7d64:	7b090b00 	blvc	24a96c <__Stack_Size+0x24a56c>
    7d68:	03000016 	movweq	r0, #22
    7d6c:	00005379 	andeq	r5, r0, r9, ror r3
    7d70:	b4090c00 	strlt	r0, [r9], #-3072	; 0xc00
    7d74:	03000017 	movweq	r0, #23
    7d78:	0000f37c 	andeq	pc, r0, ip, ror r3	; <UNPREDICTABLE>
    7d7c:	07001000 	streq	r1, [r0, -r0]
    7d80:	00001388 	andeq	r1, r0, r8, lsl #7
    7d84:	01497d03 	cmpeq	r9, r3, lsl #26
    7d88:	f5080000 			; <UNDEFINED> instruction: 0xf5080000
    7d8c:	30000011 	andcc	r0, r0, r1, lsl r0
    7d90:	02827f03 	addeq	r7, r2, #3, 30
    7d94:	0b090000 	bleq	247d9c <__Stack_Size+0x24799c>
    7d98:	03000023 	movweq	r0, #35	; 0x23
    7d9c:	00028381 	andeq	r8, r2, r1, lsl #7
    7da0:	22090000 	andcs	r0, r9, #0
    7da4:	03000015 	movweq	r0, #21
    7da8:	00028382 	andeq	r8, r2, r2, lsl #7
    7dac:	c5090400 	strgt	r0, [r9, #-1024]	; 0x400
    7db0:	03000012 	movweq	r0, #18
    7db4:	00028385 	andeq	r8, r2, r5, lsl #7
    7db8:	62090800 	andvs	r0, r9, #0, 16
    7dbc:	03000012 	movweq	r0, #18
    7dc0:	00028386 	andeq	r8, r2, r6, lsl #7
    7dc4:	98090c00 	stmdals	r9, {sl, fp}
    7dc8:	03000012 	movweq	r0, #18
    7dcc:	00029898 	muleq	r2, r8, r8
    7dd0:	19091000 	stmdbne	r9, {ip}
    7dd4:	03000012 	movweq	r0, #18
    7dd8:	000298a3 	andeq	r9, r2, r3, lsr #17
    7ddc:	a9091400 	stmdbge	r9, {sl, ip}
    7de0:	03000012 	movweq	r0, #18
    7de4:	0002b2ad 	andeq	fp, r2, sp, lsr #5
    7de8:	ee091800 	cdp	8, 0, cr1, cr9, cr0, {0}
    7dec:	03000014 	movweq	r0, #20
    7df0:	0000edaf 	andeq	lr, r0, pc, lsr #27
    7df4:	31091c00 	tstcc	r9, r0, lsl #24
    7df8:	03000018 	movweq	r0, #24
    7dfc:	0000edb0 			; <UNDEFINED> instruction: 0x0000edb0
    7e00:	2f092000 	svccs	0x00092000
    7e04:	03000017 	movweq	r0, #23
    7e08:	0000edb1 			; <UNDEFINED> instruction: 0x0000edb1
    7e0c:	02092400 	andeq	r2, r9, #0, 8
    7e10:	03000012 	movweq	r0, #18
    7e14:	0002b8b5 			; <UNDEFINED> instruction: 0x0002b8b5
    7e18:	5b092800 	blpl	251e20 <__Stack_Size+0x251a20>
    7e1c:	03000031 	movweq	r0, #49	; 0x31
    7e20:	000053b7 			; <UNDEFINED> instruction: 0x000053b7
    7e24:	10002c00 	andne	r2, r0, r0, lsl #24
    7e28:	02820404 	addeq	r0, r2, #4, 8	; 0x4000000
    7e2c:	960a0000 	strls	r0, [sl], -r0
    7e30:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    7e34:	0b000002 	bleq	7e44 <__Stack_Size+0x7a44>
    7e38:	00000053 	andeq	r0, r0, r3, asr r0
    7e3c:	89040400 	stmdbhi	r4, {sl}
    7e40:	0a000002 	beq	7e50 <__Stack_Size+0x7a50>
    7e44:	00000096 	muleq	r0, r6, r0
    7e48:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    7e4c:	0000530b 	andeq	r5, r0, fp, lsl #6
    7e50:	00530b00 	subseq	r0, r3, r0, lsl #22
    7e54:	04000000 	streq	r0, [r0], #-0
    7e58:	00029e04 	andeq	r9, r2, r4, lsl #28
    7e5c:	07041100 	streq	r1, [r4, -r0, lsl #2]
    7e60:	000011f6 	strdeq	r1, [r0], -r6
    7e64:	01e5b903 	mvneq	fp, r3, lsl #18
    7e68:	48080000 	stmdami	r8, {}	; <UNPREDICTABLE>
    7e6c:	24000013 	strcs	r0, [r0], #-19
    7e70:	033ebb03 	teqeq	lr, #3072	; 0xc00
    7e74:	4a090000 	bmi	247e7c <__Stack_Size+0x247a7c>
    7e78:	03000016 	movweq	r0, #22
    7e7c:	000283bd 			; <UNDEFINED> instruction: 0x000283bd
    7e80:	46090000 	strmi	r0, [r9], -r0
    7e84:	03000015 	movweq	r0, #21
    7e88:	000283be 			; <UNDEFINED> instruction: 0x000283be
    7e8c:	c0090400 	andgt	r0, r9, r0, lsl #8
    7e90:	03000014 	movweq	r0, #20
    7e94:	000283bf 			; <UNDEFINED> instruction: 0x000283bf
    7e98:	5c090800 	stcpl	8, cr0, [r9], {-0}
    7e9c:	03000015 	movweq	r0, #21
    7ea0:	000283c0 	andeq	r8, r2, r0, asr #7
    7ea4:	60090c00 	andvs	r0, r9, r0, lsl #24
    7ea8:	03000013 	movweq	r0, #19
    7eac:	000283c1 	andeq	r8, r2, r1, asr #7
    7eb0:	0c091000 	stceq	0, cr1, [r9], {-0}
    7eb4:	03000017 	movweq	r0, #23
    7eb8:	000283c2 	andeq	r8, r2, r2, asr #7
    7ebc:	ec091400 	cfstrs	mvf1, [r9], {-0}
    7ec0:	03000017 	movweq	r0, #23
    7ec4:	000283c3 	andeq	r8, r2, r3, asr #7
    7ec8:	0a091800 	beq	24ded0 <__Stack_Size+0x24dad0>
    7ecc:	03000014 	movweq	r0, #20
    7ed0:	000283c4 	andeq	r8, r2, r4, asr #7
    7ed4:	b8091c00 	stmdalt	r9, {sl, fp, ip}
    7ed8:	03000013 	movweq	r0, #19
    7edc:	000283c5 	andeq	r8, r2, r5, asr #7
    7ee0:	07002000 	streq	r2, [r0, -r0]
    7ee4:	00001349 	andeq	r1, r0, r9, asr #6
    7ee8:	02c5c703 	sbceq	ip, r5, #786432	; 0xc0000
    7eec:	ad120000 	ldcge	0, cr0, [r2, #-0]
    7ef0:	0100002f 	tsteq	r0, pc, lsr #32
    7ef4:	00000035 	andeq	r0, r0, r5, lsr r0
    7ef8:	00003800 	andeq	r3, r0, r0, lsl #16
    7efc:	139c0100 	orrsne	r0, ip, #0, 2
    7f00:	0000122c 	andeq	r1, r0, ip, lsr #4
    7f04:	02baee03 	adcseq	lr, sl, #3, 28	; 0x30
    7f08:	73130000 	tstvc	r3, #0
    7f0c:	0300002f 	movweq	r0, #47	; 0x2f
    7f10:	00033eef 	andeq	r3, r3, pc, ror #29
    7f14:	17a81400 	strne	r1, [r8, r0, lsl #8]!
    7f18:	27010000 	strcs	r0, [r1, -r0]
    7f1c:	000001da 	ldrdeq	r0, [r0], -sl
    7f20:	06400305 	strbeq	r0, [r0], -r5, lsl #6
    7f24:	a5142000 	ldrge	r2, [r4, #-0]
    7f28:	0100002f 	tsteq	r0, pc, lsr #32
    7f2c:	00005318 	andeq	r5, r0, r8, lsl r3
    7f30:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    7f34:	14200006 	strtne	r0, [r0], #-6
    7f38:	0000142c 	andeq	r1, r0, ip, lsr #8
    7f3c:	03a31d01 			; <UNDEFINED> instruction: 0x03a31d01
    7f40:	03050000 	movweq	r0, #20480	; 0x5000
    7f44:	20000660 	andcs	r0, r0, r0, ror #12
    7f48:	01da0404 	bicseq	r0, sl, r4, lsl #8
    7f4c:	b6140000 	ldrlt	r0, [r4], -r0
    7f50:	0100002f 	tsteq	r0, pc, lsr #32
    7f54:	0003ba20 	andeq	fp, r3, r0, lsr #20
    7f58:	38030500 	stmdacc	r3, {r8, sl}
    7f5c:	04200006 	strteq	r0, [r0], #-6
    7f60:	0002ba04 	andeq	fp, r2, r4, lsl #20
    7f64:	2f721400 	svccs	0x00721400
    7f68:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    7f6c:	000003d1 	ldrdeq	r0, [r0], -r1
    7f70:	065c0305 	ldrbeq	r0, [ip], -r5, lsl #6
    7f74:	04042000 	streq	r2, [r4], #-0
    7f78:	0000033e 	andeq	r0, r0, lr, lsr r3
    7f7c:	002f6814 	eoreq	r6, pc, r4, lsl r8	; <UNPREDICTABLE>
    7f80:	41250100 	teqmi	r5, r0, lsl #2
    7f84:	05000000 	streq	r0, [r0, #-0]
    7f88:	00063403 	andeq	r3, r6, r3, lsl #8
    7f8c:	18d01420 	ldmne	r0, {r5, sl, ip}^
    7f90:	26010000 	strcs	r0, [r1], -r0
    7f94:	00000041 	andeq	r0, r0, r1, asr #32
    7f98:	06640305 	strbteq	r0, [r4], -r5, lsl #6
    7f9c:	10002000 	andne	r2, r0, r0
    7fa0:	0400000e 	streq	r0, [r0], #-14
    7fa4:	001bc700 	andseq	ip, fp, r0, lsl #14
    7fa8:	c1010400 	tstgt	r1, r0, lsl #8
    7fac:	01000002 	tsteq	r0, r2
    7fb0:	00002fe0 	andeq	r2, r0, r0, ror #31
    7fb4:	0000009a 	muleq	r0, sl, r0
    7fb8:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7fbc:	00000000 	andeq	r0, r0, r0
    7fc0:	0000254a 	andeq	r2, r0, sl, asr #10
    7fc4:	1d050402 	cfstrsne	mvf0, [r5, #-8]
    7fc8:	02000007 	andeq	r0, r0, #7
    7fcc:	06ef0502 	strbteq	r0, [pc], r2, lsl #10
    7fd0:	01020000 	mrseq	r0, (UNDEF: 2)
    7fd4:	00088c06 	andeq	r8, r8, r6, lsl #24
    7fd8:	33750300 	cmncc	r5, #0, 6
    7fdc:	27020032 	smladxcs	r2, r2, r0, r0
    7fe0:	00000045 	andeq	r0, r0, r5, asr #32
    7fe4:	19070402 	stmdbne	r7, {r1, sl}
    7fe8:	03000008 	movweq	r0, #8
    7fec:	00363175 	eorseq	r3, r6, r5, ror r1
    7ff0:	00572802 	subseq	r2, r7, r2, lsl #16
    7ff4:	02020000 	andeq	r0, r2, #0
    7ff8:	000a7307 	andeq	r7, sl, r7, lsl #6
    7ffc:	38750300 	ldmdacc	r5!, {r8, r9}^
    8000:	68290200 	stmdavs	r9!, {r9}
    8004:	02000000 	andeq	r0, r0, #0
    8008:	088a0801 	stmeq	sl, {r0, fp}
    800c:	01040000 	mrseq	r0, (UNDEF: 4)
    8010:	00843a02 	addeq	r3, r4, r2, lsl #20
    8014:	56050000 	strpl	r0, [r5], -r0
    8018:	00000007 	andeq	r0, r0, r7
    801c:	00020605 	andeq	r0, r2, r5, lsl #12
    8020:	06000100 	streq	r0, [r0], -r0, lsl #2
    8024:	00000537 	andeq	r0, r0, r7, lsr r5
    8028:	006f3a02 	rsbeq	r3, pc, r2, lsl #20
    802c:	04020000 	streq	r0, [r2], #-0
    8030:	00081007 	andeq	r1, r8, r7
    8034:	146c0700 	strbtne	r0, [ip], #-1792	; 0x700
    8038:	03010000 	movweq	r0, #4096	; 0x1000
    803c:	0000bb16 	andeq	fp, r0, r6, lsl fp
    8040:	15d40500 	ldrbne	r0, [r4, #1280]	; 0x500
    8044:	05000000 	streq	r0, [r0, #-0]
    8048:	000016ef 	andeq	r1, r0, pc, ror #13
    804c:	13f70501 	mvnsne	r0, #4194304	; 0x400000
    8050:	05020000 	streq	r0, [r2, #-0]
    8054:	00001845 	andeq	r1, r0, r5, asr #16
    8058:	4d070003 	stcmi	0, cr0, [r7, #-12]
    805c:	01000013 	tsteq	r0, r3, lsl r0
    8060:	011c1f03 	tsteq	ip, r3, lsl #30
    8064:	2b050000 	blcs	14806c <__Stack_Size+0x147c6c>
    8068:	00000033 	andeq	r0, r0, r3, lsr r0
    806c:	0031ee05 	eorseq	lr, r1, r5, lsl #28
    8070:	b3050100 	movwlt	r0, #20736	; 0x5100
    8074:	02000006 	andeq	r0, r0, #6
    8078:	00308705 	eorseq	r8, r0, r5, lsl #14
    807c:	bd050300 	stclt	3, cr0, [r5, #-0]
    8080:	04000006 	streq	r0, [r0], #-6
    8084:	0030e905 	eorseq	lr, r0, r5, lsl #18
    8088:	51050500 	tstpl	r5, r0, lsl #10
    808c:	06000032 			; <UNDEFINED> instruction: 0x06000032
    8090:	00314305 	eorseq	r4, r1, r5, lsl #6
    8094:	76050700 	strvc	r0, [r5], -r0, lsl #14
    8098:	08000033 	stmdaeq	r0, {r0, r1, r4, r5}
    809c:	0033d205 	eorseq	sp, r3, r5, lsl #4
    80a0:	b5050900 	strlt	r0, [r5, #-2304]	; 0x900
    80a4:	0a000031 	beq	8170 <__Stack_Size+0x7d70>
    80a8:	00321105 	eorseq	r1, r2, r5, lsl #2
    80ac:	0c050b00 	stceq	11, cr0, [r5], {-0}
    80b0:	0c000031 	stceq	0, cr0, [r0], {49}	; 0x31
    80b4:	00330505 	eorseq	r0, r3, r5, lsl #10
    80b8:	07000c00 	streq	r0, [r0, -r0, lsl #24]
    80bc:	00002fcf 	andeq	r2, r0, pc, asr #31
    80c0:	47320301 	ldrmi	r0, [r2, -r1, lsl #6]!
    80c4:	05000001 	streq	r0, [r0, #-1]
    80c8:	00003388 	andeq	r3, r0, r8, lsl #7
    80cc:	30600501 	rsbcc	r0, r0, r1, lsl #10
    80d0:	05020000 	streq	r0, [r2, #-0]
    80d4:	00003260 	andeq	r3, r0, r0, ror #4
    80d8:	335c0503 	cmpcc	ip, #12582912	; 0xc00000
    80dc:	05040000 	streq	r0, [r4, #-0]
    80e0:	00003336 	andeq	r3, r0, r6, lsr r3
    80e4:	93070005 	movwls	r0, #28677	; 0x7005
    80e8:	01000030 	tsteq	r0, r0, lsr r0
    80ec:	01603c03 	cmneq	r0, r3, lsl #24
    80f0:	a6050000 	strge	r0, [r5], -r0
    80f4:	00000031 	andeq	r0, r0, r1, lsr r0
    80f8:	0030a505 	eorseq	sl, r0, r5, lsl #10
    80fc:	07000100 	streq	r0, [r0, -r0, lsl #2]
    8100:	00002fc0 	andeq	r2, r0, r0, asr #31
    8104:	a9190401 	ldmdbge	r9, {r0, sl}
    8108:	05000001 	streq	r0, [r0, #-1]
    810c:	000030ca 	andeq	r3, r0, sl, asr #1
    8110:	31710500 	cmncc	r1, r0, lsl #10
    8114:	05010000 	streq	r0, [r1, #-0]
    8118:	000030e1 	andeq	r3, r0, r1, ror #1
    811c:	30160502 	andscc	r0, r6, r2, lsl #10
    8120:	05030000 	streq	r0, [r3, #-0]
    8124:	000030dc 	ldrdeq	r3, [r0], -ip
    8128:	30110504 	andscc	r0, r1, r4, lsl #10
    812c:	05050000 	streq	r0, [r5, #-0]
    8130:	000032b5 			; <UNDEFINED> instruction: 0x000032b5
    8134:	30ba0506 	adcscc	r0, sl, r6, lsl #10
    8138:	05070000 	streq	r0, [r7, #-0]
    813c:	000031fc 	strdeq	r3, [r0], -ip
    8140:	32c40508 	sbccc	r0, r4, #8, 10	; 0x2000000
    8144:	00090000 	andeq	r0, r9, r0
    8148:	00132e08 	andseq	r2, r3, r8, lsl #28
    814c:	27040800 	strcs	r0, [r4, -r0, lsl #16]
    8150:	000001ce 	andeq	r0, r0, lr, asr #3
    8154:	00159d09 	andseq	r9, r5, r9, lsl #26
    8158:	ce290400 	cdpgt	4, 2, cr0, cr9, cr0, {0}
    815c:	00000001 	andeq	r0, r0, r1
    8160:	00152809 	andseq	r2, r5, r9, lsl #16
    8164:	4c2a0400 	cfstrsmi	mvf0, [sl], #-0
    8168:	04000000 	streq	r0, [r0], #-0
    816c:	5e040a00 	vmlapl.f32	s0, s8, s0
    8170:	06000000 	streq	r0, [r0], -r0
    8174:	0000161f 	andeq	r1, r0, pc, lsl r6
    8178:	01a92c04 			; <UNDEFINED> instruction: 0x01a92c04
    817c:	42070000 	andmi	r0, r7, #0
    8180:	01000012 	tsteq	r0, r2, lsl r0
    8184:	02043004 	andeq	r3, r4, #4
    8188:	56050000 	strpl	r0, [r5], -r0
    818c:	00000012 	andeq	r0, r0, r2, lsl r0
    8190:	0012ec05 	andseq	lr, r2, r5, lsl #24
    8194:	7f050100 	svcvc	0x00050100
    8198:	02000012 	andeq	r0, r0, #18
    819c:	0012de05 	andseq	sp, r2, r5, lsl #28
    81a0:	06000300 	streq	r0, [r0], -r0, lsl #6
    81a4:	00001243 	andeq	r1, r0, r3, asr #4
    81a8:	01df3704 	bicseq	r3, pc, r4, lsl #14
    81ac:	94080000 	strls	r0, [r8], #-0
    81b0:	0c000016 	stceq	0, cr0, [r0], {22}
    81b4:	024c3b04 	subeq	r3, ip, #4, 22	; 0x1000
    81b8:	20090000 	andcs	r0, r9, r0
    81bc:	04000014 	streq	r0, [r0], #-20
    81c0:	00004c53 	andeq	r4, r0, r3, asr ip
    81c4:	e0090000 	and	r0, r9, r0
    81c8:	04000017 	streq	r0, [r0], #-23
    81cc:	00004c54 	andeq	r4, r0, r4, asr ip
    81d0:	5e090200 	cdppl	2, 0, cr0, cr9, cr0, {0}
    81d4:	04000031 	streq	r0, [r0], #-49	; 0x31
    81d8:	00004c55 	andeq	r4, r0, r5, asr ip
    81dc:	03090400 	movweq	r0, #37888	; 0x9400
    81e0:	04000017 	streq	r0, [r0], #-23
    81e4:	00025b56 	andeq	r5, r2, r6, asr fp
    81e8:	0b000800 	bleq	a1f0 <__Stack_Size+0x9df0>
    81ec:	000001ce 	andeq	r0, r0, lr, asr #3
    81f0:	0000025b 	andeq	r0, r0, fp, asr r2
    81f4:	00004c0c 	andeq	r4, r0, ip, lsl #24
    81f8:	040a0000 	streq	r0, [sl], #-0
    81fc:	0000024c 	andeq	r0, r0, ip, asr #4
    8200:	00169506 	andseq	r9, r6, r6, lsl #10
    8204:	0f570400 	svceq	0x00570400
    8208:	08000002 	stmdaeq	r0, {r1}
    820c:	000016da 	ldrdeq	r1, [r0], -sl
    8210:	915b0402 	cmpls	fp, r2, lsl #8
    8214:	09000002 	stmdbeq	r0, {r1}
    8218:	00001502 	andeq	r1, r0, r2, lsl #10
    821c:	005e5d04 	subseq	r5, lr, r4, lsl #26
    8220:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8224:	0000162e 	andeq	r1, r0, lr, lsr #12
    8228:	005e5e04 	subseq	r5, lr, r4, lsl #28
    822c:	00010000 	andeq	r0, r1, r0
    8230:	0016db06 	andseq	sp, r6, r6, lsl #22
    8234:	6c600400 	cfstrdvs	mvd0, [r0], #-0
    8238:	0d000002 	stceq	0, cr0, [r0, #-8]
    823c:	02005742 	andeq	r5, r0, #17301504	; 0x1080000
    8240:	02c06504 	sbceq	r6, r0, #4, 10	; 0x1000000
    8244:	620e0000 	andvs	r0, lr, #0
    8248:	04003162 	streq	r3, [r0], #-354	; 0x162
    824c:	00005e67 	andeq	r5, r0, r7, ror #28
    8250:	620e0000 	andvs	r0, lr, #0
    8254:	04003062 	streq	r3, [r0], #-98	; 0x62
    8258:	00005e68 	andeq	r5, r0, r8, ror #28
    825c:	0f000100 	svceq	0x00000100
    8260:	dc620402 	cfstrdle	mvd0, [r2], #-8
    8264:	10000002 	andne	r0, r0, r2
    8268:	64040077 	strvs	r0, [r4], #-119	; 0x77
    826c:	0000004c 	andeq	r0, r0, ip, asr #32
    8270:	00776210 	rsbseq	r6, r7, r0, lsl r2
    8274:	029c6a04 	addseq	r6, ip, #4, 20	; 0x4000
    8278:	06000000 	streq	r0, [r0], -r0
    827c:	00001855 	andeq	r1, r0, r5, asr r8
    8280:	02c06b04 	sbceq	r6, r0, #4, 22	; 0x1000
    8284:	87080000 	strhi	r0, [r8, -r0]
    8288:	1c000013 	stcne	0, cr0, [r0], {19}
    828c:	03786d04 	cmneq	r8, #4, 26	; 0x100
    8290:	43090000 	movwmi	r0, #36864	; 0x9000
    8294:	04000017 	streq	r0, [r0], #-23
    8298:	00005e6f 	andeq	r5, r0, pc, ror #28
    829c:	f6090000 			; <UNDEFINED> instruction: 0xf6090000
    82a0:	04000012 	streq	r0, [r0], #-18
    82a4:	00005e70 	andeq	r5, r0, r0, ror lr
    82a8:	d2090100 	andle	r0, r9, #0, 2
    82ac:	04000014 	streq	r0, [r0], #-20
    82b0:	0002dc71 	andeq	sp, r2, r1, ror ip
    82b4:	ad090200 	sfmge	f0, 4, [r9, #-0]
    82b8:	04000013 	streq	r0, [r0], #-19
    82bc:	0002dc72 	andeq	sp, r2, r2, ror ip
    82c0:	b2090400 	andlt	r0, r9, #0, 8
    82c4:	04000015 	streq	r0, [r0], #-21
    82c8:	0002dc73 	andeq	sp, r2, r3, ror ip
    82cc:	e2090600 	and	r0, r9, #0, 12
    82d0:	04000016 	streq	r0, [r0], #-22
    82d4:	00005e75 	andeq	r5, r0, r5, ror lr
    82d8:	d0090800 	andle	r0, r9, r0, lsl #16
    82dc:	04000017 	streq	r0, [r0], #-23
    82e0:	00005e76 	andeq	r5, r0, r6, ror lr
    82e4:	be090900 	cdplt	9, 0, cr0, cr9, cr0, {0}
    82e8:	04000015 	streq	r0, [r0], #-21
    82ec:	00005e77 	andeq	r5, r0, r7, ror lr
    82f0:	0c090a00 	stceq	10, cr0, [r9], {-0}
    82f4:	04000016 	streq	r0, [r0], #-22
    82f8:	00005e78 	andeq	r5, r0, r8, ror lr
    82fc:	7b090b00 	blvc	24af04 <__Stack_Size+0x24ab04>
    8300:	04000016 	streq	r0, [r0], #-22
    8304:	00005e79 	andeq	r5, r0, r9, ror lr
    8308:	b4090c00 	strlt	r0, [r9], #-3072	; 0xc00
    830c:	04000017 	streq	r0, [r0], #-23
    8310:	0002617c 	andeq	r6, r2, ip, ror r1
    8314:	06001000 	streq	r1, [r0], -r0
    8318:	00001388 	andeq	r1, r0, r8, lsl #7
    831c:	02e77d04 	rsceq	r7, r7, #4, 26	; 0x100
    8320:	f5080000 			; <UNDEFINED> instruction: 0xf5080000
    8324:	30000011 	andcc	r0, r0, r1, lsl r0
    8328:	04207f04 	strteq	r7, [r0], #-3844	; 0xf04
    832c:	0b090000 	bleq	248334 <__Stack_Size+0x247f34>
    8330:	04000023 	streq	r0, [r0], #-35	; 0x23
    8334:	00042181 	andeq	r2, r4, r1, lsl #3
    8338:	22090000 	andcs	r0, r9, #0
    833c:	04000015 	streq	r0, [r0], #-21
    8340:	00042182 	andeq	r2, r4, r2, lsl #3
    8344:	c5090400 	strgt	r0, [r9, #-1024]	; 0x400
    8348:	04000012 	streq	r0, [r0], #-18
    834c:	00042185 	andeq	r2, r4, r5, lsl #3
    8350:	62090800 	andvs	r0, r9, #0, 16
    8354:	04000012 	streq	r0, [r0], #-18
    8358:	00042186 	andeq	r2, r4, r6, lsl #3
    835c:	98090c00 	stmdals	r9, {sl, fp}
    8360:	04000012 	streq	r0, [r0], #-18
    8364:	00043698 	muleq	r4, r8, r6
    8368:	19091000 	stmdbne	r9, {ip}
    836c:	04000012 	streq	r0, [r0], #-18
    8370:	000436a3 	andeq	r3, r4, r3, lsr #13
    8374:	a9091400 	stmdbge	r9, {sl, ip}
    8378:	04000012 	streq	r0, [r0], #-18
    837c:	000450ad 	andeq	r5, r4, sp, lsr #1
    8380:	ee091800 	cdp	8, 0, cr1, cr9, cr0, {0}
    8384:	04000014 	streq	r0, [r0], #-20
    8388:	00025baf 	andeq	r5, r2, pc, lsr #23
    838c:	31091c00 	tstcc	r9, r0, lsl #24
    8390:	04000018 	streq	r0, [r0], #-24
    8394:	00025bb0 			; <UNDEFINED> instruction: 0x00025bb0
    8398:	2f092000 	svccs	0x00092000
    839c:	04000017 	streq	r0, [r0], #-23
    83a0:	00025bb1 			; <UNDEFINED> instruction: 0x00025bb1
    83a4:	02092400 	andeq	r2, r9, #0, 8
    83a8:	04000012 	streq	r0, [r0], #-18
    83ac:	000456b5 			; <UNDEFINED> instruction: 0x000456b5
    83b0:	5b092800 	blpl	2523b8 <__Stack_Size+0x251fb8>
    83b4:	04000031 	streq	r0, [r0], #-49	; 0x31
    83b8:	00005eb7 			; <UNDEFINED> instruction: 0x00005eb7
    83bc:	11002c00 	tstne	r0, r0, lsl #24
    83c0:	0420040a 	strteq	r0, [r0], #-1034	; 0x40a
    83c4:	040b0000 	streq	r0, [fp], #-0
    83c8:	36000002 	strcc	r0, [r0], -r2
    83cc:	0c000004 	stceq	0, cr0, [r0], {4}
    83d0:	0000005e 	andeq	r0, r0, lr, asr r0
    83d4:	27040a00 	strcs	r0, [r4, -r0, lsl #20]
    83d8:	0b000004 	bleq	83f0 <__Stack_Size+0x7ff0>
    83dc:	00000204 	andeq	r0, r0, r4, lsl #4
    83e0:	00000450 	andeq	r0, r0, r0, asr r4
    83e4:	00005e0c 	andeq	r5, r0, ip, lsl #28
    83e8:	005e0c00 	subseq	r0, lr, r0, lsl #24
    83ec:	0a000000 	beq	83f4 <__Stack_Size+0x7ff4>
    83f0:	00043c04 	andeq	r3, r4, r4, lsl #24
    83f4:	06041200 	streq	r1, [r4], -r0, lsl #4
    83f8:	000011f6 	strdeq	r1, [r0], -r6
    83fc:	0383b904 	orreq	fp, r3, #4, 18	; 0x10000
    8400:	48080000 	stmdami	r8, {}	; <UNPREDICTABLE>
    8404:	24000013 	strcs	r0, [r0], #-19
    8408:	04dcbb04 	ldrbeq	fp, [ip], #2820	; 0xb04
    840c:	4a090000 	bmi	248414 <__Stack_Size+0x248014>
    8410:	04000016 	streq	r0, [r0], #-22
    8414:	000421bd 			; <UNDEFINED> instruction: 0x000421bd
    8418:	46090000 	strmi	r0, [r9], -r0
    841c:	04000015 	streq	r0, [r0], #-21
    8420:	000421be 			; <UNDEFINED> instruction: 0x000421be
    8424:	c0090400 	andgt	r0, r9, r0, lsl #8
    8428:	04000014 	streq	r0, [r0], #-20
    842c:	000421bf 			; <UNDEFINED> instruction: 0x000421bf
    8430:	5c090800 	stcpl	8, cr0, [r9], {-0}
    8434:	04000015 	streq	r0, [r0], #-21
    8438:	000421c0 	andeq	r2, r4, r0, asr #3
    843c:	60090c00 	andvs	r0, r9, r0, lsl #24
    8440:	04000013 	streq	r0, [r0], #-19
    8444:	000421c1 	andeq	r2, r4, r1, asr #3
    8448:	0c091000 	stceq	0, cr1, [r9], {-0}
    844c:	04000017 	streq	r0, [r0], #-23
    8450:	000421c2 	andeq	r2, r4, r2, asr #3
    8454:	ec091400 	cfstrs	mvf1, [r9], {-0}
    8458:	04000017 	streq	r0, [r0], #-23
    845c:	000421c3 	andeq	r2, r4, r3, asr #3
    8460:	0a091800 	beq	24e468 <__Stack_Size+0x24e068>
    8464:	04000014 	streq	r0, [r0], #-20
    8468:	000421c4 	andeq	r2, r4, r4, asr #3
    846c:	b8091c00 	stmdalt	r9, {sl, fp, ip}
    8470:	04000013 	streq	r0, [r0], #-19
    8474:	000421c5 	andeq	r2, r4, r5, asr #3
    8478:	06002000 	streq	r2, [r0], -r0
    847c:	00001349 	andeq	r1, r0, r9, asr #6
    8480:	0463c704 	strbteq	ip, [r3], #-1796	; 0x704
    8484:	46130000 	ldrmi	r0, [r3], -r0
    8488:	01000030 	tsteq	r0, r0, lsr r0
    848c:	0001ce3d 	andeq	ip, r1, sp, lsr lr
    8490:	000b6c00 	andeq	r6, fp, r0, lsl #24
    8494:	00002408 	andeq	r2, r0, r8, lsl #8
    8498:	109c0100 	addsne	r0, ip, r0, lsl #2
    849c:	14000005 	strne	r0, [r0], #-5
    84a0:	00003755 	andeq	r3, r0, r5, asr r7
    84a4:	004c3d01 	subeq	r3, ip, r1, lsl #26
    84a8:	3ee90000 	cdpcc	0, 14, cr0, cr9, cr0, {0}
    84ac:	13000000 	movwne	r0, #0
    84b0:	0000321f 	andeq	r3, r0, pc, lsl r2
    84b4:	01ce6b01 	biceq	r6, lr, r1, lsl #22
    84b8:	0b900000 	bleq	fe4084c0 <SCS_BASE+0x1e3fa4c0>
    84bc:	00240800 	eoreq	r0, r4, r0, lsl #16
    84c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    84c4:	00000539 	andeq	r0, r0, r9, lsr r5
    84c8:	00375514 	eorseq	r5, r7, r4, lsl r5
    84cc:	4c6b0100 	stfmie	f0, [fp], #-0
    84d0:	0a000000 	beq	84d8 <__Stack_Size+0x80d8>
    84d4:	0000003f 	andeq	r0, r0, pc, lsr r0
    84d8:	00339a13 	eorseq	r9, r3, r3, lsl sl
    84dc:	cea30100 	fdvgts	f0, f3, f0
    84e0:	b4000001 	strlt	r0, [r0], #-1
    84e4:	9008000b 	andls	r0, r8, fp
    84e8:	01000000 	mrseq	r0, (UNDEF: 0)
    84ec:	0005a39c 	muleq	r5, ip, r3
    84f0:	37551400 	ldrbcc	r1, [r5, -r0, lsl #8]
    84f4:	a3010000 	movwge	r0, #4096	; 0x1000
    84f8:	0000004c 	andeq	r0, r0, ip, asr #32
    84fc:	00003f2b 	andeq	r3, r0, fp, lsr #30
    8500:	000bd415 	andeq	sp, fp, r5, lsl r4
    8504:	00001c08 	andeq	r1, r0, r8, lsl #24
    8508:	00057e00 	andeq	r7, r5, r0, lsl #28
    850c:	17d81600 	ldrbne	r1, [r8, r0, lsl #12]
    8510:	b1010000 	mrslt	r0, (UNDEF: 1)
    8514:	0000005e 	andeq	r0, r0, lr, asr r0
    8518:	00003f4c 	andeq	r3, r0, ip, asr #30
    851c:	0bf81700 	bleq	ffe0e124 <SCS_BASE+0x1fe00124>
    8520:	00300800 	eorseq	r0, r0, r0, lsl #16
    8524:	35160000 	ldrcc	r0, [r6, #-0]
    8528:	01000032 	tsteq	r0, r2, lsr r0
    852c:	00005ecf 	andeq	r5, r0, pc, asr #29
    8530:	003f6000 	eorseq	r6, pc, r0
    8534:	311b1800 	tstcc	fp, r0, lsl #16
    8538:	d0010000 	andle	r0, r1, r0
    853c:	0000005e 	andeq	r0, r0, lr, asr r0
    8540:	72190000 	andsvc	r0, r9, #0
    8544:	01000032 	tsteq	r0, r2, lsr r0
    8548:	0c4401f4 	stfeqe	f0, [r4], {244}	; 0xf4
    854c:	00a80800 	adceq	r0, r8, r0, lsl #16
    8550:	9c010000 	stcls	0, cr0, [r1], {-0}
    8554:	00000668 	andeq	r0, r0, r8, ror #12
    8558:	0031691a 	eorseq	r6, r1, sl, lsl r9
    855c:	01f60100 	mvnseq	r0, r0, lsl #2
    8560:	00000668 	andeq	r0, r0, r8, ror #12
    8564:	00003f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    8568:	0031231a 	eorseq	r2, r1, sl, lsl r3
    856c:	01f70100 	mvnseq	r0, r0, lsl #2
    8570:	0000003a 	andeq	r0, r0, sl, lsr r0
    8574:	00003fa6 	andeq	r3, r0, r6, lsr #31
    8578:	0016e21a 	andseq	lr, r6, sl, lsl r2
    857c:	01f80100 	mvnseq	r0, r0, lsl #2
    8580:	0000003a 	andeq	r0, r0, sl, lsr r0
    8584:	00003fea 	andeq	r3, r0, sl, ror #31
    8588:	0032461a 	eorseq	r4, r2, sl, lsl r6
    858c:	01fa0100 	mvnseq	r0, r0, lsl #2
    8590:	000001ce 	andeq	r0, r0, lr, asr #3
    8594:	00004035 	andeq	r4, r0, r5, lsr r0
    8598:	0037551a 	eorseq	r5, r7, sl, lsl r5
    859c:	01fb0100 	mvnseq	r0, r0, lsl #2
    85a0:	0000003a 	andeq	r0, r0, sl, lsr r0
    85a4:	00004053 	andeq	r4, r0, r3, asr r0
    85a8:	0032a31b 	eorseq	sl, r2, fp, lsl r3
    85ac:	022f0100 	eoreq	r0, pc, #0, 2
    85b0:	08000cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp}
    85b4:	000c961c 	andeq	r9, ip, ip, lsl r6
    85b8:	00062508 	andeq	r2, r6, r8, lsl #10
    85bc:	50011d00 	andpl	r1, r1, r0, lsl #26
    85c0:	00007502 	andeq	r7, r0, r2, lsl #10
    85c4:	000c9e1e 	andeq	r9, ip, lr, lsl lr
    85c8:	000d3608 	andeq	r3, sp, r8, lsl #12
    85cc:	00063800 	andeq	r3, r6, r0, lsl #16
    85d0:	50011d00 	andpl	r1, r1, r0, lsl #26
    85d4:	1e003001 	cdpne	0, 0, cr3, cr0, cr1, {0}
    85d8:	08000ca8 	stmdaeq	r0, {r3, r5, r7, sl, fp}
    85dc:	00000d4c 	andeq	r0, r0, ip, asr #26
    85e0:	00000652 	andeq	r0, r0, r2, asr r6
    85e4:	0252011d 	subseq	r0, r2, #1073741831	; 0x40000007
    85e8:	011d0075 	tsteq	sp, r5, ror r0
    85ec:	00790250 	rsbseq	r0, r9, r0, asr r2
    85f0:	0cb01f00 	ldceq	15, cr1, [r0]
    85f4:	0d670800 	stcleq	8, cr0, [r7, #-0]
    85f8:	011d0000 	tsteq	sp, r0
    85fc:	00750251 	rsbseq	r0, r5, r1, asr r2
    8600:	0150011d 	cmpeq	r0, sp, lsl r1
    8604:	0a000030 	beq	86cc <__Stack_Size+0x82cc>
    8608:	00026104 	andeq	r6, r2, r4, lsl #2
    860c:	33b82000 			; <UNDEFINED> instruction: 0x33b82000
    8610:	52010000 	andpl	r0, r1, #0
    8614:	00000204 	andeq	r0, r0, r4, lsl #4
    8618:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}
    861c:	00000038 	andeq	r0, r0, r8, lsr r0
    8620:	ca139c01 	bgt	4ef62c <__Stack_Size+0x4ef22c>
    8624:	01000032 	tsteq	r0, r2, lsr r0
    8628:	00020480 	andeq	r0, r2, r0, lsl #9
    862c:	000d2400 	andeq	r2, sp, r0, lsl #8
    8630:	00004808 	andeq	r4, r0, r8, lsl #16
    8634:	ab9c0100 	blge	fe708a3c <SCS_BASE+0x1e6faa3c>
    8638:	21000006 	tstcs	r0, r6
    863c:	01006552 	tsteq	r0, r2, asr r5
    8640:	00020482 	andeq	r0, r2, r2, lsl #9
    8644:	00409100 	subeq	r9, r0, r0, lsl #2
    8648:	fb130000 	blx	4c8652 <__Stack_Size+0x4c8252>
    864c:	0100002f 	tsteq	r0, pc, lsr #32
    8650:	000204f5 	strdeq	r0, [r2], -r5
    8654:	000d6c00 	andeq	r6, sp, r0, lsl #24
    8658:	0000d808 	andeq	sp, r0, r8, lsl #16
    865c:	879c0100 	ldrhi	r0, [ip, r0, lsl #2]
    8660:	16000007 	strne	r0, [r0], -r7
    8664:	0000302c 	andeq	r3, r0, ip, lsr #32
    8668:	003af701 	eorseq	pc, sl, r1, lsl #14
    866c:	40af0000 	adcmi	r0, pc, r0
    8670:	3d160000 	ldccc	0, cr0, [r6, #-0]
    8674:	01000020 	tsteq	r0, r0, lsr #32
    8678:	00003af8 	strdeq	r3, [r0], -r8
    867c:	0040e700 	subeq	lr, r0, r0, lsl #14
    8680:	0d881700 	stceq	7, cr1, [r8]
    8684:	00a80800 	adceq	r0, r8, r0, lsl #16
    8688:	71220000 	teqvc	r2, r0
    868c:	01000033 	tsteq	r0, r3, lsr r0
    8690:	07870102 	streq	r0, [r7, r2, lsl #2]
    8694:	351a0000 	ldrcc	r0, [sl, #-0]
    8698:	01000032 	tsteq	r0, r2, lsr r0
    869c:	003a0103 	eorseq	r0, sl, r3, lsl #2
    86a0:	41100000 	tstmi	r0, r0
    86a4:	1b1a0000 	blne	6886ac <__Stack_Size+0x6882ac>
    86a8:	01000031 	tsteq	r0, r1, lsr r0
    86ac:	003a0104 	eorseq	r0, sl, r4, lsl #2
    86b0:	41390000 	teqmi	r9, r0
    86b4:	72230000 	eorvc	r0, r3, #0
    86b8:	01005045 	tsteq	r0, r5, asr #32
    86bc:	003a0105 	eorseq	r0, sl, r5, lsl #2
    86c0:	41100000 	tstmi	r0, r0
    86c4:	0a150000 	beq	5486cc <__Stack_Size+0x5482cc>
    86c8:	1a08000e 	bne	208708 <__Stack_Size+0x208308>
    86cc:	45000000 	strmi	r0, [r0, #-0]
    86d0:	1a000007 	bne	86f4 <__Stack_Size+0x82f4>
    86d4:	0000328b 	andeq	r3, r0, fp, lsl #5
    86d8:	4c013f01 	stcmi	15, cr3, [r1], {1}
    86dc:	51000000 	mrspl	r0, (UNDEF: 0)
    86e0:	00000041 	andeq	r0, r0, r1, asr #32
    86e4:	000de41e 	andeq	lr, sp, lr, lsl r4
    86e8:	000d7e08 	andeq	r7, sp, r8, lsl #28
    86ec:	00075900 	andeq	r5, r7, r0, lsl #18
    86f0:	50011d00 	andpl	r1, r1, r0, lsl #26
    86f4:	00007402 	andeq	r7, r0, r2, lsl #8
    86f8:	000dec1e 	andeq	lr, sp, lr, lsl ip
    86fc:	000d9008 	andeq	r9, sp, r8
    8700:	00077300 	andeq	r7, r7, r0, lsl #6
    8704:	51011d00 	tstpl	r1, r0, lsl #26
    8708:	1d300802 	ldcne	8, cr0, [r0, #-8]!
    870c:	74025001 	strvc	r5, [r2], #-1
    8710:	04240000 	strteq	r0, [r4], #-0
    8714:	a708000e 	strge	r0, [r8, -lr]
    8718:	2400000d 	strcs	r0, [r0], #-13
    871c:	08000e0a 	stmdaeq	r0, {r1, r3, r9, sl, fp}
    8720:	00000dbe 			; <UNDEFINED> instruction: 0x00000dbe
    8724:	040a0000 	streq	r0, [sl], #-0
    8728:	00000291 	muleq	r0, r1, r2
    872c:	00317c25 	eorseq	r7, r1, r5, lsr #24
    8730:	01520100 	cmpeq	r2, r0, lsl #2
    8734:	00000204 	andeq	r0, r0, r4, lsl #4
    8738:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
    873c:	0000008c 	andeq	r0, r0, ip, lsl #1
    8740:	081c9c01 	ldmdaeq	ip, {r0, sl, fp, ip, pc}
    8744:	1b1a0000 	blne	68874c <__Stack_Size+0x68834c>
    8748:	01000031 	tsteq	r0, r1, lsr r0
    874c:	003a0154 	eorseq	r0, sl, r4, asr r1
    8750:	417f0000 	cmnmi	pc, r0
    8754:	351a0000 	ldrcc	r0, [sl, #-0]
    8758:	01000032 	tsteq	r0, r2, lsr r0
    875c:	003a0155 	eorseq	r0, sl, r5, asr r1
    8760:	41a70000 			; <UNDEFINED> instruction: 0x41a70000
    8764:	72230000 	eorvc	r0, r3, #0
    8768:	01005045 	tsteq	r0, r5, asr #32
    876c:	003a0156 	eorseq	r0, sl, r6, asr r1
    8770:	41a70000 			; <UNDEFINED> instruction: 0x41a70000
    8774:	3d1a0000 	ldccc	0, cr0, [sl, #-0]
    8778:	01000020 	tsteq	r0, r0, lsr #32
    877c:	003a0157 	eorseq	r0, sl, r7, asr r1
    8780:	41dc0000 	bicsmi	r0, ip, r0
    8784:	98260000 	stmdals	r6!, {}	; <UNPREDICTABLE>
    8788:	0100000a 	tsteq	r0, sl
    878c:	1a000008 	bne	87b4 <__Stack_Size+0x83b4>
    8790:	0000328b 	andeq	r3, r0, fp, lsl #5
    8794:	4c017301 	stcmi	3, cr7, [r1], {1}
    8798:	fa000000 	blx	87a0 <__Stack_Size+0x83a0>
    879c:	00000041 	andeq	r0, r0, r1, asr #32
    87a0:	000e9c17 	andeq	r9, lr, r7, lsl ip
    87a4:	00001808 	andeq	r1, r0, r8, lsl #16
    87a8:	328b1a00 	addcc	r1, fp, #0, 20
    87ac:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    87b0:	00004c01 	andeq	r4, r0, r1, lsl #24
    87b4:	00422200 	subeq	r2, r2, r0, lsl #4
    87b8:	27000000 	strcs	r0, [r0, -r0]
    87bc:	000032eb 	andeq	r3, r0, fp, ror #5
    87c0:	04018801 	streq	r8, [r1], #-2049	; 0x801
    87c4:	d0000002 	andle	r0, r0, r2
    87c8:	2408000e 	strcs	r0, [r8], #-14
    87cc:	01000000 	mrseq	r0, (UNDEF: 0)
    87d0:	147c289c 	ldrbtne	r2, [ip], #-2204	; 0x89c
    87d4:	a2010000 	andge	r0, r1, #0
    87d8:	0001ce01 	andeq	ip, r1, r1, lsl #28
    87dc:	000ef400 	andeq	pc, lr, r0, lsl #8
    87e0:	00001c08 	andeq	r1, r0, r8, lsl #24
    87e4:	7d9c0100 	ldfvcs	f0, [ip]
    87e8:	29000008 	stmdbcs	r0, {r3}
    87ec:	00003755 	andeq	r3, r0, r5, asr r7
    87f0:	4c01a201 	sfmmi	f2, 1, [r1], {1}
    87f4:	3b000000 	blcc	87fc <__Stack_Size+0x83fc>
    87f8:	29000042 	stmdbcs	r0, {r1, r6}
    87fc:	00003325 	andeq	r3, r0, r5, lsr #6
    8800:	7d01a201 	sfmvc	f2, 1, [r1, #-4]
    8804:	5c000008 	stcpl	0, cr0, [r0], {8}
    8808:	1a000042 	bne	8918 <__Stack_Size+0x8518>
    880c:	000017e4 	andeq	r1, r0, r4, ror #15
    8810:	3a01a401 	bcc	7181c <__Stack_Size+0x7141c>
    8814:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    8818:	00000042 	andeq	r0, r0, r2, asr #32
    881c:	01d4040a 	bicseq	r0, r4, sl, lsl #8
    8820:	98280000 	stmdals	r8!, {}	; <UNPREDICTABLE>
    8824:	01000031 	tsteq	r0, r1, lsr r0
    8828:	005e03f6 	ldrsheq	r0, [lr], #-54	; 0xffffffca
    882c:	0f100000 	svceq	0x00100000
    8830:	00400800 	subeq	r0, r0, r0, lsl #16
    8834:	9c010000 	stcls	0, cr0, [r1], {-0}
    8838:	000008ad 	andeq	r0, r0, sp, lsr #17
    883c:	000f1e1f 	andeq	r1, pc, pc, lsl lr	; <UNPREDICTABLE>
    8840:	000da708 	andeq	sl, sp, r8, lsl #14
    8844:	50011d00 	andpl	r1, r1, r0, lsl #26
    8848:	00003001 	andeq	r3, r0, r1
    884c:	0031352a 	eorseq	r3, r1, sl, lsr #10
    8850:	023a0100 	eorseq	r0, sl, #0, 2
    8854:	0008e701 	andeq	lr, r8, r1, lsl #14
    8858:	334a2200 	movtcc	r2, #41472	; 0xa200
    885c:	3c010000 	stccc	0, cr0, [r1], {-0}
    8860:	00020402 	andeq	r0, r2, r2, lsl #8
    8864:	15a82200 	strne	r2, [r8, #512]!	; 0x200
    8868:	3d010000 	stccc	0, cr0, [r1, #-0]
    886c:	00003a02 	andeq	r3, r0, r2, lsl #20
    8870:	16e22200 	strbtne	r2, [r2], r0, lsl #4
    8874:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    8878:	00003a02 	andeq	r3, r0, r2, lsl #20
    887c:	31302b00 	teqcc	r0, r0, lsl #22
    8880:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    8884:	372a0002 	strcc	r0, [sl, -r2]!
    8888:	01000031 	tsteq	r0, r1, lsr r0
    888c:	690102ba 	stmdbvs	r1, {r1, r3, r4, r5, r7, r9}
    8890:	22000009 	andcs	r0, r0, #9
    8894:	000016c5 	andeq	r1, r0, r5, asr #13
    8898:	5b02bc01 	blpl	b78a4 <__Stack_Size+0xb74a4>
    889c:	22000002 	andcs	r0, r0, #2
    88a0:	0000334a 	andeq	r3, r0, sl, asr #6
    88a4:	0402bd01 	streq	fp, [r2], #-3329	; 0xd01
    88a8:	22000002 	andcs	r0, r0, #2
    88ac:	000032e0 	andeq	r3, r0, r0, ror #5
    88b0:	3a02be01 	bcc	b80bc <__Stack_Size+0xb7cbc>
    88b4:	22000000 	andcs	r0, r0, #0
    88b8:	00003235 	andeq	r3, r0, r5, lsr r2
    88bc:	3a02c001 	bcc	b88c8 <__Stack_Size+0xb84c8>
    88c0:	22000000 	andcs	r0, r0, #0
    88c4:	00003072 	andeq	r3, r0, r2, ror r0
    88c8:	3a02c001 	bcc	b88d4 <__Stack_Size+0xb84d4>
    88cc:	22000000 	andcs	r0, r0, #0
    88d0:	000017e4 	andeq	r1, r0, r4, ror #15
    88d4:	3a02c101 	bcc	b8ce0 <__Stack_Size+0xb88e0>
    88d8:	22000000 	andcs	r0, r0, #0
    88dc:	0000203d 	andeq	r2, r0, sp, lsr r0
    88e0:	3a02c101 	bcc	b8cec <__Stack_Size+0xb88ec>
    88e4:	2c000000 	stccs	0, cr0, [r0], {-0}
    88e8:	0000095a 	andeq	r0, r0, sl, asr r9
    88ec:	0031c322 	eorseq	ip, r1, r2, lsr #6
    88f0:	02cd0100 	sbceq	r0, sp, #0, 2
    88f4:	0000005e 	andeq	r0, r0, lr, asr r0
    88f8:	24222d00 	strtcs	r2, [r2], #-3328	; 0xd00
    88fc:	01000014 	tsteq	r0, r4, lsl r0
    8900:	09690346 	stmdbeq	r9!, {r1, r2, r6, r8, r9}^
    8904:	00000000 	andeq	r0, r0, r0
    8908:	00003a2e 	andeq	r3, r0, lr, lsr #20
    890c:	32942500 	addscc	r2, r4, #0, 10
    8910:	6d010000 	stcvs	0, cr0, [r1, #-0]
    8914:	00005e03 	andeq	r5, r0, r3, lsl #28
    8918:	000f5000 	andeq	r5, pc, r0
    891c:	0002e808 	andeq	lr, r2, r8, lsl #16
    8920:	fb9c0100 	blx	fe708d2a <SCS_BASE+0x1e6fad2a>
    8924:	2f00000a 	svccs	0x0000000a
    8928:	03700104 	cmneq	r0, #4, 2
    892c:	000009a6 	andeq	r0, r0, r6, lsr #19
    8930:	01006230 	tsteq	r0, r0, lsr r2
    8934:	01ce0372 	biceq	r0, lr, r2, ror r3
    8938:	77300000 	ldrvc	r0, [r0, -r0]!
    893c:	03730100 	cmneq	r3, #0, 2
    8940:	00000afb 	strdeq	r0, [r0], -fp
    8944:	30351a00 	eorscc	r1, r5, r0, lsl #20
    8948:	74010000 	strvc	r0, [r1], #-0
    894c:	00098803 	andeq	r8, r9, r3, lsl #16
    8950:	0042b900 	subeq	fp, r2, r0, lsl #18
    8954:	30d53100 	sbcscc	r3, r5, r0, lsl #2
    8958:	7d010000 	stcvc	0, cr0, [r1, #-0]
    895c:	00004c03 	andeq	r4, r0, r3, lsl #24
    8960:	ad320100 	ldfges	f0, [r2, #-0]
    8964:	a4000008 	strge	r0, [r0], #-8
    8968:	c408000f 	strgt	r0, [r8], #-15
    896c:	01000000 	mrseq	r0, (UNDEF: 0)
    8970:	0a430392 	beq	10c97c0 <__Stack_Size+0x10c93c0>
    8974:	a4170000 	ldrge	r0, [r7], #-0
    8978:	c408000f 	strgt	r0, [r8], #-15
    897c:	33000000 	movwcc	r0, #0
    8980:	000008ba 			; <UNDEFINED> instruction: 0x000008ba
    8984:	00004320 	andeq	r4, r0, r0, lsr #6
    8988:	0008c633 	andeq	ip, r8, r3, lsr r6
    898c:	0043c900 	subeq	ip, r3, r0, lsl #18
    8990:	08d23300 	ldmeq	r2, {r8, r9, ip, sp}^
    8994:	43dc0000 	bicsmi	r0, ip, #0
    8998:	de340000 	cdple	0, 3, cr0, cr4, cr0, {0}
    899c:	62000008 	andvs	r0, r0, #8
    89a0:	24080010 	strcs	r0, [r8], #-16
    89a4:	08000fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp}
    89a8:	0000066e 	andeq	r0, r0, lr, ror #12
    89ac:	000fee1c 	andeq	lr, pc, ip, lsl lr	; <UNPREDICTABLE>
    89b0:	000a1d08 	andeq	r1, sl, r8, lsl #26
    89b4:	50011d00 	andpl	r1, r1, r0, lsl #26
    89b8:	00007402 	andeq	r7, r0, r2, lsl #8
    89bc:	00100424 	andseq	r0, r0, r4, lsr #8
    89c0:	00081c08 	andeq	r1, r8, r8, lsl #24
    89c4:	10202400 	eorne	r2, r0, r0, lsl #8
    89c8:	06ab0800 	strteq	r0, [fp], r0, lsl #16
    89cc:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    89d0:	83080010 	movwhi	r0, #32784	; 0x8010
    89d4:	24000006 	strcs	r0, [r0], #-6
    89d8:	08001040 	stmdaeq	r0, {r6, ip}
    89dc:	0000078d 	andeq	r0, r0, sp, lsl #15
    89e0:	e7350000 	ldr	r0, [r5, -r0]!
    89e4:	68000008 	stmdavs	r0, {r3}
    89e8:	b8080010 	stmdalt	r8, {r4}
    89ec:	0100000a 	tsteq	r0, sl
    89f0:	0adf0397 	beq	ff7c9854 <SCS_BASE+0x1f7bb854>
    89f4:	b8360000 	ldmdalt	r6!, {}	; <UNPREDICTABLE>
    89f8:	3300000a 	movwcc	r0, #10
    89fc:	000008f4 	strdeq	r0, [r0], -r4
    8a00:	000043fb 	strdeq	r4, [r0], -fp
    8a04:	00090033 	andeq	r0, r9, r3, lsr r0
    8a08:	00447b00 	subeq	r7, r4, r0, lsl #22
    8a0c:	090c3300 	stmdbeq	ip, {r8, r9, ip, sp}
    8a10:	44bb0000 	ldrtmi	r0, [fp], #0
    8a14:	18330000 	ldmdane	r3!, {}	; <UNPREDICTABLE>
    8a18:	e4000009 	str	r0, [r0], #-9
    8a1c:	33000044 	movwcc	r0, #68	; 0x44
    8a20:	00000924 	andeq	r0, r0, r4, lsr #18
    8a24:	000044f7 	strdeq	r4, [r0], -r7
    8a28:	00093033 	andeq	r3, r9, r3, lsr r0
    8a2c:	00451200 	subeq	r1, r5, r0, lsl #4
    8a30:	093c3300 	ldmdbeq	ip!, {r8, r9, ip, sp}
    8a34:	45320000 	ldrmi	r0, [r2, #-0]!
    8a38:	72150000 	andsvc	r0, r5, #0
    8a3c:	22080010 	andcs	r0, r8, #16
    8a40:	b2000000 	andlt	r0, r0, #0
    8a44:	3300000a 	movwcc	r0, #10
    8a48:	0000094d 	andeq	r0, r0, sp, asr #18
    8a4c:	00004545 	andeq	r4, r0, r5, asr #10
    8a50:	11bc1500 			; <UNDEFINED> instruction: 0x11bc1500
    8a54:	00420800 	subeq	r0, r2, r0, lsl #16
    8a58:	0ad10000 	beq	ff448a60 <SCS_BASE+0x1f43aa60>
    8a5c:	5b370000 	blpl	dc8a64 <__Stack_Size+0xdc8664>
    8a60:	02000009 	andeq	r0, r0, #9
    8a64:	fc246491 	stc2	4, cr6, [r4], #-580	; 0xfffffdbc
    8a68:	a3080011 	movwge	r0, #32785	; 0x8011
    8a6c:	00000005 	andeq	r0, r0, r5
    8a70:	00116038 	andseq	r6, r1, r8, lsr r0
    8a74:	50011d08 	andpl	r1, r1, r8, lsl #26
    8a78:	00007402 	andeq	r7, r0, r2, lsl #8
    8a7c:	84240000 	strthi	r0, [r4], #-0
    8a80:	d008000f 	andle	r0, r8, pc
    8a84:	2400000d 	strcs	r0, [r0], #-13
    8a88:	08000f8e 	stmdaeq	r0, {r1, r2, r3, r7, r8, r9, sl, fp}
    8a8c:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8a90:	00120e24 	andseq	r0, r2, r4, lsr #28
    8a94:	00088308 	andeq	r8, r8, r8, lsl #6
    8a98:	040a0000 	streq	r0, [sl], #-0
    8a9c:	0000004c 	andeq	r0, r0, ip, asr #32
    8aa0:	0032042a 	eorseq	r0, r2, sl, lsr #8
    8aa4:	01b70100 			; <UNDEFINED> instruction: 0x01b70100
    8aa8:	000b4101 	andeq	r4, fp, r1, lsl #2
    8aac:	31692200 	cmncc	r9, r0, lsl #4
    8ab0:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    8ab4:	00066801 	andeq	r6, r6, r1, lsl #16
    8ab8:	31e12200 	mvncc	r2, r0, lsl #4
    8abc:	ba010000 	blt	48ac4 <__Stack_Size+0x486c4>
    8ac0:	00003a01 	andeq	r3, r0, r1, lsl #20
    8ac4:	31222d00 	teqcc	r2, r0, lsl #26
    8ac8:	01000000 	mrseq	r0, (UNDEF: 0)
    8acc:	01ce01c0 	biceq	r0, lr, r0, asr #3
    8ad0:	55220000 	strpl	r0, [r2, #-0]!
    8ad4:	01000037 	tsteq	r0, r7, lsr r0
    8ad8:	003a01c1 	eorseq	r0, sl, r1, asr #3
    8adc:	00000000 	andeq	r0, r0, r0
    8ae0:	00301f25 	eorseq	r1, r0, r5, lsr #30
    8ae4:	03cb0100 	biceq	r0, fp, #0, 2
    8ae8:	0000005e 	andeq	r0, r0, lr, asr r0
    8aec:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
    8af0:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8af4:	0c139c01 	ldceq	12, cr9, [r3], {1}
    8af8:	e21a0000 	ands	r0, sl, #0
    8afc:	01000016 	tsteq	r0, r6, lsl r0
    8b00:	003a03cd 	eorseq	r0, sl, sp, asr #7
    8b04:	45770000 	ldrbmi	r0, [r7, #-0]!
    8b08:	01320000 	teqeq	r2, r0
    8b0c:	5000000b 	andpl	r0, r0, fp
    8b10:	7e080012 	mcrvc	0, 0, r0, cr8, cr2, {0}
    8b14:	01000000 	mrseq	r0, (UNDEF: 0)
    8b18:	0c0903d6 	stceq	3, cr0, [r9], {214}	; 0xd6
    8b1c:	50170000 	andspl	r0, r7, r0
    8b20:	7e080012 	mcrvc	0, 0, r0, cr8, cr2, {0}
    8b24:	33000000 	movwcc	r0, #0
    8b28:	00000b0e 	andeq	r0, r0, lr, lsl #22
    8b2c:	000045c4 	andeq	r4, r0, r4, asr #11
    8b30:	000b1a33 	andeq	r1, fp, r3, lsr sl
    8b34:	0045d900 	subeq	sp, r5, r0, lsl #18
    8b38:	12581500 	subsne	r1, r8, #0, 10
    8b3c:	002a0800 	eoreq	r0, sl, r0, lsl #16
    8b40:	0bf30000 	bleq	ffcc8b48 <SCS_BASE+0x1fcbab48>
    8b44:	27330000 	ldrcs	r0, [r3, -r0]!
    8b48:	ec00000b 	stc	0, cr0, [r0], {11}
    8b4c:	33000045 	movwcc	r0, #69	; 0x45
    8b50:	00000b33 	andeq	r0, r0, r3, lsr fp
    8b54:	0000460a 	andeq	r4, r0, sl, lsl #12
    8b58:	0012641c 	andseq	r6, r2, ip, lsl r4
    8b5c:	000bc908 	andeq	ip, fp, r8, lsl #18
    8b60:	50011d00 	andpl	r1, r1, r0, lsl #26
    8b64:	00007602 	andeq	r7, r0, r2, lsl #12
    8b68:	0012781e 	andseq	r7, r2, lr, lsl r8
    8b6c:	000de608 	andeq	lr, sp, r8, lsl #12
    8b70:	000bdc00 	andeq	sp, fp, r0, lsl #24
    8b74:	50011d00 	andpl	r1, r1, r0, lsl #26
    8b78:	1f003001 	svcne	0x00003001
    8b7c:	08001282 	stmdaeq	r0, {r1, r7, r9, ip}
    8b80:	00000dfc 	strdeq	r0, [r0], -ip
    8b84:	0252011d 	subseq	r0, r2, #1073741831	; 0x40000007
    8b88:	011d0076 	tsteq	sp, r6, ror r0
    8b8c:	00770250 	rsbseq	r0, r7, r0, asr r2
    8b90:	961f0000 	ldrls	r0, [pc], -r0
    8b94:	67080012 	smladvs	r8, r2, r0, r0
    8b98:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
    8b9c:	30015101 	andcc	r5, r1, r1, lsl #2
    8ba0:	0150011d 	cmpeq	r0, sp, lsl r1
    8ba4:	00000030 	andeq	r0, r0, r0, lsr r0
    8ba8:	0012ee39 	andseq	lr, r2, r9, lsr lr
    8bac:	00088308 	andeq	r8, r8, r8, lsl #6
    8bb0:	bd3a0000 	ldclt	0, cr0, [sl, #-0]
    8bb4:	01000013 	tsteq	r0, r3, lsl r0
    8bb8:	13080422 	movwne	r0, #33826	; 0x8422
    8bbc:	00400800 	subeq	r0, r0, r0, lsl #16
    8bc0:	9c010000 	stcls	0, cr0, [r1], {-0}
    8bc4:	00000c58 	andeq	r0, r0, r8, asr ip
    8bc8:	6c61563b 	stclvs	6, cr5, [r1], #-236	; 0xffffff14
    8bcc:	04220100 	strteq	r0, [r2], #-256	; 0x100
    8bd0:	0000005e 	andeq	r0, r0, lr, asr r0
    8bd4:	0000463d 	andeq	r4, r0, sp, lsr r6
    8bd8:	01006923 	tsteq	r0, r3, lsr #18
    8bdc:	003a0427 	eorseq	r0, sl, r7, lsr #8
    8be0:	465e0000 	ldrbmi	r0, [lr], -r0
    8be4:	6e230000 	cdpvs	0, 2, cr0, cr3, cr0, {0}
    8be8:	01005045 	tsteq	r0, r5, asr #32
    8bec:	003a0428 	eorseq	r0, sl, r8, lsr #8
    8bf0:	467d0000 	ldrbtmi	r0, [sp], -r0
    8bf4:	25000000 	strcs	r0, [r0, #-0]
    8bf8:	0000307b 	andeq	r3, r0, fp, ror r0
    8bfc:	5e03a301 	cdppl	3, 0, cr10, cr3, cr1, {0}
    8c00:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    8c04:	5c080013 	stcpl	0, cr0, [r8], {19}
    8c08:	01000000 	mrseq	r0, (UNDEF: 0)
    8c0c:	000c9e9c 	muleq	ip, ip, lr
    8c10:	16e21a00 	strbtne	r1, [r2], r0, lsl #20
    8c14:	a5010000 	strge	r0, [r1, #-0]
    8c18:	00003a03 	andeq	r3, r0, r3, lsl #20
    8c1c:	00469000 	subeq	r9, r6, r0
    8c20:	135c2400 	cmpne	ip, #0, 8
    8c24:	05a30800 	streq	r0, [r3, #2048]!	; 0x800
    8c28:	78240000 	stmdavc	r4!, {}	; <UNPREDICTABLE>
    8c2c:	13080013 	movwne	r0, #32787	; 0x8013
    8c30:	3900000c 	stmdbcc	r0, {r2, r3}
    8c34:	08001396 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, ip}
    8c38:	00000883 	andeq	r0, r0, r3, lsl #17
    8c3c:	33e43c00 	mvncc	r3, #0, 24
    8c40:	3a010000 	bcc	48c48 <__Stack_Size+0x48848>
    8c44:	0013a404 	andseq	sl, r3, r4, lsl #8
    8c48:	00000208 	andeq	r0, r0, r8, lsl #4
    8c4c:	3d9c0100 	ldfccs	f0, [ip]
    8c50:	0000122c 	andeq	r1, r0, ip, lsr #4
    8c54:	0458ee04 	ldrbeq	lr, [r8], #-3588	; 0xe04
    8c58:	533d0000 	teqpl	sp, #0
    8c5c:	04000014 	streq	r0, [r0], #-20
    8c60:	000291f0 	strdeq	r9, [r2], -r0
    8c64:	33513d00 	cmpcc	r1, #0, 26
    8c68:	f4040000 	vst4.8	{d0-d3}, [r4], r0
    8c6c:	00000cd1 	ldrdeq	r0, [r0], -r1
    8c70:	00004c2e 	andeq	r4, r0, lr, lsr #24
    8c74:	33ad3d00 			; <UNDEFINED> instruction: 0x33ad3d00
    8c78:	f5040000 			; <UNDEFINED> instruction: 0xf5040000
    8c7c:	00000cd1 	ldrdeq	r0, [r0], -r1
    8c80:	00142c3d 	andseq	r2, r4, sp, lsr ip
    8c84:	ec220500 	cfstr32	mvfx0, [r2], #-0
    8c88:	0a00000c 	beq	8cc0 <__Stack_Size+0x88c0>
    8c8c:	00037804 	andeq	r7, r3, r4, lsl #16
    8c90:	2fb63d00 	svccs	0x00b63d00
    8c94:	25050000 	strcs	r0, [r5, #-0]
    8c98:	00000cfd 	strdeq	r0, [r0], -sp
    8c9c:	0458040a 	ldrbeq	r0, [r8], #-1034	; 0x40a
    8ca0:	723d0000 	eorsvc	r0, sp, #0
    8ca4:	0500002f 	streq	r0, [r0, #-47]	; 0x2f
    8ca8:	000d0e2a 	andeq	r0, sp, sl, lsr #28
    8cac:	dc040a00 	stcle	10, cr0, [r4], {-0}
    8cb0:	3e000004 	cdpcc	0, 0, cr0, cr0, cr4, {0}
    8cb4:	00003101 	andeq	r3, r0, r1, lsl #2
    8cb8:	02dc2b01 	sbcseq	r2, ip, #1024	; 0x400
    8cbc:	03050000 	movweq	r0, #20480	; 0x5000
    8cc0:	20000666 	andcs	r0, r0, r6, ror #12
    8cc4:	0031523e 	eorseq	r5, r1, lr, lsr r2
    8cc8:	842d0100 	strthi	r0, [sp], #-256	; 0x100
    8ccc:	05000000 	streq	r0, [r0, #-0]
    8cd0:	00017c03 	andeq	r7, r1, r3, lsl #24
    8cd4:	30f53f20 	rscscc	r3, r5, r0, lsr #30
    8cd8:	85070000 	strhi	r0, [r7, #-0]
    8cdc:	00004c02 	andeq	r4, r0, r2, lsl #24
    8ce0:	000d4c00 	andeq	r4, sp, r0, lsl #24
    8ce4:	005e0c00 	subseq	r0, lr, r0, lsl #24
    8ce8:	40000000 	andmi	r0, r0, r0
    8cec:	0000192a 	andeq	r1, r0, sl, lsr #18
    8cf0:	0d671906 	stcleq	9, cr1, [r7, #-24]!	; 0xffffffe8
    8cf4:	ce0c0000 	cdpgt	0, 0, cr0, cr12, cr0, {0}
    8cf8:	0c000001 	stceq	0, cr0, [r0], {1}
    8cfc:	0000004c 	andeq	r0, r0, ip, asr #32
    8d00:	00004c0c 	andeq	r4, r0, ip, lsl #24
    8d04:	ba410000 	blt	1048d0c <__Stack_Size+0x104890c>
    8d08:	07000018 	smladeq	r0, r8, r0, r0
    8d0c:	0d7e0288 	lfmeq	f0, 2, [lr, #-544]!	; 0xfffffde0
    8d10:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    8d14:	0c000000 	stceq	0, cr0, [r0], {-0}
    8d18:	0000004c 	andeq	r0, r0, ip, asr #32
    8d1c:	327e4100 	rsbscc	r4, lr, #0, 2
    8d20:	80070000 	andhi	r0, r7, r0
    8d24:	000d9002 	andeq	r9, sp, r2
    8d28:	005e0c00 	subseq	r0, lr, r0, lsl #24
    8d2c:	41000000 	mrsmi	r0, (UNDEF: 0)
    8d30:	00001316 	andeq	r1, r0, r6, lsl r3
    8d34:	a7026c07 	strge	r6, [r2, -r7, lsl #24]
    8d38:	0c00000d 	stceq	0, cr0, [r0], {13}
    8d3c:	0000005e 	andeq	r0, r0, lr, asr r0
    8d40:	00004c0c 	andeq	r4, r0, ip, lsl #24
    8d44:	7e410000 	cdpvc	0, 4, cr0, cr1, cr0, {0}
    8d48:	07000018 	smladeq	r0, r8, r0, r0
    8d4c:	0dbe0289 	lfmeq	f0, 4, [lr, #548]!	; 0x224
    8d50:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    8d54:	0c000000 	stceq	0, cr0, [r0], {-0}
    8d58:	0000004c 	andeq	r0, r0, ip, asr #32
    8d5c:	31d44100 	bicscc	r4, r4, r0, lsl #2
    8d60:	7f070000 	svcvc	0x00070000
    8d64:	000dd002 	andeq	sp, sp, r2
    8d68:	005e0c00 	subseq	r0, lr, r0, lsl #24
    8d6c:	3f000000 	svccc	0x00000000
    8d70:	000031cb 	andeq	r3, r0, fp, asr #3
    8d74:	4c029907 	stcmi	9, cr9, [r2], {7}
    8d78:	e6000000 	str	r0, [r0], -r0
    8d7c:	0c00000d 	stceq	0, cr0, [r0], {13}
    8d80:	0000004c 	andeq	r0, r0, ip, asr #32
    8d84:	303a3f00 	eorscc	r3, sl, r0, lsl #30
    8d88:	86070000 	strhi	r0, [r7], -r0
    8d8c:	00004c02 	andeq	r4, r0, r2, lsl #24
    8d90:	000dfc00 	andeq	pc, sp, r0, lsl #24
    8d94:	005e0c00 	subseq	r0, lr, r0, lsl #24
    8d98:	42000000 	andmi	r0, r0, #0
    8d9c:	00003311 	andeq	r3, r0, r1, lsl r3
    8da0:	ce0c1a06 	vmlagt.f32	s2, s24, s12
    8da4:	0c000001 	stceq	0, cr0, [r0], {1}
    8da8:	0000004c 	andeq	r0, r0, ip, asr #32
    8dac:	00004c0c 	andeq	r4, r0, ip, lsl #24
    8db0:	77000000 	strvc	r0, [r0, -r0]
    8db4:	04000001 	streq	r0, [r0], #-1
    8db8:	001f7e00 	andseq	r7, pc, r0, lsl #28
    8dbc:	c1010400 	tstgt	r1, r0, lsl #8
    8dc0:	01000002 	tsteq	r0, r2
    8dc4:	00003420 	andeq	r3, r0, r0, lsr #8
    8dc8:	0000009a 	muleq	r0, sl, r0
    8dcc:	00000b58 	andeq	r0, r0, r8, asr fp
    8dd0:	00000000 	andeq	r0, r0, r0
    8dd4:	000028da 	ldrdeq	r2, [r0], -sl
    8dd8:	1d050402 	cfstrsne	mvf0, [r5, #-8]
    8ddc:	02000007 	andeq	r0, r0, #7
    8de0:	06ef0502 	strbteq	r0, [pc], r2, lsl #10
    8de4:	01020000 	mrseq	r0, (UNDEF: 2)
    8de8:	00088c06 	andeq	r8, r8, r6, lsl #24
    8dec:	33750300 	cmncc	r5, #0, 6
    8df0:	27020032 	smladxcs	r2, r2, r0, r0
    8df4:	00000045 	andeq	r0, r0, r5, asr #32
    8df8:	19070402 	stmdbne	r7, {r1, sl}
    8dfc:	03000008 	movweq	r0, #8
    8e00:	00363175 	eorseq	r3, r6, r5, ror r1
    8e04:	00572802 	subseq	r2, r7, r2, lsl #16
    8e08:	02020000 	andeq	r0, r2, #0
    8e0c:	000a7307 	andeq	r7, sl, r7, lsl #6
    8e10:	38750300 	ldmdacc	r5!, {r8, r9}^
    8e14:	68290200 	stmdavs	r9!, {r9}
    8e18:	02000000 	andeq	r0, r0, #0
    8e1c:	088a0801 	stmeq	sl, {r0, fp}
    8e20:	04020000 	streq	r0, [r2], #-0
    8e24:	00081007 	andeq	r1, r8, r7
    8e28:	5e040400 	cfcpyspl	mvf0, mvf4
    8e2c:	05000000 	streq	r0, [r0, #-0]
    8e30:	0000192a 	andeq	r1, r0, sl, lsr #18
    8e34:	13a62401 			; <UNDEFINED> instruction: 0x13a62401
    8e38:	00300800 	eorseq	r0, r0, r0, lsl #16
    8e3c:	9c010000 	stcls	0, cr0, [r1], {-0}
    8e40:	00000104 	andeq	r0, r0, r4, lsl #2
    8e44:	0033f006 	eorseq	pc, r3, r6
    8e48:	76240100 	strtvc	r0, [r4], -r0, lsl #2
    8e4c:	d6000000 	strle	r0, [r0], -r0
    8e50:	06000046 	streq	r0, [r0], -r6, asr #32
    8e54:	0000340d 	andeq	r3, r0, sp, lsl #8
    8e58:	004c2401 	subeq	r2, ip, r1, lsl #8
    8e5c:	471b0000 	ldrmi	r0, [fp, -r0]
    8e60:	f9060000 			; <UNDEFINED> instruction: 0xf9060000
    8e64:	01000033 	tsteq	r0, r3, lsr r0
    8e68:	00004c24 	andeq	r4, r0, r4, lsr #24
    8e6c:	00473c00 	subeq	r3, r7, r0, lsl #24
    8e70:	006e0700 	rsbeq	r0, lr, r0, lsl #14
    8e74:	003a2601 	eorseq	r2, sl, r1, lsl #12
    8e78:	52010000 	andpl	r0, r1, #0
    8e7c:	01006908 	tsteq	r0, r8, lsl #18
    8e80:	00003a27 	andeq	r3, r0, r7, lsr #20
    8e84:	00475d00 	subeq	r5, r7, r0, lsl #26
    8e88:	34010900 	strcc	r0, [r1], #-2304	; 0x900
    8e8c:	27010000 	strcs	r0, [r1, -r0]
    8e90:	0000003a 	andeq	r0, r0, sl, lsr r0
    8e94:	000047bc 			; <UNDEFINED> instruction: 0x000047bc
    8e98:	00340709 	eorseq	r0, r4, r9, lsl #14
    8e9c:	3a270100 	bcc	9c92a4 <__Stack_Size+0x9c8ea4>
    8ea0:	f3000000 	vhadd.u8	d0, d0, d0
    8ea4:	09000047 	stmdbeq	r0, {r0, r1, r2, r6}
    8ea8:	00003419 	andeq	r3, r0, r9, lsl r4
    8eac:	01042801 	tsteq	r4, r1, lsl #16
    8eb0:	48170000 	ldmdami	r7, {}	; <UNPREDICTABLE>
    8eb4:	04000000 	streq	r0, [r0], #-0
    8eb8:	00004c04 	andeq	r4, r0, r4, lsl #24
    8ebc:	33110500 	tstcc	r1, #0, 10
    8ec0:	3d010000 	stccc	0, cr0, [r1, #-0]
    8ec4:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
    8ec8:	00000024 	andeq	r0, r0, r4, lsr #32
    8ecc:	01749c01 	cmneq	r4, r1, lsl #24
    8ed0:	f0060000 			; <UNDEFINED> instruction: 0xf0060000
    8ed4:	01000033 	tsteq	r0, r3, lsr r0
    8ed8:	0000763d 	andeq	r7, r0, sp, lsr r6
    8edc:	00485200 	subeq	r5, r8, r0, lsl #4
    8ee0:	340d0600 	strcc	r0, [sp], #-1536	; 0x600
    8ee4:	3d010000 	stccc	0, cr0, [r1, #-0]
    8ee8:	0000004c 	andeq	r0, r0, ip, asr #32
    8eec:	0000488d 	andeq	r4, r0, sp, lsl #17
    8ef0:	0033f906 	eorseq	pc, r3, r6, lsl #18
    8ef4:	4c3d0100 	ldfmis	f0, [sp], #-0
    8ef8:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    8efc:	07000048 	streq	r0, [r0, -r8, asr #32]
    8f00:	3f01006e 	svccc	0x0001006e
    8f04:	0000003a 	andeq	r0, r0, sl, lsr r0
    8f08:	69085201 	stmdbvs	r8, {r0, r9, ip, lr}
    8f0c:	3a400100 	bcc	1009314 <__Stack_Size+0x1008f14>
    8f10:	cf000000 	svcgt	0x00000000
    8f14:	09000048 	stmdbeq	r0, {r3, r6}
    8f18:	00003419 	andeq	r3, r0, r9, lsl r4
    8f1c:	01744101 	cmneq	r4, r1, lsl #2
    8f20:	492e0000 	stmdbmi	lr!, {}	; <UNPREDICTABLE>
    8f24:	04000000 	streq	r0, [r0], #-0
    8f28:	00003a04 	andeq	r3, r0, r4, lsl #20
    8f2c:	0c930000 	ldceq	0, cr0, [r3], {0}
    8f30:	00040000 	andeq	r0, r4, r0
    8f34:	00002009 	andeq	r2, r0, r9
    8f38:	02c10104 	sbceq	r0, r1, #4, 2
    8f3c:	72010000 	andvc	r0, r1, #0
    8f40:	9a000035 	bls	901c <__Stack_Size+0x8c1c>
    8f44:	20000000 	andcs	r0, r0, r0
    8f48:	0000000c 	andeq	r0, r0, ip
    8f4c:	83000000 	movwhi	r0, #0
    8f50:	02000029 	andeq	r0, r0, #41	; 0x29
    8f54:	071d0504 	ldreq	r0, [sp, -r4, lsl #10]
    8f58:	02020000 	andeq	r0, r2, #0
    8f5c:	0006ef05 	andeq	lr, r6, r5, lsl #30
    8f60:	06010200 	streq	r0, [r1], -r0, lsl #4
    8f64:	0000088c 	andeq	r0, r0, ip, lsl #17
    8f68:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    8f6c:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    8f70:	02000000 	andeq	r0, r0, #0
    8f74:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    8f78:	75030000 	strvc	r0, [r3, #-0]
    8f7c:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    8f80:	00005728 	andeq	r5, r0, r8, lsr #14
    8f84:	07020200 	streq	r0, [r2, -r0, lsl #4]
    8f88:	00000a73 	andeq	r0, r0, r3, ror sl
    8f8c:	00387503 	eorseq	r7, r8, r3, lsl #10
    8f90:	00682902 	rsbeq	r2, r8, r2, lsl #18
    8f94:	01020000 	mrseq	r0, (UNDEF: 2)
    8f98:	00088a08 	andeq	r8, r8, r8, lsl #20
    8f9c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8fa0:	00000810 	andeq	r0, r0, r0, lsl r8
    8fa4:	0034a004 	eorseq	sl, r4, r4
    8fa8:	18030100 	stmdane	r3, {r8}
    8fac:	00000095 	muleq	r0, r5, r0
    8fb0:	00343a05 	eorseq	r3, r4, r5, lsl #20
    8fb4:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    8fb8:	01000036 	tsteq	r0, r6, lsr r0
    8fbc:	0034d905 	eorseq	sp, r4, r5, lsl #18
    8fc0:	06000200 	streq	r0, [r0], -r0, lsl #4
    8fc4:	000034a1 	andeq	r3, r0, r1, lsr #9
    8fc8:	00761e03 	rsbseq	r1, r6, r3, lsl #28
    8fcc:	e1070000 	mrs	r0, (UNDEF: 7)
    8fd0:	01000036 	tsteq	r0, r6, lsr r0
    8fd4:	00004c9c 	muleq	r0, ip, ip
    8fd8:	00bc0100 	adcseq	r0, ip, r0, lsl #2
    8fdc:	ba080000 	blt	208fe4 <__Stack_Size+0x208be4>
    8fe0:	01000035 	tsteq	r0, r5, lsr r0
    8fe4:	00005e9c 	muleq	r0, ip, lr
    8fe8:	06090000 	streq	r0, [r9], -r0
    8fec:	01000035 	tsteq	r0, r5, lsr r0
    8ff0:	00000023 	andeq	r0, r0, r3, lsr #32
    8ff4:	00000c00 	andeq	r0, r0, r0, lsl #24
    8ff8:	df9c0100 	svcle	0x009c0100
    8ffc:	0a000000 	beq	9004 <__Stack_Size+0x8c04>
    9000:	000036d7 	ldrdeq	r3, [r0], -r7
    9004:	004c2301 	subeq	r2, ip, r1, lsl #6
    9008:	50010000 	andpl	r0, r1, r0
    900c:	350e0b00 	strcc	r0, [lr, #-2816]	; 0xb00
    9010:	2f010000 	svccs	0x00010000
    9014:	0000004c 	andeq	r0, r0, ip, asr #32
    9018:	00000000 	andeq	r0, r0, r0
    901c:	0000000c 	andeq	r0, r0, ip
    9020:	76099c01 	strvc	r9, [r9], -r1, lsl #24
    9024:	01000034 	tsteq	r0, r4, lsr r0
    9028:	0000003b 	andeq	r0, r0, fp, lsr r0
    902c:	00000c00 	andeq	r0, r0, r0, lsl #24
    9030:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    9034:	0a000001 	beq	9040 <__Stack_Size+0x8c40>
    9038:	000036d7 	ldrdeq	r3, [r0], -r7
    903c:	004c3b01 	subeq	r3, ip, r1, lsl #22
    9040:	50010000 	andpl	r0, r1, r0
    9044:	368a0b00 	strcc	r0, [sl], r0, lsl #22
    9048:	47010000 	strmi	r0, [r1, -r0]
    904c:	0000004c 	andeq	r0, r0, ip, asr #32
    9050:	00000000 	andeq	r0, r0, r0
    9054:	0000000c 	andeq	r0, r0, ip
    9058:	1d0b9c01 	stcne	12, cr9, [fp, #-4]
    905c:	01000035 	tsteq	r0, r5, lsr r0
    9060:	00004c53 	andeq	r4, r0, r3, asr ip
    9064:	00000000 	andeq	r0, r0, r0
    9068:	00000c00 	andeq	r0, r0, r0, lsl #24
    906c:	099c0100 	ldmibeq	ip, {r8}
    9070:	000035b1 			; <UNDEFINED> instruction: 0x000035b1
    9074:	00005f01 	andeq	r5, r0, r1, lsl #30
    9078:	000c0000 	andeq	r0, ip, r0
    907c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9080:	00000164 	andeq	r0, r0, r4, ror #2
    9084:	0036d70a 	eorseq	sp, r6, sl, lsl #14
    9088:	4c5f0100 	ldfmie	f0, [pc], {-0}
    908c:	01000000 	mrseq	r0, (UNDEF: 0)
    9090:	2a0b0050 	bcs	2c91d8 <__Stack_Size+0x2c8dd8>
    9094:	01000035 	tsteq	r0, r5, lsr r0
    9098:	00004c6b 	andeq	r4, r0, fp, ror #24
    909c:	00000000 	andeq	r0, r0, r0
    90a0:	00000c00 	andeq	r0, r0, r0, lsl #24
    90a4:	099c0100 	ldmibeq	ip, {r8}
    90a8:	000014b6 			; <UNDEFINED> instruction: 0x000014b6
    90ac:	13fc7701 	mvnsne	r7, #262144	; 0x40000
    90b0:	00100800 	andseq	r0, r0, r0, lsl #16
    90b4:	9c010000 	stcls	0, cr0, [r1], {-0}
    90b8:	0000019c 	muleq	r0, ip, r1
    90bc:	0036d70a 	eorseq	sp, r6, sl, lsl #14
    90c0:	4c770100 	ldfmie	f0, [r7], #-0
    90c4:	01000000 	mrseq	r0, (UNDEF: 0)
    90c8:	6c0b0050 	stcvs	0, cr0, [fp], {80}	; 0x50
    90cc:	01000034 	tsteq	r0, r4, lsr r0
    90d0:	00004c83 	andeq	r4, r0, r3, lsl #25
    90d4:	00000000 	andeq	r0, r0, r0
    90d8:	00000c00 	andeq	r0, r0, r0, lsl #24
    90dc:	099c0100 	ldmibeq	ip, {r8}
    90e0:	000034c8 	andeq	r3, r0, r8, asr #9
    90e4:	00009001 	andeq	r9, r0, r1
    90e8:	000e0000 	andeq	r0, lr, r0
    90ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    90f0:	000001e3 	andeq	r0, r0, r3, ror #3
    90f4:	0035ba0c 	eorseq	fp, r5, ip, lsl #20
    90f8:	5e900100 	fmlpls	f0, f0, f0
    90fc:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    9100:	0a000049 	beq	922c <__Stack_Size+0x8e2c>
    9104:	000036d7 	ldrdeq	r3, [r0], -r7
    9108:	004c9001 	subeq	r9, ip, r1
    910c:	51010000 	mrspl	r0, (UNDEF: 1)
    9110:	00a00d00 	adceq	r0, r0, r0, lsl #26
    9114:	00000000 	andeq	r0, r0, r0
    9118:	00100000 	andseq	r0, r0, r0
    911c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9120:	00000200 	andeq	r0, r0, r0, lsl #4
    9124:	0000b00e 	andeq	fp, r0, lr
    9128:	00498a00 	subeq	r8, r9, r0, lsl #20
    912c:	24090000 	strcs	r0, [r9], #-0
    9130:	01000013 	tsteq	r0, r3, lsl r0
    9134:	00140ca9 	andseq	r0, r4, r9, lsr #25
    9138:	00001c08 	andeq	r1, r0, r8, lsl #24
    913c:	349c0100 	ldrcc	r0, [ip], #256	; 0x100
    9140:	0c000002 	stceq	0, cr0, [r0], {2}
    9144:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9148:	005ea901 	subseq	sl, lr, r1, lsl #18
    914c:	49ab0000 	stmibmi	fp!, {}	; <UNPREDICTABLE>
    9150:	240c0000 	strcs	r0, [ip], #-0
    9154:	01000035 	tsteq	r0, r5, lsr r0
    9158:	00004ca9 	andeq	r4, r0, r9, lsr #25
    915c:	0049cc00 	subeq	ip, r9, r0, lsl #24
    9160:	3f0f0000 	svccc	0x000f0000
    9164:	01000037 	tsteq	r0, r7, lsr r0
    9168:	00004cb5 			; <UNDEFINED> instruction: 0x00004cb5
    916c:	00000000 	andeq	r0, r0, r0
    9170:	00001200 	andeq	r1, r0, r0, lsl #4
    9174:	5d9c0100 	ldfpls	f0, [ip]
    9178:	0c000002 	stceq	0, cr0, [r0], {2}
    917c:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9180:	005eb501 	subseq	fp, lr, r1, lsl #10
    9184:	49ed0000 	stmibmi	sp!, {}^	; <UNPREDICTABLE>
    9188:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    918c:	00001316 	andeq	r1, r0, r6, lsl r3
    9190:	1428c201 	strtne	ip, [r8], #-513	; 0x201
    9194:	00320800 	eorseq	r0, r2, r0, lsl #16
    9198:	9c010000 	stcls	0, cr0, [r1], {-0}
    919c:	000002a8 	andeq	r0, r0, r8, lsr #5
    91a0:	0035ba0c 	eorseq	fp, r5, ip, lsl #20
    91a4:	5ec20100 	polpls	f0, f2, f0
    91a8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    91ac:	0a00004a 	beq	92dc <__Stack_Size+0x8edc>
    91b0:	000018c9 	andeq	r1, r0, r9, asr #17
    91b4:	004cc201 	subeq	ip, ip, r1, lsl #4
    91b8:	51010000 	mrspl	r0, (UNDEF: 1)
    91bc:	00142810 	andseq	r2, r4, r0, lsl r8
    91c0:	00003208 	andeq	r3, r0, r8, lsl #4
    91c4:	328b1100 	addcc	r1, fp, #0, 2
    91c8:	c4010000 	strgt	r0, [r1], #-0
    91cc:	0000004c 	andeq	r0, r0, ip, asr #32
    91d0:	00004a2f 	andeq	r4, r0, pc, lsr #20
    91d4:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    91d8:	01000015 	tsteq	r0, r5, lsl r0
    91dc:	00145acf 	andseq	r5, r4, pc, asr #21
    91e0:	00003208 	andeq	r3, r0, r8, lsl #4
    91e4:	f39c0100 	vaddw.u16	q0, q6, d0
    91e8:	0c000002 	stceq	0, cr0, [r0], {2}
    91ec:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    91f0:	005ecf01 	subseq	ip, lr, r1, lsl #30
    91f4:	4a420000 	bmi	10891fc <__Stack_Size+0x1088dfc>
    91f8:	c90a0000 	stmdbgt	sl, {}	; <UNPREDICTABLE>
    91fc:	01000018 	tsteq	r0, r8, lsl r0
    9200:	00004ccf 	andeq	r4, r0, pc, asr #25
    9204:	10510100 	subsne	r0, r1, r0, lsl #2
    9208:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
    920c:	00000032 	andeq	r0, r0, r2, lsr r0
    9210:	00328b11 	eorseq	r8, r2, r1, lsl fp
    9214:	4cd10100 	ldfmie	f0, [r1], {0}
    9218:	63000000 	movwvs	r0, #0
    921c:	0000004a 	andeq	r0, r0, sl, asr #32
    9220:	36c20900 	strbcc	r0, [r2], r0, lsl #18
    9224:	dc010000 	stcle	0, cr0, [r1], {-0}
    9228:	00000000 	andeq	r0, r0, r0
    922c:	00000024 	andeq	r0, r0, r4, lsr #32
    9230:	03499c01 	movteq	r9, #39937	; 0x9c01
    9234:	ba0c0000 	blt	30923c <__Stack_Size+0x308e3c>
    9238:	01000035 	tsteq	r0, r5, lsr r0
    923c:	00005edc 	ldrdeq	r5, [r0], -ip
    9240:	004a7600 	subeq	r7, sl, r0, lsl #12
    9244:	364a0a00 	strbcc	r0, [sl], -r0, lsl #20
    9248:	dc010000 	stcle	0, cr0, [r1], {-0}
    924c:	0000005e 	andeq	r0, r0, lr, asr r0
    9250:	8b125101 	blhi	49d65c <__Stack_Size+0x49d25c>
    9254:	01000034 	tsteq	r0, r4, lsr r0
    9258:	00004cde 	ldrdeq	r4, [r0], -lr
    925c:	00a01300 	adceq	r1, r0, r0, lsl #6
    9260:	00000000 	andeq	r0, r0, r0
    9264:	0b700000 	bleq	1c0926c <__Stack_Size+0x1c08e6c>
    9268:	df010000 	svcle	0x00010000
    926c:	0000b00e 	andeq	fp, r0, lr
    9270:	004a7600 	subeq	r7, sl, r0, lsl #12
    9274:	0f000000 	svceq	0x00000000
    9278:	00003544 	andeq	r3, r0, r4, asr #10
    927c:	004cf101 	subeq	pc, ip, r1, lsl #2
    9280:	00000000 	andeq	r0, r0, r0
    9284:	00120000 	andseq	r0, r2, r0
    9288:	9c010000 	stcls	0, cr0, [r1], {-0}
    928c:	00000372 	andeq	r0, r0, r2, ror r3
    9290:	0035ba0c 	eorseq	fp, r5, ip, lsl #20
    9294:	5ef10100 	cdppl	1, 15, cr0, cr1, cr0, {0}
    9298:	97000000 	strls	r0, [r0, -r0]
    929c:	0000004a 	andeq	r0, r0, sl, asr #32
    92a0:	0035920f 	eorseq	r9, r5, pc, lsl #4
    92a4:	4cfd0100 	ldfmie	f0, [sp]
    92a8:	00000000 	andeq	r0, r0, r0
    92ac:	12000000 	andne	r0, r0, #0
    92b0:	01000000 	mrseq	r0, (UNDEF: 0)
    92b4:	00039b9c 	muleq	r3, ip, fp
    92b8:	35ba0c00 	ldrcc	r0, [sl, #3072]!	; 0xc00
    92bc:	fd010000 	stc2	0, cr0, [r1, #-0]
    92c0:	0000005e 	andeq	r0, r0, lr, asr r0
    92c4:	00004ab8 			; <UNDEFINED> instruction: 0x00004ab8
    92c8:	193e1400 	ldmdbne	lr!, {sl, ip}
    92cc:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    92d0:	00148c01 	andseq	r8, r4, r1, lsl #24
    92d4:	00002608 	andeq	r2, r0, r8, lsl #12
    92d8:	dc9c0100 	ldfles	f0, [ip], {0}
    92dc:	15000003 	strne	r0, [r0, #-3]
    92e0:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    92e4:	5e010901 	cdppl	9, 0, cr0, cr1, cr1, {0}
    92e8:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    92ec:	1000004a 	andne	r0, r0, sl, asr #32
    92f0:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
    92f4:	00000026 	andeq	r0, r0, r6, lsr #32
    92f8:	00328b16 	eorseq	r8, r2, r6, lsl fp
    92fc:	010b0100 	mrseq	r0, (UNDEF: 27)
    9300:	0000004c 	andeq	r0, r0, ip, asr #32
    9304:	00004afa 	strdeq	r4, [r0], -sl
    9308:	da140000 	ble	509310 <__Stack_Size+0x508f10>
    930c:	01000011 	tsteq	r0, r1, lsl r0
    9310:	14b20115 	ldrtne	r0, [r2], #277	; 0x115
    9314:	00260800 	eoreq	r0, r6, r0, lsl #16
    9318:	9c010000 	stcls	0, cr0, [r1], {-0}
    931c:	0000041d 	andeq	r0, r0, sp, lsl r4
    9320:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9324:	01150100 	tsteq	r5, r0, lsl #2
    9328:	0000005e 	andeq	r0, r0, lr, asr r0
    932c:	00004b25 	andeq	r4, r0, r5, lsr #22
    9330:	0014b210 	andseq	fp, r4, r0, lsl r2
    9334:	00002608 	andeq	r2, r0, r8, lsl #12
    9338:	328b1600 	addcc	r1, fp, #0, 12
    933c:	17010000 	strne	r0, [r1, -r0]
    9340:	00004c01 	andeq	r4, r0, r1, lsl #24
    9344:	004b4600 	subeq	r4, fp, r0, lsl #12
    9348:	14000000 	strne	r0, [r0], #-0
    934c:	0000370b 	andeq	r3, r0, fp, lsl #14
    9350:	00012101 	andeq	r2, r1, r1, lsl #2
    9354:	20000000 	andcs	r0, r0, r0
    9358:	01000000 	mrseq	r0, (UNDEF: 0)
    935c:	0004449c 	muleq	r4, ip, r4
    9360:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9364:	21010000 	mrscs	r0, (UNDEF: 1)
    9368:	00005e01 	andeq	r5, r0, r1, lsl #28
    936c:	004b7400 	subeq	r7, fp, r0, lsl #8
    9370:	e4140000 	ldr	r0, [r4], #-0
    9374:	01000034 	tsteq	r0, r4, lsr r0
    9378:	0000012d 	andeq	r0, r0, sp, lsr #2
    937c:	00200000 	eoreq	r0, r0, r0
    9380:	9c010000 	stcls	0, cr0, [r1], {-0}
    9384:	0000046b 	andeq	r0, r0, fp, ror #8
    9388:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    938c:	012d0100 	teqeq	sp, r0, lsl #2
    9390:	0000005e 	andeq	r0, r0, lr, asr r0
    9394:	00004b95 	muleq	r0, r5, fp
    9398:	17701400 	ldrbne	r1, [r0, -r0, lsl #8]!
    939c:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    93a0:	0014d801 	andseq	sp, r4, r1, lsl #16
    93a4:	00002008 	andeq	r2, r0, r8
    93a8:	929c0100 	addsls	r0, ip, #0, 2
    93ac:	15000004 	strne	r0, [r0, #-4]
    93b0:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    93b4:	5e013801 	cdppl	8, 0, cr3, cr1, cr1, {0}
    93b8:	b6000000 	strlt	r0, [r0], -r0
    93bc:	0000004b 	andeq	r0, r0, fp, asr #32
    93c0:	00367514 	eorseq	r7, r6, r4, lsl r5
    93c4:	01430100 	mrseq	r0, (UNDEF: 83)
    93c8:	00000000 	andeq	r0, r0, r0
    93cc:	00000020 	andeq	r0, r0, r0, lsr #32
    93d0:	04b99c01 	ldrteq	r9, [r9], #3073	; 0xc01
    93d4:	ba150000 	blt	5493dc <__Stack_Size+0x548fdc>
    93d8:	01000035 	tsteq	r0, r5, lsr r0
    93dc:	005e0143 	subseq	r0, lr, r3, asr #2
    93e0:	4bd70000 	blmi	ff5c93e8 <SCS_BASE+0x1f5bb3e8>
    93e4:	14000000 	strne	r0, [r0], #-0
    93e8:	00003716 	andeq	r3, r0, r6, lsl r7
    93ec:	00014e01 	andeq	r4, r1, r1, lsl #28
    93f0:	20000000 	andcs	r0, r0, r0
    93f4:	01000000 	mrseq	r0, (UNDEF: 0)
    93f8:	0004e09c 	muleq	r4, ip, r0
    93fc:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9400:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
    9404:	00005e01 	andeq	r5, r0, r1, lsl #28
    9408:	004bf800 	subeq	pc, fp, r0, lsl #16
    940c:	5a140000 	bpl	509414 <__Stack_Size+0x509014>
    9410:	01000034 	tsteq	r0, r4, lsr r0
    9414:	00000159 	andeq	r0, r0, r9, asr r1
    9418:	00200000 	eoreq	r0, r0, r0
    941c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9420:	00000507 	andeq	r0, r0, r7, lsl #10
    9424:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9428:	01590100 	cmpeq	r9, r0, lsl #2
    942c:	0000005e 	andeq	r0, r0, lr, asr r0
    9430:	00004c19 	andeq	r4, r0, r9, lsl ip
    9434:	362d1700 	strtcc	r1, [sp], -r0, lsl #14
    9438:	64010000 	strvs	r0, [r1], #-0
    943c:	00004c01 	andeq	r4, r0, r1, lsl #24
    9440:	00000000 	andeq	r0, r0, r0
    9444:	00001a00 	andeq	r1, r0, r0, lsl #20
    9448:	329c0100 	addscc	r0, ip, #0, 2
    944c:	15000005 	strne	r0, [r0, #-5]
    9450:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9454:	5e016401 	cdppl	4, 0, cr6, cr1, cr1, {0}
    9458:	3a000000 	bcc	9460 <__Stack_Size+0x9060>
    945c:	0000004c 	andeq	r0, r0, ip, asr #32
    9460:	0035f817 	eorseq	pc, r5, r7, lsl r8	; <UNPREDICTABLE>
    9464:	016f0100 	cmneq	pc, r0, lsl #2
    9468:	0000004c 	andeq	r0, r0, ip, asr #32
    946c:	00000000 	andeq	r0, r0, r0
    9470:	0000001a 	andeq	r0, r0, sl, lsl r0
    9474:	055d9c01 	ldrbeq	r9, [sp, #-3073]	; 0xc01
    9478:	ba150000 	blt	549480 <__Stack_Size+0x549080>
    947c:	01000035 	tsteq	r0, r5, lsr r0
    9480:	005e016f 	subseq	r0, lr, pc, ror #2
    9484:	4c5b0000 	mrami	r0, fp, acc0
    9488:	14000000 	strne	r0, [r0], #-0
    948c:	000035c1 	andeq	r3, r0, r1, asr #11
    9490:	00017a01 	andeq	r7, r1, r1, lsl #20
    9494:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    9498:	01000000 	mrseq	r0, (UNDEF: 0)
    949c:	0005849c 	muleq	r5, ip, r4
    94a0:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    94a4:	7a010000 	bvc	494ac <__Stack_Size+0x490ac>
    94a8:	00005e01 	andeq	r5, r0, r1, lsl #28
    94ac:	004c7c00 	subeq	r7, ip, r0, lsl #24
    94b0:	f1140000 			; <UNDEFINED> instruction: 0xf1140000
    94b4:	01000034 	tsteq	r0, r4, lsr r0
    94b8:	00000185 	andeq	r0, r0, r5, lsl #3
    94bc:	001c0000 	andseq	r0, ip, r0
    94c0:	9c010000 	stcls	0, cr0, [r1], {-0}
    94c4:	000005ab 	andeq	r0, r0, fp, lsr #11
    94c8:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    94cc:	01850100 	orreq	r0, r5, r0, lsl #2
    94d0:	0000005e 	andeq	r0, r0, lr, asr r0
    94d4:	00004c9d 	muleq	r0, sp, ip
    94d8:	344c1400 	strbcc	r1, [ip], #-1024	; 0x400
    94dc:	90010000 	andls	r0, r1, r0
    94e0:	00000001 	andeq	r0, r0, r1
    94e4:	00002000 	andeq	r2, r0, r0
    94e8:	d29c0100 	addsle	r0, ip, #0, 2
    94ec:	15000005 	strne	r0, [r0, #-5]
    94f0:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    94f4:	5e019001 	cdppl	0, 0, cr9, cr1, cr1, {0}
    94f8:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    94fc:	0000004c 	andeq	r0, r0, ip, asr #32
    9500:	0035e014 	eorseq	lr, r5, r4, lsl r0
    9504:	019b0100 	orrseq	r0, fp, r0, lsl #2
    9508:	00000000 	andeq	r0, r0, r0
    950c:	00000020 	andeq	r0, r0, r0, lsr #32
    9510:	05f99c01 	ldrbeq	r9, [r9, #3073]!	; 0xc01
    9514:	ba150000 	blt	54951c <__Stack_Size+0x54911c>
    9518:	01000035 	tsteq	r0, r5, lsr r0
    951c:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
    9520:	4cdf0000 	ldclmi	0, cr0, [pc], {0}
    9524:	14000000 	strne	r0, [r0], #-0
    9528:	000031d4 	ldrdeq	r3, [r0], -r4
    952c:	f801a601 			; <UNDEFINED> instruction: 0xf801a601
    9530:	24080014 	strcs	r0, [r8], #-20
    9534:	01000000 	mrseq	r0, (UNDEF: 0)
    9538:	0006209c 	muleq	r6, ip, r0
    953c:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9540:	a6010000 	strge	r0, [r1], -r0
    9544:	00005e01 	andeq	r5, r0, r1, lsl #28
    9548:	004d0000 	subeq	r0, sp, r0
    954c:	7e140000 	cdpvc	0, 1, cr0, cr4, cr0, {0}
    9550:	01000032 	tsteq	r0, r2, lsr r0
    9554:	151c01b1 	ldrne	r0, [ip, #-433]	; 0x1b1
    9558:	00240800 	eoreq	r0, r4, r0, lsl #16
    955c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9560:	00000647 	andeq	r0, r0, r7, asr #12
    9564:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9568:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    956c:	0000005e 	andeq	r0, r0, lr, asr r0
    9570:	00004d21 	andeq	r4, r0, r1, lsr #26
    9574:	347e1400 	ldrbtcc	r1, [lr], #-1024	; 0x400
    9578:	bd010000 	stclt	0, cr0, [r1, #-0]
    957c:	00000001 	andeq	r0, r0, r1
    9580:	00002200 	andeq	r2, r0, r0, lsl #4
    9584:	7e9c0100 	fmlvce	f0, f4, f0
    9588:	15000006 	strne	r0, [r0, #-6]
    958c:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9590:	5e01bd01 	cdppl	13, 0, cr11, cr1, cr1, {0}
    9594:	42000000 	andmi	r0, r0, #0
    9598:	1500004d 	strne	r0, [r0, #-77]	; 0x4d
    959c:	00003500 	andeq	r3, r0, r0, lsl #10
    95a0:	5e01bd01 	cdppl	13, 0, cr11, cr1, cr1, {0}
    95a4:	63000000 	movwvs	r0, #0
    95a8:	0000004d 	andeq	r0, r0, sp, asr #32
    95ac:	00366117 	eorseq	r6, r6, r7, lsl r1
    95b0:	01c80100 	biceq	r0, r8, r0, lsl #2
    95b4:	0000005e 	andeq	r0, r0, lr, asr r0
    95b8:	00000000 	andeq	r0, r0, r0
    95bc:	00000012 	andeq	r0, r0, r2, lsl r0
    95c0:	06a99c01 	strteq	r9, [r9], r1, lsl #24
    95c4:	ba150000 	blt	5495cc <__Stack_Size+0x5491cc>
    95c8:	01000035 	tsteq	r0, r5, lsr r0
    95cc:	005e01c8 	subseq	r0, lr, r8, asr #3
    95d0:	4d840000 	stcmi	0, cr0, [r4]
    95d4:	14000000 	strne	r0, [r0], #-0
    95d8:	00001460 	andeq	r1, r0, r0, ror #8
    95dc:	4001d401 	andmi	sp, r1, r1, lsl #8
    95e0:	20080015 	andcs	r0, r8, r5, lsl r0
    95e4:	01000000 	mrseq	r0, (UNDEF: 0)
    95e8:	0006e09c 	muleq	r6, ip, r0
    95ec:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    95f0:	d4010000 	strle	r0, [r1], #-0
    95f4:	00005e01 	andeq	r5, r0, r1, lsl #28
    95f8:	004da500 	subeq	sl, sp, r0, lsl #10
    95fc:	36841500 	strcc	r1, [r4], r0, lsl #10
    9600:	d4010000 	strle	r0, [r1], #-0
    9604:	00004c01 	andeq	r4, r0, r1, lsl #24
    9608:	004dc600 	subeq	ip, sp, r0, lsl #12
    960c:	3c140000 	ldccc	0, cr0, [r4], {-0}
    9610:	01000013 	tsteq	r0, r3, lsl r0
    9614:	156001e0 	strbne	r0, [r0, #-480]!	; 0x1e0
    9618:	00200800 	eoreq	r0, r0, r0, lsl #16
    961c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9620:	00000717 	andeq	r0, r0, r7, lsl r7
    9624:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9628:	01e00100 	mvneq	r0, r0, lsl #2
    962c:	0000005e 	andeq	r0, r0, lr, asr r0
    9630:	00004de7 	andeq	r4, r0, r7, ror #27
    9634:	00368415 	eorseq	r8, r6, r5, lsl r4
    9638:	01e00100 	mvneq	r0, r0, lsl #2
    963c:	0000004c 	andeq	r0, r0, ip, asr #32
    9640:	00004e08 	andeq	r4, r0, r8, lsl #28
    9644:	30f51700 	rscscc	r1, r5, r0, lsl #14
    9648:	eb010000 	bl	49650 <__Stack_Size+0x49250>
    964c:	00004c01 	andeq	r4, r0, r1, lsl #24
    9650:	00158000 	andseq	r8, r5, r0
    9654:	00001c08 	andeq	r1, r0, r8, lsl #24
    9658:	429c0100 	addsmi	r0, ip, #0, 2
    965c:	15000007 	strne	r0, [r0, #-7]
    9660:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9664:	5e01eb01 	vmlapl.f64	d14, d1, d1
    9668:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    966c:	0000004e 	andeq	r0, r0, lr, asr #32
    9670:	00303a17 	eorseq	r3, r0, r7, lsl sl
    9674:	01f60100 	mvnseq	r0, r0, lsl #2
    9678:	0000004c 	andeq	r0, r0, ip, asr #32
    967c:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    9680:	0000001c 	andeq	r0, r0, ip, lsl r0
    9684:	076d9c01 	strbeq	r9, [sp, -r1, lsl #24]!
    9688:	ba150000 	blt	549690 <__Stack_Size+0x549290>
    968c:	01000035 	tsteq	r0, r5, lsr r0
    9690:	005e01f6 	ldrsheq	r0, [lr], #-22	; 0xffffffea
    9694:	4e4a0000 	cdpmi	0, 4, cr0, cr10, cr0, {0}
    9698:	14000000 	strne	r0, [r0], #-0
    969c:	000018ba 			; <UNDEFINED> instruction: 0x000018ba
    96a0:	b8020201 	stmdalt	r2, {r0, r9}
    96a4:	1c080015 	stcne	0, cr0, [r8], {21}
    96a8:	01000000 	mrseq	r0, (UNDEF: 0)
    96ac:	0007a29c 	muleq	r7, ip, r2
    96b0:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    96b4:	02010000 	andeq	r0, r1, #0
    96b8:	00005e02 	andeq	r5, r0, r2, lsl #28
    96bc:	004e6b00 	subeq	r6, lr, r0, lsl #22
    96c0:	00111800 	andseq	r1, r1, r0, lsl #16
    96c4:	02010000 	andeq	r0, r1, #0
    96c8:	00004c02 	andeq	r4, r0, r2, lsl #24
    96cc:	00510100 	subseq	r0, r1, r0, lsl #2
    96d0:	0035d014 	eorseq	sp, r5, r4, lsl r0
    96d4:	020e0100 	andeq	r0, lr, #0, 2
    96d8:	00000000 	andeq	r0, r0, r0
    96dc:	00000026 	andeq	r0, r0, r6, lsr #32
    96e0:	07f19c01 	ldrbeq	r9, [r1, r1, lsl #24]!
    96e4:	16180000 	ldrne	r0, [r8], -r0
    96e8:	01000035 	tsteq	r0, r5, lsr r0
    96ec:	07f1020e 	ldrbeq	r0, [r1, lr, lsl #4]!
    96f0:	50010000 	andpl	r0, r1, r0
    96f4:	00001115 	andeq	r1, r0, r5, lsl r1
    96f8:	020e0100 	andeq	r0, lr, #0, 2
    96fc:	0000004c 	andeq	r0, r0, ip, asr #32
    9700:	00004e8c 	andeq	r4, r0, ip, lsl #29
    9704:	00000010 	andeq	r0, r0, r0, lsl r0
    9708:	00002600 	andeq	r2, r0, r0, lsl #12
    970c:	34bf1600 	ldrtcc	r1, [pc], #1536	; 9714 <__Stack_Size+0x9314>
    9710:	10010000 	andne	r0, r1, r0
    9714:	00004c02 	andeq	r4, r0, r2, lsl #24
    9718:	004ec600 	subeq	ip, lr, r0, lsl #12
    971c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    9720:	00003a04 	andeq	r3, r0, r4, lsl #20
    9724:	187e1400 	ldmdane	lr!, {sl, ip}^
    9728:	1a010000 	bne	49730 <__Stack_Size+0x49330>
    972c:	0015d402 	andseq	sp, r5, r2, lsl #8
    9730:	00004008 	andeq	r4, r0, r8
    9734:	5c9c0100 	ldfpls	f0, [ip], {0}
    9738:	15000008 	strne	r0, [r0, #-8]
    973c:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9740:	5e021a01 	vmlapl.f32	s2, s4, s2
    9744:	ef000000 	svc	0x00000000
    9748:	1500004e 	strne	r0, [r0, #-78]	; 0x4e
    974c:	00000011 	andeq	r0, r0, r1, lsl r0
    9750:	4c021a01 	stcmi	10, cr1, [r2], {1}
    9754:	10000000 	andne	r0, r0, r0
    9758:	1000004f 	andne	r0, r0, pc, asr #32
    975c:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
    9760:	00000040 	andeq	r0, r0, r0, asr #32
    9764:	0035161a 	eorseq	r1, r5, sl, lsl r6
    9768:	021c0100 	andseq	r0, ip, #0, 2
    976c:	000007f1 	strdeq	r0, [r0], -r1
    9770:	881b5201 	ldmdahi	fp, {r0, r9, ip, lr}
    9774:	1600000b 	strne	r0, [r0], -fp
    9778:	000034bf 			; <UNDEFINED> instruction: 0x000034bf
    977c:	4c021c01 	stcmi	12, cr1, [r2], {1}
    9780:	31000000 	mrscc	r0, (UNDEF: 0)
    9784:	0000004f 	andeq	r0, r0, pc, asr #32
    9788:	ed170000 	ldc	0, cr0, [r7, #-0]
    978c:	01000036 	tsteq	r0, r6, lsr r0
    9790:	004c0225 	subeq	r0, ip, r5, lsr #4
    9794:	00000000 	andeq	r0, r0, r0
    9798:	00200000 	eoreq	r0, r0, r0
    979c:	9c010000 	stcls	0, cr0, [r1], {-0}
    97a0:	00000887 	andeq	r0, r0, r7, lsl #17
    97a4:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    97a8:	02250100 	eoreq	r0, r5, #0, 2
    97ac:	0000005e 	andeq	r0, r0, lr, asr r0
    97b0:	00004f69 	andeq	r4, r0, r9, ror #30
    97b4:	36921700 	ldrcc	r1, [r2], r0, lsl #14
    97b8:	30010000 	andcc	r0, r1, r0
    97bc:	00004c02 	andeq	r4, r0, r2, lsl #24
    97c0:	00161400 	andseq	r1, r6, r0, lsl #8
    97c4:	00002008 	andeq	r2, r0, r8
    97c8:	b29c0100 	addslt	r0, ip, #0, 2
    97cc:	15000008 	strne	r0, [r0, #-8]
    97d0:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    97d4:	5e023001 	cdppl	0, 0, cr3, cr2, cr1, {0}
    97d8:	8a000000 	bhi	97e0 <__Stack_Size+0x93e0>
    97dc:	0000004f 	andeq	r0, r0, pc, asr #32
    97e0:	00355214 	eorseq	r5, r5, r4, lsl r2
    97e4:	023d0100 	eorseq	r0, sp, #0, 2
    97e8:	00000000 	andeq	r0, r0, r0
    97ec:	00000038 	andeq	r0, r0, r8, lsr r0
    97f0:	08f99c01 	ldmeq	r9!, {r0, sl, fp, ip, pc}^
    97f4:	ba150000 	blt	5497fc <__Stack_Size+0x5493fc>
    97f8:	01000035 	tsteq	r0, r5, lsr r0
    97fc:	005e023d 	subseq	r0, lr, sp, lsr r2
    9800:	4fab0000 	svcmi	0x00ab0000
    9804:	ee150000 	cdp	0, 1, cr0, cr5, cr0, {0}
    9808:	01000035 	tsteq	r0, r5, lsr r0
    980c:	004c023d 	subeq	r0, ip, sp, lsr r2
    9810:	4fcc0000 	svcmi	0x00cc0000
    9814:	26150000 	ldrcs	r0, [r5], -r0
    9818:	01000037 	tsteq	r0, r7, lsr r0
    981c:	004c023d 	subeq	r0, ip, sp, lsr r2
    9820:	4fed0000 	svcmi	0x00ed0000
    9824:	14000000 	strne	r0, [r0], #-0
    9828:	000035a0 	andeq	r3, r0, r0, lsr #11
    982c:	00024901 	andeq	r4, r2, r1, lsl #18
    9830:	20000000 	andcs	r0, r0, r0
    9834:	01000000 	mrseq	r0, (UNDEF: 0)
    9838:	0009309c 	muleq	r9, ip, r0
    983c:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9840:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    9844:	00005e02 	andeq	r5, r0, r2, lsl #28
    9848:	00500e00 	subseq	r0, r0, r0, lsl #28
    984c:	35ee1500 	strbcc	r1, [lr, #1280]!	; 0x500
    9850:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    9854:	00004c02 	andeq	r4, r0, r2, lsl #24
    9858:	00502f00 	subseq	r2, r0, r0, lsl #30
    985c:	fa140000 	blx	509864 <__Stack_Size+0x509464>
    9860:	01000036 	tsteq	r0, r6, lsr r0
    9864:	00000255 	andeq	r0, r0, r5, asr r2
    9868:	00200000 	eoreq	r0, r0, r0
    986c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9870:	00000967 	andeq	r0, r0, r7, ror #18
    9874:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9878:	02550100 	subseq	r0, r5, #0, 2
    987c:	0000005e 	andeq	r0, r0, lr, asr r0
    9880:	00005050 	andeq	r5, r0, r0, asr r0
    9884:	00372615 	eorseq	r2, r7, r5, lsl r6
    9888:	02550100 	subseq	r0, r5, #0, 2
    988c:	0000004c 	andeq	r0, r0, ip, asr #32
    9890:	00005071 	andeq	r5, r0, r1, ror r0
    9894:	35331700 	ldrcc	r1, [r3, #-1792]!	; 0x700
    9898:	60010000 	andvs	r0, r1, r0
    989c:	00004c02 	andeq	r4, r0, r2, lsl #24
    98a0:	00000000 	andeq	r0, r0, r0
    98a4:	00001c00 	andeq	r1, r0, r0, lsl #24
    98a8:	929c0100 	addsls	r0, ip, #0, 2
    98ac:	15000009 	strne	r0, [r0, #-9]
    98b0:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    98b4:	5e026001 	cdppl	0, 0, cr6, cr2, cr1, {0}
    98b8:	92000000 	andls	r0, r0, #0
    98bc:	00000050 	andeq	r0, r0, r0, asr r0
    98c0:	00369f17 	eorseq	r9, r6, r7, lsl pc
    98c4:	026b0100 	rsbeq	r0, fp, #0, 2
    98c8:	0000004c 	andeq	r0, r0, ip, asr #32
    98cc:	00000000 	andeq	r0, r0, r0
    98d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    98d4:	09bd9c01 	ldmibeq	sp!, {r0, sl, fp, ip, pc}
    98d8:	ba150000 	blt	5498e0 <__Stack_Size+0x5494e0>
    98dc:	01000035 	tsteq	r0, r5, lsr r0
    98e0:	005e026b 	subseq	r0, lr, fp, ror #4
    98e4:	50b30000 	adcspl	r0, r3, r0
    98e8:	14000000 	strne	r0, [r0], #-0
    98ec:	000036b0 			; <UNDEFINED> instruction: 0x000036b0
    98f0:	00027701 	andeq	r7, r2, r1, lsl #14
    98f4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    98f8:	01000000 	mrseq	r0, (UNDEF: 0)
    98fc:	000a649c 	muleq	sl, ip, r4
    9900:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9904:	77010000 	strvc	r0, [r1, -r0]
    9908:	00005e02 	andeq	r5, r0, r2, lsl #28
    990c:	0050d400 	subseq	sp, r0, r0, lsl #8
    9910:	364a1500 	strbcc	r1, [sl], -r0, lsl #10
    9914:	77010000 	strvc	r0, [r1, -r0]
    9918:	00005e02 	andeq	r5, r0, r2, lsl #28
    991c:	00511900 	subseq	r1, r1, r0, lsl #18
    9920:	00111500 	andseq	r1, r1, r0, lsl #10
    9924:	77010000 	strvc	r0, [r1, -r0]
    9928:	00004c02 	andeq	r4, r0, r2, lsl #24
    992c:	00515e00 	subseq	r5, r1, r0, lsl #28
    9930:	00001c00 	andeq	r1, r0, r0, lsl #24
    9934:	003a0000 	eorseq	r0, sl, r0
    9938:	0a370000 	beq	dc9940 <__Stack_Size+0xdc9540>
    993c:	16160000 	ldrne	r0, [r6], -r0
    9940:	01000035 	tsteq	r0, r5, lsr r0
    9944:	07f10279 			; <UNDEFINED> instruction: 0x07f10279
    9948:	518a0000 	orrpl	r0, sl, r0
    994c:	a01b0000 	andsge	r0, fp, r0
    9950:	1600000b 	strne	r0, [r0], -fp
    9954:	000034bf 			; <UNDEFINED> instruction: 0x000034bf
    9958:	4c027901 	stcmi	9, cr7, [r2], {1}
    995c:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    9960:	00000051 	andeq	r0, r0, r1, asr r0
    9964:	0bb81b00 	bleq	fee1056c <SCS_BASE+0x1ee0256c>
    9968:	16160000 	ldrne	r0, [r6], -r0
    996c:	01000035 	tsteq	r0, r5, lsr r0
    9970:	07f10279 			; <UNDEFINED> instruction: 0x07f10279
    9974:	51e00000 	mvnpl	r0, r0
    9978:	d01b0000 	andsle	r0, fp, r0
    997c:	1600000b 	strne	r0, [r0], -fp
    9980:	000034bf 			; <UNDEFINED> instruction: 0x000034bf
    9984:	4c027901 	stcmi	9, cr7, [r2], {1}
    9988:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    998c:	00000051 	andeq	r0, r0, r1, asr r0
    9990:	1b140000 	blne	509998 <__Stack_Size+0x509598>
    9994:	01000036 	tsteq	r0, r6, lsr r0
    9998:	00000283 	andeq	r0, r0, r3, lsl #5
    999c:	005c0000 	subseq	r0, ip, r0
    99a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    99a4:	00000adb 	ldrdeq	r0, [r0], -fp
    99a8:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    99ac:	02830100 	addeq	r0, r3, #0, 2
    99b0:	0000005e 	andeq	r0, r0, lr, asr r0
    99b4:	00005236 	andeq	r5, r0, r6, lsr r2
    99b8:	00364a15 	eorseq	r4, r6, r5, lsl sl
    99bc:	02830100 	addeq	r0, r3, #0, 2
    99c0:	0000005e 	andeq	r0, r0, lr, asr r0
    99c4:	00005270 	andeq	r5, r0, r0, ror r2
    99c8:	00001115 	andeq	r1, r0, r5, lsl r1
    99cc:	02830100 	addeq	r0, r3, #0, 2
    99d0:	0000004c 	andeq	r0, r0, ip, asr #32
    99d4:	0000529c 	muleq	r0, ip, r2
    99d8:	00000010 	andeq	r0, r0, r0, lsl r0
    99dc:	00003800 	andeq	r3, r0, r0, lsl #16
    99e0:	35161600 	ldrcc	r1, [r6, #-1536]	; 0x600
    99e4:	85010000 	strhi	r0, [r1, #-0]
    99e8:	0007f102 	andeq	pc, r7, r2, lsl #2
    99ec:	0052c800 	subseq	ip, r2, r0, lsl #16
    99f0:	0bf01b00 	bleq	ffc105f8 <SCS_BASE+0x1fc025f8>
    99f4:	bf160000 	svclt	0x00160000
    99f8:	01000034 	tsteq	r0, r4, lsr r0
    99fc:	004c0285 	subeq	r0, ip, r5, lsl #5
    9a00:	52db0000 	sbcspl	r0, fp, #0
    9a04:	00000000 	andeq	r0, r0, r0
    9a08:	34ad1400 	strtcc	r1, [sp], #1024	; 0x400
    9a0c:	8f010000 	svchi	0x00010000
    9a10:	00000002 	andeq	r0, r0, r2
    9a14:	00005c00 	andeq	r5, r0, r0, lsl #24
    9a18:	529c0100 	addspl	r0, ip, #0, 2
    9a1c:	1500000b 	strne	r0, [r0, #-11]
    9a20:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9a24:	5e028f01 	cdppl	15, 0, cr8, cr2, cr1, {0}
    9a28:	13000000 	movwne	r0, #0
    9a2c:	15000053 	strne	r0, [r0, #-83]	; 0x53
    9a30:	0000364a 	andeq	r3, r0, sl, asr #12
    9a34:	5e028f01 	cdppl	15, 0, cr8, cr2, cr1, {0}
    9a38:	4d000000 	stcmi	0, cr0, [r0, #-0]
    9a3c:	15000053 	strne	r0, [r0, #-83]	; 0x53
    9a40:	00000011 	andeq	r0, r0, r1, lsl r0
    9a44:	4c028f01 	stcmi	15, cr8, [r2], {1}
    9a48:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    9a4c:	10000053 	andne	r0, r0, r3, asr r0
    9a50:	00000000 	andeq	r0, r0, r0
    9a54:	00000038 	andeq	r0, r0, r8, lsr r0
    9a58:	00351616 	eorseq	r1, r5, r6, lsl r6
    9a5c:	02910100 	addseq	r0, r1, #0, 2
    9a60:	000007f1 	strdeq	r0, [r0], -r1
    9a64:	000053a5 	andeq	r5, r0, r5, lsr #7
    9a68:	000c081b 	andeq	r0, ip, fp, lsl r8
    9a6c:	34bf1600 	ldrtcc	r1, [pc], #1536	; 9a74 <__Stack_Size+0x9674>
    9a70:	91010000 	mrsls	r0, (UNDEF: 1)
    9a74:	00004c02 	andeq	r4, r0, r2, lsl #24
    9a78:	0053b800 	subseq	fp, r3, r0, lsl #16
    9a7c:	00000000 	andeq	r0, r0, r0
    9a80:	00360917 	eorseq	r0, r6, r7, lsl r9
    9a84:	029b0100 	addseq	r0, fp, #0, 2
    9a88:	0000004c 	andeq	r0, r0, ip, asr #32
    9a8c:	00000000 	andeq	r0, r0, r0
    9a90:	00000020 	andeq	r0, r0, r0, lsr #32
    9a94:	0b7d9c01 	bleq	1f70aa0 <__Stack_Size+0x1f706a0>
    9a98:	ba150000 	blt	549aa0 <__Stack_Size+0x5496a0>
    9a9c:	01000035 	tsteq	r0, r5, lsr r0
    9aa0:	005e029b 			; <UNDEFINED> instruction: 0x005e029b
    9aa4:	53f00000 	mvnspl	r0, #0
    9aa8:	17000000 	strne	r0, [r0, -r0]
    9aac:	0000364f 	andeq	r3, r0, pc, asr #12
    9ab0:	4c02a701 	stcmi	7, cr10, [r2], {1}
    9ab4:	00000000 	andeq	r0, r0, r0
    9ab8:	20000000 	andcs	r0, r0, r0
    9abc:	01000000 	mrseq	r0, (UNDEF: 0)
    9ac0:	000ba89c 	muleq	fp, ip, r8
    9ac4:	35ba1500 	ldrcc	r1, [sl, #1280]!	; 0x500
    9ac8:	a7010000 	strge	r0, [r1, -r0]
    9acc:	00005e02 	andeq	r5, r0, r2, lsl #28
    9ad0:	00541100 	subseq	r1, r4, r0, lsl #2
    9ad4:	63170000 	tstvs	r7, #0
    9ad8:	01000035 	tsteq	r0, r5, lsr r0
    9adc:	009502b3 			; <UNDEFINED> instruction: 0x009502b3
    9ae0:	00000000 	andeq	r0, r0, r0
    9ae4:	00440000 	subeq	r0, r4, r0
    9ae8:	9c010000 	stcls	0, cr0, [r1], {-0}
    9aec:	00000bd3 	ldrdeq	r0, [r0], -r3
    9af0:	0035ba15 	eorseq	fp, r5, r5, lsl sl
    9af4:	02b30100 	adcseq	r0, r3, #0, 2
    9af8:	0000005e 	andeq	r0, r0, lr, asr r0
    9afc:	00005432 	andeq	r5, r0, r2, lsr r4
    9b00:	37301400 	ldrcc	r1, [r0, -r0, lsl #8]!
    9b04:	c4010000 	strgt	r0, [r1], #-0
    9b08:	00000002 	andeq	r0, r0, r2
    9b0c:	00004200 	andeq	r4, r0, r0, lsl #4
    9b10:	089c0100 	ldmeq	ip, {r8}
    9b14:	1500000c 	strne	r0, [r0, #-12]
    9b18:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    9b1c:	5e02c401 	cdppl	4, 0, cr12, cr2, cr1, {0}
    9b20:	53000000 	movwpl	r0, #0
    9b24:	18000054 	stmdane	r0, {r2, r4, r6}
    9b28:	0000364a 	andeq	r3, r0, sl, asr #12
    9b2c:	5e02c401 	cdppl	4, 0, cr12, cr2, cr1, {0}
    9b30:	01000000 	mrseq	r0, (UNDEF: 0)
    9b34:	6e170051 	mrcvs	0, 0, r0, cr7, cr1, {2}
    9b38:	01000036 	tsteq	r0, r6, lsr r0
    9b3c:	004c02d7 	ldrdeq	r0, [ip], #-39	; 0xffffffd9
    9b40:	00000000 	andeq	r0, r0, r0
    9b44:	00060000 	andeq	r0, r6, r0
    9b48:	9c010000 	stcls	0, cr0, [r1], {-0}
    9b4c:	00000c4f 	andeq	r0, r0, pc, asr #24
    9b50:	0068621d 	rsbeq	r6, r8, sp, lsl r2
    9b54:	5e02d701 	cdppl	7, 0, cr13, cr2, cr1, {0}
    9b58:	8d000000 	stchi	0, cr0, [r0, #-0]
    9b5c:	1e000054 	mcrne	0, 0, r0, cr0, cr4, {2}
    9b60:	01006c62 	tsteq	r0, r2, ror #24
    9b64:	005e02d7 	ldrsbeq	r0, [lr], #-39	; 0xffffffd9
    9b68:	51010000 	mrspl	r0, (UNDEF: 1)
    9b6c:	0034d416 	eorseq	sp, r4, r6, lsl r4
    9b70:	02d90100 	sbcseq	r0, r9, #0, 2
    9b74:	0000004c 	andeq	r0, r0, ip, asr #32
    9b78:	000054ae 	andeq	r5, r0, lr, lsr #9
    9b7c:	31cb1f00 	biccc	r1, fp, r0, lsl #30
    9b80:	e4010000 	str	r0, [r1], #-0
    9b84:	00004c02 	andeq	r4, r0, r2, lsl #24
    9b88:	00163400 	andseq	r3, r6, r0, lsl #8
    9b8c:	00000a08 	andeq	r0, r0, r8, lsl #20
    9b90:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    9b94:	0000358d 	andeq	r3, r0, sp, lsl #11
    9b98:	4c02e401 	cfstrsmi	mvf14, [r2], {1}
    9b9c:	e7000000 	str	r0, [r0, -r0]
    9ba0:	16000054 			; <UNDEFINED> instruction: 0x16000054
    9ba4:	00003446 	andeq	r3, r0, r6, asr #8
    9ba8:	5e02e601 	cfmadd32pl	mvax0, mvfx14, mvfx2, mvfx1
    9bac:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    9bb0:	16000055 			; <UNDEFINED> instruction: 0x16000055
    9bb4:	000034d4 	ldrdeq	r3, [r0], -r4
    9bb8:	4c02e701 	stcmi	7, cr14, [r2], {1}
    9bbc:	1b000000 	blne	9bc4 <__Stack_Size+0x97c4>
    9bc0:	00000055 	andeq	r0, r0, r5, asr r0
    9bc4:	00016100 	andeq	r6, r1, r0, lsl #2
    9bc8:	fe000400 	cdp2	4, 0, cr0, cr0, cr0, {0}
    9bcc:	04000021 	streq	r0, [r0], #-33	; 0x21
    9bd0:	0002c101 	andeq	ip, r2, r1, lsl #2
    9bd4:	376b0100 	strbcc	r0, [fp, -r0, lsl #2]!
    9bd8:	009a0000 	addseq	r0, sl, r0
    9bdc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9be0:	00000000 	andeq	r0, r0, r0
    9be4:	2e750000 	cdpcs	0, 7, cr0, cr5, cr0, {0}
    9be8:	04020000 	streq	r0, [r2], #-0
    9bec:	00071d05 	andeq	r1, r7, r5, lsl #26
    9bf0:	05020200 	streq	r0, [r2, #-512]	; 0x200
    9bf4:	000006ef 	andeq	r0, r0, pc, ror #13
    9bf8:	8c060102 	stfhis	f0, [r6], {2}
    9bfc:	03000008 	movweq	r0, #8
    9c00:	00323375 	eorseq	r3, r2, r5, ror r3
    9c04:	00452702 	subeq	r2, r5, r2, lsl #14
    9c08:	04020000 	streq	r0, [r2], #-0
    9c0c:	00081907 	andeq	r1, r8, r7, lsl #18
    9c10:	31750300 	cmncc	r5, r0, lsl #6
    9c14:	28020036 	stmdacs	r2, {r1, r2, r4, r5}
    9c18:	00000057 	andeq	r0, r0, r7, asr r0
    9c1c:	73070202 	movwvc	r0, #29186	; 0x7202
    9c20:	0300000a 	movweq	r0, #10
    9c24:	02003875 	andeq	r3, r0, #7667712	; 0x750000
    9c28:	00006829 	andeq	r6, r0, r9, lsr #16
    9c2c:	08010200 	stmdaeq	r1, {r9}
    9c30:	0000088a 	andeq	r0, r0, sl, lsl #17
    9c34:	10070402 	andne	r0, r7, r2, lsl #8
    9c38:	04000008 	streq	r0, [r0], #-8
    9c3c:	00005e04 	andeq	r5, r0, r4, lsl #28
    9c40:	137a0500 	cmnne	sl, #0, 10
    9c44:	23010000 	movwcs	r0, #4096	; 0x1000
    9c48:	0000003a 	andeq	r0, r0, sl, lsr r0
    9c4c:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
    9c50:	00000020 	andeq	r0, r0, r0, lsr #32
    9c54:	a5069c01 	strge	r9, [r6, #-3073]	; 0xc01
    9c58:	01000011 	tsteq	r0, r1, lsl r0
    9c5c:	00003a5f 	andeq	r3, r0, pc, asr sl
    9c60:	00166000 	andseq	r6, r6, r0
    9c64:	00002408 	andeq	r2, r0, r8, lsl #8
    9c68:	169c0100 	ldrne	r0, [ip], r0, lsl #2
    9c6c:	07000001 	streq	r0, [r0, -r1]
    9c70:	00003749 	andeq	r3, r0, r9, asr #14
    9c74:	005e5f01 	subseq	r5, lr, r1, lsl #30
    9c78:	553a0000 	ldrpl	r0, [sl, #-0]!
    9c7c:	5c070000 	stcpl	0, cr0, [r7], {-0}
    9c80:	01000037 	tsteq	r0, r7, lsr r0
    9c84:	0000765f 	andeq	r7, r0, pc, asr r6
    9c88:	00555b00 	subseq	r5, r5, r0, lsl #22
    9c8c:	37510800 	ldrbcc	r0, [r1, -r0, lsl #16]
    9c90:	61010000 	mrsvs	r0, (UNDEF: 1)
    9c94:	0000003a 	andeq	r0, r0, sl, lsr r0
    9c98:	00005579 	andeq	r5, r0, r9, ror r5
    9c9c:	00166e09 	andseq	r6, r6, r9, lsl #28
    9ca0:	00012108 	andeq	r2, r1, r8, lsl #2
    9ca4:	0000eb00 	andeq	lr, r0, r0, lsl #22
    9ca8:	50010a00 	andpl	r0, r1, r0, lsl #20
    9cac:	00007502 	andeq	r7, r0, r2, lsl #10
    9cb0:	00167609 	andseq	r7, r6, r9, lsl #12
    9cb4:	00013708 	andeq	r3, r1, r8, lsl #14
    9cb8:	0000ff00 	andeq	pc, r0, r0, lsl #30
    9cbc:	50010a00 	andpl	r0, r1, r0, lsl #20
    9cc0:	00007502 	andeq	r7, r0, r2, lsl #10
    9cc4:	0016800b 	andseq	r8, r6, fp
    9cc8:	00014d08 	andeq	r4, r1, r8, lsl #26
    9ccc:	52010a00 	andpl	r0, r1, #0, 20
    9cd0:	0a007402 	beq	26ce0 <__Stack_Size+0x268e0>
    9cd4:	76025001 	strvc	r5, [r2], -r1
    9cd8:	0c000000 	stceq	0, cr0, [r0], {-0}
    9cdc:	000018d0 	ldrdeq	r1, [r0], -r0
    9ce0:	004c2d04 	subeq	r2, ip, r4, lsl #26
    9ce4:	920d0000 	andls	r0, sp, #0
    9ce8:	03000036 	movweq	r0, #54	; 0x36
    9cec:	004c028b 	subeq	r0, ip, fp, lsl #5
    9cf0:	01370000 	teqeq	r7, r0
    9cf4:	5e0e0000 	cdppl	0, 0, cr0, cr14, cr0, {0}
    9cf8:	00000000 	andeq	r0, r0, r0
    9cfc:	00303a0d 	eorseq	r3, r0, sp, lsl #20
    9d00:	02860300 	addeq	r0, r6, #0, 6
    9d04:	0000004c 	andeq	r0, r0, ip, asr #32
    9d08:	0000014d 	andeq	r0, r0, sp, asr #2
    9d0c:	00005e0e 	andeq	r5, r0, lr, lsl #28
    9d10:	110f0000 	mrsne	r0, CPSR
    9d14:	05000033 	streq	r0, [r0, #-51]	; 0x33
    9d18:	00760e1a 	rsbseq	r0, r6, sl, lsl lr
    9d1c:	4c0e0000 	stcmi	0, cr0, [lr], {-0}
    9d20:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    9d24:	0000004c 	andeq	r0, r0, ip, asr #32
    9d28:	019d0000 	orrseq	r0, sp, r0
    9d2c:	00040000 	andeq	r0, r4, r0
    9d30:	000022e9 	andeq	r2, r0, r9, ror #5
    9d34:	02c10104 	sbceq	r0, r1, #4, 2
    9d38:	93010000 	movwls	r0, #4096	; 0x1000
    9d3c:	9a000037 	bls	9e20 <__Stack_Size+0x9a20>
    9d40:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    9d44:	0000000e 	andeq	r0, r0, lr
    9d48:	36000000 	strcc	r0, [r0], -r0
    9d4c:	0200002f 	andeq	r0, r0, #47	; 0x2f
    9d50:	071d0504 	ldreq	r0, [sp, -r4, lsl #10]
    9d54:	02020000 	andeq	r0, r2, #0
    9d58:	0006ef05 	andeq	lr, r6, r5, lsl #30
    9d5c:	06010200 	streq	r0, [r1], -r0, lsl #4
    9d60:	0000088c 	andeq	r0, r0, ip, lsl #17
    9d64:	32337503 	eorscc	r7, r3, #12582912	; 0xc00000
    9d68:	45270200 	strmi	r0, [r7, #-512]!	; 0x200
    9d6c:	02000000 	andeq	r0, r0, #0
    9d70:	08190704 	ldmdaeq	r9, {r2, r8, r9, sl}
    9d74:	75030000 	strvc	r0, [r3, #-0]
    9d78:	02003631 	andeq	r3, r0, #51380224	; 0x3100000
    9d7c:	00005728 	andeq	r5, r0, r8, lsr #14
    9d80:	07020200 	streq	r0, [r2, -r0, lsl #4]
    9d84:	00000a73 	andeq	r0, r0, r3, ror sl
    9d88:	00387503 	eorseq	r7, r8, r3, lsl #10
    9d8c:	00682902 	rsbeq	r2, r8, r2, lsl #18
    9d90:	01020000 	mrseq	r0, (UNDEF: 2)
    9d94:	00088a08 	andeq	r8, r8, r8, lsl #20
    9d98:	07040200 	streq	r0, [r4, -r0, lsl #4]
    9d9c:	00000810 	andeq	r0, r0, r0, lsl r8
    9da0:	76040504 	strvc	r0, [r4], -r4, lsl #10
    9da4:	06000000 	streq	r0, [r0], -r0
    9da8:	000012d7 	ldrdeq	r1, [r0], -r7
    9dac:	16842a01 	strne	r2, [r4], r1, lsl #20
    9db0:	016c0800 	cmneq	ip, r0, lsl #16
    9db4:	9c010000 	stcls	0, cr0, [r1], {-0}
    9db8:	000000f6 	strdeq	r0, [r0], -r6
    9dbc:	00378c07 	eorseq	r8, r7, r7, lsl #24
    9dc0:	f62c0100 			; <UNDEFINED> instruction: 0xf62c0100
    9dc4:	02000000 	andeq	r0, r0, #0
    9dc8:	c6086e91 			; <UNDEFINED> instruction: 0xc6086e91
    9dcc:	1a080016 	bne	209e2c <__Stack_Size+0x209a2c>
    9dd0:	bd000000 	stclt	0, cr0, [r0, #-0]
    9dd4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9dd8:	0000328b 	andeq	r3, r0, fp, lsl #5
    9ddc:	003a4001 	eorseq	r4, sl, r1
    9de0:	55af0000 	strpl	r0, [pc, #0]!	; 9de8 <__Stack_Size+0x99e8>
    9de4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    9de8:	0800172e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, sl, ip}
    9dec:	0000003e 	andeq	r0, r0, lr, lsr r0
    9df0:	000000da 	ldrdeq	r0, [r0], -sl
    9df4:	00328b09 	eorseq	r8, r2, r9, lsl #22
    9df8:	3a6d0100 	bcc	1b4a200 <__Stack_Size+0x1b49e00>
    9dfc:	0d000000 	stceq	0, cr0, [r0, #-0]
    9e00:	00000056 	andeq	r0, r0, r6, asr r0
    9e04:	0016f40a 	andseq	pc, r6, sl, lsl #8
    9e08:	00017f08 	andeq	r7, r1, r8, lsl #30
    9e0c:	17140a00 	ldrne	r0, [r4, -r0, lsl #20]
    9e10:	018a0800 	orreq	r0, sl, r0, lsl #16
    9e14:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    9e18:	95080017 	strls	r0, [r8, #-23]
    9e1c:	00000001 	andeq	r0, r0, r1
    9e20:	00004c0b 	andeq	r4, r0, fp, lsl #24
    9e24:	37850600 	strcc	r0, [r5, r0, lsl #12]
    9e28:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    9e2c:	00000000 	andeq	r0, r0, r0
    9e30:	00000070 	andeq	r0, r0, r0, ror r0
    9e34:	01209c01 	teqeq	r0, r1, lsl #24
    9e38:	8c090000 	stchi	0, cr0, [r9], {-0}
    9e3c:	01000037 	tsteq	r0, r7, lsr r0
    9e40:	00003a9a 	muleq	r0, sl, sl
    9e44:	00562000 	subseq	r2, r6, r0
    9e48:	3c0c0000 	stccc	0, cr0, [ip], {-0}
    9e4c:	03000012 	movweq	r0, #18
    9e50:	00f6025b 	rscseq	r0, r6, fp, asr r2
    9e54:	510d0000 	mrspl	r0, (UNDEF: 13)
    9e58:	01000033 	tsteq	r0, r3, lsr r0
    9e5c:	0000f618 	andeq	pc, r0, r8, lsl r6	; <UNPREDICTABLE>
    9e60:	68030500 	stmdavs	r3, {r8, sl}
    9e64:	0d200006 	stceq	0, cr0, [r0, #-24]!	; 0xffffffe8
    9e68:	000033ad 	andeq	r3, r0, sp, lsr #7
    9e6c:	00f61901 	rscseq	r1, r6, r1, lsl #18
    9e70:	03050000 	movweq	r0, #20480	; 0x5000
    9e74:	2000066a 	andcs	r0, r0, sl, ror #12
    9e78:	002fa50e 	eoreq	sl, pc, lr, lsl #10
    9e7c:	5e1d0400 	cfmulspl	mvf0, mvf13, mvf0
    9e80:	0f000000 	svceq	0x00000000
    9e84:	00000077 	andeq	r0, r0, r7, ror r0
    9e88:	00000169 	andeq	r0, r0, r9, ror #2
    9e8c:	00006f10 	andeq	r6, r0, r0, lsl pc
    9e90:	0e000600 	cfmadd32eq	mvax0, mvfx0, mvfx0, mvfx0
    9e94:	00001275 	andeq	r1, r0, r5, ror r2
    9e98:	01591c01 	cmpeq	r9, r1, lsl #24
    9e9c:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    9ea0:	01000012 	tsteq	r0, r2, lsl r0
    9ea4:	0001591d 	andeq	r5, r1, sp, lsl r9
    9ea8:	307b1100 	rsbscc	r1, fp, r0, lsl #2
    9eac:	de050000 	cdple	0, 0, cr0, cr5, cr0, {0}
    9eb0:	0000005e 	andeq	r0, r0, lr, asr r0
    9eb4:	00329411 	eorseq	r9, r2, r1, lsl r4
    9eb8:	5edb0500 	cdppl	5, 13, cr0, cr11, cr0, {0}
    9ebc:	11000000 	mrsne	r0, (UNDEF: 0)
    9ec0:	0000301f 	andeq	r3, r0, pc, lsl r0
    9ec4:	005edd05 	subseq	sp, lr, r5, lsl #26
    9ec8:	Address 0x0000000000009ec8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  {
    statusreg = SysTick->CTRL;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	10011117 	andne	r1, r1, r7, lsl r1
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <__Stack_Size+0x2bfcac>
      18:	0e030b3e 	vmoveq.16	d3[0], r0
      1c:	16030000 	strne	r0, [r3], -r0
      20:	3a080300 	bcc	200c28 <__Stack_Size+0x200828>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	04000013 	streq	r0, [r0], #-19
      2c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      30:	0b3b0b3a 	bleq	ec2d20 <__Stack_Size+0xec2920>
      34:	00001349 	andeq	r1, r0, r9, asr #6
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	06000013 			; <UNDEFINED> instruction: 0x06000013

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	0b0b0104 	bleq	2c0458 <__Stack_Size+0x2c0058>
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	0b3b0b3a 	bleq	ec2d34 <__Stack_Size+0xec2934>
      48:	00001301 	andeq	r1, r0, r1, lsl #6
      4c:	03002807 	movweq	r2, #2055	; 0x807

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	000d1c0e 	andeq	r1, sp, lr, lsl #24
      54:	00280800 	eoreq	r0, r8, r0, lsl #16
      58:	0d1c0803 	ldceq	8, cr0, [ip, #-12]
      5c:	13090000 	movwne	r0, #36864	; 0x9000
      60:	3a0b0b01 	bcc	2c2c6c <__Stack_Size+0x2c286c>
      64:	01053b0b 	tsteq	r5, fp, lsl #22
      68:	0a000013 	beq	bc <_Minimum_Stack_Size-0x44>
      6c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
      70:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
      74:	0b381349 	bleq	e04da0 <__Stack_Size+0xe049a0>
      78:	0d0b0000 	stceq	0, cr0, [fp, #-0]
      7c:	3a0e0300 	bcc	380c84 <__Stack_Size+0x380884>
      80:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      break;            

    default:
      break;
  }
}
      84:	000b3813 	andeq	r3, fp, r3, lsl r8
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
      88:	00160c00 	andseq	r0, r6, r0, lsl #24
      8c:	0b3a0e03 	bleq	e838a0 <__Stack_Size+0xe834a0>
      90:	1349053b 	movtne	r0, #38203	; 0x953b
      94:	130d0000 	movwne	r0, #53248	; 0xd000
      98:	3a0b0b01 	bcc	2c2ca4 <__Stack_Size+0x2c28a4>
      9c:	010b3b0b 	tsteq	fp, fp, lsl #22
      a0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
      a4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	0b3b0b3a 	bleq	ec2d98 <__Stack_Size+0xec2998>
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	0b381349 	bleq	e04dd8 <__Stack_Size+0xe049d8>
      b0:	150f0000 	strne	r0, [pc, #-0]	; b8 <_Minimum_Stack_Size-0x48>
      break; 
      
    default:
      break;
  }
}
      b4:	00192700 	andseq	r2, r9, r0, lsl #14
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	000f1000 	andeq	r1, pc, r0
      bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
      c0:	04110000 	ldreq	r0, [r1], #-0
      c4:	0b0e0301 	bleq	380cd0 <__Stack_Size+0x3808d0>
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      c8:	3b0b3a0b 	blcc	2ce8fc <__Stack_Size+0x2ce4fc>
      cc:	0013010b 	andseq	r0, r3, fp, lsl #2
				{
					FLASH_Lock();
      d0:	012e1200 	teqeq	lr, r0, lsl #4
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	0b201927 	bleq	806580 <__Stack_Size+0x806180>
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	00001301 	andeq	r1, r0, r1, lsl #6
				TIM_Cmd(TIM2, ENABLE);
      e4:	03000513 	movweq	r0, #1299	; 0x513
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	3b0b3a0e 	blcc	2ce928 <__Stack_Size+0x2ce528>

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	00134905 	andseq	r4, r3, r5, lsl #18
      f0:	00341400 	eorseq	r1, r4, r0, lsl #8
						usbRxCount = USB_Rx_Cnt;
      f4:	0b3a0e03 	bleq	e83908 <__Stack_Size+0xe83508>
      f8:	1349053b 	movtne	r0, #38203	; 0x953b
      fc:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
					if(CheckTimeOut()){
     100:	03193f00 	tsteq	r9, #0, 30
     104:	3b0b3a0e 	blcc	2ce944 <__Stack_Size+0x2ce544>
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	2019270b 	andscs	r2, r9, fp, lsl #14
     10c:	1600000b 	strne	r0, [r0], -fp
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
     110:	08030005 	stmdaeq	r3, {r0, r2}
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     114:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	00001349 	andeq	r1, r0, r9, asr #6
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	03003417 	movweq	r3, #1047	; 0x417
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	3b0b3a08 	blcc	2ce948 <__Stack_Size+0x2ce548>
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	00134905 	andseq	r4, r3, r5, lsl #18
     128:	00241800 	eoreq	r1, r4, r0, lsl #16
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
     12c:	0b3e0b0b 	bleq	f82d60 <__Stack_Size+0xf82960>
				gbIsFlashLock = TRUE;
     130:	00000803 	andeq	r0, r0, r3, lsl #16
     134:	31002e19 	tstcc	r0, r9, lsl lr
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     13c:	97184006 	ldrls	r4, [r8, -r6]
     140:	00001942 	andeq	r1, r0, r2, asr #18
     144:	3f002e1a 	svccc	0x00002e1a
					USB_TxDString("Success..\n");
     148:	3a0e0319 	bcc	380db4 <__Stack_Size+0x3809b4>
				}
				else
					USB_TxDString("Fail..\n");
     14c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     150:	11134919 	tstne	r3, r9, lsl r9
			//WDTCR = 0x08;
				Delay(100);
     154:	40061201 	andmi	r1, r6, r1, lsl #4
     158:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     160:	03193f00 	tsteq	r9, #0, 30
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	3b0b3a0e 	blcc	2ce9a4 <__Stack_Size+0x2ce5a4>
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
     168:	1119270b 	tstne	r9, fp, lsl #14
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
     16c:	40061201 	andmi	r1, r6, r1, lsl #4
     170:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^

				Jump_To_Application();
     174:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	03193f01 	tsteq	r9, #1, 30
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	3b0b3a0e 	blcc	2ce9bc <__Stack_Size+0x2ce5bc>
     180:	1119270b 	tstne	r9, fp, lsl #14
     184:	40061201 	andmi	r1, r6, r1, lsl #4
     188:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     18c:	00001301 	andeq	r1, r0, r1, lsl #6

		}
		USART_BUFFER_CLEAR;
     190:	0300341d 	movweq	r3, #1053	; 0x41d
     194:	3b0b3a0e 	blcc	2ce9d4 <__Stack_Size+0x2ce5d4>
		gwpUSARTBuffer[0]='\0';
     198:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     19c:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
     1a0:	01018289 	smlabbeq	r1, r9, r2, r8
     1a4:	13310111 	teqne	r1, #1073741828	; 0x40000004
     1a8:	00001301 	andeq	r1, r0, r1, lsl #6
     1ac:	01828a1f 	orreq	r8, r2, pc, lsl sl
     1b0:	91180200 	tstls	r8, r0, lsl #4
     1b4:	00001842 	andeq	r1, r0, r2, asr #16
     1b8:	01828920 	orreq	r8, r2, r0, lsr #18
     1bc:	31011101 	tstcc	r1, r1, lsl #2
     1c0:	21000013 	tstcs	r0, r3, lsl r0
     1c4:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     1c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     1cc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     1d0:	00130119 	andseq	r0, r3, r9, lsl r1
     1d4:	00052200 	andeq	r2, r5, r0, lsl #4
     1d8:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     1dc:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     1e0:	03193f01 	tsteq	r9, #1, 30
     1e4:	3b0b3a0e 	blcc	2cea24 <__Stack_Size+0x2ce624>
     1e8:	11192705 	tstne	r9, r5, lsl #14
     1ec:	40061201 	andmi	r1, r6, r1, lsl #4
     1f0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     1f4:	00001301 	andeq	r1, r0, r1, lsl #6
     1f8:	03000524 	movweq	r0, #1316	; 0x524
     1fc:	3b0b3a0e 	blcc	2cea3c <__Stack_Size+0x2ce63c>
     200:	02134905 	andseq	r4, r3, #81920	; 0x14000
     204:	25000018 	strcs	r0, [r0, #-24]
     208:	13310034 	teqne	r1, #52	; 0x34
     20c:	05260000 	streq	r0, [r6, #-0]!
     210:	3a0e0300 	bcc	380e18 <__Stack_Size+0x380a18>
     214:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     218:	00170213 	andseq	r0, r7, r3, lsl r2
     21c:	00342700 	eorseq	r2, r4, r0, lsl #14
     220:	0b3a0e03 	bleq	e83a34 <__Stack_Size+0xe83634>
     224:	1349053b 	movtne	r0, #38203	; 0x953b
     228:	00001702 	andeq	r1, r0, r2, lsl #14
     22c:	01828928 	orreq	r8, r2, r8, lsr #18
     230:	95011100 	strls	r1, [r1, #-256]	; 0x100
     234:	13311942 	teqne	r1, #1081344	; 0x108000
     238:	05290000 	streq	r0, [r9, #-0]!
     23c:	3a080300 	bcc	200e44 <__Stack_Size+0x200a44>
     240:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     244:	00170213 	andseq	r0, r7, r3, lsl r2
     248:	00342a00 	eorseq	r2, r4, r0, lsl #20
     24c:	0b3a0803 	bleq	e82260 <__Stack_Size+0xe81e60>
     250:	1349053b 	movtne	r0, #38203	; 0x953b
     254:	00001702 	andeq	r1, r0, r2, lsl #14
     258:	0182892b 	orreq	r8, r2, fp, lsr #18
     25c:	31011100 	mrscc	r1, (UNDEF: 17)
     260:	2c000013 	stccs	0, cr0, [r0], {19}
     264:	01018289 	smlabbeq	r1, r9, r2, r8
     268:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
     26c:	00133119 	andseq	r3, r3, r9, lsl r1
     270:	002e2d00 	eoreq	r2, lr, r0, lsl #26
     274:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     278:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     27c:	13491927 	movtne	r1, #39207	; 0x9927
     280:	06120111 			; <UNDEFINED> instruction: 0x06120111
     284:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     288:	2e000019 	mcrcs	0, 0, r0, cr0, cr9, {0}
     28c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     290:	0b3a0e03 	bleq	e83aa4 <__Stack_Size+0xe836a4>
     294:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     298:	01111349 	tsteq	r1, r9, asr #6
     29c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     2a0:	01194297 			; <UNDEFINED> instruction: 0x01194297
     2a4:	2f000013 	svccs	0x00000013
     2a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     2b0:	0b1c1349 	bleq	704fdc <__Stack_Size+0x704bdc>
     2b4:	34300000 	ldrtcc	r0, [r0], #-0
     2b8:	3a0e0300 	bcc	380ec0 <__Stack_Size+0x380ac0>
     2bc:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     2c0:	00180213 	andseq	r0, r8, r3, lsl r2
     2c4:	010b3100 	mrseq	r3, (UNDEF: 27)
     2c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     2cc:	00001301 	andeq	r1, r0, r1, lsl #6
     2d0:	31001d32 	tstcc	r0, r2, lsr sp
     2d4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     2d8:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     2dc:	33000005 	movwcc	r0, #5
     2e0:	00018289 	andeq	r8, r1, r9, lsl #5
     2e4:	42930111 	addsmi	r0, r3, #1073741828	; 0x40000004
     2e8:	34000018 	strcc	r0, [r0], #-24
     2ec:	13490101 	movtne	r0, #37121	; 0x9101
     2f0:	00001301 	andeq	r1, r0, r1, lsl #6
     2f4:	49002135 	stmdbmi	r0, {r0, r2, r4, r5, r8, sp}
     2f8:	000b2f13 	andeq	r2, fp, r3, lsl pc
     2fc:	012e3600 	teqeq	lr, r0, lsl #12
     300:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     304:	0b3b0b3a 	bleq	ec2ff4 <__Stack_Size+0xec2bf4>
     308:	13491927 	movtne	r1, #39207	; 0x9927
     30c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     310:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     314:	00130119 	andseq	r0, r3, r9, lsl r1
     318:	00343700 	eorseq	r3, r4, r0, lsl #14
     31c:	0b3a0e03 	bleq	e83b30 <__Stack_Size+0xe83730>
     320:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     324:	34380000 	ldrtcc	r0, [r8], #-0
     328:	3a0e0300 	bcc	380f30 <__Stack_Size+0x380b30>
     32c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     330:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     334:	39000018 	stmdbcc	r0, {r3, r4}
     338:	13490021 	movtne	r0, #36897	; 0x9021
     33c:	0000052f 	andeq	r0, r0, pc, lsr #10
     340:	0300343a 	movweq	r3, #1082	; 0x43a
     344:	3b0b3a0e 	blcc	2ceb84 <__Stack_Size+0x2ce784>
     348:	3f13490b 	svccc	0x0013490b
     34c:	00193c19 	andseq	r3, r9, r9, lsl ip
     350:	00343b00 	eorseq	r3, r4, r0, lsl #22
     354:	0b3a0e03 	bleq	e83b68 <__Stack_Size+0xe83768>
     358:	1349053b 	movtne	r0, #38203	; 0x953b
     35c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     360:	343c0000 	ldrtcc	r0, [ip], #-0
     364:	3a0e0300 	bcc	380f6c <__Stack_Size+0x380b6c>
     368:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     36c:	3c193f13 	ldccc	15, cr3, [r9], {19}
     370:	3d000019 	stccc	0, cr0, [r0, #-100]	; 0xffffff9c
     374:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     378:	0b3a0e03 	bleq	e83b8c <__Stack_Size+0xe8378c>
     37c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     380:	1301193c 	movwne	r1, #6460	; 0x193c
     384:	053e0000 	ldreq	r0, [lr, #-0]!
     388:	00134900 	andseq	r4, r3, r0, lsl #18
     38c:	012e3f00 	teqeq	lr, r0, lsl #30
     390:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     394:	0b3b0b3a 	bleq	ec3084 <__Stack_Size+0xec2c84>
     398:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     39c:	00001301 	andeq	r1, r0, r1, lsl #6
     3a0:	3f002e40 	svccc	0x00002e40
     3a4:	3a0e0319 	bcc	381010 <__Stack_Size+0x380c10>
     3a8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     3ac:	00193c19 	andseq	r3, r9, r9, lsl ip
     3b0:	012e4100 	teqeq	lr, r0, lsl #2
     3b4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     3b8:	0b3b0b3a 	bleq	ec30a8 <__Stack_Size+0xec2ca8>
     3bc:	13491927 	movtne	r1, #39207	; 0x9927
     3c0:	1301193c 	movwne	r1, #6460	; 0x193c
     3c4:	2e420000 	cdpcs	0, 4, cr0, cr2, cr0, {0}
     3c8:	03193f00 	tsteq	r9, #0, 30
     3cc:	3b0b3a0e 	blcc	2cec0c <__Stack_Size+0x2ce80c>
     3d0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     3d4:	00193c13 	andseq	r3, r9, r3, lsl ip
     3d8:	012e4300 	teqeq	lr, r0, lsl #6
     3dc:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     3e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     3e4:	13491927 	movtne	r1, #39207	; 0x9927
     3e8:	1301193c 	movwne	r1, #6460	; 0x193c
     3ec:	2e440000 	cdpcs	0, 4, cr0, cr4, cr0, {0}
     3f0:	03193f00 	tsteq	r9, #0, 30
     3f4:	3b0b3a0e 	blcc	2cec34 <__Stack_Size+0x2ce834>
     3f8:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
     3fc:	00193c13 	andseq	r3, r9, r3, lsl ip
     400:	11010000 	mrsne	r0, (UNDEF: 1)
     404:	130e2501 	movwne	r2, #58625	; 0xe501
     408:	1b0e030b 	blne	38103c <__Stack_Size+0x380c3c>
     40c:	1117550e 	tstne	r7, lr, lsl #10
     410:	00171001 	andseq	r1, r7, r1
     414:	00240200 	eoreq	r0, r4, r0, lsl #4
     418:	0b3e0b0b 	bleq	f8304c <__Stack_Size+0xf82c4c>
     41c:	00000e03 	andeq	r0, r0, r3, lsl #28
     420:	03001603 	movweq	r1, #1539	; 0x603
     424:	3b0b3a08 	blcc	2cec4c <__Stack_Size+0x2ce84c>
     428:	0013490b 	andseq	r4, r3, fp, lsl #18
     42c:	00160400 	andseq	r0, r6, r0, lsl #8
     430:	0b3a0e03 	bleq	e83c44 <__Stack_Size+0xe83844>
     434:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     438:	35050000 	strcc	r0, [r5, #-0]
     43c:	00134900 	andseq	r4, r3, r0, lsl #18
     440:	01130600 	tsteq	r3, r0, lsl #12
     444:	0b3a0b0b 	bleq	e83078 <__Stack_Size+0xe82c78>
     448:	1301053b 	movwne	r0, #5435	; 0x153b
     44c:	0d070000 	stceq	0, cr0, [r7, #-0]
     450:	3a080300 	bcc	201058 <__Stack_Size+0x200c58>
     454:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     458:	000b3813 	andeq	r3, fp, r3, lsl r8
     45c:	000d0800 	andeq	r0, sp, r0, lsl #16
     460:	0b3a0e03 	bleq	e83c74 <__Stack_Size+0xe83874>
     464:	1349053b 	movtne	r0, #38203	; 0x953b
     468:	00000b38 	andeq	r0, r0, r8, lsr fp
     46c:	03001609 	movweq	r1, #1545	; 0x609
     470:	3b0b3a0e 	blcc	2cecb0 <__Stack_Size+0x2ce8b0>
     474:	00134905 	andseq	r4, r3, r5, lsl #18
     478:	002e0a00 	eoreq	r0, lr, r0, lsl #20
     47c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     480:	0b3b0b3a 	bleq	ec3170 <__Stack_Size+0xec2d70>
     484:	01111927 	tsteq	r1, r7, lsr #18
     488:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     48c:	00194297 	mulseq	r9, r7, r2
     490:	002e0b00 	eoreq	r0, lr, r0, lsl #22
     494:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     498:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     49c:	01111927 	tsteq	r1, r7, lsr #18
     4a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     4a4:	00194297 	mulseq	r9, r7, r2
     4a8:	012e0c00 	teqeq	lr, r0, lsl #24
     4ac:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     4b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     4b4:	01111927 	tsteq	r1, r7, lsr #18
     4b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     4bc:	01194297 			; <UNDEFINED> instruction: 0x01194297
     4c0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     4c4:	00018289 	andeq	r8, r1, r9, lsl #5
     4c8:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
     4cc:	00133119 	andseq	r3, r3, r9, lsl r1
     4d0:	82890e00 	addhi	r0, r9, #0, 28
     4d4:	01110101 	tsteq	r1, r1, lsl #2
     4d8:	13011331 	movwne	r1, #4913	; 0x1331
     4dc:	8a0f0000 	bhi	3c04e4 <__Stack_Size+0x3c00e4>
     4e0:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     4e4:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
     4e8:	34100000 	ldrcc	r0, [r0], #-0
     4ec:	3a080300 	bcc	2010f4 <__Stack_Size+0x200cf4>
     4f0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4f4:	00180213 	andseq	r0, r8, r3, lsl r2
     4f8:	82891100 	addhi	r1, r9, #0, 2
     4fc:	01110101 	tsteq	r1, r1, lsl #2
     500:	00001331 	andeq	r1, r0, r1, lsr r3
     504:	03003412 	movweq	r3, #1042	; 0x412
     508:	3b0b3a0e 	blcc	2ced48 <__Stack_Size+0x2ce948>
     50c:	3f13490b 	svccc	0x0013490b
     510:	00193c19 	andseq	r3, r9, r9, lsl ip
     514:	01011300 	mrseq	r1, SP_irq
     518:	13011349 	movwne	r1, #4937	; 0x1349
     51c:	21140000 	tstcs	r4, r0
     520:	2f134900 	svccs	0x00134900
     524:	15000005 	strne	r0, [r0, #-5]
     528:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     52c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     530:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     534:	0000193c 	andeq	r1, r0, ip, lsr r9
     538:	3f002e16 	svccc	0x00002e16
     53c:	3a0e0319 	bcc	3811a8 <__Stack_Size+0x380da8>
     540:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     544:	00193c19 	andseq	r3, r9, r9, lsl ip
     548:	012e1700 	teqeq	lr, r0, lsl #14
     54c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     550:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     554:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     558:	00001301 	andeq	r1, r0, r1, lsl #6
     55c:	49000518 	stmdbmi	r0, {r3, r4, r8, sl}
     560:	19000013 	stmdbne	r0, {r0, r1, r4}
     564:	0b0b000f 	bleq	2c05a8 <__Stack_Size+0x2c01a8>
     568:	00001349 	andeq	r1, r0, r9, asr #6
     56c:	3f002e1a 	svccc	0x00002e1a
     570:	3a0e0319 	bcc	3811dc <__Stack_Size+0x380ddc>
     574:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     578:	00193c19 	andseq	r3, r9, r9, lsl ip
     57c:	012e1b00 	teqeq	lr, r0, lsl #22
     580:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     584:	0b3b0b3a 	bleq	ec3274 <__Stack_Size+0xec2e74>
     588:	13491927 	movtne	r1, #39207	; 0x9927
     58c:	1301193c 	movwne	r1, #6460	; 0x193c
     590:	01000000 	mrseq	r0, (UNDEF: 0)
     594:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     598:	0e030b13 	vmoveq.32	d3[0], r0
     59c:	17100e1b 			; <UNDEFINED> instruction: 0x17100e1b
     5a0:	24020000 	strcs	r0, [r2], #-0
     5a4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     5a8:	000e030b 	andeq	r0, lr, fp, lsl #6
     5ac:	00160300 	andseq	r0, r6, r0, lsl #6
     5b0:	0b3a0803 	bleq	e825c4 <__Stack_Size+0xe821c4>
     5b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     5b8:	01040000 	mrseq	r0, (UNDEF: 4)
     5bc:	01134901 	tsteq	r3, r1, lsl #18
     5c0:	05000013 	streq	r0, [r0, #-19]
     5c4:	13490021 	movtne	r0, #36897	; 0x9021
     5c8:	00000b2f 	andeq	r0, r0, pc, lsr #22
     5cc:	03003406 	movweq	r3, #1030	; 0x406
     5d0:	3b0b3a0e 	blcc	2cee10 <__Stack_Size+0x2cea10>
     5d4:	3f13490b 	svccc	0x0013490b
     5d8:	00180219 	andseq	r0, r8, r9, lsl r2
     5dc:	00260700 	eoreq	r0, r6, r0, lsl #14
     5e0:	00001349 	andeq	r1, r0, r9, asr #6
     5e4:	01110100 	tsteq	r1, r0, lsl #2
     5e8:	0b130e25 	bleq	4c3e84 <__Stack_Size+0x4c3a84>
     5ec:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     5f0:	01111755 	tsteq	r1, r5, asr r7
     5f4:	00001710 	andeq	r1, r0, r0, lsl r7
     5f8:	0b002402 	bleq	9608 <__Stack_Size+0x9208>
     5fc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     600:	0300000e 	movweq	r0, #14
     604:	08030016 	stmdaeq	r3, {r1, r2, r4}
     608:	0b3b0b3a 	bleq	ec32f8 <__Stack_Size+0xec2ef8>
     60c:	00001349 	andeq	r1, r0, r9, asr #6
     610:	03001604 	movweq	r1, #1540	; 0x604
     614:	3b0b3a0e 	blcc	2cee54 <__Stack_Size+0x2cea54>
     618:	0013490b 	andseq	r4, r3, fp, lsl #18
     61c:	00350500 	eorseq	r0, r5, r0, lsl #10
     620:	00001349 	andeq	r1, r0, r9, asr #6
     624:	0b010406 	bleq	41644 <__Stack_Size+0x41244>
     628:	3b0b3a0b 	blcc	2cee5c <__Stack_Size+0x2cea5c>
     62c:	0013010b 	andseq	r0, r3, fp, lsl #2
     630:	00280700 	eoreq	r0, r8, r0, lsl #14
     634:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     638:	0f080000 	svceq	0x00080000
     63c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     640:	09000013 	stmdbeq	r0, {r0, r1, r4}
     644:	0e030104 	adfeqs	f0, f3, f4
     648:	0b3a0b0b 	bleq	e8327c <__Stack_Size+0xe82e7c>
     64c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     650:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
     654:	03193f00 	tsteq	r9, #0, 30
     658:	3b0b3a0e 	blcc	2cee98 <__Stack_Size+0x2cea98>
     65c:	1119270b 	tstne	r9, fp, lsl #14
     660:	40061201 	andmi	r1, r6, r1, lsl #4
     664:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     668:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
     66c:	03193f01 	tsteq	r9, #1, 30
     670:	3b0b3a0e 	blcc	2ceeb0 <__Stack_Size+0x2ceab0>
     674:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     678:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     67c:	97184006 	ldrls	r4, [r8, -r6]
     680:	13011942 	movwne	r1, #6466	; 0x1942
     684:	050c0000 	streq	r0, [ip, #-0]
     688:	3a0e0300 	bcc	381290 <__Stack_Size+0x380e90>
     68c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     690:	00170213 	andseq	r0, r7, r3, lsl r2
     694:	00340d00 	eorseq	r0, r4, r0, lsl #26
     698:	0b3a0e03 	bleq	e83eac <__Stack_Size+0xe83aac>
     69c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     6a0:	00001702 	andeq	r1, r0, r2, lsl #14
     6a4:	0300340e 	movweq	r3, #1038	; 0x40e
     6a8:	3b0b3a0e 	blcc	2ceee8 <__Stack_Size+0x2ceae8>
     6ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6b0:	0f000018 	svceq	0x00000018
     6b4:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
     6b8:	89100000 	ldmdbhi	r0, {}	; <UNPREDICTABLE>
     6bc:	11000182 	smlabbne	r0, r2, r1, r0
     6c0:	00133101 	andseq	r3, r3, r1, lsl #2
     6c4:	012e1100 	teqeq	lr, r0, lsl #2
     6c8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     6cc:	0b3b0b3a 	bleq	ec33bc <__Stack_Size+0xec2fbc>
     6d0:	01111927 	tsteq	r1, r7, lsr #18
     6d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     6d8:	01194297 			; <UNDEFINED> instruction: 0x01194297
     6dc:	12000013 	andne	r0, r0, #19
     6e0:	0111010b 	tsteq	r1, fp, lsl #2
     6e4:	13010612 	movwne	r0, #5650	; 0x1612
     6e8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     6ec:	03193f01 	tsteq	r9, #1, 30
     6f0:	3b0b3a0e 	blcc	2cef30 <__Stack_Size+0x2ceb30>
     6f4:	3c13490b 	ldccc	9, cr4, [r3], {11}
     6f8:	00130119 	andseq	r0, r3, r9, lsl r1
     6fc:	00181400 	andseq	r1, r8, r0, lsl #8
     700:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
     704:	11010182 	smlabbne	r1, r2, r1, r0
     708:	00133101 	andseq	r3, r3, r1, lsl #2
     70c:	828a1600 	addhi	r1, sl, #0, 12
     710:	18020001 	stmdane	r2, {r0}
     714:	00184291 	mulseq	r8, r1, r2
     718:	82891700 	addhi	r1, r9, #0, 14
     71c:	01110101 	tsteq	r1, r1, lsl #2
     720:	13011331 	movwne	r1, #4913	; 0x1331
     724:	89180000 	ldmdbhi	r8, {}	; <UNPREDICTABLE>
     728:	11010182 	smlabbne	r1, r2, r1, r0
     72c:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     730:	00001331 	andeq	r1, r0, r1, lsr r3
     734:	0b002419 	bleq	97a0 <__Stack_Size+0x93a0>
     738:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     73c:	1a000008 	bne	764 <__Stack_Size+0x364>
     740:	13490101 	movtne	r0, #37121	; 0x9101
     744:	00001301 	andeq	r1, r0, r1, lsl #6
     748:	4900211b 	stmdbmi	r0, {r0, r1, r3, r4, r8, sp}
     74c:	000b2f13 	andeq	r2, fp, r3, lsl pc
     750:	00341c00 	eorseq	r1, r4, r0, lsl #24
     754:	0b3a0e03 	bleq	e83f68 <__Stack_Size+0xe83b68>
     758:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     75c:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     760:	211d0000 	tstcs	sp, r0
     764:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     768:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     76c:	0b3b0b3a 	bleq	ec345c <__Stack_Size+0xec305c>
     770:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     774:	0000193c 	andeq	r1, r0, ip, lsr r9
     778:	3f012e1f 	svccc	0x00012e1f
     77c:	3a0e0319 	bcc	3813e8 <__Stack_Size+0x380fe8>
     780:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     784:	3c134919 	ldccc	9, cr4, [r3], {25}
     788:	00130119 	andseq	r0, r3, r9, lsl r1
     78c:	00052000 	andeq	r2, r5, r0
     790:	00001349 	andeq	r1, r0, r9, asr #6
     794:	3f012e21 	svccc	0x00012e21
     798:	3a0e0319 	bcc	381404 <__Stack_Size+0x381004>
     79c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     7a0:	01193c19 	tsteq	r9, r9, lsl ip
     7a4:	22000013 	andcs	r0, r0, #19
     7a8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     7ac:	0b3a0e03 	bleq	e83fc0 <__Stack_Size+0xe83bc0>
     7b0:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     7b4:	0000193c 	andeq	r1, r0, ip, lsr r9
     7b8:	01110100 	tsteq	r1, r0, lsl #2
     7bc:	0b130e25 	bleq	4c4058 <__Stack_Size+0x4c3c58>
     7c0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7c4:	01111755 	tsteq	r1, r5, asr r7
     7c8:	00001710 	andeq	r1, r0, r0, lsl r7
     7cc:	0b002402 	bleq	97dc <__Stack_Size+0x93dc>
     7d0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     7d4:	0300000e 	movweq	r0, #14
     7d8:	08030016 	stmdaeq	r3, {r1, r2, r4}
     7dc:	0b3b0b3a 	bleq	ec34cc <__Stack_Size+0xec30cc>
     7e0:	00001349 	andeq	r1, r0, r9, asr #6
     7e4:	0b000f04 	bleq	43fc <__Stack_Size+0x3ffc>
     7e8:	0013490b 	andseq	r4, r3, fp, lsl #18
     7ec:	01040500 	tsteq	r4, r0, lsl #10
     7f0:	0b0b0e03 	bleq	2c4004 <__Stack_Size+0x2c3c04>
     7f4:	0b3b0b3a 	bleq	ec34e4 <__Stack_Size+0xec30e4>
     7f8:	00001301 	andeq	r1, r0, r1, lsl #6
     7fc:	03002806 	movweq	r2, #2054	; 0x806
     800:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     804:	00160700 	andseq	r0, r6, r0, lsl #14
     808:	0b3a0e03 	bleq	e8401c <__Stack_Size+0xe83c1c>
     80c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     810:	15080000 	strne	r0, [r8, #-0]
     814:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
     818:	00130113 	andseq	r0, r3, r3, lsl r1
     81c:	00050900 	andeq	r0, r5, r0, lsl #18
     820:	00001349 	andeq	r1, r0, r9, asr #6
     824:	0301130a 	movweq	r1, #4874	; 0x130a
     828:	3a0b0b0e 	bcc	2c3468 <__Stack_Size+0x2c3068>
     82c:	010b3b0b 	tsteq	fp, fp, lsl #22
     830:	0b000013 	bleq	884 <__Stack_Size+0x484>
     834:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     838:	0b3b0b3a 	bleq	ec3528 <__Stack_Size+0xec3128>
     83c:	0b381349 	bleq	e05568 <__Stack_Size+0xe05168>
     840:	150c0000 	strne	r0, [ip, #-0]
     844:	00192700 	andseq	r2, r9, r0, lsl #14
     848:	000f0d00 	andeq	r0, pc, r0, lsl #26
     84c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     850:	3f012e0e 	svccc	0x00012e0e
     854:	3a0e0319 	bcc	3814c0 <__Stack_Size+0x3810c0>
     858:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     85c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     860:	96184006 	ldrls	r4, [r8], -r6
     864:	13011942 	movwne	r1, #6466	; 0x1942
     868:	890f0000 	stmdbhi	pc, {}	; <UNPREDICTABLE>
     86c:	11000182 	smlabbne	r0, r2, r1, r0
     870:	00133101 	andseq	r3, r3, r1, lsl #2
     874:	00341000 	eorseq	r1, r4, r0
     878:	0b3a0e03 	bleq	e8408c <__Stack_Size+0xe83c8c>
     87c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     880:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     884:	35110000 	ldrcc	r0, [r1, #-0]
     888:	00134900 	andseq	r4, r3, r0, lsl #18
     88c:	00341200 	eorseq	r1, r4, r0, lsl #4
     890:	0b3a0e03 	bleq	e840a4 <__Stack_Size+0xe83ca4>
     894:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     898:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     89c:	01130000 	tsteq	r3, r0
     8a0:	01134901 	tsteq	r3, r1, lsl #18
     8a4:	14000013 	strne	r0, [r0], #-19
     8a8:	13490021 	movtne	r0, #36897	; 0x9021
     8ac:	00000b2f 	andeq	r0, r0, pc, lsr #22
     8b0:	3f002e15 	svccc	0x00002e15
     8b4:	3a0e0319 	bcc	381520 <__Stack_Size+0x381120>
     8b8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     8bc:	00193c19 	andseq	r3, r9, r9, lsl ip
     8c0:	11010000 	mrsne	r0, (UNDEF: 1)
     8c4:	130e2501 	movwne	r2, #58625	; 0xe501
     8c8:	1b0e030b 	blne	3814fc <__Stack_Size+0x3810fc>
     8cc:	1117550e 	tstne	r7, lr, lsl #10
     8d0:	00171001 	andseq	r1, r7, r1
     8d4:	00240200 	eoreq	r0, r4, r0, lsl #4
     8d8:	0b3e0b0b 	bleq	f8350c <__Stack_Size+0xf8310c>
     8dc:	00000e03 	andeq	r0, r0, r3, lsl #28
     8e0:	03001603 	movweq	r1, #1539	; 0x603
     8e4:	3b0b3a08 	blcc	2cf10c <__Stack_Size+0x2ced0c>
     8e8:	0013490b 	andseq	r4, r3, fp, lsl #18
     8ec:	01040400 	tsteq	r4, r0, lsl #8
     8f0:	0b0b0e03 	bleq	2c4104 <__Stack_Size+0x2c3d04>
     8f4:	0b3b0b3a 	bleq	ec35e4 <__Stack_Size+0xec31e4>
     8f8:	00001301 	andeq	r1, r0, r1, lsl #6
     8fc:	03002805 	movweq	r2, #2053	; 0x805
     900:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     904:	01130600 	tsteq	r3, r0, lsl #12
     908:	0b0b0e03 	bleq	2c411c <__Stack_Size+0x2c3d1c>
     90c:	0b3b0b3a 	bleq	ec35fc <__Stack_Size+0xec31fc>
     910:	00001301 	andeq	r1, r0, r1, lsl #6
     914:	03000d07 	movweq	r0, #3335	; 0xd07
     918:	3b0b3a0e 	blcc	2cf158 <__Stack_Size+0x2ced58>
     91c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     920:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     924:	0b0b000f 	bleq	2c0968 <__Stack_Size+0x2c0568>
     928:	00001349 	andeq	r1, r0, r9, asr #6
     92c:	03001609 	movweq	r1, #1545	; 0x609
     930:	3b0b3a0e 	blcc	2cf170 <__Stack_Size+0x2ced70>
     934:	0013490b 	andseq	r4, r3, fp, lsl #18
     938:	01150a00 	tsteq	r5, r0, lsl #20
     93c:	13491927 	movtne	r1, #39207	; 0x9927
     940:	00001301 	andeq	r1, r0, r1, lsl #6
     944:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
     948:	0c000013 	stceq	0, cr0, [r0], {19}
     94c:	08030113 	stmdaeq	r3, {r0, r1, r4, r8}
     950:	0b3a0b0b 	bleq	e83584 <__Stack_Size+0xe83184>
     954:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     958:	0d0d0000 	stceq	0, cr0, [sp, #-0]
     95c:	3a080300 	bcc	201564 <__Stack_Size+0x201164>
     960:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     964:	000b3813 	andeq	r3, fp, r3, lsl r8
     968:	01170e00 	tsteq	r7, r0, lsl #28
     96c:	0b3a0b0b 	bleq	e835a0 <__Stack_Size+0xe831a0>
     970:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     974:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 97c <__Stack_Size+0x57c>
     978:	3a080300 	bcc	201580 <__Stack_Size+0x201180>
     97c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     980:	10000013 	andne	r0, r0, r3, lsl r0
     984:	19270015 	stmdbne	r7!, {r0, r2, r4}
     988:	0f110000 	svceq	0x00110000
     98c:	000b0b00 	andeq	r0, fp, r0, lsl #22
     990:	01131200 	tsteq	r3, r0, lsl #4
     994:	0b3a0b0b 	bleq	e835c8 <__Stack_Size+0xe831c8>
     998:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     99c:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     9a0:	03193f01 	tsteq	r9, #1, 30
     9a4:	3b0b3a0e 	blcc	2cf1e4 <__Stack_Size+0x2cede4>
     9a8:	1119270b 	tstne	r9, fp, lsl #14
     9ac:	40061201 	andmi	r1, r6, r1, lsl #4
     9b0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     9b4:	00001301 	andeq	r1, r0, r1, lsl #6
     9b8:	03003414 	movweq	r3, #1044	; 0x414
     9bc:	3b0b3a0e 	blcc	2cf1fc <__Stack_Size+0x2cedfc>
     9c0:	0013490b 	andseq	r4, r3, fp, lsl #18
     9c4:	002e1500 	eoreq	r1, lr, r0, lsl #10
     9c8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     9cc:	0b3b0b3a 	bleq	ec36bc <__Stack_Size+0xec32bc>
     9d0:	01111927 	tsteq	r1, r7, lsr #18
     9d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     9d8:	00194297 	mulseq	r9, r7, r2
     9dc:	012e1600 	teqeq	lr, r0, lsl #12
     9e0:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     9e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     9e8:	13491927 	movtne	r1, #39207	; 0x9927
     9ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
     9f0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     9f4:	00130119 	andseq	r0, r3, r9, lsl r1
     9f8:	00051700 	andeq	r1, r5, r0, lsl #14
     9fc:	0b3a0e03 	bleq	e84210 <__Stack_Size+0xe83e10>
     a00:	1349053b 	movtne	r0, #38203	; 0x953b
     a04:	00001702 	andeq	r1, r0, r2, lsl #14
     a08:	03003418 	movweq	r3, #1048	; 0x418
     a0c:	3b0b3a0e 	blcc	2cf24c <__Stack_Size+0x2cee4c>
     a10:	02134905 	andseq	r4, r3, #81920	; 0x14000
     a14:	19000017 	stmdbne	r0, {r0, r1, r2, r4}
     a18:	01018289 	smlabbeq	r1, r9, r2, r8
     a1c:	00000111 	andeq	r0, r0, r1, lsl r1
     a20:	01828a1a 	orreq	r8, r2, sl, lsl sl
     a24:	91180200 	tstls	r8, r0, lsl #4
     a28:	00001842 	andeq	r1, r0, r2, asr #16
     a2c:	0300051b 	movweq	r0, #1307	; 0x51b
     a30:	3b0b3a0e 	blcc	2cf270 <__Stack_Size+0x2cee70>
     a34:	02134905 	andseq	r4, r3, #81920	; 0x14000
     a38:	1c000018 	stcne	0, cr0, [r0], {24}
     a3c:	00018289 	andeq	r8, r1, r9, lsl #5
     a40:	13310111 	teqne	r1, #1073741828	; 0x40000004
     a44:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
     a48:	11010182 	smlabbne	r1, r2, r1, r0
     a4c:	01133101 	tsteq	r3, r1, lsl #2
     a50:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     a54:	01018289 	smlabbeq	r1, r9, r2, r8
     a58:	13310111 	teqne	r1, #1073741828	; 0x40000004
     a5c:	891f0000 	ldmdbhi	pc, {}	; <UNPREDICTABLE>
     a60:	11010182 	smlabbne	r1, r2, r1, r0
     a64:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     a68:	00001331 	andeq	r1, r0, r1, lsr r3
     a6c:	03003420 	movweq	r3, #1056	; 0x420
     a70:	3b0b3a0e 	blcc	2cf2b0 <__Stack_Size+0x2ceeb0>
     a74:	00134905 	andseq	r4, r3, r5, lsl #18
     a78:	82892100 	addhi	r2, r9, #0, 2
     a7c:	01110001 	tsteq	r1, r1
     a80:	31194295 			; <UNDEFINED> instruction: 0x31194295
     a84:	22000013 	andcs	r0, r0, #19
     a88:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     a8c:	0b3b0b3a 	bleq	ec377c <__Stack_Size+0xec337c>
     a90:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     a94:	00001802 	andeq	r1, r0, r2, lsl #16
     a98:	03003423 	movweq	r3, #1059	; 0x423
     a9c:	3b0b3a0e 	blcc	2cf2dc <__Stack_Size+0x2ceedc>
     aa0:	3f13490b 	svccc	0x0013490b
     aa4:	00193c19 	andseq	r3, r9, r9, lsl ip
     aa8:	01012400 	tsteq	r1, r0, lsl #8
     aac:	13011349 	movwne	r1, #4937	; 0x1349
     ab0:	21250000 	teqcs	r5, r0
     ab4:	2f134900 	svccs	0x00134900
     ab8:	2600000b 	strcs	r0, [r0], -fp
     abc:	13490026 	movtne	r0, #36902	; 0x9026
     ac0:	35270000 	strcc	r0, [r7, #-0]!
     ac4:	00134900 	andseq	r4, r3, r0, lsl #18
     ac8:	00342800 	eorseq	r2, r4, r0, lsl #16
     acc:	0b3a0e03 	bleq	e842e0 <__Stack_Size+0xe83ee0>
     ad0:	1349053b 	movtne	r0, #38203	; 0x953b
     ad4:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     ad8:	24290000 	strtcs	r0, [r9], #-0
     adc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ae0:	0008030b 	andeq	r0, r8, fp, lsl #6
     ae4:	002e2a00 	eoreq	r2, lr, r0, lsl #20
     ae8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     aec:	0b3b0b3a 	bleq	ec37dc <__Stack_Size+0xec33dc>
     af0:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     af4:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     af8:	03193f00 	tsteq	r9, #0, 30
     afc:	3b0b3a0e 	blcc	2cf33c <__Stack_Size+0x2cef3c>
     b00:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     b04:	00193c13 	andseq	r3, r9, r3, lsl ip
     b08:	012e2c00 	teqeq	lr, r0, lsl #24
     b0c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     b10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     b14:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     b18:	00001301 	andeq	r1, r0, r1, lsl #6
     b1c:	3f012e2d 	svccc	0x00012e2d
     b20:	3a0e0319 	bcc	38178c <__Stack_Size+0x38138c>
     b24:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     b28:	01193c19 	tsteq	r9, r9, lsl ip
     b2c:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     b30:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     b34:	0b3a0e03 	bleq	e84348 <__Stack_Size+0xe83f48>
     b38:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     b3c:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
     b40:	01000000 	mrseq	r0, (UNDEF: 0)
     b44:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     b48:	0e030b13 	vmoveq.32	d3[0], r0
     b4c:	17550e1b 	smmlane	r5, fp, lr, r0
     b50:	17100111 			; <UNDEFINED> instruction: 0x17100111
     b54:	24020000 	strcs	r0, [r2], #-0
     b58:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     b5c:	000e030b 	andeq	r0, lr, fp, lsl #6
     b60:	00160300 	andseq	r0, r6, r0, lsl #6
     b64:	0b3a0803 	bleq	e82b78 <__Stack_Size+0xe82778>
     b68:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     b6c:	16040000 	strne	r0, [r4], -r0
     b70:	3a0e0300 	bcc	381778 <__Stack_Size+0x381378>
     b74:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b78:	05000013 	streq	r0, [r0, #-19]
     b7c:	13490035 	movtne	r0, #36917	; 0x9035
     b80:	04060000 	streq	r0, [r6], #-0
     b84:	3a0b0b01 	bcc	2c3790 <__Stack_Size+0x2c3390>
     b88:	010b3b0b 	tsteq	fp, fp, lsl #22
     b8c:	07000013 	smladeq	r0, r3, r0, r0
     b90:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     b94:	00000d1c 	andeq	r0, r0, ip, lsl sp
     b98:	0b011308 	bleq	457c0 <__Stack_Size+0x453c0>
     b9c:	3b0b3a0b 	blcc	2cf3d0 <__Stack_Size+0x2cefd0>
     ba0:	00130105 	andseq	r0, r3, r5, lsl #2
     ba4:	000d0900 	andeq	r0, sp, r0, lsl #18
     ba8:	0b3a0803 	bleq	e82bbc <__Stack_Size+0xe827bc>
     bac:	1349053b 	movtne	r0, #38203	; 0x953b
     bb0:	00000b38 	andeq	r0, r0, r8, lsr fp
     bb4:	03000d0a 	movweq	r0, #3338	; 0xd0a
     bb8:	3b0b3a0e 	blcc	2cf3f8 <__Stack_Size+0x2ceff8>
     bbc:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     bc0:	0b00000b 	bleq	bf4 <__Stack_Size+0x7f4>
     bc4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     bc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     bcc:	00001349 	andeq	r1, r0, r9, asr #6
     bd0:	0b000f0c 	bleq	4808 <__Stack_Size+0x4408>
     bd4:	0013490b 	andseq	r4, r3, fp, lsl #18
     bd8:	01040d00 	tsteq	r4, r0, lsl #26
     bdc:	0b0b0e03 	bleq	2c43f0 <__Stack_Size+0x2c3ff0>
     be0:	0b3b0b3a 	bleq	ec38d0 <__Stack_Size+0xec34d0>
     be4:	00001301 	andeq	r1, r0, r1, lsl #6
     be8:	3f012e0e 	svccc	0x00012e0e
     bec:	3a0e0319 	bcc	381858 <__Stack_Size+0x381458>
     bf0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     bf4:	010b2019 	tsteq	fp, r9, lsl r0
     bf8:	0f000013 	svceq	0x00000013
     bfc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     c00:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     c04:	00001349 	andeq	r1, r0, r9, asr #6
     c08:	03012e10 	movweq	r2, #7696	; 0x1e10
     c0c:	3b0b3a0e 	blcc	2cf44c <__Stack_Size+0x2cf04c>
     c10:	11192705 	tstne	r9, r5, lsl #14
     c14:	40061201 	andmi	r1, r6, r1, lsl #4
     c18:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     c1c:	00001301 	andeq	r1, r0, r1, lsl #6
     c20:	03000511 	movweq	r0, #1297	; 0x511
     c24:	3b0b3a0e 	blcc	2cf464 <__Stack_Size+0x2cf064>
     c28:	02134905 	andseq	r4, r3, #81920	; 0x14000
     c2c:	12000017 	andne	r0, r0, #23
     c30:	08030005 	stmdaeq	r3, {r0, r2}
     c34:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     c38:	17021349 	strne	r1, [r2, -r9, asr #6]
     c3c:	34130000 	ldrcc	r0, [r3], #-0
     c40:	3a080300 	bcc	201848 <__Stack_Size+0x201448>
     c44:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c48:	00170213 	andseq	r0, r7, r3, lsl r2
     c4c:	012e1400 	teqeq	lr, r0, lsl #8
     c50:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     c54:	0b3b0b3a 	bleq	ec3944 <__Stack_Size+0xec3544>
     c58:	13491927 	movtne	r1, #39207	; 0x9927
     c5c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c60:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c64:	00130119 	andseq	r0, r3, r9, lsl r1
     c68:	00341500 	eorseq	r1, r4, r0, lsl #10
     c6c:	0b3a0e03 	bleq	e84480 <__Stack_Size+0xe84080>
     c70:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c74:	00000b1c 	andeq	r0, r0, ip, lsl fp
     c78:	31011d16 	tstcc	r1, r6, lsl sp
     c7c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     c80:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     c84:	1700000b 	strne	r0, [r0, -fp]
     c88:	13310005 	teqne	r1, #5
     c8c:	00000b1c 	andeq	r0, r0, ip, lsl fp
     c90:	11010b18 	tstne	r1, r8, lsl fp
     c94:	00061201 	andeq	r1, r6, r1, lsl #4
     c98:	82891900 	addhi	r1, r9, #0, 18
     c9c:	01110101 	tsteq	r1, r1, lsl #2
     ca0:	00001331 	andeq	r1, r0, r1, lsr r3
     ca4:	01828a1a 	orreq	r8, r2, sl, lsl sl
     ca8:	91180200 	tstls	r8, r0, lsl #4
     cac:	00001842 	andeq	r1, r0, r2, asr #16
     cb0:	3f012e1b 	svccc	0x00012e1b
     cb4:	3a0e0319 	bcc	381920 <__Stack_Size+0x381520>
     cb8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     cbc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     cc0:	97184006 	ldrls	r4, [r8, -r6]
     cc4:	13011942 	movwne	r1, #6466	; 0x1942
     cc8:	891c0000 	ldmdbhi	ip, {}	; <UNPREDICTABLE>
     ccc:	11000182 	smlabbne	r0, r2, r1, r0
     cd0:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     cd4:	00001331 	andeq	r1, r0, r1, lsr r3
     cd8:	31012e1d 	tstcc	r1, sp, lsl lr
     cdc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ce0:	97184006 	ldrls	r4, [r8, -r6]
     ce4:	13011942 	movwne	r1, #6466	; 0x1942
     ce8:	051e0000 	ldreq	r0, [lr, #-0]
     cec:	02133100 	andseq	r3, r3, #0, 2
     cf0:	1f000017 	svcne	0x00000017
     cf4:	0111010b 	tsteq	r1, fp, lsl #2
     cf8:	13010612 	movwne	r0, #5650	; 0x1612
     cfc:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     d00:	11010182 	smlabbne	r1, r2, r1, r0
     d04:	19429501 	stmdbne	r2, {r0, r8, sl, ip, pc}^
     d08:	00001331 	andeq	r1, r0, r1, lsr r3
     d0c:	3f012e21 	svccc	0x00012e21
     d10:	3a0e0319 	bcc	38197c <__Stack_Size+0x38157c>
     d14:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     d18:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     d1c:	97184006 	ldrls	r4, [r8, -r6]
     d20:	13011942 	movwne	r1, #6466	; 0x1942
     d24:	34220000 	strtcc	r0, [r2], #-0
     d28:	3a0e0300 	bcc	381930 <__Stack_Size+0x381530>
     d2c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d30:	00170213 	andseq	r0, r7, r3, lsl r2
     d34:	82892300 	addhi	r2, r9, #0, 6
     d38:	01110101 	tsteq	r1, r1, lsl #2
     d3c:	13011331 	movwne	r1, #4913	; 0x1331
     d40:	34240000 	strtcc	r0, [r4], #-0
     d44:	3a0e0300 	bcc	38194c <__Stack_Size+0x38154c>
     d48:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d4c:	3c193f13 	ldccc	15, cr3, [r9], {19}
     d50:	25000019 	strcs	r0, [r0, #-25]
     d54:	13490101 	movtne	r0, #37121	; 0x9101
     d58:	00001301 	andeq	r1, r0, r1, lsl #6
     d5c:	49002126 	stmdbmi	r0, {r1, r2, r5, r8, sp}
     d60:	000b2f13 	andeq	r2, fp, r3, lsl pc
     d64:	00342700 	eorseq	r2, r4, r0, lsl #14
     d68:	0b3a0e03 	bleq	e8457c <__Stack_Size+0xe8417c>
     d6c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     d70:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     d74:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     d78:	03193f01 	tsteq	r9, #1, 30
     d7c:	3b0b3a0e 	blcc	2cf5bc <__Stack_Size+0x2cf1bc>
     d80:	3c19270b 	ldccc	7, cr2, [r9], {11}
     d84:	00130119 	andseq	r0, r3, r9, lsl r1
     d88:	00052900 	andeq	r2, r5, r0, lsl #18
     d8c:	00001349 	andeq	r1, r0, r9, asr #6
     d90:	3f012e2a 	svccc	0x00012e2a
     d94:	3a0e0319 	bcc	381a00 <__Stack_Size+0x381600>
     d98:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     d9c:	01193c19 	tsteq	r9, r9, lsl ip
     da0:	2b000013 	blcs	df4 <__Stack_Size+0x9f4>
     da4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     da8:	0b3a0e03 	bleq	e845bc <__Stack_Size+0xe841bc>
     dac:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     db0:	0000193c 	andeq	r1, r0, ip, lsr r9
     db4:	01110100 	tsteq	r1, r0, lsl #2
     db8:	0b130e25 	bleq	4c4654 <__Stack_Size+0x4c4254>
     dbc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     dc0:	01111755 	tsteq	r1, r5, asr r7
     dc4:	00001710 	andeq	r1, r0, r0, lsl r7
     dc8:	0b002402 	bleq	9dd8 <__Stack_Size+0x99d8>
     dcc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dd0:	0300000e 	movweq	r0, #14
     dd4:	08030016 	stmdaeq	r3, {r1, r2, r4}
     dd8:	0b3b0b3a 	bleq	ec3ac8 <__Stack_Size+0xec36c8>
     ddc:	00001349 	andeq	r1, r0, r9, asr #6
     de0:	03001604 	movweq	r1, #1540	; 0x604
     de4:	3b0b3a0e 	blcc	2cf624 <__Stack_Size+0x2cf224>
     de8:	0013490b 	andseq	r4, r3, fp, lsl #18
     dec:	00350500 	eorseq	r0, r5, r0, lsl #10
     df0:	00001349 	andeq	r1, r0, r9, asr #6
     df4:	0b010406 	bleq	41e14 <__Stack_Size+0x41a14>
     df8:	3b0b3a0b 	blcc	2cf62c <__Stack_Size+0x2cf22c>
     dfc:	0013010b 	andseq	r0, r3, fp, lsl #2
     e00:	00280700 	eoreq	r0, r8, r0, lsl #14
     e04:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     e08:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
     e0c:	1c080300 	stcne	3, cr0, [r8], {-0}
     e10:	0900000d 	stmdbeq	r0, {r0, r2, r3}
     e14:	0b0b0113 	bleq	2c1268 <__Stack_Size+0x2c0e68>
     e18:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     e1c:	00001301 	andeq	r1, r0, r1, lsl #6
     e20:	03000d0a 	movweq	r0, #3338	; 0xd0a
     e24:	3b0b3a08 	blcc	2cf64c <__Stack_Size+0x2cf24c>
     e28:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     e2c:	0b00000b 	bleq	e60 <__Stack_Size+0xa60>
     e30:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e34:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     e38:	0b381349 	bleq	e05b64 <__Stack_Size+0xe05764>
     e3c:	160c0000 	strne	r0, [ip], -r0
     e40:	3a0e0300 	bcc	381a48 <__Stack_Size+0x381648>
     e44:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e48:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     e4c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e50:	0b3a0e03 	bleq	e84664 <__Stack_Size+0xe84264>
     e54:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     e58:	0b201349 	bleq	805b84 <__Stack_Size+0x805784>
     e5c:	00001301 	andeq	r1, r0, r1, lsl #6
     e60:	0300340e 	movweq	r3, #1038	; 0x40e
     e64:	3b0b3a0e 	blcc	2cf6a4 <__Stack_Size+0x2cf2a4>
     e68:	00134905 	andseq	r4, r3, r5, lsl #18
     e6c:	012e0f00 	teqeq	lr, r0, lsl #30
     e70:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     e74:	0b3b0b3a 	bleq	ec3b64 <__Stack_Size+0xec3764>
     e78:	01111927 	tsteq	r1, r7, lsr #18
     e7c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e80:	01194297 			; <UNDEFINED> instruction: 0x01194297
     e84:	10000013 	andne	r0, r0, r3, lsl r0
     e88:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     e8c:	0b3b0b3a 	bleq	ec3b7c <__Stack_Size+0xec377c>
     e90:	17021349 	strne	r1, [r2, -r9, asr #6]
     e94:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     e98:	03193f00 	tsteq	r9, #0, 30
     e9c:	3b0b3a0e 	blcc	2cf6dc <__Stack_Size+0x2cf2dc>
     ea0:	1119270b 	tstne	r9, fp, lsl #14
     ea4:	40061201 	andmi	r1, r6, r1, lsl #4
     ea8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     eac:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     eb0:	03193f00 	tsteq	r9, #0, 30
     eb4:	3b0b3a0e 	blcc	2cf6f4 <__Stack_Size+0x2cf2f4>
     eb8:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
     ebc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ec0:	97184006 	ldrls	r4, [r8, -r6]
     ec4:	00001942 	andeq	r1, r0, r2, asr #18
     ec8:	3f012e13 	svccc	0x00012e13
     ecc:	3a0e0319 	bcc	381b38 <__Stack_Size+0x381738>
     ed0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     ed4:	11134919 	tstne	r3, r9, lsl r9
     ed8:	40061201 	andmi	r1, r6, r1, lsl #4
     edc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ee0:	00001301 	andeq	r1, r0, r1, lsl #6
     ee4:	03003414 	movweq	r3, #1044	; 0x414
     ee8:	3b0b3a0e 	blcc	2cf728 <__Stack_Size+0x2cf328>
     eec:	02134905 	andseq	r4, r3, #81920	; 0x14000
     ef0:	15000017 	strne	r0, [r0, #-23]
     ef4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     ef8:	0b3a0e03 	bleq	e8470c <__Stack_Size+0xe8430c>
     efc:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     f00:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f04:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f08:	00130119 	andseq	r0, r3, r9, lsl r1
     f0c:	00051600 	andeq	r1, r5, r0, lsl #12
     f10:	0b3a0e03 	bleq	e84724 <__Stack_Size+0xe84324>
     f14:	1349053b 	movtne	r0, #38203	; 0x953b
     f18:	00001702 	andeq	r1, r0, r2, lsl #14
     f1c:	03000517 	movweq	r0, #1303	; 0x517
     f20:	3b0b3a0e 	blcc	2cf760 <__Stack_Size+0x2cf360>
     f24:	02134905 	andseq	r4, r3, #81920	; 0x14000
     f28:	18000018 	stmdane	r0, {r3, r4}
     f2c:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     f30:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f34:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f38:	00130119 	andseq	r0, r3, r9, lsl r1
     f3c:	00341900 	eorseq	r1, r4, r0, lsl #18
     f40:	17021331 	smladxne	r2, r1, r3, r1
     f44:	0b1a0000 	bleq	680f4c <__Stack_Size+0x680b4c>
     f48:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     f4c:	1b000006 	blne	f6c <__Stack_Size+0xb6c>
     f50:	13310034 	teqne	r1, #52	; 0x34
     f54:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     f58:	3a0e0301 	bcc	381b64 <__Stack_Size+0x381764>
     f5c:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     f60:	010b2019 	tsteq	fp, r9, lsl r0
     f64:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     f68:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
     f70:	00001349 	andeq	r1, r0, r9, asr #6
     f74:	31011d1e 	tstcc	r1, lr, lsl sp
     f78:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f7c:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     f80:	00130105 	andseq	r0, r3, r5, lsl #2
     f84:	00341f00 	eorseq	r1, r4, r0, lsl #30
     f88:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
     f8c:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     f90:	11000182 	smlabbne	r0, r2, r1, r0
     f94:	00133101 	andseq	r3, r3, r1, lsl #2
     f98:	012e2100 	teqeq	lr, r0, lsl #2
     f9c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     fa0:	0b3b0b3a 	bleq	ec3c90 <__Stack_Size+0xec3890>
     fa4:	13491927 	movtne	r1, #39207	; 0x9927
     fa8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fac:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     fb0:	00130119 	andseq	r0, r3, r9, lsl r1
     fb4:	00342200 	eorseq	r2, r4, r0, lsl #4
     fb8:	0b3a0e03 	bleq	e847cc <__Stack_Size+0xe843cc>
     fbc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     fc0:	00001702 	andeq	r1, r0, r2, lsl #14
     fc4:	01828923 	orreq	r8, r2, r3, lsr #18
     fc8:	31011101 	tstcc	r1, r1, lsl #2
     fcc:	00130113 	andseq	r0, r3, r3, lsl r1
     fd0:	828a2400 	addhi	r2, sl, #0, 8
     fd4:	18020001 	stmdane	r2, {r0}
     fd8:	00184291 	mulseq	r8, r1, r2
     fdc:	82892500 	addhi	r2, r9, #0, 10
     fe0:	01110101 	tsteq	r1, r1, lsl #2
     fe4:	00001331 	andeq	r1, r0, r1, lsr r3
     fe8:	3f012e26 	svccc	0x00012e26
     fec:	3a0e0319 	bcc	381c58 <__Stack_Size+0x381858>
     ff0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     ff4:	11134919 	tstne	r3, r9, lsl r9
     ff8:	40061201 	andmi	r1, r6, r1, lsl #4
     ffc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1000:	01000000 	mrseq	r0, (UNDEF: 0)
    1004:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1008:	0e030b13 	vmoveq.32	d3[0], r0
    100c:	17550e1b 	smmlane	r5, fp, lr, r0
    1010:	17100111 			; <UNDEFINED> instruction: 0x17100111
    1014:	24020000 	strcs	r0, [r2], #-0
    1018:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    101c:	000e030b 	andeq	r0, lr, fp, lsl #6
    1020:	00160300 	andseq	r0, r6, r0, lsl #6
    1024:	0b3a0803 	bleq	e83038 <__Stack_Size+0xe82c38>
    1028:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    102c:	16040000 	strne	r0, [r4], -r0
    1030:	3a0e0300 	bcc	381c38 <__Stack_Size+0x381838>
    1034:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1038:	05000013 	streq	r0, [r0, #-19]
    103c:	13490035 	movtne	r0, #36917	; 0x9035
    1040:	04060000 	streq	r0, [r6], #-0
    1044:	3a0b0b01 	bcc	2c3c50 <__Stack_Size+0x2c3850>
    1048:	010b3b0b 	tsteq	fp, fp, lsl #22
    104c:	07000013 	smladeq	r0, r3, r0, r0
    1050:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1054:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1058:	0b011308 	bleq	45c80 <__Stack_Size+0x45880>
    105c:	3b0b3a0b 	blcc	2cf890 <__Stack_Size+0x2cf490>
    1060:	00130105 	andseq	r0, r3, r5, lsl #2
    1064:	000d0900 	andeq	r0, sp, r0, lsl #18
    1068:	0b3a0803 	bleq	e8307c <__Stack_Size+0xe82c7c>
    106c:	1349053b 	movtne	r0, #38203	; 0x953b
    1070:	00000b38 	andeq	r0, r0, r8, lsr fp
    1074:	03000d0a 	movweq	r0, #3338	; 0xd0a
    1078:	3b0b3a0e 	blcc	2cf8b8 <__Stack_Size+0x2cf4b8>
    107c:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
    1080:	0b00000b 	bleq	10b4 <__Stack_Size+0xcb4>
    1084:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1088:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    108c:	00001349 	andeq	r1, r0, r9, asr #6
    1090:	4901010c 	stmdbmi	r1, {r2, r3, r8}
    1094:	00130113 	andseq	r0, r3, r3, lsl r1
    1098:	00210d00 	eoreq	r0, r1, r0, lsl #26
    109c:	0b2f1349 	bleq	bc5dc8 <__Stack_Size+0xbc59c8>
    10a0:	130e0000 	movwne	r0, #57344	; 0xe000
    10a4:	3a0b0b01 	bcc	2c3cb0 <__Stack_Size+0x2c38b0>
    10a8:	010b3b0b 	tsteq	fp, fp, lsl #22
    10ac:	0f000013 	svceq	0x00000013
    10b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    10b4:	0b3b0b3a 	bleq	ec3da4 <__Stack_Size+0xec39a4>
    10b8:	0b381349 	bleq	e05de4 <__Stack_Size+0xe059e4>
    10bc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    10c0:	03193f01 	tsteq	r9, #1, 30
    10c4:	3b0b3a0e 	blcc	2cf904 <__Stack_Size+0x2cf504>
    10c8:	1119270b 	tstne	r9, fp, lsl #14
    10cc:	40061201 	andmi	r1, r6, r1, lsl #4
    10d0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    10d4:	00001301 	andeq	r1, r0, r1, lsl #6
    10d8:	03000511 	movweq	r0, #1297	; 0x511
    10dc:	3b0b3a0e 	blcc	2cf91c <__Stack_Size+0x2cf51c>
    10e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10e4:	12000017 	andne	r0, r0, #23
    10e8:	01018289 	smlabbeq	r1, r9, r2, r8
    10ec:	13310111 	teqne	r1, #1073741828	; 0x40000004
    10f0:	00001301 	andeq	r1, r0, r1, lsl #6
    10f4:	01828a13 	orreq	r8, r2, r3, lsl sl
    10f8:	91180200 	tstls	r8, r0, lsl #4
    10fc:	00001842 	andeq	r1, r0, r2, asr #16
    1100:	01828914 	orreq	r8, r2, r4, lsl r9
    1104:	95011101 	strls	r1, [r1, #-257]	; 0x101
    1108:	13311942 	teqne	r1, #1081344	; 0x108000
    110c:	0f150000 	svceq	0x00150000
    1110:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1114:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1118:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    111c:	0b3b0b3a 	bleq	ec3e0c <__Stack_Size+0xec3a0c>
    1120:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1124:	34170000 	ldrcc	r0, [r7], #-0
    1128:	3a0e0300 	bcc	381d30 <__Stack_Size+0x381930>
    112c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1130:	00170213 	andseq	r0, r7, r3, lsl r2
    1134:	00341800 	eorseq	r1, r4, r0, lsl #16
    1138:	0b3a0803 	bleq	e8314c <__Stack_Size+0xe82d4c>
    113c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1140:	00001702 	andeq	r1, r0, r2, lsl #14
    1144:	3f012e19 	svccc	0x00012e19
    1148:	3a0e0319 	bcc	381db4 <__Stack_Size+0x3819b4>
    114c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    1150:	11134919 	tstne	r3, r9, lsl r9
    1154:	40061201 	andmi	r1, r6, r1, lsl #4
    1158:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    115c:	00001301 	andeq	r1, r0, r1, lsl #6
    1160:	3f012e1a 	svccc	0x00012e1a
    1164:	3a0e0319 	bcc	381dd0 <__Stack_Size+0x3819d0>
    1168:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    116c:	11134919 	tstne	r3, r9, lsl r9
    1170:	40061201 	andmi	r1, r6, r1, lsl #4
    1174:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1178:	00001301 	andeq	r1, r0, r1, lsl #6
    117c:	0300051b 	movweq	r0, #1307	; 0x51b
    1180:	3b0b3a0e 	blcc	2cf9c0 <__Stack_Size+0x2cf5c0>
    1184:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1188:	1c000017 	stcne	0, cr0, [r0], {23}
    118c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1190:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1194:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1198:	341d0000 	ldrcc	r0, [sp], #-0
    119c:	3a0e0300 	bcc	381da4 <__Stack_Size+0x3819a4>
    11a0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11a4:	00170213 	andseq	r0, r7, r3, lsl r2
    11a8:	012e1e00 	teqeq	lr, r0, lsl #28
    11ac:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    11b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    11b4:	01111927 	tsteq	r1, r7, lsr #18
    11b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    11bc:	01194297 			; <UNDEFINED> instruction: 0x01194297
    11c0:	1f000013 	svcne	0x00000013
    11c4:	08030034 	stmdaeq	r3, {r2, r4, r5}
    11c8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    11cc:	17021349 	strne	r1, [r2, -r9, asr #6]
    11d0:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    11d4:	03193f01 	tsteq	r9, #1, 30
    11d8:	3b0b3a0e 	blcc	2cfa18 <__Stack_Size+0x2cf618>
    11dc:	3c192705 	ldccc	7, cr2, [r9], {5}
    11e0:	21000019 	tstcs	r0, r9, lsl r0
    11e4:	13490005 	movtne	r0, #36869	; 0x9005
    11e8:	01000000 	mrseq	r0, (UNDEF: 0)
    11ec:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    11f0:	0e030b13 	vmoveq.32	d3[0], r0
    11f4:	17550e1b 	smmlane	r5, fp, lr, r0
    11f8:	17100111 			; <UNDEFINED> instruction: 0x17100111
    11fc:	24020000 	strcs	r0, [r2], #-0
    1200:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1204:	000e030b 	andeq	r0, lr, fp, lsl #6
    1208:	00160300 	andseq	r0, r6, r0, lsl #6
    120c:	0b3a0803 	bleq	e83220 <__Stack_Size+0xe82e20>
    1210:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1214:	26040000 	strcs	r0, [r4], -r0
    1218:	00134900 	andseq	r4, r3, r0, lsl #18
    121c:	00160500 	andseq	r0, r6, r0, lsl #10
    1220:	0b3a0e03 	bleq	e84a34 <__Stack_Size+0xe84634>
    1224:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1228:	35060000 	strcc	r0, [r6, #-0]
    122c:	00134900 	andseq	r4, r3, r0, lsl #18
    1230:	01040700 	tsteq	r4, r0, lsl #14
    1234:	0b3a0b0b 	bleq	e83e68 <__Stack_Size+0xe83a68>
    1238:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    123c:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
    1240:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1244:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1248:	08030028 	stmdaeq	r3, {r3, r5}
    124c:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1250:	0b01130a 	bleq	45e80 <__Stack_Size+0x45a80>
    1254:	3b0b3a0b 	blcc	2cfa88 <__Stack_Size+0x2cf688>
    1258:	00130105 	andseq	r0, r3, r5, lsl #2
    125c:	000d0b00 	andeq	r0, sp, r0, lsl #22
    1260:	0b3a0803 	bleq	e83274 <__Stack_Size+0xe82e74>
    1264:	1349053b 	movtne	r0, #38203	; 0x953b
    1268:	00000b38 	andeq	r0, r0, r8, lsr fp
    126c:	03000d0c 	movweq	r0, #3340	; 0xd0c
    1270:	3b0b3a0e 	blcc	2cfab0 <__Stack_Size+0x2cf6b0>
    1274:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
    1278:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    127c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1280:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1284:	00001349 	andeq	r1, r0, r9, asr #6
    1288:	0b01130e 	bleq	45ec8 <__Stack_Size+0x45ac8>
    128c:	3b0b3a0b 	blcc	2cfac0 <__Stack_Size+0x2cf6c0>
    1290:	0013010b 	andseq	r0, r3, fp, lsl #2
    1294:	000d0f00 	andeq	r0, sp, r0, lsl #30
    1298:	0b3a0e03 	bleq	e84aac <__Stack_Size+0xe846ac>
    129c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    12a0:	00000b38 	andeq	r0, r0, r8, lsr fp
    12a4:	3f002e10 	svccc	0x00002e10
    12a8:	3a0e0319 	bcc	381f14 <__Stack_Size+0x381b14>
    12ac:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    12b0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    12b4:	97184006 	ldrls	r4, [r8, -r6]
    12b8:	00001942 	andeq	r1, r0, r2, asr #18
    12bc:	3f012e11 	svccc	0x00012e11
    12c0:	3a0e0319 	bcc	381f2c <__Stack_Size+0x381b2c>
    12c4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    12c8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    12cc:	97184006 	ldrls	r4, [r8, -r6]
    12d0:	13011942 	movwne	r1, #6466	; 0x1942
    12d4:	05120000 	ldreq	r0, [r2, #-0]
    12d8:	3a0e0300 	bcc	381ee0 <__Stack_Size+0x381ae0>
    12dc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12e0:	00180213 	andseq	r0, r8, r3, lsl r2
    12e4:	00051300 	andeq	r1, r5, r0, lsl #6
    12e8:	0b3a0e03 	bleq	e84afc <__Stack_Size+0xe846fc>
    12ec:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    12f0:	00001702 	andeq	r1, r0, r2, lsl #14
    12f4:	03003414 	movweq	r3, #1044	; 0x414
    12f8:	3b0b3a0e 	blcc	2cfb38 <__Stack_Size+0x2cf738>
    12fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1300:	15000017 	strne	r0, [r0, #-23]
    1304:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1308:	0b3a0e03 	bleq	e84b1c <__Stack_Size+0xe8471c>
    130c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1310:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1314:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1318:	00130119 	andseq	r0, r3, r9, lsl r1
    131c:	00051600 	andeq	r1, r5, r0, lsl #12
    1320:	0b3a0e03 	bleq	e84b34 <__Stack_Size+0xe84734>
    1324:	1349053b 	movtne	r0, #38203	; 0x953b
    1328:	00001802 	andeq	r1, r0, r2, lsl #16
    132c:	03000517 	movweq	r0, #1303	; 0x517
    1330:	3b0b3a0e 	blcc	2cfb70 <__Stack_Size+0x2cf770>
    1334:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1338:	18000017 	stmdane	r0, {r0, r1, r2, r4}
    133c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1340:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1344:	17021349 	strne	r1, [r2, -r9, asr #6]
    1348:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    134c:	03193f00 	tsteq	r9, #0, 30
    1350:	3b0b3a0e 	blcc	2cfb90 <__Stack_Size+0x2cf790>
    1354:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
    1358:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    135c:	97184006 	ldrls	r4, [r8, -r6]
    1360:	00001942 	andeq	r1, r0, r2, asr #18
    1364:	0300341a 	movweq	r3, #1050	; 0x41a
    1368:	3b0b3a08 	blcc	2cfb90 <__Stack_Size+0x2cf790>
    136c:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1370:	1b000017 	blne	13d4 <__Stack_Size+0xfd4>
    1374:	0b0b000f 	bleq	2c13b8 <__Stack_Size+0x2c0fb8>
    1378:	00001349 	andeq	r1, r0, r9, asr #6
    137c:	3f012e1c 	svccc	0x00012e1c
    1380:	3a0e0319 	bcc	381fec <__Stack_Size+0x381bec>
    1384:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    1388:	11134919 	tstne	r3, r9, lsl r9
    138c:	40061201 	andmi	r1, r6, r1, lsl #4
    1390:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1394:	00001301 	andeq	r1, r0, r1, lsl #6
    1398:	3f012e1d 	svccc	0x00012e1d
    139c:	3a0e0319 	bcc	382008 <__Stack_Size+0x381c08>
    13a0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    13a4:	11134919 	tstne	r3, r9, lsl r9
    13a8:	40061201 	andmi	r1, r6, r1, lsl #4
    13ac:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    13b0:	00001301 	andeq	r1, r0, r1, lsl #6
    13b4:	0300341e 	movweq	r3, #1054	; 0x41e
    13b8:	3b0b3a0e 	blcc	2cfbf8 <__Stack_Size+0x2cf7f8>
    13bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    13c0:	1f000018 	svcne	0x00000018
    13c4:	01018289 	smlabbeq	r1, r9, r2, r8
    13c8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    13cc:	00001301 	andeq	r1, r0, r1, lsl #6
    13d0:	01828a20 	orreq	r8, r2, r0, lsr #20
    13d4:	91180200 	tstls	r8, r0, lsl #4
    13d8:	00001842 	andeq	r1, r0, r2, asr #16
    13dc:	01828921 	orreq	r8, r2, r1, lsr #18
    13e0:	31011101 	tstcc	r1, r1, lsl #2
    13e4:	22000013 	andcs	r0, r0, #19
    13e8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    13ec:	0b3a0e03 	bleq	e84c00 <__Stack_Size+0xe84800>
    13f0:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    13f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    13f8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    13fc:	23000019 	movwcs	r0, #25
    1400:	13490101 	movtne	r0, #37121	; 0x9101
    1404:	00001301 	andeq	r1, r0, r1, lsl #6
    1408:	49002124 	stmdbmi	r0, {r2, r5, r8, sp}
    140c:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1410:	11010000 	mrsne	r0, (UNDEF: 1)
    1414:	130e2501 	movwne	r2, #58625	; 0xe501
    1418:	1b0e030b 	blne	38204c <__Stack_Size+0x381c4c>
    141c:	1117550e 	tstne	r7, lr, lsl #10
    1420:	00171001 	andseq	r1, r7, r1
    1424:	00240200 	eoreq	r0, r4, r0, lsl #4
    1428:	0b3e0b0b 	bleq	f8405c <__Stack_Size+0xf83c5c>
    142c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1430:	03001603 	movweq	r1, #1539	; 0x603
    1434:	3b0b3a08 	blcc	2cfc5c <__Stack_Size+0x2cf85c>
    1438:	0013490b 	andseq	r4, r3, fp, lsl #18
    143c:	00160400 	andseq	r0, r6, r0, lsl #8
    1440:	0b3a0e03 	bleq	e84c54 <__Stack_Size+0xe84854>
    1444:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1448:	35050000 	strcc	r0, [r5, #-0]
    144c:	00134900 	andseq	r4, r3, r0, lsl #18
    1450:	01040600 	tsteq	r4, r0, lsl #12
    1454:	0b3a0b0b 	bleq	e84088 <__Stack_Size+0xe83c88>
    1458:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    145c:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    1460:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1464:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    1468:	08030028 	stmdaeq	r3, {r3, r5}
    146c:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1470:	0b011309 	bleq	4609c <__Stack_Size+0x45c9c>
    1474:	3b0b3a0b 	blcc	2cfca8 <__Stack_Size+0x2cf8a8>
    1478:	00130105 	andseq	r0, r3, r5, lsl #2
    147c:	000d0a00 	andeq	r0, sp, r0, lsl #20
    1480:	0b3a0803 	bleq	e83494 <__Stack_Size+0xe83094>
    1484:	1349053b 	movtne	r0, #38203	; 0x953b
    1488:	00000b38 	andeq	r0, r0, r8, lsr fp
    148c:	03000d0b 	movweq	r0, #3339	; 0xd0b
    1490:	3b0b3a0e 	blcc	2cfcd0 <__Stack_Size+0x2cf8d0>
    1494:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
    1498:	0c00000b 	stceq	0, cr0, [r0], {11}
    149c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    14a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    14a4:	00001349 	andeq	r1, r0, r9, asr #6
    14a8:	0b01130d 	bleq	460e4 <__Stack_Size+0x45ce4>
    14ac:	3b0b3a0b 	blcc	2cfce0 <__Stack_Size+0x2cf8e0>
    14b0:	0013010b 	andseq	r0, r3, fp, lsl #2
    14b4:	000d0e00 	andeq	r0, sp, r0, lsl #28
    14b8:	0b3a0e03 	bleq	e84ccc <__Stack_Size+0xe848cc>
    14bc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    14c0:	00000b38 	andeq	r0, r0, r8, lsr fp
    14c4:	3f012e0f 	svccc	0x00012e0f
    14c8:	3a0e0319 	bcc	382134 <__Stack_Size+0x381d34>
    14cc:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    14d0:	010b2019 	tsteq	fp, r9, lsl r0
    14d4:	10000013 	andne	r0, r0, r3, lsl r0
    14d8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    14dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    14e0:	00001349 	andeq	r1, r0, r9, asr #6
    14e4:	03003411 	movweq	r3, #1041	; 0x411
    14e8:	3b0b3a0e 	blcc	2cfd28 <__Stack_Size+0x2cf928>
    14ec:	00134905 	andseq	r4, r3, r5, lsl #18
    14f0:	000f1200 	andeq	r1, pc, r0, lsl #4
    14f4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    14f8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
    14fc:	3a0e0301 	bcc	382108 <__Stack_Size+0x381d08>
    1500:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    1504:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1508:	97184006 	ldrls	r4, [r8, -r6]
    150c:	13011942 	movwne	r1, #6466	; 0x1942
    1510:	05140000 	ldreq	r0, [r4, #-0]
    1514:	3a0e0300 	bcc	38211c <__Stack_Size+0x381d1c>
    1518:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    151c:	00180213 	andseq	r0, r8, r3, lsl r2
    1520:	00051500 	andeq	r1, r5, r0, lsl #10
    1524:	0b3a0e03 	bleq	e84d38 <__Stack_Size+0xe84938>
    1528:	1349053b 	movtne	r0, #38203	; 0x953b
    152c:	00001702 	andeq	r1, r0, r2, lsl #14
    1530:	03003416 	movweq	r3, #1046	; 0x416
    1534:	3b0b3a0e 	blcc	2cfd74 <__Stack_Size+0x2cf974>
    1538:	02134905 	andseq	r4, r3, #81920	; 0x14000
    153c:	17000017 	smladne	r0, r7, r0, r0
    1540:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1544:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1548:	17021349 	strne	r1, [r2, -r9, asr #6]
    154c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    1550:	03193f01 	tsteq	r9, #1, 30
    1554:	3b0b3a0e 	blcc	2cfd94 <__Stack_Size+0x2cf994>
    1558:	1119270b 	tstne	r9, fp, lsl #14
    155c:	40061201 	andmi	r1, r6, r1, lsl #4
    1560:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1564:	00001301 	andeq	r1, r0, r1, lsl #6
    1568:	03000519 	movweq	r0, #1305	; 0x519
    156c:	3b0b3a0e 	blcc	2cfdac <__Stack_Size+0x2cf9ac>
    1570:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1574:	1a000017 	bne	15d8 <__Stack_Size+0x11d8>
    1578:	01018289 	smlabbeq	r1, r9, r2, r8
    157c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1580:	00001301 	andeq	r1, r0, r1, lsl #6
    1584:	01828a1b 	orreq	r8, r2, fp, lsl sl
    1588:	91180200 	tstls	r8, r0, lsl #4
    158c:	00001842 	andeq	r1, r0, r2, asr #16
    1590:	0182891c 	orreq	r8, r2, ip, lsl r9
    1594:	95011101 	strls	r1, [r1, #-257]	; 0x101
    1598:	13311942 	teqne	r1, #1081344	; 0x108000
    159c:	00001301 	andeq	r1, r0, r1, lsl #6
    15a0:	0182891d 	orreq	r8, r2, sp, lsl r9
    15a4:	95011101 	strls	r1, [r1, #-257]	; 0x101
    15a8:	13311942 	teqne	r1, #1081344	; 0x108000
    15ac:	051e0000 	ldreq	r0, [lr, #-0]
    15b0:	3a0e0300 	bcc	3821b8 <__Stack_Size+0x381db8>
    15b4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15b8:	00180213 	andseq	r0, r8, r3, lsl r2
    15bc:	00341f00 	eorseq	r1, r4, r0, lsl #30
    15c0:	0b3a0e03 	bleq	e84dd4 <__Stack_Size+0xe849d4>
    15c4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    15c8:	00001702 	andeq	r1, r0, r2, lsl #14
    15cc:	3f012e20 	svccc	0x00012e20
    15d0:	3a0e0319 	bcc	38223c <__Stack_Size+0x381e3c>
    15d4:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    15d8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    15dc:	97184006 	ldrls	r4, [r8, -r6]
    15e0:	13011942 	movwne	r1, #6466	; 0x1942
    15e4:	1d210000 	stcne	0, cr0, [r1, #-0]
    15e8:	11133101 	tstne	r3, r1, lsl #2
    15ec:	58061201 	stmdapl	r6, {r0, r9, ip}
    15f0:	0005590b 	andeq	r5, r5, fp, lsl #18
    15f4:	00052200 	andeq	r2, r5, r0, lsl #4
    15f8:	17021331 	smladxne	r2, r1, r3, r1
    15fc:	05230000 	streq	r0, [r3, #-0]!
    1600:	02133100 	andseq	r3, r3, #0, 2
    1604:	24000018 	strcs	r0, [r0], #-24
    1608:	0111010b 	tsteq	r1, fp, lsl #2
    160c:	00000612 	andeq	r0, r0, r2, lsl r6
    1610:	31003425 	tstcc	r0, r5, lsr #8
    1614:	00170213 	andseq	r0, r7, r3, lsl r2
    1618:	011d2600 	tsteq	sp, r0, lsl #12
    161c:	01111331 	tsteq	r1, r1, lsr r3
    1620:	0b580612 	bleq	1602e70 <__Stack_Size+0x1602a70>
    1624:	13010559 	movwne	r0, #5465	; 0x1559
    1628:	89270000 	stmdbhi	r7!, {}	; <UNPREDICTABLE>
    162c:	11000182 	smlabbne	r0, r2, r1, r0
    1630:	00133101 	andseq	r3, r3, r1, lsl #2
    1634:	82892800 	addhi	r2, r9, #0, 16
    1638:	01110101 	tsteq	r1, r1, lsl #2
    163c:	00001331 	andeq	r1, r0, r1, lsr r3
    1640:	31012e29 	tstcc	r1, r9, lsr #28
    1644:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1648:	97184006 	ldrls	r4, [r8, -r6]
    164c:	13011942 	movwne	r1, #6466	; 0x1942
    1650:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    1654:	3a0e0301 	bcc	382260 <__Stack_Size+0x381e60>
    1658:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    165c:	010b2019 	tsteq	fp, r9, lsl r0
    1660:	2b000013 	blcs	16b4 <__Stack_Size+0x12b4>
    1664:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1668:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    166c:	00001349 	andeq	r1, r0, r9, asr #6
    1670:	31011d2c 	tstcc	r1, ip, lsr #26
    1674:	55015213 	strpl	r5, [r1, #-531]	; 0x213
    1678:	590b5817 	stmdbpl	fp, {r0, r1, r2, r4, fp, ip, lr}
    167c:	00130105 	andseq	r0, r3, r5, lsl #2
    1680:	010b2d00 	tsteq	fp, r0, lsl #26
    1684:	00001755 	andeq	r1, r0, r5, asr r7
    1688:	3f012e2e 	svccc	0x00012e2e
    168c:	3a0e0319 	bcc	3822f8 <__Stack_Size+0x381ef8>
    1690:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    1694:	11134919 	tstne	r3, r9, lsl r9
    1698:	40061201 	andmi	r1, r6, r1, lsl #4
    169c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    16a0:	00001301 	andeq	r1, r0, r1, lsl #6
    16a4:	3f012e2f 	svccc	0x00012e2f
    16a8:	3a0e0319 	bcc	382314 <__Stack_Size+0x381f14>
    16ac:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    16b0:	01193c19 	tsteq	r9, r9, lsl ip
    16b4:	30000013 	andcc	r0, r0, r3, lsl r0
    16b8:	13490005 	movtne	r0, #36869	; 0x9005
    16bc:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
    16c0:	03193f01 	tsteq	r9, #1, 30
    16c4:	3b0b3a0e 	blcc	2cff04 <__Stack_Size+0x2cfb04>
    16c8:	3c192705 	ldccc	7, cr2, [r9], {5}
    16cc:	00000019 	andeq	r0, r0, r9, lsl r0
    16d0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    16d4:	030b130e 	movweq	r1, #45838	; 0xb30e
    16d8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    16dc:	10011117 	andne	r1, r1, r7, lsl r1
    16e0:	02000017 	andeq	r0, r0, #23
    16e4:	0b0b0024 	bleq	2c177c <__Stack_Size+0x2c137c>
    16e8:	0e030b3e 	vmoveq.16	d3[0], r0
    16ec:	16030000 	strne	r0, [r3], -r0
    16f0:	3a080300 	bcc	2022f8 <__Stack_Size+0x201ef8>
    16f4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16f8:	04000013 	streq	r0, [r0], #-19
    16fc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1700:	0b3b0b3a 	bleq	ec43f0 <__Stack_Size+0xec3ff0>
    1704:	00001349 	andeq	r1, r0, r9, asr #6
    1708:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    170c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1710:	13490026 	movtne	r0, #36902	; 0x9026
    1714:	04070000 	streq	r0, [r7], #-0
    1718:	3a0b0b01 	bcc	2c4324 <__Stack_Size+0x2c3f24>
    171c:	010b3b0b 	tsteq	fp, fp, lsl #22
    1720:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1724:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1728:	00000d1c 	andeq	r0, r0, ip, lsl sp
    172c:	03002809 	movweq	r2, #2057	; 0x809
    1730:	000d1c08 	andeq	r1, sp, r8, lsl #24
    1734:	01130a00 	tsteq	r3, r0, lsl #20
    1738:	0b3a0b0b 	bleq	e8436c <__Stack_Size+0xe83f6c>
    173c:	1301053b 	movwne	r0, #5435	; 0x153b
    1740:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    1744:	3a0e0300 	bcc	38234c <__Stack_Size+0x381f4c>
    1748:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    174c:	000b3813 	andeq	r3, fp, r3, lsl r8
    1750:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1754:	0b3a0803 	bleq	e83768 <__Stack_Size+0xe83368>
    1758:	1349053b 	movtne	r0, #38203	; 0x953b
    175c:	00000b38 	andeq	r0, r0, r8, lsr fp
    1760:	0300160d 	movweq	r1, #1549	; 0x60d
    1764:	3b0b3a0e 	blcc	2cffa4 <__Stack_Size+0x2cfba4>
    1768:	00134905 	andseq	r4, r3, r5, lsl #18
    176c:	012e0e00 	teqeq	lr, r0, lsl #28
    1770:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1774:	0b3b0b3a 	bleq	ec4464 <__Stack_Size+0xec4064>
    1778:	01111927 	tsteq	r1, r7, lsr #18
    177c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1780:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1784:	0f000013 	svceq	0x00000013
    1788:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    178c:	0b3b0b3a 	bleq	ec447c <__Stack_Size+0xec407c>
    1790:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1794:	05100000 	ldreq	r0, [r0, #-0]
    1798:	3a0e0300 	bcc	3823a0 <__Stack_Size+0x381fa0>
    179c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17a0:	00170213 	andseq	r0, r7, r3, lsl r2
    17a4:	002e1100 	eoreq	r1, lr, r0, lsl #2
    17a8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    17ac:	0b3b0b3a 	bleq	ec449c <__Stack_Size+0xec409c>
    17b0:	13491927 	movtne	r1, #39207	; 0x9927
    17b4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    17b8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    17bc:	12000019 	andne	r0, r0, #25
    17c0:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    17c4:	0b3a0e03 	bleq	e84fd8 <__Stack_Size+0xe84bd8>
    17c8:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    17cc:	01111349 	tsteq	r1, r9, asr #6
    17d0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    17d4:	00194297 	mulseq	r9, r7, r2
    17d8:	00341300 	eorseq	r1, r4, r0, lsl #6
    17dc:	0b3a0e03 	bleq	e84ff0 <__Stack_Size+0xe84bf0>
    17e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    17e4:	00001702 	andeq	r1, r0, r2, lsl #14
    17e8:	03003414 	movweq	r3, #1044	; 0x414
    17ec:	3b0b3a08 	blcc	2d0014 <__Stack_Size+0x2cfc14>
    17f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    17f4:	00000017 	andeq	r0, r0, r7, lsl r0
    17f8:	25011101 	strcs	r1, [r1, #-257]	; 0x101
    17fc:	030b130e 	movweq	r1, #45838	; 0xb30e
    1800:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xb0e
    1804:	10011117 	andne	r1, r1, r7, lsl r1
    1808:	02000017 	andeq	r0, r0, #23
    180c:	0b0b0024 	bleq	2c18a4 <__Stack_Size+0x2c14a4>
    1810:	0e030b3e 	vmoveq.16	d3[0], r0
    1814:	16030000 	strne	r0, [r3], -r0
    1818:	3a080300 	bcc	202420 <__Stack_Size+0x202020>
    181c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1820:	04000013 	streq	r0, [r0], #-19
    1824:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1828:	0b3b0b3a 	bleq	ec4518 <__Stack_Size+0xec4118>
    182c:	00001349 	andeq	r1, r0, r9, asr #6
    1830:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1834:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1838:	0b0b0104 	bleq	2c1c50 <__Stack_Size+0x2c1850>
    183c:	0b3b0b3a 	bleq	ec452c <__Stack_Size+0xec412c>
    1840:	00001301 	andeq	r1, r0, r1, lsl #6
    1844:	03002807 	movweq	r2, #2055	; 0x807
    1848:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    184c:	00280800 	eoreq	r0, r8, r0, lsl #16
    1850:	0d1c0803 	ldceq	8, cr0, [ip, #-12]
    1854:	13090000 	movwne	r0, #36864	; 0x9000
    1858:	3a0b0b01 	bcc	2c4464 <__Stack_Size+0x2c4064>
    185c:	01053b0b 	tsteq	r5, fp, lsl #22
    1860:	0a000013 	beq	18b4 <__Stack_Size+0x14b4>
    1864:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1868:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    186c:	0b381349 	bleq	e06598 <__Stack_Size+0xe06198>
    1870:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    1874:	3a0e0300 	bcc	38247c <__Stack_Size+0x38207c>
    1878:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    187c:	000b3813 	andeq	r3, fp, r3, lsl r8
    1880:	00160c00 	andseq	r0, r6, r0, lsl #24
    1884:	0b3a0e03 	bleq	e85098 <__Stack_Size+0xe84c98>
    1888:	1349053b 	movtne	r0, #38203	; 0x953b
    188c:	130d0000 	movwne	r0, #53248	; 0xd000
    1890:	3a0b0b01 	bcc	2c449c <__Stack_Size+0x2c409c>
    1894:	010b3b0b 	tsteq	fp, fp, lsl #22
    1898:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    189c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    18a0:	0b3b0b3a 	bleq	ec4590 <__Stack_Size+0xec4190>
    18a4:	0b381349 	bleq	e065d0 <__Stack_Size+0xe061d0>
    18a8:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    18ac:	03193f01 	tsteq	r9, #1, 30
    18b0:	3b0b3a0e 	blcc	2d00f0 <__Stack_Size+0x2cfcf0>
    18b4:	1119270b 	tstne	r9, fp, lsl #14
    18b8:	40061201 	andmi	r1, r6, r1, lsl #4
    18bc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    18c0:	00001301 	andeq	r1, r0, r1, lsl #6
    18c4:	03000510 	movweq	r0, #1296	; 0x510
    18c8:	3b0b3a0e 	blcc	2d0108 <__Stack_Size+0x2cfd08>
    18cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    18d0:	11000017 	tstne	r0, r7, lsl r0
    18d4:	01018289 	smlabbeq	r1, r9, r2, r8
    18d8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    18dc:	00001301 	andeq	r1, r0, r1, lsl #6
    18e0:	01828a12 	orreq	r8, r2, r2, lsl sl
    18e4:	91180200 	tstls	r8, r0, lsl #4
    18e8:	00001842 	andeq	r1, r0, r2, asr #16
    18ec:	01828913 	orreq	r8, r2, r3, lsl r9
    18f0:	95011101 	strls	r1, [r1, #-257]	; 0x101
    18f4:	13311942 	teqne	r1, #1081344	; 0x108000
    18f8:	00001301 	andeq	r1, r0, r1, lsl #6
    18fc:	01828914 	orreq	r8, r2, r4, lsl r9
    1900:	95011101 	strls	r1, [r1, #-257]	; 0x101
    1904:	13311942 	teqne	r1, #1081344	; 0x108000
    1908:	0f150000 	svceq	0x00150000
    190c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1910:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1914:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1918:	0b3b0b3a 	bleq	ec4608 <__Stack_Size+0xec4208>
    191c:	17021349 	strne	r1, [r2, -r9, asr #6]
    1920:	34170000 	ldrcc	r0, [r7], #-0
    1924:	3a0e0300 	bcc	38252c <__Stack_Size+0x38212c>
    1928:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    192c:	00180213 	andseq	r0, r8, r3, lsl r2
    1930:	82891800 	addhi	r1, r9, #0, 16
    1934:	01110101 	tsteq	r1, r1, lsl #2
    1938:	00001331 	andeq	r1, r0, r1, lsr r3
    193c:	03000519 	movweq	r0, #1305	; 0x519
    1940:	3b0b3a0e 	blcc	2d0180 <__Stack_Size+0x2cfd80>
    1944:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1948:	1a000018 	bne	19b0 <__Stack_Size+0x15b0>
    194c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1950:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1954:	17021349 	strne	r1, [r2, -r9, asr #6]
    1958:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    195c:	03193f01 	tsteq	r9, #1, 30
    1960:	3b0b3a0e 	blcc	2d01a0 <__Stack_Size+0x2cfda0>
    1964:	11192705 	tstne	r9, r5, lsl #14
    1968:	40061201 	andmi	r1, r6, r1, lsl #4
    196c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1970:	00001301 	andeq	r1, r0, r1, lsl #6
    1974:	0300051c 	movweq	r0, #1308	; 0x51c
    1978:	3b0b3a0e 	blcc	2d01b8 <__Stack_Size+0x2cfdb8>
    197c:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1980:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    1984:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1988:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    198c:	17021349 	strne	r1, [r2, -r9, asr #6]
    1990:	341e0000 	ldrcc	r0, [lr], #-0
    1994:	3a0e0300 	bcc	38259c <__Stack_Size+0x38219c>
    1998:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    199c:	00180213 	andseq	r0, r8, r3, lsl r2
    19a0:	012e1f00 	teqeq	lr, r0, lsl #30
    19a4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    19a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    19ac:	13491927 	movtne	r1, #39207	; 0x9927
    19b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    19b4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    19b8:	00130119 	andseq	r0, r3, r9, lsl r1
    19bc:	00342000 	eorseq	r2, r4, r0
    19c0:	0b3a0e03 	bleq	e851d4 <__Stack_Size+0xe84dd4>
    19c4:	1349053b 	movtne	r0, #38203	; 0x953b
    19c8:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    19cc:	03193f01 	tsteq	r9, #1, 30
    19d0:	3b0b3a0e 	blcc	2d0210 <__Stack_Size+0x2cfe10>
    19d4:	3c192705 	ldccc	7, cr2, [r9], {5}
    19d8:	00130119 	andseq	r0, r3, r9, lsl r1
    19dc:	00052200 	andeq	r2, r5, r0, lsl #4
    19e0:	00001349 	andeq	r1, r0, r9, asr #6
    19e4:	01110100 	tsteq	r1, r0, lsl #2
    19e8:	0b130e25 	bleq	4c5284 <__Stack_Size+0x4c4e84>
    19ec:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    19f0:	01111755 	tsteq	r1, r5, asr r7
    19f4:	00001710 	andeq	r1, r0, r0, lsl r7
    19f8:	3f012e02 	svccc	0x00012e02
    19fc:	3a0e0319 	bcc	382668 <__Stack_Size+0x382268>
    1a00:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    1a04:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1a08:	97184006 	ldrls	r4, [r8, -r6]
    1a0c:	13011942 	movwne	r1, #6466	; 0x1942
    1a10:	34030000 	strcc	r0, [r3], #-0
    1a14:	3a0e0300 	bcc	38261c <__Stack_Size+0x38221c>
    1a18:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a1c:	04000013 	streq	r0, [r0], #-19
    1a20:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1a24:	0b3b0b3a 	bleq	ec4714 <__Stack_Size+0xec4314>
    1a28:	17021349 	strne	r1, [r2, -r9, asr #6]
    1a2c:	89050000 	stmdbhi	r5, {}	; <UNPREDICTABLE>
    1a30:	11000182 	smlabbne	r0, r2, r1, r0
    1a34:	00133101 	andseq	r3, r3, r1, lsl #2
    1a38:	000f0600 	andeq	r0, pc, r0, lsl #12
    1a3c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1a40:	24070000 	strcs	r0, [r7], #-0
    1a44:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1a48:	000e030b 	andeq	r0, lr, fp, lsl #6
    1a4c:	00340800 	eorseq	r0, r4, r0, lsl #16
    1a50:	0b3a0e03 	bleq	e85264 <__Stack_Size+0xe84e64>
    1a54:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1a58:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1a5c:	34090000 	strcc	r0, [r9], #-0
    1a60:	3a0e0300 	bcc	382668 <__Stack_Size+0x382268>
    1a64:	3f0b3b0b 	svccc	0x000b3b0b
    1a68:	00193c19 	andseq	r3, r9, r9, lsl ip
    1a6c:	01010a00 	tsteq	r1, r0, lsl #20
    1a70:	13011349 	movwne	r1, #4937	; 0x1349
    1a74:	210b0000 	mrscs	r0, (UNDEF: 11)
    1a78:	2f134900 	svccs	0x00134900
    1a7c:	0c00000b 	stceq	0, cr0, [r0], {11}
    1a80:	19270015 	stmdbne	r7!, {r0, r2, r4}
    1a84:	340d0000 	strcc	r0, [sp], #-0
    1a88:	3a0e0300 	bcc	382690 <__Stack_Size+0x382290>
    1a8c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a90:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    1a94:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    1a98:	13490026 	movtne	r0, #36902	; 0x9026
    1a9c:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1aa0:	03193f00 	tsteq	r9, #0, 30
    1aa4:	3b0b3a0e 	blcc	2d02e4 <__Stack_Size+0x2cfee4>
    1aa8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1aac:	00193c13 	andseq	r3, r9, r3, lsl ip
    1ab0:	00241000 	eoreq	r1, r4, r0
    1ab4:	0b3e0b0b 	bleq	f846e8 <__Stack_Size+0xf842e8>
    1ab8:	00000803 	andeq	r0, r0, r3, lsl #16
    1abc:	01110100 	tsteq	r1, r0, lsl #2
    1ac0:	0b130e25 	bleq	4c535c <__Stack_Size+0x4c4f5c>
    1ac4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1ac8:	01111755 	tsteq	r1, r5, asr r7
    1acc:	00001710 	andeq	r1, r0, r0, lsl r7
    1ad0:	0b002402 	bleq	aae0 <__Stack_Size+0xa6e0>
    1ad4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1ad8:	0300000e 	movweq	r0, #14
    1adc:	08030016 	stmdaeq	r3, {r1, r2, r4}
    1ae0:	0b3b0b3a 	bleq	ec47d0 <__Stack_Size+0xec43d0>
    1ae4:	00001349 	andeq	r1, r0, r9, asr #6
    1ae8:	0b000f04 	bleq	5700 <__Stack_Size+0x5300>
    1aec:	0013490b 	andseq	r4, r3, fp, lsl #18
    1af0:	01040500 	tsteq	r4, r0, lsl #10
    1af4:	0b0b0e03 	bleq	2c5308 <__Stack_Size+0x2c4f08>
    1af8:	0b3b0b3a 	bleq	ec47e8 <__Stack_Size+0xec43e8>
    1afc:	00001301 	andeq	r1, r0, r1, lsl #6
    1b00:	03002806 	movweq	r2, #2054	; 0x806
    1b04:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    1b08:	00160700 	andseq	r0, r6, r0, lsl #14
    1b0c:	0b3a0e03 	bleq	e85320 <__Stack_Size+0xe84f20>
    1b10:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1b14:	13080000 	movwne	r0, #32768	; 0x8000
    1b18:	0b0e0301 	bleq	382724 <__Stack_Size+0x382324>
    1b1c:	3b0b3a0b 	blcc	2d0350 <__Stack_Size+0x2cff50>
    1b20:	0013010b 	andseq	r0, r3, fp, lsl #2
    1b24:	000d0900 	andeq	r0, sp, r0, lsl #18
    1b28:	0b3a0e03 	bleq	e8533c <__Stack_Size+0xe84f3c>
    1b2c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1b30:	00000b38 	andeq	r0, r0, r8, lsr fp
    1b34:	2701150a 	strcs	r1, [r1, -sl, lsl #10]
    1b38:	01134919 	tsteq	r3, r9, lsl r9
    1b3c:	0b000013 	bleq	1b90 <__Stack_Size+0x1790>
    1b40:	13490005 	movtne	r0, #36869	; 0x9005
    1b44:	130c0000 	movwne	r0, #49152	; 0xc000
    1b48:	0b080301 	bleq	202754 <__Stack_Size+0x202354>
    1b4c:	3b0b3a0b 	blcc	2d0380 <__Stack_Size+0x2cff80>
    1b50:	0013010b 	andseq	r0, r3, fp, lsl #2
    1b54:	000d0d00 	andeq	r0, sp, r0, lsl #26
    1b58:	0b3a0803 	bleq	e83b6c <__Stack_Size+0xe8376c>
    1b5c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1b60:	00000b38 	andeq	r0, r0, r8, lsr fp
    1b64:	0b01170e 	bleq	477a4 <__Stack_Size+0x473a4>
    1b68:	3b0b3a0b 	blcc	2d039c <__Stack_Size+0x2cff9c>
    1b6c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1b70:	000d0f00 	andeq	r0, sp, r0, lsl #30
    1b74:	0b3a0803 	bleq	e83b88 <__Stack_Size+0xe83788>
    1b78:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1b7c:	15100000 	ldrne	r0, [r0, #-0]
    1b80:	00192700 	andseq	r2, r9, r0, lsl #14
    1b84:	000f1100 	andeq	r1, pc, r0, lsl #2
    1b88:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1b8c:	3f002e12 	svccc	0x00002e12
    1b90:	3a0e0319 	bcc	3827fc <__Stack_Size+0x3823fc>
    1b94:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    1b98:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1b9c:	96184006 	ldrls	r4, [r8], -r6
    1ba0:	00001942 	andeq	r1, r0, r2, asr #18
    1ba4:	03003413 	movweq	r3, #1043	; 0x413
    1ba8:	3b0b3a0e 	blcc	2d03e8 <__Stack_Size+0x2cffe8>
    1bac:	3f13490b 	svccc	0x0013490b
    1bb0:	00193c19 	andseq	r3, r9, r9, lsl ip
    1bb4:	00341400 	eorseq	r1, r4, r0, lsl #8
    1bb8:	0b3a0e03 	bleq	e853cc <__Stack_Size+0xe84fcc>
    1bbc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1bc0:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1bc4:	01000000 	mrseq	r0, (UNDEF: 0)
    1bc8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1bcc:	0e030b13 	vmoveq.32	d3[0], r0
    1bd0:	17550e1b 	smmlane	r5, fp, lr, r0
    1bd4:	17100111 			; <UNDEFINED> instruction: 0x17100111
    1bd8:	24020000 	strcs	r0, [r2], #-0
    1bdc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1be0:	000e030b 	andeq	r0, lr, fp, lsl #6
    1be4:	00160300 	andseq	r0, r6, r0, lsl #6
    1be8:	0b3a0803 	bleq	e83bfc <__Stack_Size+0xe837fc>
    1bec:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1bf0:	04040000 	streq	r0, [r4], #-0
    1bf4:	3a0b0b01 	bcc	2c4800 <__Stack_Size+0x2c4400>
    1bf8:	010b3b0b 	tsteq	fp, fp, lsl #22
    1bfc:	05000013 	streq	r0, [r0, #-19]
    1c00:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1c04:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1c08:	03001606 	movweq	r1, #1542	; 0x606
    1c0c:	3b0b3a0e 	blcc	2d044c <__Stack_Size+0x2d004c>
    1c10:	0013490b 	andseq	r4, r3, fp, lsl #18
    1c14:	01040700 	tsteq	r4, r0, lsl #14
    1c18:	0b0b0e03 	bleq	2c542c <__Stack_Size+0x2c502c>
    1c1c:	0b3b0b3a 	bleq	ec490c <__Stack_Size+0xec450c>
    1c20:	00001301 	andeq	r1, r0, r1, lsl #6
    1c24:	03011308 	movweq	r1, #4872	; 0x1308
    1c28:	3a0b0b0e 	bcc	2c4868 <__Stack_Size+0x2c4468>
    1c2c:	010b3b0b 	tsteq	fp, fp, lsl #22
    1c30:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1c34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1c38:	0b3b0b3a 	bleq	ec4928 <__Stack_Size+0xec4528>
    1c3c:	0b381349 	bleq	e06968 <__Stack_Size+0xe06568>
    1c40:	0f0a0000 	svceq	0x000a0000
    1c44:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1c48:	0b000013 	bleq	1c9c <__Stack_Size+0x189c>
    1c4c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    1c50:	13011349 	movwne	r1, #4937	; 0x1349
    1c54:	050c0000 	streq	r0, [ip, #-0]
    1c58:	00134900 	andseq	r4, r3, r0, lsl #18
    1c5c:	01130d00 	tsteq	r3, r0, lsl #26
    1c60:	0b0b0803 	bleq	2c3c74 <__Stack_Size+0x2c3874>
    1c64:	0b3b0b3a 	bleq	ec4954 <__Stack_Size+0xec4554>
    1c68:	00001301 	andeq	r1, r0, r1, lsl #6
    1c6c:	03000d0e 	movweq	r0, #3342	; 0xd0e
    1c70:	3b0b3a08 	blcc	2d0498 <__Stack_Size+0x2d0098>
    1c74:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1c78:	0f00000b 	svceq	0x0000000b
    1c7c:	0b0b0117 	bleq	2c20e0 <__Stack_Size+0x2c1ce0>
    1c80:	0b3b0b3a 	bleq	ec4970 <__Stack_Size+0xec4570>
    1c84:	00001301 	andeq	r1, r0, r1, lsl #6
    1c88:	03000d10 	movweq	r0, #3344	; 0xd10
    1c8c:	3b0b3a08 	blcc	2d04b4 <__Stack_Size+0x2d00b4>
    1c90:	0013490b 	andseq	r4, r3, fp, lsl #18
    1c94:	00151100 	andseq	r1, r5, r0, lsl #2
    1c98:	00001927 	andeq	r1, r0, r7, lsr #18
    1c9c:	0b000f12 	bleq	58ec <__Stack_Size+0x54ec>
    1ca0:	1300000b 	movwne	r0, #11
    1ca4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1ca8:	0b3a0e03 	bleq	e854bc <__Stack_Size+0xe850bc>
    1cac:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    1cb0:	01111349 	tsteq	r1, r9, asr #6
    1cb4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1cb8:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1cbc:	14000013 	strne	r0, [r0], #-19
    1cc0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1cc4:	0b3b0b3a 	bleq	ec49b4 <__Stack_Size+0xec45b4>
    1cc8:	17021349 	strne	r1, [r2, -r9, asr #6]
    1ccc:	0b150000 	bleq	541cd4 <__Stack_Size+0x5418d4>
    1cd0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1cd4:	00130106 	andseq	r0, r3, r6, lsl #2
    1cd8:	00341600 	eorseq	r1, r4, r0, lsl #12
    1cdc:	0b3a0e03 	bleq	e854f0 <__Stack_Size+0xe850f0>
    1ce0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1ce4:	00001702 	andeq	r1, r0, r2, lsl #14
    1ce8:	11010b17 	tstne	r1, r7, lsl fp
    1cec:	00061201 	andeq	r1, r6, r1, lsl #4
    1cf0:	00341800 	eorseq	r1, r4, r0, lsl #16
    1cf4:	0b3a0e03 	bleq	e85508 <__Stack_Size+0xe85108>
    1cf8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1cfc:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    1d00:	3a0e0301 	bcc	38290c <__Stack_Size+0x38250c>
    1d04:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    1d08:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1d0c:	97184006 	ldrls	r4, [r8, -r6]
    1d10:	13011942 	movwne	r1, #6466	; 0x1942
    1d14:	341a0000 	ldrcc	r0, [sl], #-0
    1d18:	3a0e0300 	bcc	382920 <__Stack_Size+0x382520>
    1d1c:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d20:	00170213 	andseq	r0, r7, r3, lsl r2
    1d24:	000a1b00 	andeq	r1, sl, r0, lsl #22
    1d28:	0b3a0e03 	bleq	e8553c <__Stack_Size+0xe8513c>
    1d2c:	0111053b 	tsteq	r1, fp, lsr r5
    1d30:	891c0000 	ldmdbhi	ip, {}	; <UNPREDICTABLE>
    1d34:	11010182 	smlabbne	r1, r2, r1, r0
    1d38:	00130101 	andseq	r0, r3, r1, lsl #2
    1d3c:	828a1d00 	addhi	r1, sl, #0, 26
    1d40:	18020001 	stmdane	r2, {r0}
    1d44:	00184291 	mulseq	r8, r1, r2
    1d48:	82891e00 	addhi	r1, r9, #0, 28
    1d4c:	01110101 	tsteq	r1, r1, lsl #2
    1d50:	13011331 	movwne	r1, #4913	; 0x1331
    1d54:	891f0000 	ldmdbhi	pc, {}	; <UNPREDICTABLE>
    1d58:	11010182 	smlabbne	r1, r2, r1, r0
    1d5c:	00133101 	andseq	r3, r3, r1, lsl #2
    1d60:	002e2000 	eoreq	r2, lr, r0
    1d64:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1d68:	0b3b0b3a 	bleq	ec4a58 <__Stack_Size+0xec4658>
    1d6c:	13491927 	movtne	r1, #39207	; 0x9927
    1d70:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1d74:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1d78:	21000019 	tstcs	r0, r9, lsl r0
    1d7c:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1d80:	0b3b0b3a 	bleq	ec4a70 <__Stack_Size+0xec4670>
    1d84:	17021349 	strne	r1, [r2, -r9, asr #6]
    1d88:	34220000 	strtcc	r0, [r2], #-0
    1d8c:	3a0e0300 	bcc	382994 <__Stack_Size+0x382594>
    1d90:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d94:	23000013 	movwcs	r0, #19
    1d98:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1d9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1da0:	17021349 	strne	r1, [r2, -r9, asr #6]
    1da4:	89240000 	stmdbhi	r4!, {}	; <UNPREDICTABLE>
    1da8:	11000182 	smlabbne	r0, r2, r1, r0
    1dac:	00133101 	andseq	r3, r3, r1, lsl #2
    1db0:	012e2500 	teqeq	lr, r0, lsl #10
    1db4:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1db8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1dbc:	13491927 	movtne	r1, #39207	; 0x9927
    1dc0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1dc4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1dc8:	00130119 	andseq	r0, r3, r9, lsl r1
    1dcc:	010b2600 	tsteq	fp, r0, lsl #12
    1dd0:	13011755 	movwne	r1, #5973	; 0x1755
    1dd4:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    1dd8:	03193f00 	tsteq	r9, #0, 30
    1ddc:	3b0b3a0e 	blcc	2d061c <__Stack_Size+0x2d021c>
    1de0:	49192705 	ldmdbmi	r9, {r0, r2, r8, r9, sl, sp}
    1de4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1de8:	96184006 	ldrls	r4, [r8], -r6
    1dec:	00001942 	andeq	r1, r0, r2, asr #18
    1df0:	3f012e28 	svccc	0x00012e28
    1df4:	3a0e0319 	bcc	382a60 <__Stack_Size+0x382660>
    1df8:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    1dfc:	11134919 	tstne	r3, r9, lsl r9
    1e00:	40061201 	andmi	r1, r6, r1, lsl #4
    1e04:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1e08:	00001301 	andeq	r1, r0, r1, lsl #6
    1e0c:	03000529 	movweq	r0, #1321	; 0x529
    1e10:	3b0b3a0e 	blcc	2d0650 <__Stack_Size+0x2d0250>
    1e14:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1e18:	2a000017 	bcs	1e7c <__Stack_Size+0x1a7c>
    1e1c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1e20:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1e24:	0b201927 	bleq	8082c8 <__Stack_Size+0x807ec8>
    1e28:	00001301 	andeq	r1, r0, r1, lsl #6
    1e2c:	03000a2b 	movweq	r0, #2603	; 0xa2b
    1e30:	3b0b3a0e 	blcc	2d0670 <__Stack_Size+0x2d0270>
    1e34:	2c000005 	stccs	0, cr0, [r0], {5}
    1e38:	1301010b 	movwne	r0, #4363	; 0x110b
    1e3c:	0b2d0000 	bleq	b41e44 <__Stack_Size+0xb41a44>
    1e40:	2e000001 	cdpcs	0, 0, cr0, cr0, cr1, {0}
    1e44:	13490035 	movtne	r0, #36917	; 0x9035
    1e48:	172f0000 	strne	r0, [pc, -r0]!
    1e4c:	3a0b0b01 	bcc	2c4a58 <__Stack_Size+0x2c4658>
    1e50:	01053b0b 	tsteq	r5, fp, lsl #22
    1e54:	30000013 	andcc	r0, r0, r3, lsl r0
    1e58:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1e5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1e60:	00001349 	andeq	r1, r0, r9, asr #6
    1e64:	03003431 	movweq	r3, #1073	; 0x431
    1e68:	3b0b3a0e 	blcc	2d06a8 <__Stack_Size+0x2d02a8>
    1e6c:	1c134905 	ldcne	9, cr4, [r3], {5}
    1e70:	3200000b 	andcc	r0, r0, #11
    1e74:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1e78:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1e7c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xb58
    1e80:	00001301 	andeq	r1, r0, r1, lsl #6
    1e84:	31003433 	tstcc	r0, r3, lsr r4
    1e88:	00170213 	andseq	r0, r7, r3, lsl r2
    1e8c:	000a3400 	andeq	r3, sl, r0, lsl #8
    1e90:	01111331 	tsteq	r1, r1, lsr r3
    1e94:	1d350000 	ldcne	0, cr0, [r5, #-0]
    1e98:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1e9c:	58175501 	ldmdapl	r7, {r0, r8, sl, ip, lr}
    1ea0:	0105590b 	tsteq	r5, fp, lsl #18
    1ea4:	36000013 			; <UNDEFINED> instruction: 0x36000013
    1ea8:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    1eac:	34370000 	ldrtcc	r0, [r7], #-0
    1eb0:	02133100 	andseq	r3, r3, #0, 2
    1eb4:	38000018 	stmdacc	r0, {r3, r4}
    1eb8:	01018289 	smlabbeq	r1, r9, r2, r8
    1ebc:	00000111 	andeq	r0, r0, r1, lsl r1
    1ec0:	01828939 	orreq	r8, r2, r9, lsr r9
    1ec4:	95011100 	strls	r1, [r1, #-256]	; 0x100
    1ec8:	13311942 	teqne	r1, #1081344	; 0x108000
    1ecc:	2e3a0000 	cdpcs	0, 3, cr0, cr10, cr0, {0}
    1ed0:	03193f01 	tsteq	r9, #1, 30
    1ed4:	3b0b3a0e 	blcc	2d0714 <__Stack_Size+0x2d0314>
    1ed8:	11192705 	tstne	r9, r5, lsl #14
    1edc:	40061201 	andmi	r1, r6, r1, lsl #4
    1ee0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1ee4:	00001301 	andeq	r1, r0, r1, lsl #6
    1ee8:	0300053b 	movweq	r0, #1339	; 0x53b
    1eec:	3b0b3a08 	blcc	2d0714 <__Stack_Size+0x2d0314>
    1ef0:	02134905 	andseq	r4, r3, #81920	; 0x14000
    1ef4:	3c000017 	stccc	0, cr0, [r0], {23}
    1ef8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1efc:	0b3a0e03 	bleq	e85710 <__Stack_Size+0xe85310>
    1f00:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    1f04:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f08:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1f0c:	3d000019 	stccc	0, cr0, [r0, #-100]	; 0xffffff9c
    1f10:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1f14:	0b3b0b3a 	bleq	ec4c04 <__Stack_Size+0xec4804>
    1f18:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1f1c:	0000193c 	andeq	r1, r0, ip, lsr r9
    1f20:	0300343e 	movweq	r3, #1086	; 0x43e
    1f24:	3b0b3a0e 	blcc	2d0764 <__Stack_Size+0x2d0364>
    1f28:	3f13490b 	svccc	0x0013490b
    1f2c:	00180219 	andseq	r0, r8, r9, lsl r2
    1f30:	012e3f00 	teqeq	lr, r0, lsl #30
    1f34:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1f38:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1f3c:	13491927 	movtne	r1, #39207	; 0x9927
    1f40:	1301193c 	movwne	r1, #6460	; 0x193c
    1f44:	2e400000 	cdpcs	0, 4, cr0, cr0, cr0, {0}
    1f48:	03193f01 	tsteq	r9, #1, 30
    1f4c:	3b0b3a0e 	blcc	2d078c <__Stack_Size+0x2d038c>
    1f50:	3c19270b 	ldccc	7, cr2, [r9], {11}
    1f54:	00130119 	andseq	r0, r3, r9, lsl r1
    1f58:	012e4100 	teqeq	lr, r0, lsl #2
    1f5c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    1f60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xb3a
    1f64:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
    1f68:	00001301 	andeq	r1, r0, r1, lsl #6
    1f6c:	3f012e42 	svccc	0x00012e42
    1f70:	3a0e0319 	bcc	382bdc <__Stack_Size+0x3827dc>
    1f74:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    1f78:	00193c19 	andseq	r3, r9, r9, lsl ip
    1f7c:	11010000 	mrsne	r0, (UNDEF: 1)
    1f80:	130e2501 	movwne	r2, #58625	; 0xe501
    1f84:	1b0e030b 	blne	382bb8 <__Stack_Size+0x3827b8>
    1f88:	1117550e 	tstne	r7, lr, lsl #10
    1f8c:	00171001 	andseq	r1, r7, r1
    1f90:	00240200 	eoreq	r0, r4, r0, lsl #4
    1f94:	0b3e0b0b 	bleq	f84bc8 <__Stack_Size+0xf847c8>
    1f98:	00000e03 	andeq	r0, r0, r3, lsl #28
    1f9c:	03001603 	movweq	r1, #1539	; 0x603
    1fa0:	3b0b3a08 	blcc	2d07c8 <__Stack_Size+0x2d03c8>
    1fa4:	0013490b 	andseq	r4, r3, fp, lsl #18
    1fa8:	000f0400 	andeq	r0, pc, r0, lsl #8
    1fac:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1fb0:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    1fb4:	03193f01 	tsteq	r9, #1, 30
    1fb8:	3b0b3a0e 	blcc	2d07f8 <__Stack_Size+0x2d03f8>
    1fbc:	1119270b 	tstne	r9, fp, lsl #14
    1fc0:	40061201 	andmi	r1, r6, r1, lsl #4
    1fc4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1fc8:	00001301 	andeq	r1, r0, r1, lsl #6
    1fcc:	03000506 	movweq	r0, #1286	; 0x506
    1fd0:	3b0b3a0e 	blcc	2d0810 <__Stack_Size+0x2d0410>
    1fd4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1fd8:	07000017 	smladeq	r0, r7, r0, r0
    1fdc:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1fe0:	0b3b0b3a 	bleq	ec4cd0 <__Stack_Size+0xec48d0>
    1fe4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1fe8:	34080000 	strcc	r0, [r8], #-0
    1fec:	3a080300 	bcc	202bf4 <__Stack_Size+0x2027f4>
    1ff0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ff4:	00170213 	andseq	r0, r7, r3, lsl r2
    1ff8:	00340900 	eorseq	r0, r4, r0, lsl #18
    1ffc:	0b3a0e03 	bleq	e85810 <__Stack_Size+0xe85410>
    2000:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2004:	00001702 	andeq	r1, r0, r2, lsl #14
    2008:	01110100 	tsteq	r1, r0, lsl #2
    200c:	0b130e25 	bleq	4c58a8 <__Stack_Size+0x4c54a8>
    2010:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2014:	01111755 	tsteq	r1, r5, asr r7
    2018:	00001710 	andeq	r1, r0, r0, lsl r7
    201c:	0b002402 	bleq	b02c <__Stack_Size+0xac2c>
    2020:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2024:	0300000e 	movweq	r0, #14
    2028:	08030016 	stmdaeq	r3, {r1, r2, r4}
    202c:	0b3b0b3a 	bleq	ec4d1c <__Stack_Size+0xec491c>
    2030:	00001349 	andeq	r1, r0, r9, asr #6
    2034:	03010404 	movweq	r0, #5124	; 0x1404
    2038:	3a0b0b0e 	bcc	2c4c78 <__Stack_Size+0x2c4878>
    203c:	010b3b0b 	tsteq	fp, fp, lsl #22
    2040:	05000013 	streq	r0, [r0, #-19]
    2044:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    2048:	00000d1c 	andeq	r0, r0, ip, lsl sp
    204c:	03001606 	movweq	r1, #1542	; 0x606
    2050:	3b0b3a0e 	blcc	2d0890 <__Stack_Size+0x2d0490>
    2054:	0013490b 	andseq	r4, r3, fp, lsl #18
    2058:	012e0700 	teqeq	lr, r0, lsl #14
    205c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    2060:	0b3b0b3a 	bleq	ec4d50 <__Stack_Size+0xec4950>
    2064:	13491927 	movtne	r1, #39207	; 0x9927
    2068:	13010b20 	movwne	r0, #6944	; 0x1b20
    206c:	05080000 	streq	r0, [r8, #-0]
    2070:	3a0e0300 	bcc	382c78 <__Stack_Size+0x382878>
    2074:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2078:	09000013 	stmdbeq	r0, {r0, r1, r4}
    207c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2080:	0b3a0e03 	bleq	e85894 <__Stack_Size+0xe85494>
    2084:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    2088:	06120111 			; <UNDEFINED> instruction: 0x06120111
    208c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2090:	00130119 	andseq	r0, r3, r9, lsl r1
    2094:	00050a00 	andeq	r0, r5, r0, lsl #20
    2098:	0b3a0e03 	bleq	e858ac <__Stack_Size+0xe854ac>
    209c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    20a0:	00001802 	andeq	r1, r0, r2, lsl #16
    20a4:	3f002e0b 	svccc	0x00002e0b
    20a8:	3a0e0319 	bcc	382d14 <__Stack_Size+0x382914>
    20ac:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    20b0:	11134919 	tstne	r3, r9, lsl r9
    20b4:	40061201 	andmi	r1, r6, r1, lsl #4
    20b8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    20bc:	050c0000 	streq	r0, [ip, #-0]
    20c0:	3a0e0300 	bcc	382cc8 <__Stack_Size+0x3828c8>
    20c4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20c8:	00170213 	andseq	r0, r7, r3, lsl r2
    20cc:	012e0d00 	teqeq	lr, r0, lsl #26
    20d0:	01111331 	tsteq	r1, r1, lsr r3
    20d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    20d8:	01194297 			; <UNDEFINED> instruction: 0x01194297
    20dc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    20e0:	13310005 	teqne	r1, #5
    20e4:	00001702 	andeq	r1, r0, r2, lsl #14
    20e8:	3f012e0f 	svccc	0x00012e0f
    20ec:	3a0e0319 	bcc	382d58 <__Stack_Size+0x382958>
    20f0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    20f4:	11134919 	tstne	r3, r9, lsl r9
    20f8:	40061201 	andmi	r1, r6, r1, lsl #4
    20fc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2100:	00001301 	andeq	r1, r0, r1, lsl #6
    2104:	11010b10 	tstne	r1, r0, lsl fp
    2108:	00061201 	andeq	r1, r6, r1, lsl #4
    210c:	00341100 	eorseq	r1, r4, r0, lsl #2
    2110:	0b3a0e03 	bleq	e85924 <__Stack_Size+0xe85524>
    2114:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    2118:	00001702 	andeq	r1, r0, r2, lsl #14
    211c:	03003412 	movweq	r3, #1042	; 0x412
    2120:	3b0b3a0e 	blcc	2d0960 <__Stack_Size+0x2d0560>
    2124:	0013490b 	andseq	r4, r3, fp, lsl #18
    2128:	011d1300 	tsteq	sp, r0, lsl #6
    212c:	01521331 	cmpeq	r2, r1, lsr r3
    2130:	0b581755 	bleq	1607e8c <__Stack_Size+0x1607a8c>
    2134:	00000b59 	andeq	r0, r0, r9, asr fp
    2138:	3f012e14 	svccc	0x00012e14
    213c:	3a0e0319 	bcc	382da8 <__Stack_Size+0x3829a8>
    2140:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    2144:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2148:	97184006 	ldrls	r4, [r8, -r6]
    214c:	13011942 	movwne	r1, #6466	; 0x1942
    2150:	05150000 	ldreq	r0, [r5, #-0]
    2154:	3a0e0300 	bcc	382d5c <__Stack_Size+0x38295c>
    2158:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    215c:	00170213 	andseq	r0, r7, r3, lsl r2
    2160:	00341600 	eorseq	r1, r4, r0, lsl #12
    2164:	0b3a0e03 	bleq	e85978 <__Stack_Size+0xe85578>
    2168:	1349053b 	movtne	r0, #38203	; 0x953b
    216c:	00001702 	andeq	r1, r0, r2, lsl #14
    2170:	3f012e17 	svccc	0x00012e17
    2174:	3a0e0319 	bcc	382de0 <__Stack_Size+0x3829e0>
    2178:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
    217c:	11134919 	tstne	r3, r9, lsl r9
    2180:	40061201 	andmi	r1, r6, r1, lsl #4
    2184:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2188:	00001301 	andeq	r1, r0, r1, lsl #6
    218c:	03000518 	movweq	r0, #1304	; 0x518
    2190:	3b0b3a0e 	blcc	2d09d0 <__Stack_Size+0x2d05d0>
    2194:	02134905 	andseq	r4, r3, #81920	; 0x14000
    2198:	19000018 	stmdbne	r0, {r3, r4}
    219c:	0b0b000f 	bleq	2c21e0 <__Stack_Size+0x2c1de0>
    21a0:	00001349 	andeq	r1, r0, r9, asr #6
    21a4:	0300341a 	movweq	r3, #1050	; 0x41a
    21a8:	3b0b3a0e 	blcc	2d09e8 <__Stack_Size+0x2d05e8>
    21ac:	02134905 	andseq	r4, r3, #81920	; 0x14000
    21b0:	1b000018 	blne	2218 <__Stack_Size+0x1e18>
    21b4:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    21b8:	0b1c0000 	bleq	7021c0 <__Stack_Size+0x701dc0>
    21bc:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    21c0:	00130106 	andseq	r0, r3, r6, lsl #2
    21c4:	00051d00 	andeq	r1, r5, r0, lsl #26
    21c8:	0b3a0803 	bleq	e841dc <__Stack_Size+0xe83ddc>
    21cc:	1349053b 	movtne	r0, #38203	; 0x953b
    21d0:	00001702 	andeq	r1, r0, r2, lsl #14
    21d4:	0300051e 	movweq	r0, #1310	; 0x51e
    21d8:	3b0b3a08 	blcc	2d0a00 <__Stack_Size+0x2d0600>
    21dc:	02134905 	andseq	r4, r3, #81920	; 0x14000
    21e0:	1f000018 	svcne	0x00000018
    21e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    21e8:	0b3a0e03 	bleq	e859fc <__Stack_Size+0xe855fc>
    21ec:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    21f0:	01111349 	tsteq	r1, r9, asr #6
    21f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    21f8:	00194297 	mulseq	r9, r7, r2
    21fc:	11010000 	mrsne	r0, (UNDEF: 1)
    2200:	130e2501 	movwne	r2, #58625	; 0xe501
    2204:	1b0e030b 	blne	382e38 <__Stack_Size+0x382a38>
    2208:	1117550e 	tstne	r7, lr, lsl #10
    220c:	00171001 	andseq	r1, r7, r1
    2210:	00240200 	eoreq	r0, r4, r0, lsl #4
    2214:	0b3e0b0b 	bleq	f84e48 <__Stack_Size+0xf84a48>
    2218:	00000e03 	andeq	r0, r0, r3, lsl #28
    221c:	03001603 	movweq	r1, #1539	; 0x603
    2220:	3b0b3a08 	blcc	2d0a48 <__Stack_Size+0x2d0648>
    2224:	0013490b 	andseq	r4, r3, fp, lsl #18
    2228:	000f0400 	andeq	r0, pc, r0, lsl #8
    222c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2230:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    2234:	03193f00 	tsteq	r9, #0, 30
    2238:	3b0b3a0e 	blcc	2d0a78 <__Stack_Size+0x2d0678>
    223c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2240:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2244:	97184006 	ldrls	r4, [r8, -r6]
    2248:	00001942 	andeq	r1, r0, r2, asr #18
    224c:	3f012e06 	svccc	0x00012e06
    2250:	3a0e0319 	bcc	382ebc <__Stack_Size+0x382abc>
    2254:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    2258:	11134919 	tstne	r3, r9, lsl r9
    225c:	40061201 	andmi	r1, r6, r1, lsl #4
    2260:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2264:	00001301 	andeq	r1, r0, r1, lsl #6
    2268:	03000507 	movweq	r0, #1287	; 0x507
    226c:	3b0b3a0e 	blcc	2d0aac <__Stack_Size+0x2d06ac>
    2270:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2274:	08000017 	stmdaeq	r0, {r0, r1, r2, r4}
    2278:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    227c:	0b3b0b3a 	bleq	ec4f6c <__Stack_Size+0xec4b6c>
    2280:	17021349 	strne	r1, [r2, -r9, asr #6]
    2284:	89090000 	stmdbhi	r9, {}	; <UNPREDICTABLE>
    2288:	11010182 	smlabbne	r1, r2, r1, r0
    228c:	01133101 	tsteq	r3, r1, lsl #2
    2290:	0a000013 	beq	22e4 <__Stack_Size+0x1ee4>
    2294:	0001828a 	andeq	r8, r1, sl, lsl #5
    2298:	42911802 	addsmi	r1, r1, #131072	; 0x20000
    229c:	0b000018 	bleq	2304 <__Stack_Size+0x1f04>
    22a0:	01018289 	smlabbeq	r1, r9, r2, r8
    22a4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    22a8:	340c0000 	strcc	r0, [ip], #-0
    22ac:	3a0e0300 	bcc	382eb4 <__Stack_Size+0x382ab4>
    22b0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22b4:	3c193f13 	ldccc	15, cr3, [r9], {19}
    22b8:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
    22bc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    22c0:	0b3a0e03 	bleq	e85ad4 <__Stack_Size+0xe856d4>
    22c4:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    22c8:	193c1349 	ldmdbne	ip!, {r0, r3, r6, r8, r9, ip}
    22cc:	00001301 	andeq	r1, r0, r1, lsl #6
    22d0:	4900050e 	stmdbmi	r0, {r1, r2, r3, r8, sl}
    22d4:	0f000013 	svceq	0x00000013
    22d8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    22dc:	0b3a0e03 	bleq	e85af0 <__Stack_Size+0xe856f0>
    22e0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    22e4:	0000193c 	andeq	r1, r0, ip, lsr r9
    22e8:	01110100 	tsteq	r1, r0, lsl #2
    22ec:	0b130e25 	bleq	4c5b88 <__Stack_Size+0x4c5788>
    22f0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    22f4:	01111755 	tsteq	r1, r5, asr r7
    22f8:	00001710 	andeq	r1, r0, r0, lsl r7
    22fc:	0b002402 	bleq	b30c <__Stack_Size+0xaf0c>
    2300:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2304:	0300000e 	movweq	r0, #14
    2308:	08030016 	stmdaeq	r3, {r1, r2, r4}
    230c:	0b3b0b3a 	bleq	ec4ffc <__Stack_Size+0xec4bfc>
    2310:	00001349 	andeq	r1, r0, r9, asr #6
    2314:	27001504 	strcs	r1, [r0, -r4, lsl #10]
    2318:	05000019 	streq	r0, [r0, #-25]
    231c:	0b0b000f 	bleq	2c2360 <__Stack_Size+0x2c1f60>
    2320:	00001349 	andeq	r1, r0, r9, asr #6
    2324:	3f012e06 	svccc	0x00012e06
    2328:	3a0e0319 	bcc	382f94 <__Stack_Size+0x382b94>
    232c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
    2330:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2334:	96184006 	ldrls	r4, [r8], -r6
    2338:	13011942 	movwne	r1, #6466	; 0x1942
    233c:	34070000 	strcc	r0, [r7], #-0
    2340:	3a0e0300 	bcc	382f48 <__Stack_Size+0x382b48>
    2344:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2348:	00180213 	andseq	r0, r8, r3, lsl r2
    234c:	010b0800 	tsteq	fp, r0, lsl #16
    2350:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2354:	00001301 	andeq	r1, r0, r1, lsl #6
    2358:	03003409 	movweq	r3, #1033	; 0x409
    235c:	3b0b3a0e 	blcc	2d0b9c <__Stack_Size+0x2d079c>
    2360:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2364:	0a000017 	beq	23c8 <__Stack_Size+0x1fc8>
    2368:	00018289 	andeq	r8, r1, r9, lsl #5
    236c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2370:	350b0000 	strcc	r0, [fp, #-0]
    2374:	00134900 	andseq	r4, r3, r0, lsl #18
    2378:	00340c00 	eorseq	r0, r4, r0, lsl #24
    237c:	0b3a0e03 	bleq	e85b90 <__Stack_Size+0xe85790>
    2380:	1349053b 	movtne	r0, #38203	; 0x953b
    2384:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2388:	340d0000 	strcc	r0, [sp], #-0
    238c:	3a0e0300 	bcc	382f94 <__Stack_Size+0x382b94>
    2390:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2394:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    2398:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    239c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    23a0:	0b3b0b3a 	bleq	ec5090 <__Stack_Size+0xec4c90>
    23a4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    23a8:	0000193c 	andeq	r1, r0, ip, lsr r9
    23ac:	4901010f 	stmdbmi	r1, {r0, r1, r2, r3, r8}
    23b0:	00130113 	andseq	r0, r3, r3, lsl r1
    23b4:	00211000 	eoreq	r1, r1, r0
    23b8:	0b2f1349 	bleq	bc70e4 <__Stack_Size+0xbc6ce4>
    23bc:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    23c0:	03193f00 	tsteq	r9, #0, 30
    23c4:	3b0b3a0e 	blcc	2d0c04 <__Stack_Size+0x2d0804>
    23c8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    23cc:	00193c13 	andseq	r3, r9, r3, lsl ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000045a 	andeq	r0, r0, sl, asr r4
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
       4:	00e80002 	rsceq	r0, r8, r2
  {
    statusreg = SysTick->CTRL;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	000d0efb 	strdeq	r0, [sp], -fp
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	6c010000 	stcvs	0, cr0, [r1], {-0}
      1c:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
      20:	0000636e 	andeq	r6, r0, lr, ror #6
      24:	6e69616d 	powvsez	f6, f1, #5.0
      28:	0000632e 	andeq	r6, r0, lr, lsr #6
      2c:	74730000 	ldrbtvc	r0, [r3], #-0
      30:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      34:	5f783031 	svcpl	0x00783031
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	0100682e 	tsteq	r0, lr, lsr #16

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	74730000 	ldrbtvc	r0, [r3], #-0
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      48:	5f783031 	svcpl	0x00783031
      4c:	2e70616d 	rpwcssz	f6, f0, #5.0

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	00010068 	andeq	r0, r1, r8, rrx
      54:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      58:	31663233 	cmncc	r6, r3, lsr r2
      5c:	665f7830 			; <UNDEFINED> instruction: 0x665f7830
      60:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
      64:	0100682e 	tsteq	r0, lr, lsr #16
      68:	74730000 	ldrbtvc	r0, [r3], #-0
      6c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      70:	5f783031 	svcpl	0x00783031
      74:	6f697067 	svcvs	0x00697067
      78:	0100682e 	tsteq	r0, lr, lsr #16
      7c:	74730000 	ldrbtvc	r0, [r3], #-0
      80:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      break;            

    default:
      break;
  }
}
      84:	5f783031 	svcpl	0x00783031
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
      88:	6369766e 	cmnvs	r9, #115343360	; 0x6e00000
      8c:	0100682e 	tsteq	r0, lr, lsr #16
      90:	74730000 	ldrbtvc	r0, [r3], #-0
      94:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      98:	5f783031 	svcpl	0x00783031
      9c:	2e6d6974 	mcrcs	9, 3, r6, cr13, cr4, {3}
      a0:	00010068 	andeq	r0, r1, r8, rrx
      a4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	31663233 	cmncc	r6, r3, lsr r2
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	755f7830 	ldrbvc	r7, [pc, #-2096]	; fffff884 <SCS_BASE+0x1fff1884>
      b0:	74726173 	ldrbtvc	r6, [r2], #-371	; 0x173
      break; 
      
    default:
      break;
  }
}
      b4:	0100682e 	tsteq	r0, lr, lsr #16
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	74730000 	ldrbtvc	r0, [r3], #-0
      bc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
      c0:	5f783031 	svcpl	0x00783031
      c4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0x973
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      c8:	2e6b6369 	cdpcs	3, 6, cr6, cr11, cr9, {3}
      cc:	00010068 	andeq	r0, r1, r8, rrx
				{
					FLASH_Lock();
      d0:	42535500 	subsmi	r5, r3, #0, 10
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
      d8:	0000682e 	andeq	r6, r0, lr, lsr #16
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	74730000 	ldrbtvc	r0, [r3], #-0
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
				TIM_Cmd(TIM2, ENABLE);
      e4:	5f783031 	svcpl	0x00783031
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	00010068 	andeq	r0, r1, r8, rrx
      f0:	05000000 	streq	r0, [r0, #-0]
						usbRxCount = USB_Rx_Cnt;
      f4:	00013402 	andeq	r3, r1, r2, lsl #8
      f8:	01d90308 	bicseq	r0, r9, r8, lsl #6
      fc:	06021401 	streq	r1, [r2], -r1, lsl #8
					if(CheckTimeOut()){
     100:	00010100 	andeq	r0, r1, r0, lsl #2
     104:	00000205 	andeq	r0, r0, r5, lsl #4
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
     10c:	33160101 	tstcc	r6, #1073741824	; 0x40000000
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
     110:	01000802 	tsteq	r0, r2, lsl #16
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     114:	02050001 	andeq	r0, r5, #1
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	08000140 	stmdaeq	r0, {r6, r8}
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	0101eb03 	tsteq	r1, r3, lsl #22
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	00080213 	andeq	r0, r8, r3, lsl r2
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	05000101 	streq	r0, [r0, #-257]	; 0x101
     128:	00000002 	andeq	r0, r0, r2
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
     12c:	01f10300 	mvnseq	r0, r0, lsl #6
				gbIsFlashLock = TRUE;
     130:	1b432401 	blne	10c913c <__Stack_Size+0x10c8d3c>
     134:	2f2f2925 	svccs	0x002f2925
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	7733302f 	ldrvc	r3, [r3, -pc, lsr #32]!
     13c:	03026d5d 	movweq	r6, #11613	; 0x2d5d
     140:	00010100 	andeq	r0, r1, r0, lsl #2
     144:	00000205 	andeq	r0, r0, r5, lsl #4
					USB_TxDString("Success..\n");
     148:	bf030000 	svclt	0x00030000
				}
				else
					USB_TxDString("Fail..\n");
     14c:	01020102 	tsteq	r2, r2, lsl #2
     150:	00010100 	andeq	r0, r1, r0, lsl #2
			//WDTCR = 0x08;
				Delay(100);
     154:	00000205 	andeq	r0, r0, r5, lsl #4
     158:	c6030000 	strgt	r0, [r3], -r0

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	01020102 	tsteq	r2, r2, lsl #2
     160:	00010100 	andeq	r0, r1, r0, lsl #2
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	00000205 	andeq	r0, r0, r5, lsl #4
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
     168:	d3030000 	movwle	r0, #12288	; 0x3000
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
     16c:	01020102 	tsteq	r2, r2, lsl #2
     170:	00010100 	andeq	r0, r1, r0, lsl #2

				Jump_To_Application();
     174:	00000205 	andeq	r0, r0, r5, lsl #4
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	dd030000 	stcle	0, cr0, [r3, #-0]
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	01020102 	tsteq	r2, r2, lsl #2
     180:	00010100 	andeq	r0, r1, r0, lsl #2
     184:	00000205 	andeq	r0, r0, r5, lsl #4
     188:	eb030000 	bl	c0190 <__Stack_Size+0xbfd90>
     18c:	01020102 	tsteq	r2, r2, lsl #2

		}
		USART_BUFFER_CLEAR;
     190:	00010100 	andeq	r0, r1, r0, lsl #2
     194:	00000205 	andeq	r0, r0, r5, lsl #4
		gwpUSARTBuffer[0]='\0';
     198:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
     19c:	01020102 	tsteq	r2, r2, lsl #2
     1a0:	00010100 	andeq	r0, r1, r0, lsl #2
     1a4:	00000205 	andeq	r0, r0, r5, lsl #4
     1a8:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
     1ac:	22010102 	andcs	r0, r1, #-2147483648	; 0x80000000
     1b0:	2d242a3e 	vstmdbcs	r4!, {s4-s65}
     1b4:	21212d2f 	teqcs	r1, pc, lsr #26
     1b8:	592f301e 	stmdbpl	pc!, {r1, r2, r3, r4, ip, sp}	; <UNPREDICTABLE>
     1bc:	022d3d59 	eoreq	r3, sp, #5696	; 0x1640
     1c0:	01010002 	tsteq	r1, r2
     1c4:	50020500 	andpl	r0, r2, r0, lsl #10
     1c8:	03080001 	movweq	r0, #32769	; 0x8001
     1cc:	00010385 	andeq	r0, r1, r5, lsl #7
     1d0:	30010402 	andcc	r0, r1, r2, lsl #8
     1d4:	02040200 	andeq	r0, r4, #0, 4
     1d8:	01023e3e 	tsteq	r2, lr, lsr lr
     1dc:	00010100 	andeq	r0, r1, r0, lsl #2
     1e0:	00000205 	andeq	r0, r0, r5, lsl #4
     1e4:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
     1e8:	2b150103 	blcs	5405fc <__Stack_Size+0x5401fc>
     1ec:	4d2f2320 	stcmi	3, cr2, [pc, #-128]!	; 174 <_Minimum_Stack_Size+0x74>
     1f0:	4c2f302c 	stcmi	0, cr3, [pc], #-176	; 148 <_Minimum_Stack_Size+0x48>
     1f4:	0002022d 	andeq	r0, r2, sp, lsr #4
     1f8:	05000101 	streq	r0, [r0, #-257]	; 0x101
     1fc:	00000002 	andeq	r0, r0, r2
     200:	039b0300 	orrseq	r0, fp, #0, 6
     204:	3d212001 	stccc	0, cr2, [r1, #-4]!
     208:	02022d21 	andeq	r2, r2, #2112	; 0x840
     20c:	00010100 	andeq	r0, r1, r0, lsl #2
     210:	00000205 	andeq	r0, r0, r5, lsl #4
     214:	a1030000 	mrsge	r0, (UNDEF: 3)
     218:	21200103 	teqcs	r0, r3, lsl #2
     21c:	022d213d 	eoreq	r2, sp, #1073741839	; 0x4000000f
     220:	01010002 	tsteq	r1, r2
     224:	00020500 	andeq	r0, r2, r0, lsl #10
     228:	03000000 	movweq	r0, #0
     22c:	130103a8 	movwne	r0, #5032	; 0x13a8
     230:	0006029f 	muleq	r6, pc, r2	; <UNPREDICTABLE>
     234:	05000101 	streq	r0, [r0, #-257]	; 0x101
     238:	00016402 	andeq	r6, r1, r2, lsl #8
     23c:	03b40308 			; <UNDEFINED> instruction: 0x03b40308
     240:	3e222001 	cdpcc	0, 2, cr2, cr2, cr1, {0}
     244:	01040200 	mrseq	r0, R12_usr
     248:	214c3f30 	cmpcs	ip, r0, lsr pc
     24c:	0005022d 	andeq	r0, r5, sp, lsr #4
     250:	05000101 	streq	r0, [r0, #-257]	; 0x101
     254:	00000002 	andeq	r0, r0, r2
     258:	06ab0300 	strteq	r0, [fp], r0, lsl #6
     25c:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
     260:	20060104 	andcs	r0, r6, r4, lsl #2
     264:	211f6906 	tstcs	pc, r6, lsl #18
     268:	04020022 	streq	r0, [r2], #-34	; 0x22
     26c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
     270:	021f2639 	andseq	r2, pc, #59768832	; 0x3900000
     274:	01010004 	tsteq	r1, r4
     278:	00020500 	andeq	r0, r2, r0, lsl #10
     27c:	03000000 	movweq	r0, #0
     280:	200106b9 			; <UNDEFINED> instruction: 0x200106b9
     284:	42393d24 	eorsmi	r3, r9, #36, 26	; 0x900
     288:	01000202 	tsteq	r0, r2, lsl #4
     28c:	02050001 	andeq	r0, r5, #1
     290:	00000000 	andeq	r0, r0, r0
     294:	0103c703 	tsteq	r3, r3, lsl #14
     298:	4a780336 	bmi	1e00f78 <__Stack_Size+0x1e00b78>
     29c:	02004c26 	andeq	r4, r0, #9728	; 0x2600
     2a0:	0d030104 	stfeqs	f0, [r3, #-16]
     2a4:	6616034a 	ldrvs	r0, [r6], -sl, asr #6
     2a8:	5809034b 	stmdapl	r9, {r0, r1, r3, r6, r8, r9}
     2ac:	03207703 	teqeq	r0, #786432	; 0xc0000
     2b0:	02002e09 	andeq	r2, r0, #9, 28	; 0x90
     2b4:	2e060104 	adfcss	f0, f6, f4
     2b8:	286aa206 	stmdacs	sl!, {r1, r2, r9, sp, pc}^
     2bc:	28207803 	stmdacs	r0!, {r0, r1, fp, ip, sp, lr}
     2c0:	1f03402f 	svcne	0x0003402f
     2c4:	2e610320 	cdpcs	3, 6, cr0, cr1, cr0, {1}
     2c8:	3c170321 	ldccc	3, cr0, [r7], {33}	; 0x21
     2cc:	33323230 	teqcc	r2, #48, 4
     2d0:	25312b1b 	ldrcs	r2, [r1, #-2843]!	; 0xb1b
     2d4:	01040200 	mrseq	r0, R12_usr
     2d8:	04020034 	streq	r0, [r2], #-52	; 0x34
     2dc:	003c0602 	eorseq	r0, ip, r2, lsl #12
     2e0:	06010402 	streq	r0, [r1], -r2, lsl #8
     2e4:	0402004f 	streq	r0, [r2], #-79	; 0x4f
     2e8:	02006101 	andeq	r6, r0, #1073741824	; 0x40000000
     2ec:	03250104 	teqeq	r5, #4, 2
     2f0:	2f4c3c0d 	svccs	0x004c3c0d
     2f4:	2d213d23 	stccs	13, cr3, [r1, #-140]!	; 0xffffff74
     2f8:	4b422f21 	blmi	108bf84 <__Stack_Size+0x108bb84>
     2fc:	3a224b59 	bcc	893068 <__Stack_Size+0x892c68>
     300:	207cf903 	rsbscs	pc, ip, r3, lsl #18
     304:	20038903 	andcs	r8, r3, r3, lsl #18
     308:	032e0b03 	teqeq	lr, #3072	; 0xc00
     30c:	09032077 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, sp}
     310:	3c770320 	ldclcc	3, cr0, [r7], #-128	; 0xffffff80
     314:	21200903 	teqcs	r0, r3, lsl #18
     318:	1d232f50 	stcne	15, cr2, [r3, #-320]!	; 0xfffffec0
     31c:	04020031 	streq	r0, [r2], #-49	; 0x31
     320:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
     324:	4d3e314b 	ldfmis	f3, [lr, #-300]!	; 0xfffffed4
     328:	24580c03 	ldrbcs	r0, [r8], #-3075	; 0xc03
     32c:	254c3228 	strbcs	r3, [ip, #-552]	; 0x228
     330:	3d1fa22f 	lfmcc	f2, 1, [pc, #-188]	; 27c <_Minimum_Stack_Size+0x17c>
     334:	01002102 	tsteq	r0, r2, lsl #2
     338:	02050001 	andeq	r0, r5, #1
     33c:	00000000 	andeq	r0, r0, r0
     340:	0105ec03 	tsteq	r5, r3, lsl #24
     344:	02002520 	andeq	r2, r0, #32, 10	; 0x8000000
     348:	86280104 	strthi	r0, [r8], -r4, lsl #2
     34c:	03241c32 	teqeq	r4, #12800	; 0x3200
     350:	2f31ba0f 	svccs	0x0031ba0f
     354:	231d233a 	tstcs	sp, #-402653184	; 0xe8000000
     358:	211f3141 	tstcs	pc, r1, asr #2
     35c:	6803403d 	stmdavs	r3, {r0, r2, r3, r4, r5, lr}
     360:	1d032f3c 	stcne	15, cr2, [r3, #-240]	; 0xffffff10
     364:	000b024a 	andeq	r0, fp, sl, asr #4
     368:	05000101 	streq	r0, [r0, #-257]	; 0x101
     36c:	00000002 	andeq	r0, r0, r2
     370:	07820300 	streq	r0, [r2, r0, lsl #6]
     374:	200f0301 	andcs	r0, pc, r1, lsl #6
     378:	207a0327 	rsbscs	r0, sl, r7, lsr #6
     37c:	2121211f 	teqcs	r1, pc, lsl r1
     380:	301e2321 	andscc	r2, lr, r1, lsr #6
     384:	694d3e2f 	stmdbvs	sp, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}^
     388:	07022d2f 	streq	r2, [r2, -pc, lsr #26]
     38c:	00010100 	andeq	r0, r1, r0, lsl #2
     390:	01900205 	orrseq	r0, r0, r5, lsl #4
     394:	ac030800 	stcge	8, cr0, [r3], {-0}
     398:	31220107 	teqcc	r2, r7, lsl #2
     39c:	301e3e4d 	andscc	r3, lr, sp, asr #28
     3a0:	03202803 	teqeq	r0, #196608	; 0x30000
     3a4:	3f3f665b 	svccc	0x003f665b
     3a8:	694d3f3f 	stmdbvs	sp, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp}^
     3ac:	01040200 	mrseq	r0, R12_usr
     3b0:	003e5c3f 	eorseq	r5, lr, pc, lsr ip
     3b4:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
     3b8:	01040200 	mrseq	r0, R12_usr
     3bc:	00581603 	subseq	r1, r8, r3, lsl #12
     3c0:	1f010402 	svcne	0x00010402
     3c4:	01040200 	mrseq	r0, R12_usr
     3c8:	04020021 	streq	r0, [r2], #-33	; 0x21
     3cc:	02003001 	andeq	r3, r0, #1
     3d0:	001f0104 	andseq	r0, pc, r4, lsl #2
     3d4:	21010402 	tstcs	r1, r2, lsl #8
     3d8:	01040200 	mrseq	r0, R12_usr
     3dc:	0402001d 	streq	r0, [r2], #-29
     3e0:	02003001 	andeq	r3, r0, #1
     3e4:	002f0104 	eoreq	r0, pc, r4, lsl #2
     3e8:	2f010402 	svccs	0x00010402
     3ec:	01000a02 	tsteq	r0, r2, lsl #20
     3f0:	02050001 	andeq	r0, r5, #1
     3f4:	08000238 	stmdaeq	r0, {r3, r4, r5, r9}
     3f8:	01018b03 	tsteq	r1, r3, lsl #22
     3fc:	00020222 	andeq	r0, r2, r2, lsr #4
     400:	05000101 	streq	r0, [r0, #-257]	; 0x101
     404:	00000002 	andeq	r0, r0, r2
     408:	08880300 	stmeq	r8, {r8, r9}
     40c:	1e222401 	cdpne	4, 2, cr2, cr2, cr1, {0}
     410:	312b212f 	teqcc	fp, pc, lsr #2
     414:	2f312c1f 	svccs	0x00312c1f
     418:	214a1503 	cmpcs	sl, r3, lsl #10
     41c:	332c2121 	teqcc	ip, #1073741832	; 0x40000008
     420:	302e7a03 	eorcc	r7, lr, r3, lsl #20
     424:	2f2b342f 	svccs	0x002b342f
     428:	4b302f2f 	blmi	c0c0ec <__Stack_Size+0xc0bcec>
     42c:	0004024f 	andeq	r0, r4, pc, asr #4
     430:	05000101 	streq	r0, [r0, #-257]	; 0x101
     434:	00000002 	andeq	r0, r0, r2
     438:	08bf0300 	ldmeq	pc!, {r8, r9}	; <UNPREDICTABLE>
     43c:	200b0301 	andcs	r0, fp, r1, lsl #6
     440:	1f1e515d 	svcne	0x001e515d
     444:	2f2f1c24 	svccs	0x002f1c24
     448:	24312f2f 	ldrtcs	r2, [r1], #-3887	; 0xf2f
     44c:	2f2f2f1c 	svccs	0x002f2f1c
     450:	1c24302f 	stcne	0, cr3, [r4], #-188	; 0xffffff44
     454:	2f2f2f2f 	svccs	0x002f2f2f
     458:	00020230 	andeq	r0, r2, r0, lsr r2
     45c:	04dd0101 	ldrbeq	r0, [sp], #257	; 0x101
     460:	00020000 	andeq	r0, r2, r0
     464:	0000007c 	andeq	r0, r0, ip, ror r0
     468:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     46c:	0101000d 	tsteq	r1, sp
     470:	00000101 	andeq	r0, r0, r1, lsl #2
     474:	00000100 	andeq	r0, r0, r0, lsl #2
     478:	62696c01 	rsbvs	r6, r9, #256	; 0x100
     47c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     480:	74730000 	ldrbtvc	r0, [r3], #-0
     484:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     488:	5f783031 	svcpl	0x00783031
     48c:	632e7469 	teqvs	lr, #1761607680	; 0x69000000
     490:	00000000 	andeq	r0, r0, r0
     494:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     498:	30316632 	eorscc	r6, r1, r2, lsr r6
     49c:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     4a0:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
     4a4:	00000100 	andeq	r0, r0, r0, lsl #2
     4a8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     4ac:	30316632 	eorscc	r6, r1, r2, lsr r6
     4b0:	616d5f78 	smcvs	54776	; 0xd5f8
     4b4:	00682e70 	rsbeq	r2, r8, r0, ror lr
     4b8:	73000001 	movwvc	r0, #1
     4bc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     4c0:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     4c4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     4c8:	0100682e 	tsteq	r0, lr, lsr #16
     4cc:	74730000 	ldrbtvc	r0, [r3], #-0
     4d0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     4d4:	5f783031 	svcpl	0x00783031
     4d8:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     4dc:	00682e74 	rsbeq	r2, r8, r4, ror lr
     4e0:	00000001 	andeq	r0, r0, r1
     4e4:	3e020500 	cfsh32cc	mvfx0, mvfx2, #0
     4e8:	03080002 	movweq	r0, #32770	; 0x8002
     4ec:	01020129 	tsteq	r2, r9, lsr #2
     4f0:	00010100 	andeq	r0, r1, r0, lsl #2
     4f4:	02400205 	subeq	r0, r0, #1342177280	; 0x50000000
     4f8:	35030800 	strcc	r0, [r3, #-2048]	; 0x800
     4fc:	00010201 	andeq	r0, r1, r1, lsl #4
     500:	05000101 	streq	r0, [r0, #-257]	; 0x101
     504:	00024202 	andeq	r4, r2, r2, lsl #4
     508:	00c40308 	sbceq	r0, r4, r8, lsl #6
     50c:	00010201 	andeq	r0, r1, r1, lsl #4
     510:	05000101 	streq	r0, [r0, #-257]	; 0x101
     514:	00024402 	andeq	r4, r2, r2, lsl #8
     518:	00d10308 	sbcseq	r0, r1, r8, lsl #6
     51c:	00010201 	andeq	r0, r1, r1, lsl #4
     520:	05000101 	streq	r0, [r0, #-257]	; 0x101
     524:	00024602 	andeq	r4, r2, r2, lsl #12
     528:	00de0308 	sbcseq	r0, lr, r8, lsl #6
     52c:	00010201 	andeq	r0, r1, r1, lsl #4
     530:	05000101 	streq	r0, [r0, #-257]	; 0x101
     534:	00024802 	andeq	r4, r2, r2, lsl #16
     538:	00eb0308 	rsceq	r0, fp, r8, lsl #6
     53c:	00010201 	andeq	r0, r1, r1, lsl #4
     540:	05000101 	streq	r0, [r0, #-257]	; 0x101
     544:	00024a02 	andeq	r4, r2, r2, lsl #20
     548:	00f60308 	rscseq	r0, r6, r8, lsl #6
     54c:	00010201 	andeq	r0, r1, r1, lsl #4
     550:	05000101 	streq	r0, [r0, #-257]	; 0x101
     554:	00024c02 	andeq	r4, r2, r2, lsl #24
     558:	01810308 	orreq	r0, r1, r8, lsl #6
     55c:	00010201 	andeq	r0, r1, r1, lsl #4
     560:	05000101 	streq	r0, [r0, #-257]	; 0x101
     564:	00025002 	andeq	r5, r2, r2
     568:	018c0308 	orreq	r0, ip, r8, lsl #6
     56c:	023e1701 	eorseq	r1, lr, #262144	; 0x40000
     570:	01010007 	tsteq	r1, r7
     574:	64020500 	strvs	r0, [r2], #-1280	; 0x500
     578:	03080002 	movweq	r0, #32770	; 0x8002
     57c:	0201019f 	andeq	r0, r1, #-1073741785	; 0xc0000027
     580:	01010001 	tsteq	r1, r1
     584:	66020500 	strvs	r0, [r2], -r0, lsl #10
     588:	03080002 	movweq	r0, #32770	; 0x8002
     58c:	020101aa 	andeq	r0, r1, #-2147483606	; 0x8000002a
     590:	01010001 	tsteq	r1, r1
     594:	68020500 	stmdavs	r2, {r8, sl}
     598:	03080002 	movweq	r0, #32770	; 0x8002
     59c:	020101b5 	andeq	r0, r1, #1073741869	; 0x4000002d
     5a0:	01010001 	tsteq	r1, r1
     5a4:	6a020500 	bvs	819ac <__Stack_Size+0x815ac>
     5a8:	03080002 	movweq	r0, #32770	; 0x8002
     5ac:	020101c0 	andeq	r0, r1, #192, 2	; 0x30
     5b0:	01010001 	tsteq	r1, r1
     5b4:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
     5b8:	03080002 	movweq	r0, #32770	; 0x8002
     5bc:	020101cb 	andeq	r0, r1, #-1073741774	; 0xc0000032
     5c0:	01010001 	tsteq	r1, r1
     5c4:	6e020500 	cfsh32vs	mvfx0, mvfx2, #0
     5c8:	03080002 	movweq	r0, #32770	; 0x8002
     5cc:	020101d6 	andeq	r0, r1, #-2147483595	; 0x80000035
     5d0:	01010001 	tsteq	r1, r1
     5d4:	70020500 	andvc	r0, r2, r0, lsl #10
     5d8:	03080002 	movweq	r0, #32770	; 0x8002
     5dc:	020101e1 	andeq	r0, r1, #1073741880	; 0x40000038
     5e0:	01010001 	tsteq	r1, r1
     5e4:	72020500 	andvc	r0, r2, #0, 10
     5e8:	03080002 	movweq	r0, #32770	; 0x8002
     5ec:	020101ec 	andeq	r0, r1, #236, 2	; 0x3b
     5f0:	01010001 	tsteq	r1, r1
     5f4:	74020500 	strvc	r0, [r2], #-1280	; 0x500
     5f8:	03080002 	movweq	r0, #32770	; 0x8002
     5fc:	020101f7 	andeq	r0, r1, #-1073741763	; 0xc000003d
     600:	01010001 	tsteq	r1, r1
     604:	76020500 	strvc	r0, [r2], -r0, lsl #10
     608:	03080002 	movweq	r0, #32770	; 0x8002
     60c:	02010282 	andeq	r0, r1, #536870920	; 0x20000008
     610:	01010001 	tsteq	r1, r1
     614:	78020500 	stmdavc	r2, {r8, sl}
     618:	03080002 	movweq	r0, #32770	; 0x8002
     61c:	0201028d 	andeq	r0, r1, #-805306360	; 0xd0000008
     620:	01010001 	tsteq	r1, r1
     624:	00020500 	andeq	r0, r2, r0, lsl #10
     628:	03000000 	movweq	r0, #0
     62c:	02010298 	andeq	r0, r1, #152, 4	; 0x80000009
     630:	01010001 	tsteq	r1, r1
     634:	00020500 	andeq	r0, r2, r0, lsl #10
     638:	03000000 	movweq	r0, #0
     63c:	020102a3 	andeq	r0, r1, #805306378	; 0x3000000a
     640:	01010001 	tsteq	r1, r1
     644:	00020500 	andeq	r0, r2, r0, lsl #10
     648:	03000000 	movweq	r0, #0
     64c:	020102ae 	andeq	r0, r1, #-536870902	; 0xe000000a
     650:	01010001 	tsteq	r1, r1
     654:	00020500 	andeq	r0, r2, r0, lsl #10
     658:	03000000 	movweq	r0, #0
     65c:	020102b9 	andeq	r0, r1, #-1879048181	; 0x9000000b
     660:	01010001 	tsteq	r1, r1
     664:	00020500 	andeq	r0, r2, r0, lsl #10
     668:	03000000 	movweq	r0, #0
     66c:	020102c4 	andeq	r0, r1, #196, 4	; 0x4000000c
     670:	01010001 	tsteq	r1, r1
     674:	00020500 	andeq	r0, r2, r0, lsl #10
     678:	03000000 	movweq	r0, #0
     67c:	020102cf 	andeq	r0, r1, #-268435444	; 0xf000000c
     680:	01010001 	tsteq	r1, r1
     684:	00020500 	andeq	r0, r2, r0, lsl #10
     688:	03000000 	movweq	r0, #0
     68c:	020102da 	andeq	r0, r1, #-1610612723	; 0xa000000d
     690:	01010001 	tsteq	r1, r1
     694:	7a020500 	bvc	81a9c <__Stack_Size+0x8169c>
     698:	03080002 	movweq	r0, #32770	; 0x8002
     69c:	020102e5 	andeq	r0, r1, #1342177294	; 0x5000000e
     6a0:	01010001 	tsteq	r1, r1
     6a4:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
     6a8:	03080002 	movweq	r0, #32770	; 0x8002
     6ac:	020102f1 	andeq	r0, r1, #268435471	; 0x1000000f
     6b0:	01010001 	tsteq	r1, r1
     6b4:	7e020500 	cfsh32vc	mvfx0, mvfx2, #0
     6b8:	03080002 	movweq	r0, #32770	; 0x8002
     6bc:	130102fd 	movwne	r0, #4861	; 0x12fd
     6c0:	01000202 	tsteq	r0, r2, lsl #4
     6c4:	02050001 	andeq	r0, r5, #1
     6c8:	08000282 	stmdaeq	r0, {r1, r7, r9}
     6cc:	01038903 	tsteq	r3, r3, lsl #18
     6d0:	01000102 	tsteq	r0, r2, lsl #2
     6d4:	02050001 	andeq	r0, r5, #1
     6d8:	08000284 	stmdaeq	r0, {r2, r7, r9}
     6dc:	01039403 	tsteq	r3, r3, lsl #8
     6e0:	01000102 	tsteq	r0, r2, lsl #2
     6e4:	02050001 	andeq	r0, r5, #1
     6e8:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
     6ec:	01039f03 	tsteq	r3, r3, lsl #30
     6f0:	01000102 	tsteq	r0, r2, lsl #2
     6f4:	02050001 	andeq	r0, r5, #1
     6f8:	08000288 	stmdaeq	r0, {r3, r7, r9}
     6fc:	0103aa03 	tsteq	r3, r3, lsl #20
     700:	01000102 	tsteq	r0, r2, lsl #2
     704:	02050001 	andeq	r0, r5, #1
     708:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
     70c:	0103b603 	tsteq	r3, r3, lsl #12
     710:	01000102 	tsteq	r0, r2, lsl #2
     714:	02050001 	andeq	r0, r5, #1
     718:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
     71c:	0103c203 	tsteq	r3, r3, lsl #4
     720:	01000102 	tsteq	r0, r2, lsl #2
     724:	02050001 	andeq	r0, r5, #1
     728:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     72c:	0103cd03 	tsteq	r3, r3, lsl #26
     730:	01000102 	tsteq	r0, r2, lsl #2
     734:	02050001 	andeq	r0, r5, #1
     738:	08000290 	stmdaeq	r0, {r4, r7, r9}
     73c:	0103dc03 	tsteq	r3, r3, lsl #24
     740:	2c5e2301 	mrrccs	3, 0, r2, lr, cr1
     744:	01000202 	tsteq	r0, r2, lsl #4
     748:	02050001 	andeq	r0, r5, #1
     74c:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
     750:	0103ef03 	tsteq	r3, r3, lsl #30
     754:	01000102 	tsteq	r0, r2, lsl #2
     758:	02050001 	andeq	r0, r5, #1
     75c:	080002a6 	stmdaeq	r0, {r1, r2, r5, r7, r9}
     760:	0103fa03 	tsteq	r3, r3, lsl #20
     764:	01000102 	tsteq	r0, r2, lsl #2
     768:	02050001 	andeq	r0, r5, #1
     76c:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
     770:	01048503 	tsteq	r4, r3, lsl #10
     774:	01000102 	tsteq	r0, r2, lsl #2
     778:	02050001 	andeq	r0, r5, #1
     77c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
     780:	01049003 	tsteq	r4, r3
     784:	01000102 	tsteq	r0, r2, lsl #2
     788:	02050001 	andeq	r0, r5, #1
     78c:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
     790:	01049b03 	tsteq	r4, r3, lsl #22
     794:	01000102 	tsteq	r0, r2, lsl #2
     798:	02050001 	andeq	r0, r5, #1
     79c:	080002ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9}
     7a0:	0104a603 	tsteq	r4, r3, lsl #12
     7a4:	01000102 	tsteq	r0, r2, lsl #2
     7a8:	02050001 	andeq	r0, r5, #1
     7ac:	080002b0 	stmdaeq	r0, {r4, r5, r7, r9}
     7b0:	0104b103 	tsteq	r4, r3, lsl #2
     7b4:	01000102 	tsteq	r0, r2, lsl #2
     7b8:	02050001 	andeq	r0, r5, #1
     7bc:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
     7c0:	0104bc03 	tsteq	r4, r3, lsl #24
     7c4:	01000102 	tsteq	r0, r2, lsl #2
     7c8:	02050001 	andeq	r0, r5, #1
     7cc:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
     7d0:	0104c903 	tsteq	r4, r3, lsl #18
     7d4:	01000102 	tsteq	r0, r2, lsl #2
     7d8:	02050001 	andeq	r0, r5, #1
     7dc:	080002b8 	stmdaeq	r0, {r3, r4, r5, r7, r9}
     7e0:	0104e003 	tsteq	r4, r3
     7e4:	207a0318 	rsbscs	r0, sl, r8, lsl r3
     7e8:	0e02d726 	cdpeq	7, 0, cr13, cr2, cr6, {1}
     7ec:	00010100 	andeq	r0, r1, r0, lsl #2
     7f0:	02f40205 	rscseq	r0, r4, #1342177280	; 0x50000000
     7f4:	f6030800 			; <UNDEFINED> instruction: 0xf6030800
     7f8:	01020104 	tsteq	r2, r4, lsl #2
     7fc:	00010100 	andeq	r0, r1, r0, lsl #2
     800:	02f60205 	rscseq	r0, r6, #1342177280	; 0x50000000
     804:	82030800 	andhi	r0, r3, #0, 16
     808:	01020105 	tsteq	r2, r5, lsl #2
     80c:	00010100 	andeq	r0, r1, r0, lsl #2
     810:	02f80205 	rscseq	r0, r8, #1342177280	; 0x50000000
     814:	8d030800 	stchi	8, cr0, [r3, #-0]
     818:	01020105 	tsteq	r2, r5, lsl #2
     81c:	00010100 	andeq	r0, r1, r0, lsl #2
     820:	02fa0205 	rscseq	r0, sl, #1342177280	; 0x50000000
     824:	98030800 	stmdals	r3, {fp}
     828:	01020105 	tsteq	r2, r5, lsl #2
     82c:	00010100 	andeq	r0, r1, r0, lsl #2
     830:	02fc0205 	rscseq	r0, ip, #1342177280	; 0x50000000
     834:	a3030800 	movwge	r0, #14336	; 0x3800
     838:	01020105 	tsteq	r2, r5, lsl #2
     83c:	00010100 	andeq	r0, r1, r0, lsl #2
     840:	02fe0205 	rscseq	r0, lr, #1342177280	; 0x50000000
     844:	af030800 	svcge	0x00030800
     848:	01020105 	tsteq	r2, r5, lsl #2
     84c:	00010100 	andeq	r0, r1, r0, lsl #2
     850:	03000205 	movweq	r0, #517	; 0x205
     854:	bb030800 	bllt	c285c <__Stack_Size+0xc245c>
     858:	01020105 	tsteq	r2, r5, lsl #2
     85c:	00010100 	andeq	r0, r1, r0, lsl #2
     860:	03020205 	movweq	r0, #8709	; 0x2205
     864:	c6030800 	strgt	r0, [r3], -r0, lsl #16
     868:	01020105 	tsteq	r2, r5, lsl #2
     86c:	00010100 	andeq	r0, r1, r0, lsl #2
     870:	03040205 	movweq	r0, #16901	; 0x4205
     874:	d1030800 	tstle	r3, r0, lsl #16
     878:	01020105 	tsteq	r2, r5, lsl #2
     87c:	00010100 	andeq	r0, r1, r0, lsl #2
     880:	03060205 	movweq	r0, #25093	; 0x6205
     884:	dc030800 	stcle	8, cr0, [r3], {-0}
     888:	01020105 	tsteq	r2, r5, lsl #2
     88c:	00010100 	andeq	r0, r1, r0, lsl #2
     890:	03080205 	movweq	r0, #33285	; 0x8205
     894:	e7030800 	str	r0, [r3, -r0, lsl #16]
     898:	01020105 	tsteq	r2, r5, lsl #2
     89c:	00010100 	andeq	r0, r1, r0, lsl #2
     8a0:	030a0205 	movweq	r0, #41477	; 0xa205
     8a4:	f2030800 	vadd.i8	d0, d3, d0
     8a8:	01020105 	tsteq	r2, r5, lsl #2
     8ac:	00010100 	andeq	r0, r1, r0, lsl #2
     8b0:	030c0205 	movweq	r0, #49669	; 0xc205
     8b4:	fd030800 	stc2	8, cr0, [r3, #-0]
     8b8:	01020105 	tsteq	r2, r5, lsl #2
     8bc:	00010100 	andeq	r0, r1, r0, lsl #2
     8c0:	030e0205 	movweq	r0, #57861	; 0xe205
     8c4:	88030800 	stmdahi	r3, {fp}
     8c8:	01020106 	tsteq	r2, r6, lsl #2
     8cc:	00010100 	andeq	r0, r1, r0, lsl #2
     8d0:	03100205 	tsteq	r0, #1342177280	; 0x50000000
     8d4:	93030800 	movwls	r0, #14336	; 0x3800
     8d8:	01020106 	tsteq	r2, r6, lsl #2
     8dc:	00010100 	andeq	r0, r1, r0, lsl #2
     8e0:	03120205 	tsteq	r2, #1342177280	; 0x50000000
     8e4:	9e030800 	cdpls	8, 0, cr0, cr3, cr0, {0}
     8e8:	01020106 	tsteq	r2, r6, lsl #2
     8ec:	00010100 	andeq	r0, r1, r0, lsl #2
     8f0:	03140205 	tsteq	r4, #1342177280	; 0x50000000
     8f4:	a9030800 	stmdbge	r3, {fp}
     8f8:	01020106 	tsteq	r2, r6, lsl #2
     8fc:	00010100 	andeq	r0, r1, r0, lsl #2
     900:	03160205 	tsteq	r6, #1342177280	; 0x50000000
     904:	b4030800 	strlt	r0, [r3], #-2048	; 0x800
     908:	01020106 	tsteq	r2, r6, lsl #2
     90c:	00010100 	andeq	r0, r1, r0, lsl #2
     910:	03180205 	tsteq	r8, #1342177280	; 0x50000000
     914:	bf030800 	svclt	0x00030800
     918:	01020106 	tsteq	r2, r6, lsl #2
     91c:	00010100 	andeq	r0, r1, r0, lsl #2
     920:	031a0205 	tsteq	sl, #1342177280	; 0x50000000
     924:	ca030800 	bgt	c292c <__Stack_Size+0xc252c>
     928:	01020106 	tsteq	r2, r6, lsl #2
     92c:	00010100 	andeq	r0, r1, r0, lsl #2
     930:	031c0205 	tsteq	ip, #1342177280	; 0x50000000
     934:	d6030800 	strle	r0, [r3], -r0, lsl #16
     938:	01020106 	tsteq	r2, r6, lsl #2
     93c:	43010100 	movwmi	r0, #4352	; 0x1100
     940:	02000000 	andeq	r0, r0, #0
     944:	00003d00 	andeq	r3, r0, r0, lsl #26
     948:	fb010200 	blx	41152 <__Stack_Size+0x40d52>
     94c:	01000d0e 	tsteq	r0, lr, lsl #26
     950:	00010101 	andeq	r0, r1, r1, lsl #2
     954:	00010000 	andeq	r0, r1, r0
     958:	696c0100 	stmdbvs	ip!, {r8}^
     95c:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     960:	75000063 	strvc	r0, [r0, #-99]	; 0x63
     964:	645f6273 	ldrbvs	r6, [pc], #-627	; 96c <__Stack_Size+0x56c>
     968:	2e637365 	cdpcs	3, 6, cr7, cr3, cr5, {3}
     96c:	00000063 	andeq	r0, r0, r3, rrx
     970:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     974:	31663233 	cmncc	r6, r3, lsr r2
     978:	745f7830 	ldrbvc	r7, [pc], #-2096	; 980 <__Stack_Size+0x580>
     97c:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
     980:	00010068 	andeq	r0, r1, r8, rrx
     984:	012f0000 	teqeq	pc, r0
     988:	00020000 	andeq	r0, r2, r0
     98c:	0000008c 	andeq	r0, r0, ip, lsl #1
     990:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     994:	0101000d 	tsteq	r1, sp
     998:	00000101 	andeq	r0, r0, r1, lsl #2
     99c:	00000100 	andeq	r0, r0, r0, lsl #2
     9a0:	62696c01 	rsbvs	r6, r9, #256	; 0x100
     9a4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     9a8:	62696c00 	rsbvs	r6, r9, #0, 24
     9ac:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
     9b0:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
     9b4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     9b8:	00002e00 	andeq	r2, r0, r0, lsl #28
     9bc:	5f627375 	svcpl	0x00627375
     9c0:	70646e65 	rsbvc	r6, r4, r5, ror #28
     9c4:	0000632e 	andeq	r6, r0, lr, lsr #6
     9c8:	74730000 	ldrbtvc	r0, [r3], #-0
     9cc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     9d0:	5f783031 	svcpl	0x00783031
     9d4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     9d8:	0100682e 	tsteq	r0, lr, lsr #16
     9dc:	74730000 	ldrbtvc	r0, [r3], #-0
     9e0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     9e4:	5f783031 	svcpl	0x00783031
     9e8:	73616c66 	cmnvc	r1, #26112	; 0x6600
     9ec:	00682e68 	rsbeq	r2, r8, r8, ror #28
     9f0:	75000001 	strvc	r0, [r0, #-1]
     9f4:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
     9f8:	682e6c69 	stmdavs	lr!, {r0, r3, r5, r6, sl, fp, sp, lr}
     9fc:	00000200 	andeq	r0, r0, r0, lsl #4
     a00:	49425355 	stmdbmi	r2, {r0, r2, r4, r6, r8, r9, ip, lr}^
     a04:	2e74696e 	cdpcs	9, 7, cr6, cr4, cr14, {3}
     a08:	00030068 	andeq	r0, r3, r8, rrx
     a0c:	62737500 	rsbsvs	r7, r3, #0, 10
     a10:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
     a14:	00682e73 	rsbeq	r2, r8, r3, ror lr
     a18:	00000002 	andeq	r0, r0, r2
     a1c:	1e020500 	cfsh32ne	mvfx0, mvfx2, #0
     a20:	03080003 	movweq	r0, #32771	; 0x8003
     a24:	0102013f 	tsteq	r2, pc, lsr r1
     a28:	00010100 	andeq	r0, r1, r0, lsl #2
     a2c:	03200205 	teqeq	r0, #1342177280	; 0x50000000
     a30:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
     a34:	34010100 	strcc	r0, [r1], #-256	; 0x100
     a38:	26207a03 	strtcs	r7, [r0], -r3, lsl #20
     a3c:	26207a03 	strtcs	r7, [r0], -r3, lsl #20
     a40:	26207a03 	strtcs	r7, [r0], -r3, lsl #20
     a44:	02005a23 	andeq	r5, r0, #143360	; 0x23000
     a48:	20060104 	andcs	r0, r6, r4, lsl #2
     a4c:	1fe53606 	svcne	0x00e53606
     a50:	32688459 	rsbcc	r8, r8, #1493172224	; 0x59000000
     a54:	4c233d4c 	stcmi	13, cr3, [r3], #-304	; 0xfffffed0
     a58:	20640331 	rsbcs	r0, r4, r1, lsr r3
     a5c:	30201c03 	eorcc	r1, r0, r3, lsl #24
     a60:	03ac6203 			; <UNDEFINED> instruction: 0x03ac6203
     a64:	5c3e201e 	ldcpl	0, cr2, [lr], #-120	; 0xffffff88
     a68:	1e4c4d30 	mcrne	13, 2, r4, cr12, cr0, {1}
     a6c:	031e301e 	tsteq	lr, #30
     a70:	14022009 	strne	r2, [r2], #-9
     a74:	00010100 	andeq	r0, r1, r0, lsl #2
     a78:	04200205 	strteq	r0, [r0], #-517	; 0x205
     a7c:	d5030800 	strle	r0, [r3, #-2048]	; 0x800
     a80:	03230100 	teqeq	r3, #0, 2
     a84:	77034a09 	strvc	r4, [r3, -r9, lsl #20]
     a88:	20090320 	andcs	r0, r9, r0, lsr #6
     a8c:	03207703 	teqeq	r0, #786432	; 0xc0000
     a90:	77032009 	strvc	r2, [r3, -r9]
     a94:	2e090320 	cdpcs	3, 0, cr0, cr9, cr0, {1}
     a98:	265b2f21 	ldrbcs	r2, [fp], -r1, lsr #30
     a9c:	a6207a03 	strtge	r7, [r0], -r3, lsl #20
     aa0:	000c022c 	andeq	r0, ip, ip, lsr #4
     aa4:	05000101 	streq	r0, [r0, #-257]	; 0x101
     aa8:	00000002 	andeq	r0, r0, r2
     aac:	01ba0300 			; <UNDEFINED> instruction: 0x01ba0300
     ab0:	5b4c1501 	blpl	1305ebc <__Stack_Size+0x1305abc>
     ab4:	01000702 	tsteq	r0, r2, lsl #14
     ab8:	00008c01 	andeq	r8, r0, r1, lsl #24
     abc:	68000200 	stmdavs	r0, {r9}
     ac0:	02000000 	andeq	r0, r0, #0
     ac4:	0d0efb01 	vstreq	d15, [lr, #-4]
     ac8:	01010100 	mrseq	r0, (UNDEF: 17)
     acc:	00000001 	andeq	r0, r0, r1
     ad0:	01000001 	tsteq	r0, r1
     ad4:	2f62696c 	svccs	0x0062696c
     ad8:	00636e69 	rsbeq	r6, r3, r9, ror #28
     adc:	2f62696c 	svccs	0x0062696c
     ae0:	5f425355 	svcpl	0x00425355
     ae4:	2f62696c 	svccs	0x0062696c
     ae8:	00636e69 	rsbeq	r6, r3, r9, ror #28
     aec:	62737500 	rsbsvs	r7, r3, #0, 10
     af0:	7473695f 	ldrbtvc	r6, [r3], #-2399	; 0x95f
     af4:	00632e72 	rsbeq	r2, r3, r2, ror lr
     af8:	73000000 	movwvc	r0, #0
     afc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b00:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     b04:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     b08:	00682e65 	rsbeq	r2, r8, r5, ror #28
     b0c:	75000001 	strvc	r0, [r0, #-1]
     b10:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     b14:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
     b18:	00020068 	andeq	r0, r2, r8, rrx
     b1c:	62737500 	rsbsvs	r7, r3, #0, 10
     b20:	746e695f 	strbtvc	r6, [lr], #-2399	; 0x95f
     b24:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	047c0205 	ldrbteq	r0, [ip], #-517	; 0x205
     b30:	3e030800 	cdpcc	8, 0, cr0, cr3, cr0, {0}
     b34:	435b2201 	cmpmi	fp, #268435456	; 0x10000000
     b38:	09035e3d 	stmdbeq	r3, {r0, r2, r3, r4, r5, r9, sl, fp, ip, lr}
     b3c:	3d44344a 	cfstrdcc	mvd3, [r4, #-296]	; 0xfffffed8
     b40:	36503543 	ldrbcc	r3, [r0], -r3, asr #10
     b44:	01000e02 	tsteq	r0, r2, lsl #28
     b48:	00021001 	andeq	r1, r2, r1
     b4c:	ba000200 	blt	1354 <__Stack_Size+0xf54>
     b50:	02000000 	andeq	r0, r0, #0
     b54:	0d0efb01 	vstreq	d15, [lr, #-4]
     b58:	01010100 	mrseq	r0, (UNDEF: 17)
     b5c:	00000001 	andeq	r0, r0, r1
     b60:	01000001 	tsteq	r0, r1
     b64:	2f62696c 	svccs	0x0062696c
     b68:	00636e69 	rsbeq	r6, r3, r9, ror #28
     b6c:	2f62696c 	svccs	0x0062696c
     b70:	5f425355 	svcpl	0x00425355
     b74:	2f62696c 	svccs	0x0062696c
     b78:	00636e69 	rsbeq	r6, r3, r9, ror #28
     b7c:	62737500 	rsbsvs	r7, r3, #0, 10
     b80:	6f72705f 	svcvs	0x0072705f
     b84:	00632e70 	rsbeq	r2, r3, r0, ror lr
     b88:	73000000 	movwvc	r0, #0
     b8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b90:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     b94:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     b98:	00682e65 	rsbeq	r2, r8, r5, ror #28
     b9c:	75000001 	strvc	r0, [r0, #-1]
     ba0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
     ba4:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
     ba8:	00020068 	andeq	r0, r2, r8, rrx
     bac:	62737500 	rsbsvs	r7, r3, #0, 10
     bb0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     bb4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     bb8:	73750000 	cmnvc	r5, #0
     bbc:	72705f62 	rsbsvc	r5, r0, #392	; 0x188
     bc0:	682e706f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}
     bc4:	00000000 	andeq	r0, r0, r0
     bc8:	49425355 	stmdbmi	r2, {r0, r2, r4, r6, r8, r9, ip, lr}^
     bcc:	2e74696e 	cdpcs	9, 7, cr6, cr4, cr14, {3}
     bd0:	00000068 	andeq	r0, r0, r8, rrx
     bd4:	62737500 	rsbsvs	r7, r3, #0, 10
     bd8:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     bdc:	00682e74 	rsbeq	r2, r8, r4, ror lr
     be0:	75000002 	strvc	r0, [r0, #-2]
     be4:	645f6273 	ldrbvs	r6, [pc], #-627	; bec <__Stack_Size+0x7ec>
     be8:	2e637365 	cdpcs	3, 6, cr7, cr3, cr5, {3}
     bec:	00000068 	andeq	r0, r0, r8, rrx
     bf0:	62737500 	rsbsvs	r7, r3, #0, 10
     bf4:	6c69735f 	stclvs	3, cr7, [r9], #-380	; 0xfffffe84
     bf8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     bfc:	73750000 	cmnvc	r5, #0
     c00:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xf62
     c04:	682e7367 	stmdavs	lr!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
     c08:	00000200 	andeq	r0, r0, r0, lsl #4
     c0c:	02050000 	andeq	r0, r5, #0
     c10:	080004e8 	stmdaeq	r0, {r3, r5, r6, r7, sl}
     c14:	0101c903 	tsteq	r1, r3, lsl #18
     c18:	09023f15 	stmdbeq	r2, {r0, r2, r4, r8, r9, sl, fp, ip, sp}
     c1c:	00010100 	andeq	r0, r1, r0, lsl #2
     c20:	05000205 	streq	r0, [r0, #-517]	; 0x205
     c24:	db030800 	blle	c2c2c <__Stack_Size+0xc282c>
     c28:	02130101 	andseq	r0, r3, #1073741824	; 0x40000000
     c2c:	01010006 	tsteq	r1, r6
     c30:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
     c34:	03080005 	movweq	r0, #32773	; 0x8005
     c38:	130101e8 	movwne	r0, #4584	; 0x11e8
     c3c:	00070241 	andeq	r0, r7, r1, asr #4
     c40:	05000101 	streq	r0, [r0, #-257]	; 0x101
     c44:	00052002 	andeq	r2, r5, r2
     c48:	01fb0308 	mvnseq	r0, r8, lsl #6
     c4c:	00010201 	andeq	r0, r1, r1, lsl #4
     c50:	05000101 	streq	r0, [r0, #-257]	; 0x101
     c54:	00052402 	andeq	r2, r5, r2, lsl #8
     c58:	02880308 	addeq	r0, r8, #8, 6	; 0x20000000
     c5c:	79031901 	stmdbvc	r3, {r0, r8, fp, ip}
     c60:	03222720 	teqeq	r2, #32, 14	; 0x800000
     c64:	75037410 	strvc	r7, [r3, #-1040]	; 0x410
     c68:	1c24302e 	stcne	0, cr3, [r4], #-184	; 0xffffff48
     c6c:	75031c32 	strvc	r1, [r3, #-3122]	; 0xc32
     c70:	4a12032e 	bmi	481930 <__Stack_Size+0x481530>
     c74:	032e7403 	teqeq	lr, #50331648	; 0x3000000
     c78:	1f212011 	svcne	0x00212011
     c7c:	21211e22 	teqcs	r1, r2, lsr #28
     c80:	0a022121 	beq	8910c <__Stack_Size+0x88d0c>
     c84:	00010100 	andeq	r0, r1, r0, lsl #2
     c88:	05800205 	streq	r0, [r0, #517]	; 0x205
     c8c:	b4030800 	strlt	r0, [r3], #-2048	; 0x800
     c90:	12030102 	andne	r0, r3, #-2147483648	; 0x80000000
     c94:	0a037601 	beq	de4a0 <__Stack_Size+0xde0a0>
     c98:	0302593c 	movweq	r5, #10556	; 0x293c
     c9c:	00010100 	andeq	r0, r1, r0, lsl #2
     ca0:	05a40205 	streq	r0, [r4, #517]!	; 0x205
     ca4:	8e030800 	cdphi	8, 0, cr0, cr3, cr0, {0}
     ca8:	22140103 	andscs	r0, r4, #-1073741824	; 0xc0000000
     cac:	0001026d 	andeq	r0, r1, sp, ror #4
     cb0:	05000101 	streq	r0, [r0, #-257]	; 0x101
     cb4:	0005b402 	andeq	fp, r5, r2, lsl #8
     cb8:	03a30308 			; <UNDEFINED> instruction: 0x03a30308
     cbc:	010e0301 	tsteq	lr, r1, lsl #6
     cc0:	21224b22 	teqcs	r2, r2, lsr #22
     cc4:	01000502 	tsteq	r0, r2, lsl #10
     cc8:	02050001 	andeq	r0, r5, #1
     ccc:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
     cd0:	0103c103 	tsteq	r3, r3, lsl #2
     cd4:	223e5a16 	eorscs	r5, lr, #90112	; 0x16000
     cd8:	0221234b 	eoreq	r2, r1, #738197505	; 0x2c000001
     cdc:	01010007 	tsteq	r1, r7
     ce0:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
     ce4:	03080005 	movweq	r0, #32773	; 0x8005
     ce8:	240100ea 	strcs	r0, [r1], #-234	; 0xea
     cec:	30314d30 	eorscc	r4, r1, r0, lsr sp
     cf0:	01000702 	tsteq	r0, r2, lsl #14
     cf4:	02050001 	andeq	r0, r5, #1
     cf8:	0800061c 	stmdaeq	r0, {r2, r3, r4, r9, sl}
     cfc:	01018403 	tsteq	r1, r3, lsl #8
     d00:	231d2314 	tstcs	sp, #20, 6	; 0x50000000
     d04:	1d23221b 	sfmne	f2, 4, [r3, #-108]!	; 0xffffff94
     d08:	200f0326 	andcs	r0, pc, r6, lsr #6
     d0c:	4b4b593f 	blmi	12d7210 <__Stack_Size+0x12d6e10>
     d10:	3f673d4b 	svccc	0x00673d4b
     d14:	4d4b4b4b 	vstrmi	d20, [fp, #-300]	; 0xfffffed4
     d18:	4d4b5959 	stclmi	9, cr5, [fp, #-356]	; 0xfffffe9c
     d1c:	594b594b 	stmdbpl	fp, {r0, r1, r3, r6, r8, fp, ip, lr}^
     d20:	0c023f4d 	stceq	15, cr3, [r2], {77}	; 0x4d
     d24:	00010100 	andeq	r0, r1, r0, lsl #2
     d28:	06fc0205 	ldrbteq	r0, [ip], r5, lsl #4
     d2c:	dd030800 	stcle	8, cr0, [r3, #-0]
     d30:	02140102 	andseq	r0, r4, #-2147483648	; 0x80000000
     d34:	01010006 	tsteq	r1, r6
     d38:	08020500 	stmdaeq	r2, {r8, sl}
     d3c:	03080007 	movweq	r0, #32775	; 0x8007
     d40:	140102ea 	strne	r0, [r1], #-746	; 0x2ea
     d44:	01000602 	tsteq	r0, r2, lsl #12
     d48:	02050001 	andeq	r0, r5, #1
     d4c:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
     d50:	0102f703 	tsteq	r2, r3, lsl #14
     d54:	5a343d14 	bpl	d101ac <__Stack_Size+0xd0fdac>
     d58:	01000602 	tsteq	r0, r2, lsl #12
     d5c:	00018201 	andeq	r8, r1, r1, lsl #4
     d60:	c5000200 	strgt	r0, [r0, #-512]	; 0x200
     d64:	02000000 	andeq	r0, r0, #0
     d68:	0d0efb01 	vstreq	d15, [lr, #-4]
     d6c:	01010100 	mrseq	r0, (UNDEF: 17)
     d70:	00000001 	andeq	r0, r0, r1
     d74:	01000001 	tsteq	r0, r1
     d78:	2f62696c 	svccs	0x0062696c
     d7c:	00636e69 	rsbeq	r6, r3, r9, ror #28
     d80:	2f62696c 	svccs	0x0062696c
     d84:	5f425355 	svcpl	0x00425355
     d88:	2f62696c 	svccs	0x0062696c
     d8c:	00636e69 	rsbeq	r6, r3, r9, ror #28
     d90:	42535500 	subsmi	r5, r3, #0, 10
     d94:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     d98:	0000632e 	andeq	r6, r0, lr, lsr #6
     d9c:	74730000 	ldrbtvc	r0, [r3], #-0
     da0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     da4:	5f783031 	svcpl	0x00783031
     da8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     dac:	0100682e 	tsteq	r0, lr, lsr #16
     db0:	74730000 	ldrbtvc	r0, [r3], #-0
     db4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     db8:	5f783031 	svcpl	0x00783031
     dbc:	2e70616d 	rpwcssz	f6, f0, #5.0
     dc0:	00010068 	andeq	r0, r1, r8, rrx
     dc4:	62737500 	rsbsvs	r7, r3, #0, 10
     dc8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
     dcc:	00682e65 	rsbeq	r2, r8, r5, ror #28
     dd0:	55000002 	strpl	r0, [r0, #-2]
     dd4:	6e494253 	mcrvs	2, 2, r4, cr9, cr3, {2}
     dd8:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
     ddc:	00000000 	andeq	r0, r0, r0
     de0:	5f627375 	svcpl	0x00627375
     de4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xe69
     de8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     dec:	73750000 	cmnvc	r5, #0
     df0:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
     df4:	682e6373 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     e00:	30316632 	eorscc	r6, r1, r2, lsr r6
     e04:	70675f78 	rsbvc	r5, r7, r8, ror pc
     e08:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     e0c:	00000100 	andeq	r0, r0, r0, lsl #2
     e10:	5f627375 	svcpl	0x00627375
     e14:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
     e18:	00020068 	andeq	r0, r2, r8, rrx
     e1c:	62737500 	rsbsvs	r7, r3, #0, 10
     e20:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
     e24:	00682e73 	rsbeq	r2, r8, r3, ror lr
     e28:	00000002 	andeq	r0, r0, r2
     e2c:	34020500 	strcc	r0, [r2], #-1280	; 0x500
     e30:	03080007 	movweq	r0, #32775	; 0x8007
     e34:	000102eb 	andeq	r0, r1, fp, ror #5
     e38:	3f010402 	svccc	0x00010402
     e3c:	41323030 	teqmi	r2, r0, lsr r0
     e40:	023e221e 	eorseq	r2, lr, #-536870911	; 0xe0000001
     e44:	01010001 	tsteq	r1, r1
     e48:	58020500 	stmdapl	r2, {r8, sl}
     e4c:	03080007 	movweq	r0, #32775	; 0x8007
     e50:	83030124 	movwhi	r0, #12580	; 0x3124
     e54:	86032002 	strhi	r2, [r3], -r2
     e58:	1e42587e 	mcrne	8, 2, r5, cr2, cr14, {3}
     e5c:	22221c24 	eorcs	r1, r2, #36, 24	; 0x2400
     e60:	0a02243d 	beq	89f5c <__Stack_Size+0x89b5c>
     e64:	00010100 	andeq	r0, r1, r0, lsl #2
     e68:	00000205 	andeq	r0, r0, r5, lsl #4
     e6c:	d7030000 	strle	r0, [r3, -r0]
     e70:	02130100 	andseq	r0, r3, #0, 2
     e74:	01010002 	tsteq	r1, r2
     e78:	00020500 	andeq	r0, r2, r0, lsl #10
     e7c:	03000000 	movweq	r0, #0
     e80:	130102a3 	movwne	r0, #4771	; 0x12a3
     e84:	08025d23 	stmdaeq	r2, {r0, r1, r5, r8, sl, fp, ip, lr}
     e88:	00010100 	andeq	r0, r1, r0, lsl #2
     e8c:	00000205 	andeq	r0, r0, r5, lsl #4
     e90:	c4030000 	strgt	r0, [r3], #-0
     e94:	3e230100 	sufccs	f0, f3, f0
     e98:	02353e3e 	eorseq	r3, r5, #992	; 0x3e0
     e9c:	01010006 	tsteq	r1, r6
     ea0:	00020500 	andeq	r0, r2, r0, lsl #10
     ea4:	03000000 	movweq	r0, #0
     ea8:	130100dc 	movwne	r0, #4316	; 0x10dc
     eac:	01000202 	tsteq	r0, r2, lsl #4
     eb0:	02050001 	andeq	r0, r5, #1
     eb4:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
     eb8:	0102b803 	tsteq	r2, r3, lsl #16
     ebc:	231d1f16 	tstcs	sp, #22, 30	; 0x58
     ec0:	242f1f22 	strtcs	r1, [pc], #-3874	; ec8 <__Stack_Size+0xac8>
     ec4:	2b3f4b30 	blcs	fd3b8c <__Stack_Size+0xfd378c>
     ec8:	01000b02 	tsteq	r0, r2, lsl #22
     ecc:	02050001 	andeq	r0, r5, #1
     ed0:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
     ed4:	0102d903 	tsteq	r2, r3, lsl #18
     ed8:	593d3e20 	ldmdbpl	sp!, {r5, r9, sl, fp, ip, sp}
     edc:	02023d4b 	andeq	r3, r2, #4800	; 0x12c0
     ee0:	05010100 	streq	r0, [r1, #-256]	; 0x100
     ee4:	02000003 	andeq	r0, r0, #3
     ee8:	00007400 	andeq	r7, r0, r0, lsl #8
     eec:	fb010200 	blx	416f6 <__Stack_Size+0x412f6>
     ef0:	01000d0e 	tsteq	r0, lr, lsl #26
     ef4:	00010101 	andeq	r0, r1, r1, lsl #2
     ef8:	00010000 	andeq	r0, r1, r0
     efc:	696c0100 	stmdbvs	ip!, {r8}^
     f00:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
     f04:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
     f08:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
     f0c:	73000063 	movwvc	r0, #99	; 0x63
     f10:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     f14:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     f18:	616c665f 	cmnvs	ip, pc, asr r6
     f1c:	632e6873 	teqvs	lr, #7536640	; 0x730000
     f20:	00000100 	andeq	r0, r0, r0, lsl #2
     f24:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     f28:	30316632 	eorscc	r6, r1, r2, lsr r6
     f2c:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     f30:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
     f34:	00000200 	andeq	r0, r0, r0, lsl #4
     f38:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     f3c:	30316632 	eorscc	r6, r1, r2, lsr r6
     f40:	616d5f78 	smcvs	54776	; 0xd5f8
     f44:	00682e70 	rsbeq	r2, r8, r0, ror lr
     f48:	73000002 	movwvc	r0, #2
     f4c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     f50:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
     f54:	616c665f 	cmnvs	ip, pc, asr r6
     f58:	682e6873 	stmdavs	lr!, {r0, r1, r4, r5, r6, fp, sp, lr}
     f5c:	00000200 	andeq	r0, r0, r0, lsl #4
     f60:	02050000 	andeq	r0, r5, #0
     f64:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
     f68:	0100d603 	tsteq	r0, r3, lsl #12
     f6c:	07025917 	smladeq	r2, r7, r9, r5
     f70:	00010100 	andeq	r0, r1, r0, lsl #2
     f74:	00000205 	andeq	r0, r0, r5, lsl #4
     f78:	ea030000 	b	c0f80 <__Stack_Size+0xc0b80>
     f7c:	59170100 	ldmdbpl	r7, {r8}
     f80:	01000702 	tsteq	r0, r2, lsl #14
     f84:	02050001 	andeq	r0, r5, #1
     f88:	08000810 	stmdaeq	r0, {r4, fp}
     f8c:	0100fe03 	tsteq	r0, r3, lsl #28
     f90:	07025917 	smladeq	r2, r7, r9, r5
     f94:	00010100 	andeq	r0, r1, r0, lsl #2
     f98:	00000205 	andeq	r0, r0, r5, lsl #4
     f9c:	90030000 	andls	r0, r3, r0
     fa0:	3d140101 	ldfccs	f0, [r4, #-4]
     fa4:	01000902 	tsteq	r0, r2, lsl #18
     fa8:	02050001 	andeq	r0, r5, #1
     fac:	00000000 	andeq	r0, r0, r0
     fb0:	01019e03 	tsteq	r1, r3, lsl #28
     fb4:	00080214 	andeq	r0, r8, r4, lsl r2
     fb8:	05000101 	streq	r0, [r0, #-257]	; 0x101
     fbc:	00000002 	andeq	r0, r0, r2
     fc0:	05960300 	ldreq	r0, [r6, #768]	; 0x300
     fc4:	022f1401 	eoreq	r1, pc, #16777216	; 0x1000000
     fc8:	01010004 	tsteq	r1, r4
     fcc:	00020500 	andeq	r0, r2, r0, lsl #10
     fd0:	03000000 	movweq	r0, #0
     fd4:	140105a3 	strne	r0, [r1], #-1443	; 0x5a3
     fd8:	0004022f 	andeq	r0, r4, pc, lsr #4
     fdc:	05000101 	streq	r0, [r0, #-257]	; 0x101
     fe0:	00000002 	andeq	r0, r0, r2
     fe4:	05b10300 	ldreq	r0, [r1, #768]!	; 0x300
     fe8:	09031501 	stmdbeq	r3, {r0, r8, sl, ip}
     fec:	0006022e 	andeq	r0, r6, lr, lsr #4
     ff0:	05000101 	streq	r0, [r0, #-257]	; 0x101
     ff4:	00000002 	andeq	r0, r0, r2
     ff8:	05c70300 	strbeq	r0, [r7, #768]	; 0x300
     ffc:	0a031501 	beq	c6408 <__Stack_Size+0xc6008>
    1000:	0006022e 	andeq	r0, r6, lr, lsr #4
    1004:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1008:	00000002 	andeq	r0, r0, r2
    100c:	05e20300 	strbeq	r0, [r2, #768]!	; 0x300
    1010:	231d2801 	tstcs	sp, #65536	; 0x10000
    1014:	00070233 	andeq	r0, r7, r3, lsr r2
    1018:	05000101 	streq	r0, [r0, #-257]	; 0x101
    101c:	00000002 	andeq	r0, r0, r2
    1020:	06810300 	streq	r0, [r1], r0, lsl #6
    1024:	263e1801 	ldrtcs	r1, [lr], -r1, lsl #16
    1028:	10032941 	andne	r2, r3, r1, asr #18
    102c:	0004023c 	andeq	r0, r4, ip, lsr r2
    1030:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1034:	00000002 	andeq	r0, r0, r2
    1038:	06ae0300 	strteq	r0, [lr], r0, lsl #6
    103c:	06021701 	streq	r1, [r2], -r1, lsl #14
    1040:	00010100 	andeq	r0, r1, r0, lsl #2
    1044:	08280205 	stmdaeq	r8!, {r0, r2, r9}
    1048:	bf030800 	svclt	0x00030800
    104c:	50150106 	andspl	r0, r5, r6, lsl #2
    1050:	74033e42 	strvc	r3, [r3], #-3650	; 0xe42
    1054:	1003344a 	andne	r3, r3, sl, asr #8
    1058:	00030220 	andeq	r0, r3, r0, lsr #4
    105c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1060:	00085002 	andeq	r5, r8, r2
    1064:	06e60308 	strbteq	r0, [r6], r8, lsl #6
    1068:	00242001 	eoreq	r2, r4, r1
    106c:	31010402 	tstcc	r1, r2, lsl #8
    1070:	02040200 	andeq	r0, r4, #0, 4
    1074:	03062e06 	movweq	r2, #28166	; 0x6e06
    1078:	03302019 	teqeq	r0, #25
    107c:	332f7468 	teqcc	pc, #104, 8	; 0x68000000
    1080:	0002025d 	andeq	r0, r2, sp, asr r2
    1084:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1088:	00000002 	andeq	r0, r0, r2
    108c:	01ad0300 			; <UNDEFINED> instruction: 0x01ad0300
    1090:	4c272001 	stcmi	0, cr2, [r7], #-4
    1094:	4b292531 	blmi	a4a560 <__Stack_Size+0xa4a160>
    1098:	31304d21 	teqcc	r0, r1, lsr #26
    109c:	0003025d 	andeq	r0, r3, sp, asr r2
    10a0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    10a4:	00000002 	andeq	r0, r0, r2
    10a8:	01d40300 	bicseq	r0, r4, r0, lsl #6
    10ac:	314c2401 	cmpcc	ip, r1, lsl #8
    10b0:	4d4b2a24 	vstrmi	s5, [fp, #-144]	; 0xffffff70
    10b4:	025d3130 	subseq	r3, sp, #48, 2
    10b8:	01010003 	tsteq	r1, r3
    10bc:	00020500 	andeq	r0, r2, r0, lsl #10
    10c0:	03000000 	movweq	r0, #0
    10c4:	240101f7 	strcs	r0, [r1], #-503	; 0x1f7
    10c8:	0336314c 	teqeq	r6, #76, 2
    10cc:	3f212e78 	svccc	0x00212e78
    10d0:	31304d4b 	teqcc	r0, fp, asr #26
    10d4:	3f1d235b 	svccc	0x001d235b
    10d8:	03231d23 	teqeq	r3, #2240	; 0x8c0
    10dc:	5e312e0a 	cdppl	14, 3, cr2, cr1, cr10, {0}
    10e0:	01000702 	tsteq	r0, r2, lsl #14
    10e4:	02050001 	andeq	r0, r5, #1
    10e8:	08000888 	stmdaeq	r0, {r3, r7, fp}
    10ec:	0102b603 	tsteq	r2, r3, lsl #12
    10f0:	79032720 	stmdbvc	r3, {r5, r8, r9, sl, sp}
    10f4:	32302720 	eorscc	r2, r0, #32, 14	; 0x800000
    10f8:	314c1b25 	cmpcc	ip, r5, lsr #22
    10fc:	03313230 	teqeq	r1, #48, 4
    1100:	5e313c0a 	cdppl	12, 3, cr3, cr1, cr10, {0}
    1104:	01000402 	tsteq	r0, r2, lsl #8
    1108:	02050001 	andeq	r0, r5, #1
    110c:	00000000 	andeq	r0, r0, r0
    1110:	0102f103 	tsteq	r2, r3, lsl #2
    1114:	79032720 	stmdbvc	r3, {r5, r8, r9, sl, sp}
    1118:	31302720 	teqcc	r0, r0, lsr #14
    111c:	224c1c24 	subcs	r1, ip, #36, 24	; 0x2400
    1120:	025d3130 	subseq	r3, sp, #48, 2
    1124:	01010004 	tsteq	r1, r4
    1128:	00020500 	andeq	r0, r2, r0, lsl #10
    112c:	03000000 	movweq	r0, #0
    1130:	20010399 	mulcs	r1, r9, r3
    1134:	207a0326 	rsbscs	r0, sl, r6, lsr #6
    1138:	36313026 	ldrtcc	r3, [r1], -r6, lsr #32
    113c:	21207803 	teqcs	r0, r3, lsl #16
    1140:	30234b3f 	eorcc	r4, r3, pc, lsr fp
    1144:	05025d31 	streq	r5, [r2, #-3377]	; 0xd31
    1148:	00010100 	andeq	r0, r1, r0, lsl #2
    114c:	00000205 	andeq	r0, r0, r5, lsl #4
    1150:	ca030000 	bgt	c1158 <__Stack_Size+0xc0d58>
    1154:	03200103 	teqeq	r0, #-1073741824	; 0xc0000000
    1158:	313e200f 	teqcc	lr, pc
    115c:	032e7403 	teqeq	lr, #50331648	; 0x3000000
    1160:	3d21200c 	stccc	0, cr2, [r1, #-48]!	; 0xffffffd0
    1164:	03207303 	teqeq	r0, #201326592	; 0xc000000
    1168:	1e30200d 	cdpne	0, 3, cr2, cr0, cr13, {0}
    116c:	20720322 	rsbscs	r0, r2, r2, lsr #6
    1170:	372e1503 	strcc	r1, [lr, -r3, lsl #10]!
    1174:	30231d23 	eorcc	r1, r3, r3, lsr #26
    1178:	231d233e 	tstcs	sp, #-134217728	; 0xf8000000
    117c:	2e640331 	mcrcs	3, 3, r0, cr4, cr1, {1}
    1180:	302e1c03 	eorcc	r1, lr, r3, lsl #24
    1184:	31231d23 	teqcc	r3, r3, lsr #26
    1188:	032e5d03 	teqeq	lr, #3, 26	; 0xc0
    118c:	234c2023 	movtcs	r2, #49187	; 0xc023
    1190:	3131231d 	teqcc	r1, sp, lsl r3
    1194:	0008026b 	andeq	r0, r8, fp, ror #4
    1198:	05000101 	streq	r0, [r0, #-257]	; 0x101
    119c:	00000002 	andeq	r0, r0, r2
    11a0:	04990300 	ldreq	r0, [r9], #768	; 0x300
    11a4:	4c262001 	stcmi	0, cr2, [r6], #-4
    11a8:	79033531 	stmdbvc	r3, {r0, r4, r5, r8, sl, ip, sp}
    11ac:	4b3e212e 	blmi	f8966c <__Stack_Size+0xf8926c>
    11b0:	5b31304d 	blpl	c4d2ec <__Stack_Size+0xc4ceec>
    11b4:	3232225a 	eorscc	r2, r2, #-1610612731	; 0xa0000005
    11b8:	3179314c 	cmncc	r9, ip, asr #2
    11bc:	0007025e 	andeq	r0, r7, lr, asr r2
    11c0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    11c4:	00000002 	andeq	r0, r0, r2
    11c8:	04ea0300 	strbteq	r0, [sl], #768	; 0x300
    11cc:	20090301 	andcs	r0, r9, r1, lsl #6
    11d0:	032e7703 	teqeq	lr, #786432	; 0xc0000
    11d4:	3f212009 	svccc	0x00212009
    11d8:	03207303 	teqeq	r0, #201326592	; 0xc000000
    11dc:	31302e0d 	teqcc	r0, sp, lsl #28
    11e0:	4d3e2c22 	ldcmi	12, cr2, [lr, #-136]!	; 0xffffff78
    11e4:	025d313e 	subseq	r3, sp, #-2147483633	; 0x8000000f
    11e8:	01010007 	tsteq	r1, r7
    11ec:	00000230 	andeq	r0, r0, r0, lsr r2
    11f0:	00850002 	addeq	r0, r5, r2
    11f4:	01020000 	mrseq	r0, (UNDEF: 2)
    11f8:	000d0efb 	strdeq	r0, [sp], -fp
    11fc:	01010101 	tsteq	r1, r1, lsl #2
    1200:	01000000 	mrseq	r0, (UNDEF: 0)
    1204:	6c010000 	stcvs	0, cr0, [r1], {-0}
    1208:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    120c:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    1210:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    1214:	0000636e 	andeq	r6, r0, lr, ror #6
    1218:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    121c:	30316632 	eorscc	r6, r1, r2, lsr r6
    1220:	70675f78 	rsbvc	r5, r7, r8, ror pc
    1224:	632e6f69 	teqvs	lr, #420	; 0x1a4
    1228:	00000100 	andeq	r0, r0, r0, lsl #2
    122c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1230:	30316632 	eorscc	r6, r1, r2, lsr r6
    1234:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1238:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    123c:	00000200 	andeq	r0, r0, r0, lsl #4
    1240:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1244:	30316632 	eorscc	r6, r1, r2, lsr r6
    1248:	616d5f78 	smcvs	54776	; 0xd5f8
    124c:	00682e70 	rsbeq	r2, r8, r0, ror lr
    1250:	73000002 	movwvc	r0, #2
    1254:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1258:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    125c:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    1260:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1264:	73000002 	movwvc	r0, #2
    1268:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    126c:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    1270:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    1274:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1278:	00000000 	andeq	r0, r0, r0
    127c:	00000205 	andeq	r0, r0, r5, lsl #4
    1280:	33030000 	movwcc	r0, #12288	; 0x3000
    1284:	4bf52401 	blmi	ffd4a290 <SCS_BASE+0x1fd3c290>
    1288:	ac17032a 	ldcge	3, cr0, [r7], {42}	; 0x2a
    128c:	2e70034b 	cdpcs	3, 7, cr0, cr0, cr11, {2}
    1290:	324b324b 	subcc	r3, fp, #-1342177276	; 0xb0000004
    1294:	2e09034b 	cdpcs	3, 0, cr0, cr9, cr11, {2}
    1298:	4259324b 	subsmi	r3, r9, #-1342177276	; 0xb0000004
    129c:	022e7a03 	eoreq	r7, lr, #12288	; 0x3000
    12a0:	01010008 	tsteq	r1, r8
    12a4:	00020500 	andeq	r0, r2, r0, lsl #10
    12a8:	03000000 	movweq	r0, #0
    12ac:	210100eb 	smlattcs	r1, fp, r0, r0
    12b0:	04022d4c 	streq	r2, [r2], #-3404	; 0xd4c
    12b4:	00010100 	andeq	r0, r1, r0, lsl #2
    12b8:	08d00205 	ldmeq	r0, {r0, r2, r9}^
    12bc:	fc030800 	stc2	8, cr0, [r3], {-0}
    12c0:	0a030100 	beq	c16c8 <__Stack_Size+0xc12c8>
    12c4:	20760301 	rsbscs	r0, r6, r1, lsl #6
    12c8:	25200c03 	strcs	r0, [r0, #-3075]!	; 0xc03
    12cc:	20740333 	rsbscs	r0, r4, r3, lsr r3
    12d0:	223e3335 	eorscs	r3, lr, #-738197504	; 0xd4000000
    12d4:	30303022 	eorscc	r3, r0, r2, lsr #32
    12d8:	342b4e22 	strtcc	r4, [fp], #-3618	; 0xe22
    12dc:	3322311d 	teqcc	r2, #1073741831	; 0x40000007
    12e0:	2e660322 	cdpcs	3, 6, cr0, cr6, cr2, {1}
    12e4:	253c1f03 	ldrcs	r1, [ip, #-3843]!	; 0xf03
    12e8:	303e2130 	eorscc	r2, lr, r0, lsr r1
    12ec:	4e22302f 	cdpmi	0, 2, cr3, cr2, cr15, {1}
    12f0:	311d342b 	tstcc	sp, fp, lsr #8
    12f4:	03223122 	teqeq	r2, #-2147483640	; 0x80000008
    12f8:	1b032e69 	blne	ccca4 <__Stack_Size+0xcc8a4>
    12fc:	0002023c 	andeq	r0, r2, ip, lsr r2
    1300:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1304:	00000002 	andeq	r0, r0, r2
    1308:	01e50300 	mvneq	r0, r0, lsl #6
    130c:	2f3d1401 	svccs	0x003d1401
    1310:	01000302 	tsteq	r0, r2, lsl #6
    1314:	02050001 	andeq	r0, r5, #1
    1318:	00000000 	andeq	r0, r0, r0
    131c:	0101f603 	tsteq	r1, r3, lsl #12
    1320:	2e090319 	mcrcs	3, 0, r0, cr9, cr9, {0}
    1324:	01000402 	tsteq	r0, r2, lsl #8
    1328:	02050001 	andeq	r0, r5, #1
    132c:	00000000 	andeq	r0, r0, r0
    1330:	01029003 	tsteq	r2, r3
    1334:	02022116 	andeq	r2, r2, #-2147483643	; 0x80000005
    1338:	00010100 	andeq	r0, r1, r0, lsl #2
    133c:	00000205 	andeq	r0, r0, r5, lsl #4
    1340:	a1030000 	mrsge	r0, (UNDEF: 3)
    1344:	03190102 	tsteq	r9, #-2147483648	; 0x80000000
    1348:	04022e09 	streq	r2, [r2], #-3593	; 0xe09
    134c:	00010100 	andeq	r0, r1, r0, lsl #2
    1350:	00000205 	andeq	r0, r0, r5, lsl #4
    1354:	bb030000 	bllt	c135c <__Stack_Size+0xc0f5c>
    1358:	21160102 	tstcs	r6, r2, lsl #2
    135c:	01000202 	tsteq	r0, r2, lsl #4
    1360:	02050001 	andeq	r0, r5, #1
    1364:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
    1368:	0102cd03 	tsteq	r2, r3, lsl #26
    136c:	00020217 	andeq	r0, r2, r7, lsl r2
    1370:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1374:	00097002 	andeq	r7, r9, r2
    1378:	02e00308 	rsceq	r0, r0, #8, 6	; 0x20000000
    137c:	02021701 	andeq	r1, r2, #262144	; 0x40000
    1380:	00010100 	andeq	r0, r1, r0, lsl #2
    1384:	00000205 	andeq	r0, r0, r5, lsl #4
    1388:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    138c:	22180102 	andscs	r0, r8, #-2147483648	; 0x80000000
    1390:	00020232 	andeq	r0, r2, r2, lsr r2
    1394:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1398:	00000002 	andeq	r0, r0, r2
    139c:	03900300 	orrseq	r0, r0, #0, 6
    13a0:	02021601 	andeq	r1, r2, #1048576	; 0x100000
    13a4:	00010100 	andeq	r0, r1, r0, lsl #2
    13a8:	00000205 	andeq	r0, r0, r5, lsl #4
    13ac:	a2030000 	andge	r0, r3, #0
    13b0:	30190103 	andscc	r0, r9, r3, lsl #2
    13b4:	22222222 	eorcs	r2, r2, #536870914	; 0x20000002
    13b8:	01000202 	tsteq	r0, r2, lsl #4
    13bc:	02050001 	andeq	r0, r5, #1
    13c0:	00000000 	andeq	r0, r0, r0
    13c4:	0103c303 	tsteq	r3, r3, lsl #6
    13c8:	214b3019 	cmpcs	fp, r9, lsl r0
    13cc:	00050230 	andeq	r0, r5, r0, lsr r2
    13d0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    13d4:	00000002 	andeq	r0, r0, r2
    13d8:	03dc0300 	bicseq	r0, ip, #0, 6
    13dc:	06021601 	streq	r1, [r2], -r1, lsl #12
    13e0:	00010100 	andeq	r0, r1, r0, lsl #2
    13e4:	00000205 	andeq	r0, r0, r5, lsl #4
    13e8:	87030000 	strhi	r0, [r3, -r0]
    13ec:	25270104 	strcs	r0, [r7, #-260]!	; 0x104
    13f0:	23222345 	teqcs	r2, #335544321	; 0x14000001
    13f4:	034c2f1f 	movteq	r2, #53023	; 0xcf1f
    13f8:	0a032e78 	beq	ccde0 <__Stack_Size+0xcc9e0>
    13fc:	3167502e 	cmncc	r7, lr, lsr #32
    1400:	05024d22 	streq	r4, [r2, #-3362]	; 0xd22
    1404:	00010100 	andeq	r0, r1, r0, lsl #2
    1408:	00000205 	andeq	r0, r0, r5, lsl #4
    140c:	b9030000 	stmdblt	r3, {}	; <UNPREDICTABLE>
    1410:	5b190104 	blpl	641828 <__Stack_Size+0x641428>
    1414:	03747603 	cmneq	r4, #3145728	; 0x300000
    1418:	024b2009 	subeq	r2, fp, #9
    141c:	01010004 	tsteq	r1, r4
    1420:	00000312 	andeq	r0, r0, r2, lsl r3
    1424:	00700002 	rsbseq	r0, r0, r2
    1428:	01020000 	mrseq	r0, (UNDEF: 2)
    142c:	000d0efb 	strdeq	r0, [sp], -fp
    1430:	01010101 	tsteq	r1, r1, lsl #2
    1434:	01000000 	mrseq	r0, (UNDEF: 0)
    1438:	6c010000 	stcvs	0, cr0, [r1], {-0}
    143c:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    1440:	6c006372 	stcvs	3, cr6, [r0], {114}	; 0x72
    1444:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    1448:	0000636e 	andeq	r6, r0, lr, ror #6
    144c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1450:	30316632 	eorscc	r6, r1, r2, lsr r6
    1454:	63725f78 	cmnvs	r2, #120, 30	; 0x1e0
    1458:	00632e63 	rsbeq	r2, r3, r3, ror #28
    145c:	73000001 	movwvc	r0, #1
    1460:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1464:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    1468:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    146c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    1470:	73000002 	movwvc	r0, #2
    1474:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1478:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    147c:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    1480:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1484:	74730000 	ldrbtvc	r0, [r3], #-0
    1488:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    148c:	5f783031 	svcpl	0x00783031
    1490:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    1494:	00020068 	andeq	r0, r2, r8, rrx
    1498:	05000000 	streq	r0, [r0, #-0]
    149c:	00097402 	andeq	r7, r9, r2, lsl #8
    14a0:	00fc0308 	rscseq	r0, ip, r8, lsl #6
    14a4:	4d5b1401 	cfldrdmi	mvd1, [fp, #-4]
    14a8:	024d4d69 	subeq	r4, sp, #6720	; 0x1a40
    14ac:	01010007 	tsteq	r1, r7
    14b0:	b0020500 	andlt	r0, r2, r0, lsl #10
    14b4:	03080009 	movweq	r0, #32777	; 0x8009
    14b8:	1801019f 	stmdane	r1, {r0, r1, r2, r3, r4, r7, r8}
    14bc:	2e7a0326 	cdpcs	3, 7, cr0, cr10, cr6, {1}
    14c0:	4f5c4d4d 	svcmi	0x005c4d4d
    14c4:	01000802 	tsteq	r0, r2, lsl #16
    14c8:	02050001 	andeq	r0, r5, #1
    14cc:	00000000 	andeq	r0, r0, r0
    14d0:	0101e903 	tsteq	r1, r3, lsl #18
    14d4:	31313118 	teqcc	r1, r8, lsl r1
    14d8:	01000402 	tsteq	r0, r2, lsl #8
    14dc:	02050001 	andeq	r0, r5, #1
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	01028603 	tsteq	r2, r3, lsl #12
    14e8:	00060216 	andeq	r0, r6, r6, lsl r2
    14ec:	05000101 	streq	r0, [r0, #-257]	; 0x101
    14f0:	0009e802 	andeq	lr, r9, r2, lsl #16
    14f4:	029f0308 	addseq	r0, pc, #8, 6	; 0x20000000
    14f8:	31311901 	teqcc	r1, r1, lsl #18
    14fc:	00040231 	andeq	r0, r4, r1, lsr r2
    1500:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1504:	0009fc02 	andeq	pc, r9, r2, lsl #24
    1508:	02bc0308 	adcseq	r0, ip, #8, 6	; 0x20000000
    150c:	06021601 	streq	r1, [r2], -r1, lsl #12
    1510:	00010100 	andeq	r0, r1, r0, lsl #2
    1514:	0a080205 	beq	201d30 <__Stack_Size+0x201930>
    1518:	cf030800 	svcgt	0x00030800
    151c:	31180102 	tstcc	r8, r2, lsl #2
    1520:	05022331 	streq	r2, [r2, #-817]	; 0x331
    1524:	00010100 	andeq	r0, r1, r0, lsl #2
    1528:	0a1c0205 	beq	701d44 <__Stack_Size+0x701944>
    152c:	ed030800 	stc	8, cr0, [r3, #-0]
    1530:	2f130102 	svccs	0x00130102
    1534:	01000602 	tsteq	r0, r2, lsl #12
    1538:	02050001 	andeq	r0, r5, #1
    153c:	08000a2c 	stmdaeq	r0, {r2, r3, r5, r9, fp}
    1540:	01038403 	tsteq	r3, r3, lsl #8
    1544:	23313118 	teqcs	r1, #24, 2
    1548:	01000502 	tsteq	r0, r2, lsl #10
    154c:	02050001 	andeq	r0, r5, #1
    1550:	08000a40 	stmdaeq	r0, {r6, r9, fp}
    1554:	0103a503 	tsteq	r3, r3, lsl #10
    1558:	23313118 	teqcs	r1, #24, 2
    155c:	01000502 	tsteq	r0, r2, lsl #10
    1560:	02050001 	andeq	r0, r5, #1
    1564:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
    1568:	0103c603 	tsteq	r3, r3, lsl #12
    156c:	31313118 	teqcc	r1, r8, lsl r1
    1570:	01000402 	tsteq	r0, r2, lsl #8
    1574:	02050001 	andeq	r0, r5, #1
    1578:	00000000 	andeq	r0, r0, r0
    157c:	0103e903 	tsteq	r3, r3, lsl #18
    1580:	33231d28 	teqcc	r3, #40, 26	; 0xa00
    1584:	01000702 	tsteq	r0, r2, lsl #14
    1588:	02050001 	andeq	r0, r5, #1
    158c:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
    1590:	01048803 	tsteq	r4, r3, lsl #16
    1594:	00060216 	andeq	r0, r6, r6, lsl r2
    1598:	05000101 	streq	r0, [r0, #-257]	; 0x101
    159c:	00000002 	andeq	r0, r0, r2
    15a0:	049d0300 	ldreq	r0, [sp], #768	; 0x300
    15a4:	31311801 	teqcc	r1, r1, lsl #16
    15a8:	00050223 	andeq	r0, r5, r3, lsr #4
    15ac:	05000101 	streq	r0, [r0, #-257]	; 0x101
    15b0:	00000002 	andeq	r0, r0, r2
    15b4:	04bc0300 	ldrteq	r0, [ip], #768	; 0x300
    15b8:	03341801 	teqeq	r4, #65536	; 0x10000
    15bc:	2323207a 	teqcs	r3, #122	; 0x7a
    15c0:	0224214e 	eoreq	r2, r4, #-2147483629	; 0x80000013
    15c4:	01010005 	tsteq	r1, r5
    15c8:	00020500 	andeq	r0, r2, r0, lsl #10
    15cc:	03000000 	movweq	r0, #0
    15d0:	160104e3 	strne	r0, [r1], -r3, ror #9
    15d4:	01000602 	tsteq	r0, r2, lsl #12
    15d8:	02050001 	andeq	r0, r5, #1
    15dc:	00000000 	andeq	r0, r0, r0
    15e0:	0104f903 	tsteq	r4, r3, lsl #18
    15e4:	00080217 	andeq	r0, r8, r7, lsl r2
    15e8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    15ec:	00000002 	andeq	r0, r0, r2
    15f0:	058c0300 	streq	r0, [ip, #768]	; 0x300
    15f4:	06021601 	streq	r1, [r2], -r1, lsl #12
    15f8:	00010100 	andeq	r0, r1, r0, lsl #2
    15fc:	00000205 	andeq	r0, r0, r5, lsl #4
    1600:	9c030000 	stcls	0, cr0, [r3], {-0}
    1604:	1c160105 	ldfnes	f0, [r6], {5}
    1608:	33513e24 	cmpcc	r1, #36, 28	; 0x240
    160c:	1c321e23 	ldcne	14, cr1, [r2], #-140	; 0xffffff74
    1610:	323f2732 	eorscc	r2, pc, #13107200	; 0xc80000
    1614:	223c0c03 	eorscs	r0, ip, #768	; 0x300
    1618:	214d321f 	cmpcs	sp, pc, lsl r2
    161c:	32214d32 	eorcc	r4, r1, #3200	; 0xc80
    1620:	312f213f 	teqcc	pc, pc, lsr r1	; <UNPREDICTABLE>
    1624:	01000d02 	tsteq	r0, r2, lsl #26
    1628:	02050001 	andeq	r0, r5, #1
    162c:	00000000 	andeq	r0, r0, r0
    1630:	01068003 	tsteq	r6, r3
    1634:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1638:	01000702 	tsteq	r0, r2, lsl #14
    163c:	02050001 	andeq	r0, r5, #1
    1640:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
    1644:	0106a103 	tsteq	r6, r3, lsl #2
    1648:	32221e27 	eorcc	r1, r2, #624	; 0x270
    164c:	01000702 	tsteq	r0, r2, lsl #14
    1650:	02050001 	andeq	r0, r5, #1
    1654:	00000000 	andeq	r0, r0, r0
    1658:	0106c303 	tsteq	r6, r3, lsl #6
    165c:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1660:	01000702 	tsteq	r0, r2, lsl #14
    1664:	02050001 	andeq	r0, r5, #1
    1668:	00000000 	andeq	r0, r0, r0
    166c:	0106e303 	tsteq	r6, r3, lsl #6
    1670:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1674:	01000702 	tsteq	r0, r2, lsl #14
    1678:	02050001 	andeq	r0, r5, #1
    167c:	00000000 	andeq	r0, r0, r0
    1680:	01078403 	tsteq	r7, r3, lsl #8
    1684:	32221e27 	eorcc	r1, r2, #624	; 0x270
    1688:	01000702 	tsteq	r0, r2, lsl #14
    168c:	02050001 	andeq	r0, r5, #1
    1690:	00000000 	andeq	r0, r0, r0
    1694:	01079c03 	tsteq	r7, r3, lsl #24
    1698:	00060216 	andeq	r0, r6, r6, lsl r2
    169c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    16a0:	00000002 	andeq	r0, r0, r2
    16a4:	07ac0300 	streq	r0, [ip, r0, lsl #6]!
    16a8:	06021601 	streq	r1, [r2], -r1, lsl #12
    16ac:	00010100 	andeq	r0, r1, r0, lsl #2
    16b0:	00000205 	andeq	r0, r0, r5, lsl #4
    16b4:	c1030000 	mrsgt	r0, (UNDEF: 3)
    16b8:	02170107 	andseq	r0, r7, #-1073741823	; 0xc0000001
    16bc:	01010006 	tsteq	r1, r6
    16c0:	8c020500 	cfstr32hi	mvfx0, [r2], {-0}
    16c4:	0308000a 	movweq	r0, #32778	; 0x800a
    16c8:	030107dd 	movweq	r0, #6109	; 0x17dd
    16cc:	3e220109 	sufccs	f0, f2, #1.0
    16d0:	26322230 			; <UNDEFINED> instruction: 0x26322230
    16d4:	024a0b03 	subeq	r0, sl, #3072	; 0xc00
    16d8:	01010006 	tsteq	r1, r6
    16dc:	b4020500 	strlt	r0, [r2], #-1280	; 0x500
    16e0:	0308000a 	movweq	r0, #32778	; 0x800a
    16e4:	210101c6 	smlabtcs	r1, r6, r1, r0
    16e8:	01040200 	mrseq	r0, R12_usr
    16ec:	04020035 	streq	r0, [r2], #-53	; 0x35
    16f0:	02003d01 	andeq	r3, r0, #1, 26	; 0x40
    16f4:	5b3d0104 	blpl	f41b0c <__Stack_Size+0xf4170c>
    16f8:	023c0a03 	eorseq	r0, ip, #12288	; 0x3000
    16fc:	01010006 	tsteq	r1, r6
    1700:	00020500 	andeq	r0, r2, r0, lsl #10
    1704:	03000000 	movweq	r0, #0
    1708:	14010890 	strne	r0, [r1], #-2192	; 0x890
    170c:	01000802 	tsteq	r0, r2, lsl #16
    1710:	02050001 	andeq	r0, r5, #1
    1714:	00000000 	andeq	r0, r0, r0
    1718:	0108a403 	tsteq	r8, r3, lsl #8
    171c:	3c0b0319 	stccc	3, cr0, [fp], {25}
    1720:	01000702 	tsteq	r0, r2, lsl #14
    1724:	02050001 	andeq	r0, r5, #1
    1728:	00000000 	andeq	r0, r0, r0
    172c:	0108c703 	tsteq	r8, r3, lsl #14
    1730:	00060218 	andeq	r0, r6, r8, lsl r2
    1734:	091b0101 	ldmdbeq	fp, {r0, r8}
    1738:	00020000 	andeq	r0, r2, r0
    173c:	00000083 	andeq	r0, r0, r3, lsl #1
    1740:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1744:	0101000d 	tsteq	r1, sp
    1748:	00000101 	andeq	r0, r0, r1, lsl #2
    174c:	00000100 	andeq	r0, r0, r0, lsl #2
    1750:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    1754:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1758:	62696c00 	rsbvs	r6, r9, #0, 24
    175c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1760:	74730000 	ldrbtvc	r0, [r3], #-0
    1764:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1768:	5f783031 	svcpl	0x00783031
    176c:	2e6d6974 	mcrcs	9, 3, r6, cr13, cr4, {3}
    1770:	00010063 	andeq	r0, r1, r3, rrx
    1774:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1778:	31663233 	cmncc	r6, r3, lsr r2
    177c:	745f7830 	ldrbvc	r7, [pc], #-2096	; 1784 <__Stack_Size+0x1384>
    1780:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    1784:	00020068 	andeq	r0, r2, r8, rrx
    1788:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    178c:	31663233 	cmncc	r6, r3, lsr r2
    1790:	6d5f7830 	ldclvs	8, cr7, [pc, #-192]	; 16d8 <__Stack_Size+0x12d8>
    1794:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    1798:	00000200 	andeq	r0, r0, r0, lsl #4
    179c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    17a0:	30316632 	eorscc	r6, r1, r2, lsr r6
    17a4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    17a8:	00682e6d 	rsbeq	r2, r8, sp, ror #28
    17ac:	73000002 	movwvc	r0, #2
    17b0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    17b4:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    17b8:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    17bc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    17c0:	00000000 	andeq	r0, r0, r0
    17c4:	00000205 	andeq	r0, r0, r5, lsl #4
    17c8:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    17cc:	68240117 	stmdavs	r4!, {r0, r1, r2, r4, r8}
    17d0:	2b241f21 	blcs	90945c <__Stack_Size+0x90905c>
    17d4:	322b2324 	eorcc	r2, fp, #36, 6	; 0x90000000
    17d8:	2123242a 	teqcs	r3, sl, lsr #8
    17dc:	01000202 	tsteq	r0, r2, lsl #4
    17e0:	02050001 	andeq	r0, r5, #1
    17e4:	00000000 	andeq	r0, r0, r0
    17e8:	01189c03 	tsteq	r8, r3, lsl #24
    17ec:	24216824 	strtcs	r6, [r1], #-2084	; 0x824
    17f0:	2f33242a 	svccs	0x0033242a
    17f4:	2a322f29 	bcs	c8d4a0 <__Stack_Size+0xc8d0a0>
    17f8:	02212324 	eoreq	r2, r1, #36, 6	; 0x90000000
    17fc:	01010002 	tsteq	r1, r2
    1800:	00020500 	andeq	r0, r2, r0, lsl #10
    1804:	03000000 	movweq	r0, #0
    1808:	24010186 	strcs	r0, [r1], #-390	; 0x186
    180c:	77034bec 	strvc	r4, [r3, -ip, ror #23]
    1810:	5915082e 	ldmdbpl	r5, {r1, r2, r3, r5, fp}
    1814:	4b3c0903 	blmi	f03c28 <__Stack_Size+0xf03828>
    1818:	032e1f03 	teqeq	lr, #3, 30
    181c:	4b322e61 	blmi	c8d1a8 <__Stack_Size+0xc8cda8>
    1820:	4b324b32 	blmi	c944f0 <__Stack_Size+0xc940f0>
    1824:	59324b32 	ldmdbpl	r2!, {r1, r4, r5, r8, r9, fp, lr}
    1828:	2e7a0342 	cdpcs	3, 7, cr0, cr10, cr2, {2}
    182c:	01000902 	tsteq	r0, r2, lsl #18
    1830:	02050001 	andeq	r0, r5, #1
    1834:	00000000 	andeq	r0, r0, r0
    1838:	0101c603 	tsteq	r1, r3, lsl #12
    183c:	3d1f2119 	ldfccs	f2, [pc, #-100]	; 17e0 <__Stack_Size+0x13e0>
    1840:	30313177 	eorscc	r3, r1, r7, ror r1
    1844:	01040200 	mrseq	r0, R12_usr
    1848:	4d063c06 	stcmi	12, cr3, [r6, #-24]	; 0xffffffe8
    184c:	01000502 	tsteq	r0, r2, lsl #10
    1850:	02050001 	andeq	r0, r5, #1
    1854:	00000000 	andeq	r0, r0, r0
    1858:	0101ed03 	tsteq	r1, r3, lsl #26
    185c:	03010a03 	movweq	r0, #6659	; 0x1a03
    1860:	0a032076 	beq	c9a40 <__Stack_Size+0xc9640>
    1864:	23235b20 	teqcs	r3, #32, 22	; 0x8000
    1868:	09031d26 	stmdbeq	r3, {r1, r2, r5, r8, sl, fp, ip}
    186c:	207a034a 	rsbscs	r0, sl, sl, asr #6
    1870:	2b3f1d26 	blcs	fc8d10 <__Stack_Size+0xfc8910>
    1874:	6b032326 	blvs	ca514 <__Stack_Size+0xca114>
    1878:	20150320 	andscs	r0, r5, r0, lsr #6
    187c:	04020022 	streq	r0, [r2], #-34	; 0x22
    1880:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    1884:	1d4a0b03 	vstrne	d16, [sl, #-12]
    1888:	311d2631 	tstcc	sp, r1, lsr r6
    188c:	234d3f24 	movtcs	r3, #57124	; 0xdf24
    1890:	05022323 	streq	r2, [r2, #-803]	; 0x323
    1894:	00010100 	andeq	r0, r1, r0, lsl #2
    1898:	00000205 	andeq	r0, r0, r5, lsl #4
    189c:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    18a0:	0a030102 	beq	c1cb0 <__Stack_Size+0xc18b0>
    18a4:	20760301 	rsbscs	r0, r6, r1, lsl #6
    18a8:	5b200a03 	blpl	8040bc <__Stack_Size+0x803cbc>
    18ac:	1d262323 	stcne	3, cr2, [r6, #-140]!	; 0xffffff74
    18b0:	23312b50 	teqcs	r1, #80, 22	; 0x14000
    18b4:	0331231d 	teqeq	r1, #1946157056	; 0x74000000
    18b8:	1203206e 	andne	r2, r3, #110	; 0x6e
    18bc:	74033120 	strvc	r3, [r3], #-288	; 0x120
    18c0:	200c0320 	andcs	r0, ip, r0, lsr #6
    18c4:	00251b22 	eoreq	r1, r5, r2, lsr #22
    18c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    18cc:	0b03062e 	bleq	c318c <__Stack_Size+0xc2d8c>
    18d0:	313f1d4a 	teqcc	pc, sl, asr #26
    18d4:	033f403f 	teqeq	pc, #63	; 0x3f
    18d8:	31272079 	teqcc	r7, r9, ror r0
    18dc:	0223234e 	eoreq	r2, r3, #939524097	; 0x38000001
    18e0:	01010004 	tsteq	r1, r4
    18e4:	00020500 	andeq	r0, r2, r0, lsl #10
    18e8:	03000000 	movweq	r0, #0
    18ec:	030103a4 	movweq	r0, #5028	; 0x13a4
    18f0:	7603010a 	strvc	r0, [r3], -sl, lsl #2
    18f4:	200a0320 	andcs	r0, sl, r0, lsr #6
    18f8:	2623235b 			; <UNDEFINED> instruction: 0x2623235b
    18fc:	232b501d 	teqcs	fp, #29
    1900:	31231d23 	teqcc	r3, r3, lsr #26
    1904:	03206e03 	teqeq	r0, #3, 28	; 0x30
    1908:	1d312012 	ldcne	0, cr2, [r1, #-72]!	; 0xffffffb8
    190c:	02002223 	andeq	r2, r0, #805306370	; 0x30000002
    1910:	3c060104 	stfccs	f0, [r6], {4}
    1914:	4a0b0306 	bmi	2c2534 <__Stack_Size+0x2c2134>
    1918:	3f313f1d 	svccc	0x00313f1d
    191c:	79033f40 	stmdbvc	r3, {r6, r8, r9, sl, fp, ip, sp}
    1920:	4e312720 	cdpmi	7, 3, cr2, cr1, cr0, {1}
    1924:	04022323 	streq	r2, [r2], #-803	; 0x323
    1928:	00010100 	andeq	r0, r1, r0, lsl #2
    192c:	00000205 	andeq	r0, r0, r5, lsl #4
    1930:	80030000 	andhi	r0, r3, r0
    1934:	0a030104 	beq	c1d4c <__Stack_Size+0xc194c>
    1938:	20760301 	rsbscs	r0, r6, r1, lsl #6
    193c:	5b200a03 	blpl	804150 <__Stack_Size+0x803d50>
    1940:	1d262323 	stcne	3, cr2, [r6, #-140]!	; 0xffffff74
    1944:	23312b50 	teqcs	r1, #80, 22	; 0x14000
    1948:	0331231d 	teqeq	r1, #1946157056	; 0x74000000
    194c:	1203206e 	andne	r2, r3, #110	; 0x6e
    1950:	74033120 	strvc	r3, [r3], #-288	; 0x120
    1954:	200c0320 	andcs	r0, ip, r0, lsr #6
    1958:	00251b30 	eoreq	r1, r5, r0, lsr fp
    195c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1960:	1d52062e 	ldclne	6, cr0, [r2, #-184]	; 0xffffff48
    1964:	23234031 	teqcs	r3, #49	; 0x31
    1968:	01000402 	tsteq	r0, r2, lsl #8
    196c:	02050001 	andeq	r0, r5, #1
    1970:	00000000 	andeq	r0, r0, r0
    1974:	0105d103 	tsteq	r5, r3, lsl #2
    1978:	08010d03 	stmdaeq	r1, {r0, r1, r8, sl, fp}
    197c:	00010100 	andeq	r0, r1, r0, lsl #2
    1980:	00000205 	andeq	r0, r0, r5, lsl #4
    1984:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    1988:	3d140105 	ldfccs	f0, [r4, #-20]	; 0xffffffec
    198c:	0221212f 	eoreq	r2, r1, #-1073741813	; 0xc000000b
    1990:	01010002 	tsteq	r1, r2
    1994:	00020500 	andeq	r0, r2, r0, lsl #10
    1998:	03000000 	movweq	r0, #0
    199c:	14010680 	strne	r0, [r1], #-1664	; 0x680
    19a0:	2121212f 	teqcs	r1, pc, lsr #2
    19a4:	02212121 	eoreq	r2, r1, #1073741832	; 0x40000008
    19a8:	01010002 	tsteq	r1, r2
    19ac:	00020500 	andeq	r0, r2, r0, lsl #10
    19b0:	03000000 	movweq	r0, #0
    19b4:	14010695 	strne	r0, [r1], #-1685	; 0x695
    19b8:	21211e22 	teqcs	r1, r2, lsr #28
    19bc:	02022121 	andeq	r2, r2, #1073741832	; 0x40000008
    19c0:	00010100 	andeq	r0, r1, r0, lsl #2
    19c4:	00000205 	andeq	r0, r0, r5, lsl #4
    19c8:	a7030000 	strge	r0, [r3, -r0]
    19cc:	2f140106 	svccs	0x00140106
    19d0:	21212121 	teqcs	r1, r1, lsr #2
    19d4:	00020221 	andeq	r0, r2, r1, lsr #4
    19d8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    19dc:	00000002 	andeq	r0, r0, r2
    19e0:	06bc0300 	ldrteq	r0, [ip], r0, lsl #6
    19e4:	231d1a01 	tstcs	sp, #4096	; 0x1000
    19e8:	0006024f 	andeq	r0, r6, pc, asr #4
    19ec:	05000101 	streq	r0, [r0, #-257]	; 0x101
    19f0:	00000002 	andeq	r0, r0, r2
    19f4:	06d70300 	ldrbeq	r0, [r7], r0, lsl #6
    19f8:	232b1a01 	teqcs	fp, #4096	; 0x1000
    19fc:	0005026b 	andeq	r0, r5, fp, ror #4
    1a00:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1a04:	00000002 	andeq	r0, r0, r2
    1a08:	06fd0300 	ldrbteq	r0, [sp], r0, lsl #6
    1a0c:	010a0301 	tsteq	sl, r1, lsl #6
    1a10:	0233232b 	eorseq	r2, r3, #-1409286144	; 0xac000000
    1a14:	01010004 	tsteq	r1, r4
    1a18:	00020500 	andeq	r0, r2, r0, lsl #10
    1a1c:	03000000 	movweq	r0, #0
    1a20:	190107a0 	stmdbne	r1, {r5, r7, r8, r9, sl}
    1a24:	01000202 	tsteq	r0, r2, lsl #4
    1a28:	02050001 	andeq	r0, r5, #1
    1a2c:	00000000 	andeq	r0, r0, r0
    1a30:	0107bf03 	tsteq	r7, r3, lsl #30
    1a34:	00040219 	andeq	r0, r4, r9, lsl r2
    1a38:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1a3c:	00000002 	andeq	r0, r0, r2
    1a40:	07dc0300 	ldrbeq	r0, [ip, r0, lsl #6]
    1a44:	010a0301 	tsteq	sl, r1, lsl #6
    1a48:	0233232b 	eorseq	r2, r3, #-1409286144	; 0xac000000
    1a4c:	01010004 	tsteq	r1, r4
    1a50:	00020500 	andeq	r0, r2, r0, lsl #10
    1a54:	03000000 	movweq	r0, #0
    1a58:	170107f8 			; <UNDEFINED> instruction: 0x170107f8
    1a5c:	01000702 	tsteq	r0, r2, lsl #14
    1a60:	02050001 	andeq	r0, r5, #1
    1a64:	00000000 	andeq	r0, r0, r0
    1a68:	01088e03 	tsteq	r8, r3, lsl #28
    1a6c:	01029203 	tsteq	r2, r3, lsl #4
    1a70:	03234d23 	teqeq	r3, #2240	; 0x8c0
    1a74:	02207dee 	eoreq	r7, r0, #15232	; 0x3b80
    1a78:	01010006 	tsteq	r1, r6
    1a7c:	00020500 	andeq	r0, r2, r0, lsl #10
    1a80:	03000000 	movweq	r0, #0
    1a84:	200108ae 	andcs	r0, r1, lr, lsr #17
    1a88:	20780328 	rsbscs	r0, r8, r8, lsr #6
    1a8c:	2c2e0a03 	stccs	10, cr0, [lr], #-12
    1a90:	e4034022 	str	r4, [r3], #-34	; 0x22
    1a94:	4d232e01 	stcmi	14, cr2, [r3, #-4]!
    1a98:	7e9a0323 	cdpvc	3, 9, cr0, cr10, cr3, {1}
    1a9c:	00060220 	andeq	r0, r6, r0, lsr #4
    1aa0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1aa4:	00000002 	andeq	r0, r0, r2
    1aa8:	09b20300 	ldmibeq	r2!, {r8, r9}
    1aac:	20090301 	andcs	r0, r9, r1, lsl #6
    1ab0:	3f232b26 	svccc	0x00232b26
    1ab4:	01000202 	tsteq	r0, r2, lsl #4
    1ab8:	02050001 	andeq	r0, r5, #1
    1abc:	00000000 	andeq	r0, r0, r0
    1ac0:	0108dc03 	tsteq	r8, r3, lsl #24
    1ac4:	200a0320 	andcs	r0, sl, r0, lsr #6
    1ac8:	314b2831 	cmpcc	fp, r1, lsr r8
    1acc:	01000202 	tsteq	r0, r2, lsl #4
    1ad0:	02050001 	andeq	r0, r5, #1
    1ad4:	00000000 	andeq	r0, r0, r0
    1ad8:	01098e03 	tsteq	r9, r3, lsl #28
    1adc:	02312820 	eorseq	r2, r1, #32, 16	; 0x200000
    1ae0:	01010006 	tsteq	r1, r6
    1ae4:	00020500 	andeq	r0, r2, r0, lsl #10
    1ae8:	03000000 	movweq	r0, #0
    1aec:	180109d6 	stmdane	r1, {r1, r2, r4, r6, r7, r8, fp}
    1af0:	00020223 	andeq	r0, r2, r3, lsr #4
    1af4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1af8:	00000002 	andeq	r0, r0, r2
    1afc:	09f20300 	ldmibeq	r2!, {r8, r9}^
    1b00:	4d231901 	stcmi	9, cr1, [r3, #-4]!
    1b04:	00020223 	andeq	r0, r2, r3, lsr #4
    1b08:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1b0c:	00000002 	andeq	r0, r0, r2
    1b10:	0a980300 	beq	fe602718 <SCS_BASE+0x1e5f4718>
    1b14:	4d231a01 	vstmdbmi	r3!, {s2}
    1b18:	00020223 	andeq	r0, r2, r3, lsr #4
    1b1c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1b20:	00000002 	andeq	r0, r0, r2
    1b24:	0ac60300 	beq	ff18272c <SCS_BASE+0x1f17472c>
    1b28:	200c0301 	andcs	r0, ip, r1, lsl #6
    1b2c:	03272323 	teqeq	r7, #-1946157056	; 0x8c000000
    1b30:	32272e79 	eorcc	r2, r7, #1936	; 0x790
    1b34:	322e7803 	eorcc	r7, lr, #196608	; 0x30000
    1b38:	20770325 	rsbscs	r0, r7, r5, lsr #6
    1b3c:	32251c24 	eorcc	r1, r5, #36, 24	; 0x2400
    1b40:	242e7803 	strtcs	r7, [lr], #-2051	; 0x803
    1b44:	23232332 	teqcs	r3, #-939524096	; 0xc8000000
    1b48:	01000202 	tsteq	r0, r2, lsl #4
    1b4c:	02050001 	andeq	r0, r5, #1
    1b50:	00000000 	andeq	r0, r0, r0
    1b54:	010aff03 	tsteq	sl, r3, lsl #30
    1b58:	234d2319 	movtcs	r2, #54041	; 0xd319
    1b5c:	01000202 	tsteq	r0, r2, lsl #4
    1b60:	02050001 	andeq	r0, r5, #1
    1b64:	00000000 	andeq	r0, r0, r0
    1b68:	010ba103 	tsteq	fp, r3, lsl #2
    1b6c:	3f4d2319 	svccc	0x004d2319
    1b70:	01000202 	tsteq	r0, r2, lsl #4
    1b74:	02050001 	andeq	r0, r5, #1
    1b78:	00000000 	andeq	r0, r0, r0
    1b7c:	010bc303 	tsteq	fp, r3, lsl #6
    1b80:	234d2319 	movtcs	r2, #54041	; 0xd319
    1b84:	01000202 	tsteq	r0, r2, lsl #4
    1b88:	02050001 	andeq	r0, r5, #1
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	010be503 	tsteq	fp, r3, lsl #10
    1b94:	3f4d2318 	svccc	0x004d2318
    1b98:	01000202 	tsteq	r0, r2, lsl #4
    1b9c:	02050001 	andeq	r0, r5, #1
    1ba0:	00000000 	andeq	r0, r0, r0
    1ba4:	010c8203 	tsteq	ip, r3, lsl #4
    1ba8:	4f231d1a 	svcmi	0x00231d1a
    1bac:	01000602 	tsteq	r0, r2, lsl #12
    1bb0:	02050001 	andeq	r0, r5, #1
    1bb4:	00000000 	andeq	r0, r0, r0
    1bb8:	010c9d03 	tsteq	ip, r3, lsl #26
    1bbc:	4f231d1a 	svcmi	0x00231d1a
    1bc0:	01000602 	tsteq	r0, r2, lsl #12
    1bc4:	02050001 	andeq	r0, r5, #1
    1bc8:	00000000 	andeq	r0, r0, r0
    1bcc:	010cb903 	tsteq	ip, r3, lsl #18
    1bd0:	4f231d1a 	svcmi	0x00231d1a
    1bd4:	01000602 	tsteq	r0, r2, lsl #12
    1bd8:	02050001 	andeq	r0, r5, #1
    1bdc:	00000000 	andeq	r0, r0, r0
    1be0:	010cd503 	tsteq	ip, r3, lsl #10
    1be4:	4f231d1a 	svcmi	0x00231d1a
    1be8:	01000602 	tsteq	r0, r2, lsl #12
    1bec:	02050001 	andeq	r0, r5, #1
    1bf0:	00000000 	andeq	r0, r0, r0
    1bf4:	010cf403 	tsteq	ip, r3, lsl #8
    1bf8:	234d2319 	movtcs	r2, #54041	; 0xd319
    1bfc:	01000202 	tsteq	r0, r2, lsl #4
    1c00:	02050001 	andeq	r0, r5, #1
    1c04:	00000000 	andeq	r0, r0, r0
    1c08:	010d9503 	tsteq	sp, r3, lsl #10
    1c0c:	3f4d2319 	svccc	0x004d2319
    1c10:	01000202 	tsteq	r0, r2, lsl #4
    1c14:	02050001 	andeq	r0, r5, #1
    1c18:	00000000 	andeq	r0, r0, r0
    1c1c:	010db603 	tsteq	sp, r3, lsl #12
    1c20:	234d2319 	movtcs	r2, #54041	; 0xd319
    1c24:	01000202 	tsteq	r0, r2, lsl #4
    1c28:	02050001 	andeq	r0, r5, #1
    1c2c:	00000000 	andeq	r0, r0, r0
    1c30:	010dd703 	tsteq	sp, r3, lsl #14
    1c34:	3f4d2319 	svccc	0x004d2319
    1c38:	01000202 	tsteq	r0, r2, lsl #4
    1c3c:	02050001 	andeq	r0, r5, #1
    1c40:	00000000 	andeq	r0, r0, r0
    1c44:	010df703 	tsteq	sp, r3, lsl #14
    1c48:	234d231a 	movtcs	r2, #54042	; 0xd31a
    1c4c:	01000202 	tsteq	r0, r2, lsl #4
    1c50:	02050001 	andeq	r0, r5, #1
    1c54:	00000000 	andeq	r0, r0, r0
    1c58:	010e9803 	tsteq	lr, r3, lsl #16
    1c5c:	3f4d231a 	svccc	0x004d231a
    1c60:	01000202 	tsteq	r0, r2, lsl #4
    1c64:	02050001 	andeq	r0, r5, #1
    1c68:	00000000 	andeq	r0, r0, r0
    1c6c:	010eb903 	tsteq	lr, r3, lsl #18
    1c70:	234d231a 	movtcs	r2, #54042	; 0xd31a
    1c74:	01000202 	tsteq	r0, r2, lsl #4
    1c78:	02050001 	andeq	r0, r5, #1
    1c7c:	00000000 	andeq	r0, r0, r0
    1c80:	010eda03 	tsteq	lr, r3, lsl #20
    1c84:	3f4d231a 	svccc	0x004d231a
    1c88:	01000202 	tsteq	r0, r2, lsl #4
    1c8c:	02050001 	andeq	r0, r5, #1
    1c90:	00000000 	andeq	r0, r0, r0
    1c94:	010efb03 	tsteq	lr, r3, lsl #22
    1c98:	234d2319 	movtcs	r2, #54041	; 0xd319
    1c9c:	01000202 	tsteq	r0, r2, lsl #4
    1ca0:	02050001 	andeq	r0, r5, #1
    1ca4:	00000000 	andeq	r0, r0, r0
    1ca8:	010f9b03 	tsteq	pc, r3, lsl #22
    1cac:	3f312319 	svccc	0x00312319
    1cb0:	01000202 	tsteq	r0, r2, lsl #4
    1cb4:	02050001 	andeq	r0, r5, #1
    1cb8:	00000000 	andeq	r0, r0, r0
    1cbc:	010fbb03 	tsteq	pc, r3, lsl #22
    1cc0:	234d2319 	movtcs	r2, #54041	; 0xd319
    1cc4:	01000202 	tsteq	r0, r2, lsl #4
    1cc8:	02050001 	andeq	r0, r5, #1
    1ccc:	00000000 	andeq	r0, r0, r0
    1cd0:	010fdb03 	tsteq	pc, r3, lsl #22
    1cd4:	3f312319 	svccc	0x00312319
    1cd8:	01000202 	tsteq	r0, r2, lsl #4
    1cdc:	02050001 	andeq	r0, r5, #1
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	010ffb03 	tsteq	pc, r3, lsl #22
    1ce8:	234b2319 	movtcs	r2, #45849	; 0xb319
    1cec:	01000202 	tsteq	r0, r2, lsl #4
    1cf0:	02050001 	andeq	r0, r5, #1
    1cf4:	00000000 	andeq	r0, r0, r0
    1cf8:	01109803 	tsteq	r0, r3, lsl #16
    1cfc:	234b2319 	movtcs	r2, #45849	; 0xb319
    1d00:	01000202 	tsteq	r0, r2, lsl #4
    1d04:	02050001 	andeq	r0, r5, #1
    1d08:	00000000 	andeq	r0, r0, r0
    1d0c:	0110b603 	tsteq	r0, r3, lsl #12
    1d10:	3f4b2319 	svccc	0x004b2319
    1d14:	01000202 	tsteq	r0, r2, lsl #4
    1d18:	02050001 	andeq	r0, r5, #1
    1d1c:	00000000 	andeq	r0, r0, r0
    1d20:	0110d303 	tsteq	r0, r3, lsl #6
    1d24:	3f4b2319 	svccc	0x004b2319
    1d28:	01000202 	tsteq	r0, r2, lsl #4
    1d2c:	02050001 	andeq	r0, r5, #1
    1d30:	00000000 	andeq	r0, r0, r0
    1d34:	0110f103 	tsteq	r0, r3, lsl #2
    1d38:	3f4b2319 	svccc	0x004b2319
    1d3c:	01000202 	tsteq	r0, r2, lsl #4
    1d40:	02050001 	andeq	r0, r5, #1
    1d44:	00000000 	andeq	r0, r0, r0
    1d48:	01118e03 	tsteq	r1, r3, lsl #28
    1d4c:	3f4b2319 	svccc	0x004b2319
    1d50:	01000202 	tsteq	r0, r2, lsl #4
    1d54:	02050001 	andeq	r0, r5, #1
    1d58:	00000000 	andeq	r0, r0, r0
    1d5c:	0111ac03 	tsteq	r1, r3, lsl #24
    1d60:	3f4b2319 	svccc	0x004b2319
    1d64:	01000202 	tsteq	r0, r2, lsl #4
    1d68:	02050001 	andeq	r0, r5, #1
    1d6c:	00000000 	andeq	r0, r0, r0
    1d70:	0111ce03 	tsteq	r1, r3, lsl #28
    1d74:	76033119 			; <UNDEFINED> instruction: 0x76033119
    1d78:	025b2720 	subseq	r2, fp, #32, 14	; 0x800000
    1d7c:	01010005 	tsteq	r1, r5
    1d80:	00020500 	andeq	r0, r2, r0, lsl #10
    1d84:	03000000 	movweq	r0, #0
    1d88:	190111ea 	stmdbne	r1, {r1, r3, r5, r6, r7, r8, ip}
    1d8c:	20760331 	rsbscs	r0, r6, r1, lsr r3
    1d90:	05025b27 	streq	r5, [r2, #-2855]	; 0xb27
    1d94:	00010100 	andeq	r0, r1, r0, lsl #2
    1d98:	00000205 	andeq	r0, r0, r5, lsl #4
    1d9c:	92030000 	andls	r0, r3, #0
    1da0:	03190112 	tsteq	r9, #-2147483644	; 0x80000004
    1da4:	68272e79 	stmdavs	r7!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}
    1da8:	8534693f 	ldrhi	r6, [r4, #-2367]!	; 0x93f
    1dac:	01000602 	tsteq	r0, r2, lsl #12
    1db0:	02050001 	andeq	r0, r5, #1
    1db4:	00000000 	andeq	r0, r0, r0
    1db8:	0112b803 	tsteq	r2, r3, lsl #16
    1dbc:	4f231d1a 	svcmi	0x00231d1a
    1dc0:	01000602 	tsteq	r0, r2, lsl #12
    1dc4:	02050001 	andeq	r0, r5, #1
    1dc8:	00000000 	andeq	r0, r0, r0
    1dcc:	0112d503 	tsteq	r2, r3, lsl #10
    1dd0:	4f231d1a 	svcmi	0x00231d1a
    1dd4:	01000602 	tsteq	r0, r2, lsl #12
    1dd8:	02050001 	andeq	r0, r5, #1
    1ddc:	00000000 	andeq	r0, r0, r0
    1de0:	0112f003 	tsteq	r2, r3
    1de4:	4f231d1a 	svcmi	0x00231d1a
    1de8:	01000602 	tsteq	r0, r2, lsl #12
    1dec:	02050001 	andeq	r0, r5, #1
    1df0:	00000000 	andeq	r0, r0, r0
    1df4:	01138d03 	tsteq	r3, r3, lsl #26
    1df8:	05026918 	streq	r6, [r2, #-2328]	; 0x918
    1dfc:	00010100 	andeq	r0, r1, r0, lsl #2
    1e00:	00000205 	andeq	r0, r0, r5, lsl #4
    1e04:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    1e08:	69190113 	ldmdbvs	r9, {r0, r1, r4, r8}
    1e0c:	01000502 	tsteq	r0, r2, lsl #10
    1e10:	02050001 	andeq	r0, r5, #1
    1e14:	00000000 	andeq	r0, r0, r0
    1e18:	0113ca03 	tsteq	r3, r3, lsl #20
    1e1c:	05026918 	streq	r6, [r2, #-2328]	; 0x918
    1e20:	00010100 	andeq	r0, r1, r0, lsl #2
    1e24:	00000205 	andeq	r0, r0, r5, lsl #4
    1e28:	e4030000 	str	r0, [r3], #-0
    1e2c:	69180113 	ldmdbvs	r8, {r0, r1, r4, r8}
    1e30:	01000502 	tsteq	r0, r2, lsl #10
    1e34:	02050001 	andeq	r0, r5, #1
    1e38:	00000000 	andeq	r0, r0, r0
    1e3c:	0113f903 	tsteq	r3, r3, lsl #18
    1e40:	00020217 	andeq	r0, r2, r7, lsl r2
    1e44:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1e48:	00000002 	andeq	r0, r0, r2
    1e4c:	148a0300 	strne	r0, [sl], #768	; 0x300
    1e50:	02021701 	andeq	r1, r2, #262144	; 0x40000
    1e54:	00010100 	andeq	r0, r1, r0, lsl #2
    1e58:	00000205 	andeq	r0, r0, r5, lsl #4
    1e5c:	9c030000 	stcls	0, cr0, [r3], {-0}
    1e60:	02170114 	andseq	r0, r7, #20, 2
    1e64:	01010002 	tsteq	r1, r2
    1e68:	00020500 	andeq	r0, r2, r0, lsl #10
    1e6c:	03000000 	movweq	r0, #0
    1e70:	170114ae 	strne	r1, [r1, -lr, lsr #9]
    1e74:	01000202 	tsteq	r0, r2, lsl #4
    1e78:	02050001 	andeq	r0, r5, #1
    1e7c:	00000000 	andeq	r0, r0, r0
    1e80:	0114c003 	tsteq	r4, r3
    1e84:	00020217 	andeq	r0, r2, r7, lsl r2
    1e88:	05000101 	streq	r0, [r0, #-257]	; 0x101
    1e8c:	00000002 	andeq	r0, r0, r2
    1e90:	14d20300 	ldrbne	r0, [r2], #768	; 0x300
    1e94:	03021701 	movweq	r1, #9985	; 0x2701
    1e98:	00010100 	andeq	r0, r1, r0, lsl #2
    1e9c:	00000205 	andeq	r0, r0, r5, lsl #4
    1ea0:	ea030000 	b	c1ea8 <__Stack_Size+0xc1aa8>
    1ea4:	69180114 	ldmdbvs	r8, {r2, r4, r8}
    1ea8:	01000502 	tsteq	r0, r2, lsl #10
    1eac:	02050001 	andeq	r0, r5, #1
    1eb0:	00000000 	andeq	r0, r0, r0
    1eb4:	01158603 	tsteq	r5, r3, lsl #12
    1eb8:	07026918 	smladeq	r2, r8, r9, r6
    1ebc:	00010100 	andeq	r0, r1, r0, lsl #2
    1ec0:	00000205 	andeq	r0, r0, r5, lsl #4
    1ec4:	8a030000 	bhi	c1ecc <__Stack_Size+0xc1acc>
    1ec8:	28200105 	stmdacs	r0!, {r0, r2, r8}
    1ecc:	03200a03 	teqeq	r0, #12288	; 0x3000
    1ed0:	13032076 	movwne	r2, #12406	; 0x3076
    1ed4:	2e6f0320 	cdpcs	3, 6, cr0, cr15, cr0, {1}
    1ed8:	206e0344 	rsbcs	r0, lr, r4, asr #6
    1edc:	51201403 	teqpl	r0, r3, lsl #8
    1ee0:	694d323f 	stmdbvs	sp, {r0, r1, r2, r3, r4, r5, r9, ip, sp}^
    1ee4:	032e1103 	teqeq	lr, #-1073741824	; 0xc0000000
    1ee8:	32332e6f 	eorscc	r2, r3, #1776	; 0x6f0
    1eec:	2c30694d 	ldccs	9, cr6, [r0], #-308	; 0xfffffecc
    1ef0:	01000202 	tsteq	r0, r2, lsl #4
    1ef4:	02050001 	andeq	r0, r5, #1
    1ef8:	00000000 	andeq	r0, r0, r0
    1efc:	0115a203 	tsteq	r5, r3, lsl #4
    1f00:	05026918 	streq	r6, [r2, #-2328]	; 0x918
    1f04:	00010100 	andeq	r0, r1, r0, lsl #2
    1f08:	00000205 	andeq	r0, r0, r5, lsl #4
    1f0c:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    1f10:	69180115 	ldmdbvs	r8, {r0, r2, r4, r8}
    1f14:	01000702 	tsteq	r0, r2, lsl #14
    1f18:	02050001 	andeq	r0, r5, #1
    1f1c:	00000000 	andeq	r0, r0, r0
    1f20:	0104c903 	tsteq	r4, r3, lsl #18
    1f24:	03200903 	teqeq	r0, #49152	; 0xc000
    1f28:	09032077 	stmdbeq	r3, {r0, r1, r2, r4, r5, r6, sp}
    1f2c:	03332358 	teqeq	r3, #88, 6	; 0x60000001
    1f30:	60032e20 	andvs	r2, r3, r0, lsr #28
    1f34:	3331302e 	teqcc	r1, #46	; 0x2e
    1f38:	032e1603 	teqeq	lr, #3145728	; 0x300000
    1f3c:	03302e6a 	teqeq	r0, #1696	; 0x6a0
    1f40:	032e13ea 	teqeq	lr, #-1476395005	; 0xa8000003
    1f44:	03206c96 	teqeq	r0, #38400	; 0x9600
    1f48:	5a2013ea 	bpl	806ef8 <__Stack_Size+0x806af8>
    1f4c:	2f251f21 	svccs	0x00251f21
    1f50:	2f312529 	svccs	0x00312529
    1f54:	8e03215b 	mcrhi	1, 0, r2, cr3, cr11, {2}
    1f58:	0c03206c 	stceq	0, cr2, [r3], {108}	; 0x6c
    1f5c:	2e740320 	cdpcs	3, 7, cr0, cr4, cr0, {1}
    1f60:	2e149103 	mnfcss	f1, f3
    1f64:	3824215a 	stmdacc	r4!, {r1, r3, r4, r6, r8, sp}
    1f68:	2f312124 	svccs	0x00312124
    1f6c:	241c322a 	ldrcs	r3, [ip], #-554	; 0x22a
    1f70:	e9032131 	stmdb	r3, {r0, r4, r5, r8, sp}
    1f74:	2c22206b 	stccs	0, cr2, [r2], #-428	; 0xfffffe54
    1f78:	01000202 	tsteq	r0, r2, lsl #4
    1f7c:	02050001 	andeq	r0, r5, #1
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	0115d803 	tsteq	r5, r3, lsl #16
    1f88:	05023f18 	streq	r3, [r2, #-3864]	; 0xf18
    1f8c:	00010100 	andeq	r0, r1, r0, lsl #2
    1f90:	00000205 	andeq	r0, r0, r5, lsl #4
    1f94:	ec030000 	stc	0, cr0, [r3], {-0}
    1f98:	21170115 	tstcs	r7, r5, lsl r1
    1f9c:	01000202 	tsteq	r0, r2, lsl #4
    1fa0:	02050001 	andeq	r0, r5, #1
    1fa4:	00000000 	andeq	r0, r0, r0
    1fa8:	0115fd03 	tsteq	r5, r3, lsl #26
    1fac:	02022117 	andeq	r2, r2, #-1073741819	; 0xc0000005
    1fb0:	00010100 	andeq	r0, r1, r0, lsl #2
    1fb4:	00000205 	andeq	r0, r0, r5, lsl #4
    1fb8:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    1fbc:	21170116 	tstcs	r7, r6, lsl r1
    1fc0:	01000202 	tsteq	r0, r2, lsl #4
    1fc4:	02050001 	andeq	r0, r5, #1
    1fc8:	00000000 	andeq	r0, r0, r0
    1fcc:	01169f03 	tsteq	r6, r3, lsl #30
    1fd0:	02022f17 	andeq	r2, r2, #23, 30	; 0x5c
    1fd4:	00010100 	andeq	r0, r1, r0, lsl #2
    1fd8:	00000205 	andeq	r0, r0, r5, lsl #4
    1fdc:	af030000 	svcge	0x00030000
    1fe0:	21170116 	tstcs	r7, r6, lsl r1
    1fe4:	01000202 	tsteq	r0, r2, lsl #4
    1fe8:	02050001 	andeq	r0, r5, #1
    1fec:	00000000 	andeq	r0, r0, r0
    1ff0:	0116bf03 	tsteq	r6, r3, lsl #30
    1ff4:	02022117 	andeq	r2, r2, #-1073741819	; 0xc0000005
    1ff8:	00010100 	andeq	r0, r1, r0, lsl #2
    1ffc:	00000205 	andeq	r0, r0, r5, lsl #4
    2000:	dd030000 	stcle	0, cr0, [r3, #-0]
    2004:	031a0116 	tsteq	sl, #-2147483643	; 0x80000005
    2008:	04022e09 	streq	r2, [r2], #-3593	; 0xe09
    200c:	00010100 	andeq	r0, r1, r0, lsl #2
    2010:	00000205 	andeq	r0, r0, r5, lsl #4
    2014:	86030000 	strhi	r0, [r3], -r0
    2018:	02180117 	andseq	r0, r8, #-1073741819	; 0xc0000005
    201c:	01010004 	tsteq	r1, r4
    2020:	00020500 	andeq	r0, r2, r0, lsl #10
    2024:	03000000 	movweq	r0, #0
    2028:	030117a2 	movweq	r1, #6050	; 0x17a2
    202c:	22220109 	eorcs	r0, r2, #1073741826	; 0x40000002
    2030:	0200222c 	andeq	r2, r0, #44, 4	; 0xc0000002
    2034:	20060104 	andcs	r0, r6, r4, lsl #2
    2038:	01040200 	mrseq	r0, R12_usr
    203c:	02432206 	subeq	r2, r3, #1610612736	; 0x60000000
    2040:	01010001 	tsteq	r1, r1
    2044:	e2020500 	and	r0, r2, #0, 10
    2048:	0308000a 	movweq	r0, #32778	; 0x800a
    204c:	180117cd 	stmdane	r1, {r0, r2, r3, r6, r7, r8, r9, sl, ip}
    2050:	01000402 	tsteq	r0, r2, lsl #8
    2054:	0000de01 	andeq	sp, r0, r1, lsl #28
    2058:	61000200 	mrsvs	r0, R8_usr
    205c:	02000000 	andeq	r0, r0, #0
    2060:	0d0efb01 	vstreq	d15, [lr, #-4]
    2064:	01010100 	mrseq	r0, (UNDEF: 17)
    2068:	00000001 	andeq	r0, r0, r1
    206c:	01000001 	tsteq	r0, r1
    2070:	2f62696c 	svccs	0x0062696c
    2074:	00637273 	rsbeq	r7, r3, r3, ror r2
    2078:	2f62696c 	svccs	0x0062696c
    207c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2080:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2084:	31663233 	cmncc	r6, r3, lsr r2
    2088:	735f7830 	cmpvc	pc, #48, 16	; 0x300000
    208c:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2090:	632e6b63 	teqvs	lr, #101376	; 0x18c00
    2094:	00000100 	andeq	r0, r0, r0, lsl #2
    2098:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    209c:	30316632 	eorscc	r6, r1, r2, lsr r6
    20a0:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20a4:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    20a8:	00000200 	andeq	r0, r0, r0, lsl #4
    20ac:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    20b0:	30316632 	eorscc	r6, r1, r2, lsr r6
    20b4:	616d5f78 	smcvs	54776	; 0xd5f8
    20b8:	00682e70 	rsbeq	r2, r8, r0, ror lr
    20bc:	00000002 	andeq	r0, r0, r2
    20c0:	00020500 	andeq	r0, r2, r0, lsl #10
    20c4:	03000000 	movweq	r0, #0
    20c8:	2224012b 	eorcs	r0, r4, #-1073741814	; 0xc000000a
    20cc:	0006024e 	andeq	r0, r6, lr, asr #4
    20d0:	05000101 	streq	r0, [r0, #-257]	; 0x101
    20d4:	00000002 	andeq	r0, r0, r2
    20d8:	00c20300 	sbceq	r0, r2, r0, lsl #6
    20dc:	06021601 	streq	r1, [r2], -r1, lsl #12
    20e0:	00010100 	andeq	r0, r1, r0, lsl #2
    20e4:	0aec0205 	beq	ffb02900 <SCS_BASE+0x1faf4900>
    20e8:	d5030800 	strle	r0, [r3, #-2048]	; 0x800
    20ec:	3e160100 	mufccs	f0, f6, f0
    20f0:	025c304c 	subseq	r3, ip, #76	; 0x4c
    20f4:	01010006 	tsteq	r1, r6
    20f8:	00020500 	andeq	r0, r2, r0, lsl #10
    20fc:	03000000 	movweq	r0, #0
    2100:	260100f0 			; <UNDEFINED> instruction: 0x260100f0
    2104:	0240221e 	subeq	r2, r0, #-536870911	; 0xe0000001
    2108:	01010006 	tsteq	r1, r6
    210c:	00020500 	andeq	r0, r2, r0, lsl #10
    2110:	03000000 	movweq	r0, #0
    2114:	13010186 	movwne	r0, #4486	; 0x1186
    2118:	0004022f 	andeq	r0, r4, pc, lsr #4
    211c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2120:	00000002 	andeq	r0, r0, r2
    2124:	01960300 	orrseq	r0, r6, r0, lsl #6
    2128:	010a0301 	tsteq	sl, r1, lsl #6
    212c:	0323323e 	teqeq	r3, #-536870909	; 0xe0000003
    2130:	06022e09 	streq	r2, [r2], -r9, lsl #28
    2134:	23010100 	movwcs	r0, #4352	; 0x1100
    2138:	02000003 	andeq	r0, r0, #3
    213c:	00008700 	andeq	r8, r0, r0, lsl #14
    2140:	fb010200 	blx	4294a <__Stack_Size+0x4254a>
    2144:	01000d0e 	tsteq	r0, lr, lsl #26
    2148:	00010101 	andeq	r0, r1, r1, lsl #2
    214c:	00010000 	andeq	r0, r1, r0
    2150:	696c0100 	stmdbvs	ip!, {r8}^
    2154:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    2158:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    215c:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    2160:	73000063 	movwvc	r0, #99	; 0x63
    2164:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2168:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    216c:	6173755f 	cmnvs	r3, pc, asr r5
    2170:	632e7472 	teqvs	lr, #1912602624	; 0x72000000
    2174:	00000100 	andeq	r0, r0, r0, lsl #2
    2178:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    217c:	30316632 	eorscc	r6, r1, r2, lsr r6
    2180:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2184:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    2188:	00000200 	andeq	r0, r0, r0, lsl #4
    218c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2190:	30316632 	eorscc	r6, r1, r2, lsr r6
    2194:	616d5f78 	smcvs	54776	; 0xd5f8
    2198:	00682e70 	rsbeq	r2, r8, r0, ror lr
    219c:	73000002 	movwvc	r0, #2
    21a0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    21a4:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    21a8:	6173755f 	cmnvs	r3, pc, asr r5
    21ac:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    21b0:	00000200 	andeq	r0, r0, r0, lsl #4
    21b4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    21b8:	30316632 	eorscc	r6, r1, r2, lsr r6
    21bc:	63725f78 	cmnvs	r2, #120, 30	; 0x1e0
    21c0:	00682e63 	rsbeq	r2, r8, r3, ror #28
    21c4:	00000002 	andeq	r0, r0, r2
    21c8:	00020500 	andeq	r0, r2, r0, lsl #10
    21cc:	03000000 	movweq	r0, #0
    21d0:	240100da 	strcs	r0, [r1], #-218	; 0xda
    21d4:	1b033f08 	blne	d1dfc <__Stack_Size+0xd19fc>
    21d8:	2e660358 	mcrcs	3, 3, r0, cr6, cr8, {2}
    21dc:	5940595c 	stmdbpl	r0, {r2, r3, r4, r6, r8, fp, ip, lr}^
    21e0:	59405940 	stmdbpl	r0, {r6, r8, fp, ip, lr}^
    21e4:	2e7a0342 	cdpcs	3, 7, cr0, cr10, cr2, {2}
    21e8:	01000702 	tsteq	r0, r2, lsl #14
    21ec:	02050001 	andeq	r0, r5, #1
    21f0:	00000000 	andeq	r0, r0, r0
    21f4:	01018c03 	tsteq	r1, r3, lsl #24
    21f8:	26011503 	strcs	r1, [r1], -r3, lsl #10
    21fc:	22207a03 	eorcs	r7, r0, #12288	; 0x3000
    2200:	20650332 	rsbcs	r0, r5, r2, lsr r3
    2204:	03201e03 	teqeq	r0, #3, 28	; 0x30
    2208:	21032062 	tstcs	r3, r2, rrx
    220c:	78032820 	stmdavc	r3, {r5, fp, sp}
    2210:	7a03282e 	bvc	cc2d0 <__Stack_Size+0xcbed0>
    2214:	7a03342e 	bvc	cf2d4 <__Stack_Size+0xceed4>
    2218:	23323420 	teqcs	r2, #32, 8	; 0x20000000
    221c:	207a0326 	rsbscs	r0, sl, r6, lsr #6
    2220:	2e4e0322 	cdpcs	3, 4, cr0, cr14, cr2, {1}
    2224:	03203603 	teqeq	r0, #3145728	; 0x300000
    2228:	3903204a 	stmdbcc	r3, {r1, r3, r6, sp}
    222c:	243f2420 	ldrtcs	r2, [pc], #-1056	; 2234 <__Stack_Size+0x1e34>
    2230:	4d67521c 	sfmmi	f5, 2, [r7, #-112]!	; 0xffffff90
    2234:	022f773d 	eoreq	r7, pc, #15990784	; 0xf40000
    2238:	01010005 	tsteq	r1, r5
    223c:	00020500 	andeq	r0, r2, r0, lsl #10
    2240:	03000000 	movweq	r0, #0
    2244:	140101e8 	strne	r0, [r1], #-488	; 0x1e8
    2248:	212f1d40 	teqcs	pc, r0, asr #26
    224c:	02022121 	andeq	r2, r2, #1073741832	; 0x40000008
    2250:	00010100 	andeq	r0, r1, r0, lsl #2
    2254:	00000205 	andeq	r0, r0, r5, lsl #4
    2258:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    225c:	15030101 	strne	r0, [r3, #-257]	; 0x101
    2260:	206b0301 	rsbcs	r0, fp, r1, lsl #6
    2264:	03201503 	teqeq	r0, #12582912	; 0xc00000
    2268:	0a032076 	beq	ca448 <__Stack_Size+0xca048>
    226c:	3c760320 	ldclcc	3, cr0, [r6], #-128	; 0xffffff80
    2270:	03200a03 	teqeq	r0, #12288	; 0x3000
    2274:	32352e78 	eorscc	r2, r5, #120, 28	; 0x780
    2278:	01000202 	tsteq	r0, r2, lsl #4
    227c:	02050001 	andeq	r0, r5, #1
    2280:	00000000 	andeq	r0, r0, r0
    2284:	0102a303 	tsteq	r2, r3, lsl #6
    2288:	21212f14 	teqcs	r1, r4, lsl pc
    228c:	01000202 	tsteq	r0, r2, lsl #4
    2290:	02050001 	andeq	r0, r5, #1
    2294:	00000000 	andeq	r0, r0, r0
    2298:	0102b703 	tsteq	r2, r3, lsl #14
    229c:	4f231d1a 	svcmi	0x00231d1a
    22a0:	01000602 	tsteq	r0, r2, lsl #12
    22a4:	02050001 	andeq	r0, r5, #1
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	0102e203 	tsteq	r2, r3, lsl #4
    22b0:	03010d03 	movweq	r0, #7427	; 0x1d03
    22b4:	12032e73 	andne	r2, r3, #1840	; 0x730
    22b8:	301e3e20 	andscc	r3, lr, r0, lsr #28
    22bc:	32223022 	eorcc	r3, r2, #34	; 0x22
    22c0:	32221e24 	eorcc	r1, r2, #36, 28	; 0x240
    22c4:	01000402 	tsteq	r0, r2, lsl #8
    22c8:	02050001 	andeq	r0, r5, #1
    22cc:	00000000 	andeq	r0, r0, r0
    22d0:	01039d03 	tsteq	r3, r3, lsl #26
    22d4:	2a010a03 	bcs	44ae8 <__Stack_Size+0x446e8>
    22d8:	04023424 	streq	r3, [r2], #-1060	; 0x424
    22dc:	00010100 	andeq	r0, r1, r0, lsl #2
    22e0:	00000205 	andeq	r0, r0, r5, lsl #4
    22e4:	bc030000 	stclt	0, cr0, [r3], {-0}
    22e8:	68180103 	ldmdavs	r8, {r0, r1, r8}
    22ec:	01000502 	tsteq	r0, r2, lsl #10
    22f0:	02050001 	andeq	r0, r5, #1
    22f4:	00000000 	andeq	r0, r0, r0
    22f8:	0103d503 	tsteq	r3, r3, lsl #10
    22fc:	05026717 	streq	r6, [r2, #-1815]	; 0x717
    2300:	00010100 	andeq	r0, r1, r0, lsl #2
    2304:	00000205 	andeq	r0, r0, r5, lsl #4
    2308:	ea030000 	b	c2310 <__Stack_Size+0xc1f10>
    230c:	1d1a0103 	ldfnes	f0, [sl, #-12]
    2310:	06024f23 	streq	r4, [r2], -r3, lsr #30
    2314:	00010100 	andeq	r0, r1, r0, lsl #2
    2318:	00000205 	andeq	r0, r0, r5, lsl #4
    231c:	8a030000 	bhi	c2324 <__Stack_Size+0xc1f24>
    2320:	67170104 	ldrvs	r0, [r7, -r4, lsl #2]
    2324:	01000502 	tsteq	r0, r2, lsl #10
    2328:	02050001 	andeq	r0, r5, #1
    232c:	00000000 	andeq	r0, r0, r0
    2330:	01049f03 	tsteq	r4, r3, lsl #30
    2334:	4f231d1a 	svcmi	0x00231d1a
    2338:	01000602 	tsteq	r0, r2, lsl #12
    233c:	02050001 	andeq	r0, r5, #1
    2340:	00000000 	andeq	r0, r0, r0
    2344:	0104bb03 	tsteq	r4, r3, lsl #22
    2348:	00040218 	andeq	r0, r4, r8, lsl r2
    234c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2350:	000b1402 	andeq	r1, fp, r2, lsl #8
    2354:	04ce0308 	strbeq	r0, [lr], #776	; 0x308
    2358:	02211701 	eoreq	r1, r1, #262144	; 0x40000
    235c:	01010003 	tsteq	r1, r3
    2360:	00020500 	andeq	r0, r2, r0, lsl #10
    2364:	03000000 	movweq	r0, #0
    2368:	170104e0 	strne	r0, [r1, -r0, ror #9]
    236c:	01000602 	tsteq	r0, r2, lsl #12
    2370:	02050001 	andeq	r0, r5, #1
    2374:	00000000 	andeq	r0, r0, r0
    2378:	0104f303 	tsteq	r4, r3, lsl #6
    237c:	06023e17 			; <UNDEFINED> instruction: 0x06023e17
    2380:	00010100 	andeq	r0, r1, r0, lsl #2
    2384:	00000205 	andeq	r0, r0, r5, lsl #4
    2388:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    238c:	4c170105 	ldfmis	f0, [r7], {5}
    2390:	01000502 	tsteq	r0, r2, lsl #10
    2394:	02050001 	andeq	r0, r5, #1
    2398:	00000000 	andeq	r0, r0, r0
    239c:	01059f03 	tsteq	r5, r3, lsl #30
    23a0:	4f231d1a 	svcmi	0x00231d1a
    23a4:	01000602 	tsteq	r0, r2, lsl #12
    23a8:	02050001 	andeq	r0, r5, #1
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	0105bc03 	tsteq	r5, r3, lsl #24
    23b4:	4f231d1a 	svcmi	0x00231d1a
    23b8:	01000602 	tsteq	r0, r2, lsl #12
    23bc:	02050001 	andeq	r0, r5, #1
    23c0:	00000000 	andeq	r0, r0, r0
    23c4:	0105d903 	tsteq	r5, r3, lsl #18
    23c8:	4f231d1a 	svcmi	0x00231d1a
    23cc:	01000602 	tsteq	r0, r2, lsl #12
    23d0:	02050001 	andeq	r0, r5, #1
    23d4:	00000000 	andeq	r0, r0, r0
    23d8:	0105f803 	tsteq	r5, r3, lsl #16
    23dc:	05026717 	streq	r6, [r2, #-1815]	; 0x717
    23e0:	00010100 	andeq	r0, r1, r0, lsl #2
    23e4:	00000205 	andeq	r0, r0, r5, lsl #4
    23e8:	8d030000 	stchi	0, cr0, [r3, #-0]
    23ec:	1d1a0106 	ldfnes	f0, [sl, #-24]	; 0xffffffe8
    23f0:	06024f23 	streq	r4, [r2], -r3, lsr #30
    23f4:	00010100 	andeq	r0, r1, r0, lsl #2
    23f8:	00000205 	andeq	r0, r0, r5, lsl #4
    23fc:	b5030000 	strlt	r0, [r3, #-0]
    2400:	031a0106 	tsteq	sl, #-2147483647	; 0x80000001
    2404:	04022e09 	streq	r2, [r2], #-3593	; 0xe09
    2408:	00010100 	andeq	r0, r1, r0, lsl #2
    240c:	00000205 	andeq	r0, r0, r5, lsl #4
    2410:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    2414:	02180106 	andseq	r0, r8, #-2147483647	; 0x80000001
    2418:	01010004 	tsteq	r1, r4
    241c:	00020500 	andeq	r0, r2, r0, lsl #10
    2420:	03000000 	movweq	r0, #0
    2424:	0301078a 	movweq	r0, #6026	; 0x178a
    2428:	3e33200a 	cdpcc	0, 3, cr2, cr3, cr10, {0}
    242c:	3022301e 	eorcc	r3, r2, lr, lsl r0
    2430:	30423222 	subcc	r3, r2, r2, lsr #4
    2434:	01040200 	mrseq	r0, R12_usr
    2438:	0402001d 	streq	r0, [r2], #-29
    243c:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
    2440:	4e220104 	sufmis	f0, f2, f4
    2444:	00010224 	andeq	r0, r1, r4, lsr #4
    2448:	05000101 	streq	r0, [r0, #-257]	; 0x101
    244c:	00000002 	andeq	r0, r0, r2
    2450:	07da0300 	ldrbeq	r0, [sl, r0, lsl #6]
    2454:	010a0301 	tsteq	sl, r1, lsl #6
    2458:	0004023d 	andeq	r0, r4, sp, lsr r2
    245c:	00590101 	subseq	r0, r9, r1, lsl #2
    2460:	00020000 	andeq	r0, r2, r0
    2464:	00000031 	andeq	r0, r0, r1, lsr r0
    2468:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    246c:	0101000d 	tsteq	r1, sp
    2470:	00000101 	andeq	r0, r0, r1, lsl #2
    2474:	00000100 	andeq	r0, r0, r0, lsl #2
    2478:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    247c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2480:	74730000 	ldrbtvc	r0, [r3], #-0
    2484:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2488:	5f783031 	svcpl	0x00783031
    248c:	74636576 	strbtvc	r6, [r3], #-1398	; 0x576
    2490:	632e726f 	teqvs	lr, #-268435450	; 0xf0000006
    2494:	00000100 	andeq	r0, r0, r0, lsl #2
    2498:	02050000 	andeq	r0, r5, #0
    249c:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
    24a0:	0101d703 	tsteq	r1, r3, lsl #14
    24a4:	0402005f 	streq	r0, [r2], #-95	; 0x5f
    24a8:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    24ac:	0200564c 	andeq	r5, r0, #76, 12	; 0x4c00000
    24b0:	3e280104 	sufcce	f0, f0, f4
    24b4:	0e022f50 	mcreq	15, 0, r2, cr2, cr0, {2}
    24b8:	8b010100 	blhi	428c0 <__Stack_Size+0x424c0>
    24bc:	02000000 	andeq	r0, r0, #0
    24c0:	00006d00 	andeq	r6, r0, r0, lsl #26
    24c4:	fb010200 	blx	42cce <__Stack_Size+0x428ce>
    24c8:	01000d0e 	tsteq	r0, lr, lsl #26
    24cc:	00010101 	andeq	r0, r1, r1, lsl #2
    24d0:	00010000 	andeq	r0, r1, r0
    24d4:	696c0100 	stmdbvs	ip!, {r8}^
    24d8:	53552f62 	cmppl	r5, #392	; 0x188
    24dc:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    24e0:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    24e4:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    24e8:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    24ec:	2f2e0063 	svccs	0x002e0063
    24f0:	2f62696c 	svccs	0x0062696c
    24f4:	5f425355 	svcpl	0x00425355
    24f8:	2f62696c 	svccs	0x0062696c
    24fc:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2500:	62737500 	rsbsvs	r7, r3, #0, 10
    2504:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    2508:	00632e74 	rsbeq	r2, r3, r4, ror lr
    250c:	73000001 	movwvc	r0, #1
    2510:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2514:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2518:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    251c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2520:	75000002 	strvc	r0, [r0, #-2]
    2524:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    2528:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    252c:	00030068 	andeq	r0, r3, r8, rrx
    2530:	05000000 	streq	r0, [r0, #-0]
    2534:	00000002 	andeq	r0, r0, r2
    2538:	01350300 	teqeq	r5, r0, lsl #6
    253c:	211d3121 	tstcs	sp, r1, lsr #2
    2540:	1e223d2f 	cdpne	13, 2, cr3, cr2, cr15, {1}
    2544:	000f0222 	andeq	r0, pc, r2, lsr #4
    2548:	038c0101 	orreq	r0, ip, #1073741824	; 0x40000000
    254c:	00020000 	andeq	r0, r2, r0
    2550:	000000a3 	andeq	r0, r0, r3, lsr #1
    2554:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2558:	0101000d 	tsteq	r1, sp
    255c:	00000101 	andeq	r0, r0, r1, lsl #2
    2560:	00000100 	andeq	r0, r0, r0, lsl #2
    2564:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2568:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    256c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2570:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2574:	62696c00 	rsbvs	r6, r9, #0, 24
    2578:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    257c:	6c2f2e00 	stcvs	14, cr2, [pc], #-0	; 2584 <__Stack_Size+0x2184>
    2580:	552f6269 	strpl	r6, [pc, #-617]!	; 231f <__Stack_Size+0x1f1f>
    2584:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    2588:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    258c:	0000636e 	andeq	r6, r0, lr, ror #6
    2590:	5f627375 	svcpl	0x00627375
    2594:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xf63
    2598:	0100632e 	tsteq	r0, lr, lsr #6
    259c:	74730000 	ldrbtvc	r0, [r3], #-0
    25a0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    25a4:	5f783031 	svcpl	0x00783031
    25a8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
    25ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    25b0:	73750000 	cmnvc	r5, #0
    25b4:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
    25b8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    25bc:	75000003 	strvc	r0, [r0, #-3]
    25c0:	635f6273 	cmpvs	pc, #805306375	; 0x30000007
    25c4:	2e65726f 	cdpcs	2, 6, cr7, cr5, cr15, {3}
    25c8:	00030068 	andeq	r0, r3, r8, rrx
    25cc:	62737500 	rsbsvs	r7, r3, #0, 10
    25d0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    25d4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    25d8:	75000003 	strvc	r0, [r0, #-3]
    25dc:	6d5f6273 	lfmvs	f6, 2, [pc, #-460]	; 2418 <__Stack_Size+0x2018>
    25e0:	682e6d65 	stmdavs	lr!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}
    25e4:	00000300 	andeq	r0, r0, r0, lsl #6
    25e8:	5f627375 	svcpl	0x00627375
    25ec:	73676572 	cmnvc	r7, #478150656	; 0x1c800000
    25f0:	0300682e 	movweq	r6, #2094	; 0x82e
    25f4:	00000000 	andeq	r0, r0, r0
    25f8:	0b6c0205 	bleq	1b02e14 <__Stack_Size+0x1b02a14>
    25fc:	3d030800 	stccc	8, cr0, [r3, #-0]
    2600:	3e222f01 	cdpcc	15, 2, cr2, cr2, cr1, {0}
    2604:	022f4b22 	eoreq	r4, pc, #34816	; 0x8800
    2608:	01010005 	tsteq	r1, r5
    260c:	90020500 	andls	r0, r2, r0, lsl #10
    2610:	0308000b 	movweq	r0, #32779	; 0x800b
    2614:	2f0100eb 	svccs	0x000100eb
    2618:	4b223e22 	blmi	891ea8 <__Stack_Size+0x891aa8>
    261c:	0005022f 	andeq	r0, r5, pc, lsr #4
    2620:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2624:	000bb402 	andeq	fp, fp, r2, lsl #8
    2628:	01a30308 			; <UNDEFINED> instruction: 0x01a30308
    262c:	3d222f01 	stccc	15, cr2, [r2, #-4]!
    2630:	301e2224 	andscc	r2, lr, r4, lsr #4
    2634:	4422235b 	strtmi	r2, [r2], #-859	; 0x35b
    2638:	33404e30 	movtcc	r4, #3632	; 0xe30
    263c:	47402231 	smlaldxmi	r2, r0, r1, r2
    2640:	4c231d31 	stcmi	13, cr1, [r3], #-196	; 0xffffff3c
    2644:	580b0342 	stmdapl	fp, {r1, r6, r8, r9}
    2648:	2e60034b 	cdpcs	3, 6, cr0, cr0, cr11, {2}
    264c:	02202103 	eoreq	r2, r0, #-1073741824	; 0xc0000000
    2650:	01010007 	tsteq	r1, r7
    2654:	44020500 	strmi	r0, [r2], #-1280	; 0x500
    2658:	0308000c 	movweq	r0, #32780	; 0x800c
    265c:	130103f4 	movwne	r0, #5108	; 0x13f4
    2660:	212f2f1f 	teqcs	pc, pc, lsl pc	; <UNPREDICTABLE>
    2664:	04020033 	streq	r0, [r2], #-51	; 0x33
    2668:	06200601 	strteq	r0, [r0], -r1, lsl #12
    266c:	03924d30 	orrseq	r4, r2, #48, 26	; 0xc00
    2670:	79032e0c 	stmdbvc	r3, {r2, r3, r9, sl, fp, sp}
    2674:	2e0e032e 	cdpcs	3, 0, cr0, cr14, cr14, {1}
    2678:	85795121 	ldrbhi	r5, [r9, #-289]!	; 0x121
    267c:	2f2a244c 	svccs	0x002a244c
    2680:	231d302f 	tstcs	sp, #47	; 0x2f
    2684:	00120223 	andseq	r0, r2, r3, lsr #4
    2688:	05000101 	streq	r0, [r0, #-257]	; 0x101
    268c:	000cec02 	andeq	lr, ip, r2, lsl #24
    2690:	00d20308 	sbcseq	r0, r2, r8, lsl #6
    2694:	1f212201 	svcne	0x00212201
    2698:	21302f59 	teqcs	r0, r9, asr pc
    269c:	0222324b 	eoreq	r3, r2, #-1342177276	; 0xb0000004
    26a0:	01010008 	tsteq	r1, r8
    26a4:	24020500 	strcs	r0, [r2], #-1280	; 0x500
    26a8:	0308000d 	movweq	r0, #32781	; 0x800d
    26ac:	24010180 	strcs	r0, [r1], #-384	; 0x180
    26b0:	02003e84 	andeq	r3, r0, #132, 28	; 0x840
    26b4:	20060104 	andcs	r0, r6, r4, lsl #2
    26b8:	4b342f06 	blmi	d0e2d8 <__Stack_Size+0xd0ded8>
    26bc:	2f2f1e22 	svccs	0x002f1e22
    26c0:	07022125 	streq	r2, [r2, -r5, lsr #2]
    26c4:	00010100 	andeq	r0, r1, r0, lsl #2
    26c8:	0d6c0205 	sfmeq	f0, 2, [ip, #-20]!	; 0xffffffec
    26cc:	f5030800 			; <UNDEFINED> instruction: 0xf5030800
    26d0:	40210101 	eormi	r0, r1, r1, lsl #2
    26d4:	35224b3e 	strcc	r4, [r2, #-2878]!	; 0xb3e
    26d8:	0f03423d 	svceq	0x0003423d
    26dc:	20720320 	rsbscs	r0, r2, r0, lsr #6
    26e0:	75035f43 	strvc	r5, [r3, #-3907]	; 0xf43
    26e4:	31403220 	cmpcc	r0, r0, lsr #4
    26e8:	01040200 	mrseq	r0, R12_usr
    26ec:	2f062e06 	svccs	0x00062e06
    26f0:	473c0903 	ldrmi	r0, [ip, -r3, lsl #18]!
    26f4:	4d231d23 	stcmi	13, cr1, [r3, #-140]!	; 0xffffff74
    26f8:	235a5e4c 	cmpcs	sl, #76, 28	; 0x4c0
    26fc:	4bcc306c 	blmi	ff30e8b4 <SCS_BASE+0x1f3008b4>
    2700:	09022131 	stmdbeq	r2, {r0, r4, r5, r8, sp}
    2704:	00010100 	andeq	r0, r1, r0, lsl #2
    2708:	0e440205 	cdpeq	2, 4, cr0, cr4, cr5, {0}
    270c:	d2030800 	andle	r0, r3, #0, 16
    2710:	03260102 	teqeq	r6, #-2147483648	; 0x80000000
    2714:	7103200f 	tstvc	r3, pc
    2718:	200f0320 	andcs	r0, pc, r0, lsr #6
    271c:	21207103 	teqcs	r0, r3, lsl #2
    2720:	40325443 	eorsmi	r5, r2, r3, asr #8
    2724:	02002f31 	andeq	r2, r0, #49, 30	; 0xc4
    2728:	2e060104 	adfcss	f0, f6, f4
    272c:	09032106 	stmdbeq	r3, {r1, r2, r8, sp}
    2730:	1d31472e 	ldcne	7, cr4, [r1, #-184]!	; 0xffffff48
    2734:	4bbd8823 	blmi	fef647c8 <SCS_BASE+0x1ef567c8>
    2738:	032e6f03 	teqeq	lr, #3, 30
    273c:	07022012 	smladeq	r2, r2, r0, r2
    2740:	00010100 	andeq	r0, r1, r0, lsl #2
    2744:	0ed00205 	cdpeq	2, 13, cr0, cr0, cr5, {0}
    2748:	88030800 	stmdahi	r3, {fp}
    274c:	67210103 	strvs	r0, [r1, -r3, lsl #2]!
    2750:	0007024c 	andeq	r0, r7, ip, asr #4
    2754:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2758:	000ef402 	andeq	pc, lr, r2, lsl #8
    275c:	03a20308 			; <UNDEFINED> instruction: 0x03a20308
    2760:	223d1501 	eorscs	r1, sp, #4194304	; 0x400000
    2764:	022f233d 	eoreq	r2, pc, #-201326592	; 0xf4000000
    2768:	01010004 	tsteq	r1, r4
    276c:	10020500 	andne	r0, r2, r0, lsl #10
    2770:	0308000f 	movweq	r0, #32783	; 0x800f
    2774:	250107f6 	strcs	r0, [r1, #-2038]	; 0x7f6
    2778:	034b5a68 	movteq	r5, #47720	; 0xba68
    277c:	0d023c18 	stceq	12, cr3, [r2, #-96]	; 0xffffffa0
    2780:	00010100 	andeq	r0, r1, r0, lsl #2
    2784:	0f500205 	svceq	0x00500205
    2788:	ed030800 	stc	8, cr0, [r3, #-0]
    278c:	11030106 	tstne	r3, r6, lsl #2
    2790:	232b3f20 	teqcs	fp, #32, 30	; 0x80
    2794:	5d47311d 	stfple	f3, [r7, #-116]	; 0xffffff8c
    2798:	5a4c302f 	bpl	130e85c <__Stack_Size+0x130e45c>
    279c:	b1033d3f 	tstlt	r3, pc, lsr sp
    27a0:	304e4a7d 	subcc	r4, lr, sp, ror sl
    27a4:	294f3040 	stmdbcs	pc, {r6, ip, sp}^	; <UNPREDICTABLE>
    27a8:	10033d3d 	andne	r3, r3, sp, lsr sp
    27ac:	3c03304a 	stccc	0, cr3, [r3], {74}	; 0x4a
    27b0:	4403593c 	strmi	r5, [r3], #-2364	; 0x93c
    27b4:	443e3d3c 	ldrtmi	r3, [lr], #-3388	; 0xd3c
    27b8:	3e3d3d30 	mrccc	13, 1, r3, cr13, cr0, {1}
    27bc:	313c0b03 	teqcc	ip, r3, lsl #22
    27c0:	33314130 	teqcc	r1, #48, 2
    27c4:	2e090330 	mcrcs	3, 0, r0, cr9, cr0, {1}
    27c8:	362e0a03 	strtcc	r0, [lr], -r3, lsl #20
    27cc:	2e75039c 	mrccs	3, 3, r0, cr5, cr12, {4}
    27d0:	03201003 	teqeq	r0, #3
    27d4:	3e303c1a 	mrccc	12, 1, r3, cr0, cr10, {0}
    27d8:	303e302f 	eorscc	r3, lr, pc, lsr #32
    27dc:	5a42303e 	bpl	108e8dc <__Stack_Size+0x108e4dc>
    27e0:	305e4b69 	subscc	r4, lr, r9, ror #22
    27e4:	03307b75 	teqeq	r0, #119808	; 0x1d400
    27e8:	7203200e 	andvc	r2, r3, #14
    27ec:	035f4320 	cmpeq	pc, #32, 6	; 0x80000000
    27f0:	40322075 	eorsmi	r2, r2, r5, ror r0
    27f4:	09035931 	stmdbeq	r3, {r0, r4, r5, r8, fp, ip, lr}
    27f8:	3050303c 	subscc	r3, r0, ip, lsr r0
    27fc:	89674b59 	stmdbhi	r7!, {r0, r3, r4, r6, r8, r9, fp, lr}^
    2800:	2f233d22 	svccs	0x00233d22
    2804:	41306732 	teqmi	r0, r2, lsr r7
    2808:	083f3169 	ldmdaeq	pc!, {r0, r3, r5, r6, r8, ip, sp}	; <UNPREDICTABLE>
    280c:	4c314d25 	ldcmi	13, cr4, [r1], #-148	; 0xffffff6c
    2810:	305a303f 	subscc	r3, sl, pc, lsr r0
    2814:	404b405a 	submi	r4, fp, sl, asr r0
    2818:	4a39032f 	bmi	e434dc <__Stack_Size+0xe430dc>
    281c:	7ecc032f 	cdpvc	3, 12, cr0, cr12, cr15, {1}
    2820:	2e2c032e 	cdpcs	3, 2, cr0, cr12, cr14, {1}
    2824:	022e0b03 	eoreq	r0, lr, #3072	; 0xc00
    2828:	0101000f 	tsteq	r1, pc
    282c:	38020500 	stmdacc	r2, {r8, sl}
    2830:	03080012 	movweq	r0, #32786	; 0x8012
    2834:	210107cb 	smlabtcs	r1, fp, r7, r0
    2838:	0402003e 	streq	r0, [r2], #-62	; 0x3e
    283c:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    2840:	04020033 	streq	r0, [r2], #-51	; 0x33
    2844:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    2848:	2e7bea03 	vaddcs.f32	s29, s22, s6
    284c:	2633221e 			; <UNDEFINED> instruction: 0x2633221e
    2850:	2f211f59 	svccs	0x00211f59
    2854:	78331b25 	ldmdavc	r3!, {r0, r2, r5, r8, r9, fp, ip}
    2858:	2f1f2130 	svccs	0x001f2130
    285c:	3f2f211f 	svccc	0x002f211f
    2860:	4e22404c 	cdpmi	0, 2, cr4, cr2, cr12, {2}
    2864:	03ef033d 	mvneq	r0, #-201326592	; 0xf4000000
    2868:	03303f9e 	teqeq	r0, #632	; 0x278
    286c:	17034a76 	smlsdxne	r3, r6, sl, r4
    2870:	022d3120 	eoreq	r3, sp, #32, 2
    2874:	0101000f 	tsteq	r1, pc
    2878:	08020500 	stmdaeq	r2, {r8, sl}
    287c:	03080013 	movweq	r0, #32787	; 0x8013
    2880:	250108a2 	strcs	r0, [r1, #-2210]	; 0x8a2
    2884:	04020031 	streq	r0, [r2], #-49	; 0x31
    2888:	00200601 	eoreq	r0, r0, r1, lsl #12
    288c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2890:	04020076 	streq	r0, [r2], #-118	; 0x76
    2894:	02329c02 	eorseq	r9, r2, #512	; 0x200
    2898:	01010009 	tsteq	r1, r9
    289c:	48020500 	stmdami	r2, {r8, sl}
    28a0:	03080013 	movweq	r0, #32787	; 0x8013
    28a4:	210107a3 	smlatbcs	r1, r3, r7, r0
    28a8:	0402003e 	streq	r0, [r2], #-62	; 0x3e
    28ac:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    28b0:	303f3030 	eorscc	r3, pc, r0, lsr r0	; <UNPREDICTABLE>
    28b4:	01040200 	mrseq	r0, R12_usr
    28b8:	0402003d 	streq	r0, [r2], #-61	; 0x3d
    28bc:	3d311f01 	ldccc	15, cr1, [r1, #-4]!
    28c0:	3123504c 	teqcc	r3, ip, asr #32
    28c4:	0009022d 	andeq	r0, r9, sp, lsr #4
    28c8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    28cc:	0013a402 	andseq	sl, r3, r2, lsl #8
    28d0:	08ba0308 	ldmeq	sl!, {r3, r8, r9}
    28d4:	00010201 	andeq	r0, r1, r1, lsl #4
    28d8:	00a50101 	adceq	r0, r5, r1, lsl #2
    28dc:	00020000 	andeq	r0, r2, r0
    28e0:	0000004c 	andeq	r0, r0, ip, asr #32
    28e4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    28e8:	0101000d 	tsteq	r1, sp
    28ec:	00000101 	andeq	r0, r0, r1, lsl #2
    28f0:	00000100 	andeq	r0, r0, r0, lsl #2
    28f4:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    28f8:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    28fc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2900:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2904:	62696c00 	rsbvs	r6, r9, #0, 24
    2908:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    290c:	73750000 	cmnvc	r5, #0
    2910:	656d5f62 	strbvs	r5, [sp, #-3938]!	; 0xf62
    2914:	00632e6d 	rsbeq	r2, r3, sp, ror #28
    2918:	73000001 	movwvc	r0, #1
    291c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2920:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2924:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    2928:	00682e65 	rsbeq	r2, r8, r5, ror #28
    292c:	00000002 	andeq	r0, r0, r2
    2930:	a6020500 	strge	r0, [r2], -r0, lsl #10
    2934:	03080013 	movweq	r0, #32787	; 0x8013
    2938:	2b240124 	blcs	902dd0 <__Stack_Size+0x9029d0>
    293c:	21232b23 	teqcs	r3, r3, lsr #22
    2940:	01040200 	mrseq	r0, R12_usr
    2944:	02002006 	andeq	r2, r0, #6
    2948:	4e060204 	cdpmi	2, 0, cr0, cr6, cr4, {0}
    294c:	02040200 	andeq	r0, r4, #0, 4
    2950:	0402002c 	streq	r0, [r2], #-44	; 0x2c
    2954:	02003002 	andeq	r3, r0, #2
    2958:	4e2f0204 	cdpmi	2, 2, cr0, cr15, cr4, {0}
    295c:	01000102 	tsteq	r0, r2, lsl #2
    2960:	02050001 	andeq	r0, r5, #1
    2964:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
    2968:	24013d03 	strcs	r3, [r1], #-3331	; 0xd03
    296c:	232b232b 	teqcs	fp, #-1409286144	; 0xac000000
    2970:	04020021 	streq	r0, [r2], #-33	; 0x21
    2974:	00200601 	eoreq	r0, r0, r1, lsl #12
    2978:	06020402 	streq	r0, [r2], -r2, lsl #8
    297c:	01026930 	tsteq	r2, r0, lsr r9
    2980:	ee010100 	adfs	f0, f1, f0
    2984:	02000004 	andeq	r0, r0, #4
    2988:	00006d00 	andeq	r6, r0, r0, lsl #26
    298c:	fb010200 	blx	43196 <__Stack_Size+0x42d96>
    2990:	01000d0e 	tsteq	r0, lr, lsl #26
    2994:	00010101 	andeq	r0, r1, r1, lsl #2
    2998:	00010000 	andeq	r0, r1, r0
    299c:	696c0100 	stmdbvs	ip!, {r8}^
    29a0:	53552f62 	cmppl	r5, #392	; 0x188
    29a4:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    29a8:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    29ac:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    29b0:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    29b4:	2f2e0063 	svccs	0x002e0063
    29b8:	2f62696c 	svccs	0x0062696c
    29bc:	5f425355 	svcpl	0x00425355
    29c0:	2f62696c 	svccs	0x0062696c
    29c4:	00636e69 	rsbeq	r6, r3, r9, ror #28
    29c8:	62737500 	rsbsvs	r7, r3, #0, 10
    29cc:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    29d0:	00632e73 	rsbeq	r2, r3, r3, ror lr
    29d4:	73000001 	movwvc	r0, #1
    29d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    29dc:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    29e0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    29e4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    29e8:	75000002 	strvc	r0, [r0, #-2]
    29ec:	725f6273 	subsvc	r6, pc, #805306375	; 0x30000007
    29f0:	2e736765 	cdpcs	7, 7, cr6, cr3, cr5, {3}
    29f4:	00030068 	andeq	r0, r3, r8, rrx
    29f8:	05000000 	streq	r0, [r0, #-0]
    29fc:	00000002 	andeq	r0, r0, r2
    2a00:	01230300 	teqeq	r3, r0, lsl #6
    2a04:	00060213 	andeq	r0, r6, r3, lsl r2
    2a08:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2a0c:	00000002 	andeq	r0, r0, r2
    2a10:	012f0300 	teqeq	pc, r0, lsl #6
    2a14:	04022f13 	streq	r2, [r2], #-3859	; 0xf13
    2a18:	00010100 	andeq	r0, r1, r0, lsl #2
    2a1c:	00000205 	andeq	r0, r0, r5, lsl #4
    2a20:	3b030000 	blcc	c2a28 <__Stack_Size+0xc2628>
    2a24:	06021301 	streq	r1, [r2], -r1, lsl #6
    2a28:	00010100 	andeq	r0, r1, r0, lsl #2
    2a2c:	00000205 	andeq	r0, r0, r5, lsl #4
    2a30:	c7030000 	strgt	r0, [r3, -r0]
    2a34:	2f130100 	svccs	0x00130100
    2a38:	01000402 	tsteq	r0, r2, lsl #8
    2a3c:	02050001 	andeq	r0, r5, #1
    2a40:	00000000 	andeq	r0, r0, r0
    2a44:	0100d303 	tsteq	r0, r3, lsl #6
    2a48:	04022f13 	streq	r2, [r2], #-3859	; 0xf13
    2a4c:	00010100 	andeq	r0, r1, r0, lsl #2
    2a50:	00000205 	andeq	r0, r0, r5, lsl #4
    2a54:	df030000 	svcle	0x00030000
    2a58:	02130100 	andseq	r0, r3, #0, 2
    2a5c:	01010006 	tsteq	r1, r6
    2a60:	00020500 	andeq	r0, r2, r0, lsl #10
    2a64:	03000000 	movweq	r0, #0
    2a68:	130100eb 	movwne	r0, #4331	; 0x10eb
    2a6c:	0004022f 	andeq	r0, r4, pc, lsr #4
    2a70:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2a74:	0013fc02 	andseq	pc, r3, r2, lsl #24
    2a78:	00f70308 	rscseq	r0, r7, r8, lsl #6
    2a7c:	08021301 	stmdaeq	r2, {r0, r8, r9, ip}
    2a80:	00010100 	andeq	r0, r1, r0, lsl #2
    2a84:	00000205 	andeq	r0, r0, r5, lsl #4
    2a88:	83030000 	movwhi	r0, #12288	; 0x3000
    2a8c:	2f130101 	svccs	0x00130101
    2a90:	01000402 	tsteq	r0, r2, lsl #8
    2a94:	02050001 	andeq	r0, r5, #1
    2a98:	00000000 	andeq	r0, r0, r0
    2a9c:	01019003 	tsteq	r1, r3
    2aa0:	00070213 	andeq	r0, r7, r3, lsl r2
    2aa4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2aa8:	00000002 	andeq	r0, r0, r2
    2aac:	019c0300 	orrseq	r0, ip, r0, lsl #6
    2ab0:	02671301 	rsbeq	r1, r7, #67108864	; 0x4000000
    2ab4:	01010002 	tsteq	r1, r2
    2ab8:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    2abc:	03080014 	movweq	r0, #32788	; 0x8014
    2ac0:	130101a9 	movwne	r0, #4521	; 0x11a9
    2ac4:	01000e02 	tsteq	r0, r2, lsl #28
    2ac8:	02050001 	andeq	r0, r5, #1
    2acc:	00000000 	andeq	r0, r0, r0
    2ad0:	0101b503 	tsteq	r1, r3, lsl #10
    2ad4:	03026713 	movweq	r6, #10003	; 0x2713
    2ad8:	00010100 	andeq	r0, r1, r0, lsl #2
    2adc:	14280205 	strtne	r0, [r8], #-517	; 0x205
    2ae0:	c2030800 	andgt	r0, r3, #0, 16
    2ae4:	02130101 	andseq	r0, r3, #1073741824	; 0x40000000
    2ae8:	01010019 	tsteq	r1, r9, lsl r0
    2aec:	5a020500 	bpl	83ef4 <__Stack_Size+0x83af4>
    2af0:	03080014 	movweq	r0, #32788	; 0x8014
    2af4:	130101cf 	movwne	r0, #4559	; 0x11cf
    2af8:	01001902 	tsteq	r0, r2, lsl #18
    2afc:	02050001 	andeq	r0, r5, #1
    2b00:	00000000 	andeq	r0, r0, r0
    2b04:	0101dc03 	tsteq	r1, r3, lsl #24
    2b08:	03014103 	movweq	r4, #4355	; 0x1103
    2b0c:	035800c2 	cmpeq	r8, #194	; 0xc2
    2b10:	03207fbe 	teqeq	r0, #760	; 0x2f8
    2b14:	222000c2 	eorcs	r0, r0, #194	; 0xc2
    2b18:	0502303e 	streq	r3, [r2, #-62]	; 0x3e
    2b1c:	00010100 	andeq	r0, r1, r0, lsl #2
    2b20:	00000205 	andeq	r0, r0, r5, lsl #4
    2b24:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    2b28:	67130101 	ldrvs	r0, [r3, -r1, lsl #2]
    2b2c:	01000302 	tsteq	r0, r2, lsl #6
    2b30:	02050001 	andeq	r0, r5, #1
    2b34:	00000000 	andeq	r0, r0, r0
    2b38:	0101fd03 	tsteq	r1, r3, lsl #26
    2b3c:	03026713 	movweq	r6, #10003	; 0x2713
    2b40:	00010100 	andeq	r0, r1, r0, lsl #2
    2b44:	148c0205 	strne	r0, [ip], #517	; 0x205
    2b48:	89030800 	stmdbhi	r3, {fp}
    2b4c:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    2b50:	01010013 	tsteq	r1, r3, lsl r0
    2b54:	b2020500 	andlt	r0, r2, #0, 10
    2b58:	03080014 	movweq	r0, #32788	; 0x8014
    2b5c:	13010295 	movwne	r0, #4757	; 0x1295
    2b60:	01001302 	tsteq	r0, r2, lsl #6
    2b64:	02050001 	andeq	r0, r5, #1
    2b68:	00000000 	andeq	r0, r0, r0
    2b6c:	0102a103 	tsteq	r2, r3, lsl #2
    2b70:	00100213 	andseq	r0, r0, r3, lsl r2
    2b74:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2b78:	00000002 	andeq	r0, r0, r2
    2b7c:	02ad0300 	adceq	r0, sp, #0, 6
    2b80:	10021301 	andne	r1, r2, r1, lsl #6
    2b84:	00010100 	andeq	r0, r1, r0, lsl #2
    2b88:	14d80205 	ldrbne	r0, [r8], #517	; 0x205
    2b8c:	b8030800 	stmdalt	r3, {fp}
    2b90:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    2b94:	01010010 	tsteq	r1, r0, lsl r0
    2b98:	00020500 	andeq	r0, r2, r0, lsl #10
    2b9c:	03000000 	movweq	r0, #0
    2ba0:	130102c3 	movwne	r0, #4803	; 0x12c3
    2ba4:	01001002 	tsteq	r0, r2
    2ba8:	02050001 	andeq	r0, r5, #1
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	0102ce03 	tsteq	r2, r3, lsl #28
    2bb4:	00100213 	andseq	r0, r0, r3, lsl r2
    2bb8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2bbc:	00000002 	andeq	r0, r0, r2
    2bc0:	02d90300 	sbcseq	r0, r9, #0, 6
    2bc4:	10021301 	andne	r1, r2, r1, lsl #6
    2bc8:	00010100 	andeq	r0, r1, r0, lsl #2
    2bcc:	00000205 	andeq	r0, r0, r5, lsl #4
    2bd0:	e4030000 	str	r0, [r3], #-0
    2bd4:	83130102 	tsthi	r3, #-2147483648	; 0x80000000
    2bd8:	01000502 	tsteq	r0, r2, lsl #10
    2bdc:	02050001 	andeq	r0, r5, #1
    2be0:	00000000 	andeq	r0, r0, r0
    2be4:	0102ef03 	tsteq	r2, r3, lsl #30
    2be8:	05028313 	streq	r8, [r2, #-787]	; 0x313
    2bec:	00010100 	andeq	r0, r1, r0, lsl #2
    2bf0:	00000205 	andeq	r0, r0, r5, lsl #4
    2bf4:	fa030000 	blx	c2bfc <__Stack_Size+0xc27fc>
    2bf8:	02130102 	andseq	r0, r3, #-2147483648	; 0x80000000
    2bfc:	0101000c 	tsteq	r1, ip
    2c00:	00020500 	andeq	r0, r2, r0, lsl #10
    2c04:	03000000 	movweq	r0, #0
    2c08:	13010385 	movwne	r0, #4997	; 0x1385
    2c0c:	01000e02 	tsteq	r0, r2, lsl #28
    2c10:	02050001 	andeq	r0, r5, #1
    2c14:	00000000 	andeq	r0, r0, r0
    2c18:	01039003 	tsteq	r3, r3
    2c1c:	00100213 	andseq	r0, r0, r3, lsl r2
    2c20:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2c24:	00000002 	andeq	r0, r0, r2
    2c28:	039b0300 	orrseq	r0, fp, #0, 6
    2c2c:	10021301 	andne	r1, r2, r1, lsl #6
    2c30:	00010100 	andeq	r0, r1, r0, lsl #2
    2c34:	14f80205 	ldrbtne	r0, [r8], #517	; 0x205
    2c38:	a6030800 	strge	r0, [r3], -r0, lsl #16
    2c3c:	00130103 	andseq	r0, r3, r3, lsl #2
    2c40:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c44:	000a0282 	andeq	r0, sl, r2, lsl #5
    2c48:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2c4c:	00151c02 	andseq	r1, r5, r2, lsl #24
    2c50:	03b10308 			; <UNDEFINED> instruction: 0x03b10308
    2c54:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    2c58:	82060104 	andhi	r0, r6, #4, 2
    2c5c:	01000a02 	tsteq	r0, r2, lsl #20
    2c60:	02050001 	andeq	r0, r5, #1
    2c64:	00000000 	andeq	r0, r0, r0
    2c68:	0103bd03 	tsteq	r3, r3, lsl #26
    2c6c:	01000813 	tsteq	r0, r3, lsl r8
    2c70:	02050001 	andeq	r0, r5, #1
    2c74:	00000000 	andeq	r0, r0, r0
    2c78:	0103c803 	tsteq	r3, r3, lsl #16
    2c7c:	03026713 	movweq	r6, #10003	; 0x2713
    2c80:	00010100 	andeq	r0, r1, r0, lsl #2
    2c84:	15400205 	strbne	r0, [r0, #-517]	; 0x205
    2c88:	d4030800 	strle	r0, [r3], #-2048	; 0x800
    2c8c:	02130103 	andseq	r0, r3, #-1073741824	; 0xc0000000
    2c90:	01010010 	tsteq	r1, r0, lsl r0
    2c94:	60020500 	andvs	r0, r2, r0, lsl #10
    2c98:	03080015 	movweq	r0, #32789	; 0x8015
    2c9c:	130103e0 	movwne	r0, #5088	; 0x13e0
    2ca0:	01001002 	tsteq	r0, r2
    2ca4:	02050001 	andeq	r0, r5, #1
    2ca8:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
    2cac:	0103eb03 	tsteq	r3, r3, lsl #22
    2cb0:	04029f13 	streq	r9, [r2], #-3859	; 0xf13
    2cb4:	00010100 	andeq	r0, r1, r0, lsl #2
    2cb8:	159c0205 	ldrne	r0, [ip, #517]	; 0x205
    2cbc:	f6030800 			; <UNDEFINED> instruction: 0xf6030800
    2cc0:	83130103 	tsthi	r3, #-1073741824	; 0xc0000000
    2cc4:	01000602 	tsteq	r0, r2, lsl #12
    2cc8:	02050001 	andeq	r0, r5, #1
    2ccc:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
    2cd0:	01048203 	tsteq	r4, r3, lsl #4
    2cd4:	000e0213 	andeq	r0, lr, r3, lsl r2
    2cd8:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2cdc:	00000002 	andeq	r0, r0, r2
    2ce0:	048e0300 	streq	r0, [lr], #768	; 0x300
    2ce4:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    2ce8:	2e060104 	adfcss	f0, f6, f4
    2cec:	02040200 	andeq	r0, r4, #0, 4
    2cf0:	0007029e 	muleq	r7, lr, r2
    2cf4:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2cf8:	0015d402 	andseq	sp, r5, r2, lsl #8
    2cfc:	049a0308 	ldreq	r0, [sl], #776	; 0x308
    2d00:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    2d04:	ac060104 	stfges	f0, [r6], {4}
    2d08:	02040200 	andeq	r0, r4, #0, 4
    2d0c:	000b029e 	muleq	fp, lr, r2
    2d10:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2d14:	00000002 	andeq	r0, r0, r2
    2d18:	04a50300 	strteq	r0, [r5], #768	; 0x300
    2d1c:	02911301 	addseq	r1, r1, #67108864	; 0x4000000
    2d20:	01010007 	tsteq	r1, r7
    2d24:	14020500 	strne	r0, [r2], #-1280	; 0x500
    2d28:	03080016 	movweq	r0, #32790	; 0x8016
    2d2c:	130104b0 	movwne	r0, #5296	; 0x14b0
    2d30:	00070291 	muleq	r7, r1, r2
    2d34:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2d38:	00000002 	andeq	r0, r0, r2
    2d3c:	04bd0300 	ldrteq	r0, [sp], #768	; 0x300
    2d40:	1b022101 	blne	8b14c <__Stack_Size+0x8ad4c>
    2d44:	00010100 	andeq	r0, r1, r0, lsl #2
    2d48:	00000205 	andeq	r0, r0, r5, lsl #4
    2d4c:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    2d50:	02130104 	andseq	r0, r3, #4, 2
    2d54:	01010010 	tsteq	r1, r0, lsl r0
    2d58:	00020500 	andeq	r0, r2, r0, lsl #10
    2d5c:	03000000 	movweq	r0, #0
    2d60:	130104d5 	movwne	r0, #5333	; 0x14d5
    2d64:	01001002 	tsteq	r0, r2
    2d68:	02050001 	andeq	r0, r5, #1
    2d6c:	00000000 	andeq	r0, r0, r0
    2d70:	0104e003 	tsteq	r4, r3
    2d74:	04029f13 	streq	r9, [r2], #-3859	; 0xf13
    2d78:	00010100 	andeq	r0, r1, r0, lsl #2
    2d7c:	00000205 	andeq	r0, r0, r5, lsl #4
    2d80:	eb030000 	bl	c2d88 <__Stack_Size+0xc2988>
    2d84:	83130104 	tsthi	r3, #4, 2
    2d88:	01000602 	tsteq	r0, r2, lsl #12
    2d8c:	02050001 	andeq	r0, r5, #1
    2d90:	00000000 	andeq	r0, r0, r0
    2d94:	0104f703 	tsteq	r4, r3, lsl #14
    2d98:	00211f13 	eoreq	r1, r1, r3, lsl pc
    2d9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2da0:	04020020 	streq	r0, [r2], #-32
    2da4:	00580802 	subseq	r0, r8, r2, lsl #16
    2da8:	f2010402 	vshl.s8	d0, d2, d1
    2dac:	02040200 	andeq	r0, r4, #0, 4
    2db0:	0402009e 	streq	r0, [r2], #-158	; 0x9e
    2db4:	02002e01 	andeq	r2, r0, #1, 28
    2db8:	12080204 	andne	r0, r8, #4, 4	; 0x40000000
    2dbc:	01000e02 	tsteq	r0, r2, lsl #28
    2dc0:	02050001 	andeq	r0, r5, #1
    2dc4:	00000000 	andeq	r0, r0, r0
    2dc8:	01058303 	tsteq	r5, r3, lsl #6
    2dcc:	04020013 	streq	r0, [r2], #-19
    2dd0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2dd4:	08020402 	stmdaeq	r2, {r1, sl}
    2dd8:	0402004a 	streq	r0, [r2], #-74	; 0x4a
    2ddc:	0e029001 	cdpeq	0, 0, cr9, cr2, cr1, {0}
    2de0:	00010100 	andeq	r0, r1, r0, lsl #2
    2de4:	00000205 	andeq	r0, r0, r5, lsl #4
    2de8:	8f030000 	svchi	0x00030000
    2dec:	00130105 	andseq	r0, r3, r5, lsl #2
    2df0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2df4:	0402002e 	streq	r0, [r2], #-46	; 0x2e
    2df8:	004a0802 	subeq	r0, sl, r2, lsl #16
    2dfc:	90010402 	andls	r0, r1, r2, lsl #8
    2e00:	01000e02 	tsteq	r0, r2, lsl #28
    2e04:	02050001 	andeq	r0, r5, #1
    2e08:	00000000 	andeq	r0, r0, r0
    2e0c:	01059b03 	tsteq	r5, r3, lsl #22
    2e10:	07029113 	smladeq	r2, r3, r1, r9
    2e14:	00010100 	andeq	r0, r1, r0, lsl #2
    2e18:	00000205 	andeq	r0, r0, r5, lsl #4
    2e1c:	a7030000 	strge	r0, [r3, -r0]
    2e20:	91130105 	tstls	r3, r5, lsl #2
    2e24:	01000702 	tsteq	r0, r2, lsl #14
    2e28:	02050001 	andeq	r0, r5, #1
    2e2c:	00000000 	andeq	r0, r0, r0
    2e30:	0105b303 	tsteq	r5, r3, lsl #6
    2e34:	489fbc13 	ldmmi	pc, {r0, r1, r4, sl, fp, ip, sp, pc}	; <UNPREDICTABLE>
    2e38:	00070225 	andeq	r0, r7, r5, lsr #4
    2e3c:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2e40:	00000002 	andeq	r0, r0, r2
    2e44:	05c40300 	strbeq	r0, [r4, #768]	; 0x300
    2e48:	d8301301 	ldmdale	r0!, {r0, r8, r9, ip}
    2e4c:	000f0230 	andeq	r0, pc, r0, lsr r2	; <UNPREDICTABLE>
    2e50:	05000101 	streq	r0, [r0, #-257]	; 0x101
    2e54:	00000002 	andeq	r0, r0, r2
    2e58:	05d70300 	ldrbeq	r0, [r7, #768]	; 0x300
    2e5c:	03021601 	movweq	r1, #9729	; 0x2601
    2e60:	00010100 	andeq	r0, r1, r0, lsl #2
    2e64:	16340205 	ldrtne	r0, [r4], -r5, lsl #4
    2e68:	e4030800 	str	r0, [r3], #-2048	; 0x800
    2e6c:	30160105 	andscc	r0, r6, r5, lsl #2
    2e70:	01000302 	tsteq	r0, r2, lsl #6
    2e74:	0000bd01 	andeq	fp, r0, r1, lsl #26
    2e78:	87000200 	strhi	r0, [r0, -r0, lsl #4]
    2e7c:	02000000 	andeq	r0, r0, #0
    2e80:	0d0efb01 	vstreq	d15, [lr, #-4]
    2e84:	01010100 	mrseq	r0, (UNDEF: 17)
    2e88:	00000001 	andeq	r0, r0, r1
    2e8c:	01000001 	tsteq	r0, r1
    2e90:	2f62696c 	svccs	0x0062696c
    2e94:	5f425355 	svcpl	0x00425355
    2e98:	2f62696c 	svccs	0x0062696c
    2e9c:	00637273 	rsbeq	r7, r3, r3, ror r2
    2ea0:	2f62696c 	svccs	0x0062696c
    2ea4:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2ea8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2eac:	53552f62 	cmppl	r5, #392	; 0x188
    2eb0:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    2eb4:	6e692f62 	cdpvs	15, 6, cr2, cr9, cr2, {3}
    2eb8:	75000063 	strvc	r0, [r0, #-99]	; 0x63
    2ebc:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
    2ec0:	632e6c69 	teqvs	lr, #26880	; 0x6900
    2ec4:	00000100 	andeq	r0, r0, r0, lsl #2
    2ec8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2ecc:	30316632 	eorscc	r6, r1, r2, lsr r6
    2ed0:	79745f78 	ldmdbvc	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2ed4:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    2ed8:	00000200 	andeq	r0, r0, r0, lsl #4
    2edc:	5f627375 	svcpl	0x00627375
    2ee0:	73676572 	cmnvc	r7, #478150656	; 0x1c800000
    2ee4:	0300682e 	movweq	r6, #2094	; 0x82e
    2ee8:	73750000 	cmnvc	r5, #0
    2eec:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    2ef0:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
    2ef4:	00000300 	andeq	r0, r0, r0, lsl #6
    2ef8:	5f627375 	svcpl	0x00627375
    2efc:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    2f00:	00030068 	andeq	r0, r3, r8, rrx
    2f04:	05000000 	streq	r0, [r0, #-0]
    2f08:	00164002 	andseq	r4, r6, r2
    2f0c:	01230308 	teqeq	r3, r8, lsl #6
    2f10:	211f2f17 	tstcs	pc, r7, lsl pc	; <UNPREDICTABLE>
    2f14:	2e0a033e 	mcrcs	3, 0, r0, cr10, cr14, {1}
    2f18:	01000702 	tsteq	r0, r2, lsl #14
    2f1c:	02050001 	andeq	r0, r5, #1
    2f20:	08001660 	stmdaeq	r0, {r5, r6, r9, sl, ip}
    2f24:	0100df03 	tsteq	r0, r3, lsl #30
    2f28:	3c7a0326 	ldclcc	3, cr0, [sl], #-152	; 0xffffff68
    2f2c:	13033f26 	movwne	r3, #16166	; 0x3f26
    2f30:	00020282 	andeq	r0, r2, r2, lsl #5
    2f34:	00e10101 	rsceq	r0, r1, r1, lsl #2
    2f38:	00020000 	andeq	r0, r2, r0
    2f3c:	00000088 	andeq	r0, r0, r8, lsl #1
    2f40:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2f44:	0101000d 	tsteq	r1, sp
    2f48:	00000101 	andeq	r0, r0, r1, lsl #2
    2f4c:	00000100 	andeq	r0, r0, r0, lsl #2
    2f50:	62696c01 	rsbvs	r6, r9, #256	; 0x100
    2f54:	4253552f 	subsmi	r5, r3, #197132288	; 0xbc00000
    2f58:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2f5c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2f60:	62696c00 	rsbvs	r6, r9, #0, 24
    2f64:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2f68:	6c2f2e00 	stcvs	14, cr2, [pc], #-0	; 2f70 <__Stack_Size+0x2b70>
    2f6c:	552f6269 	strpl	r6, [pc, #-617]!	; 2d0b <__Stack_Size+0x290b>
    2f70:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    2f74:	692f6269 	stmdbvs	pc!, {r0, r3, r5, r6, r9, sp, lr}	; <UNPREDICTABLE>
    2f78:	0000636e 	andeq	r6, r0, lr, ror #6
    2f7c:	5f627375 	svcpl	0x00627375
    2f80:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    2f84:	00010063 	andeq	r0, r1, r3, rrx
    2f88:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2f8c:	31663233 	cmncc	r6, r3, lsr r2
    2f90:	745f7830 	ldrbvc	r7, [pc], #-2096	; 2f98 <__Stack_Size+0x2b98>
    2f94:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    2f98:	00020068 	andeq	r0, r2, r8, rrx
    2f9c:	62737500 	rsbsvs	r7, r3, #0, 10
    2fa0:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    2fa4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2fa8:	75000003 	strvc	r0, [r0, #-3]
    2fac:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    2fb0:	2e74696e 	cdpcs	9, 7, cr6, cr4, cr14, {3}
    2fb4:	00030068 	andeq	r0, r3, r8, rrx
    2fb8:	62737500 	rsbsvs	r7, r3, #0, 10
    2fbc:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    2fc0:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2fc4:	00000003 	andeq	r0, r0, r3
    2fc8:	84020500 	strhi	r0, [r2], #-1280	; 0x500
    2fcc:	03080016 	movweq	r0, #32790	; 0x8016
    2fd0:	0021012a 	eoreq	r0, r1, sl, lsr #2
    2fd4:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
    2fd8:	0a035985 	beq	d95f4 <__Stack_Size+0xd91f4>
    2fdc:	2f1f3d2e 	svccs	0x001f3d2e
    2fe0:	44cc4c4b 	strbmi	r4, [ip], #3147	; 0xc4b
    2fe4:	3c0e0359 	stccc	3, cr0, [lr], {89}	; 0x59
    2fe8:	43594c4c 	cmpmi	r9, #76, 24	; 0x4c00
    2fec:	0831595a 	ldmdaeq	r1!, {r1, r3, r4, r6, r8, fp, ip, lr}
    2ff0:	200903d7 	ldrdcs	r0, [r9], -r7
    2ff4:	5c5b5b91 	mrrcpl	11, 9, r5, fp, cr1
    2ff8:	311d935b 	tstcc	sp, fp, asr r3
    2ffc:	0013025e 	andseq	r0, r3, lr, asr r2
    3000:	05000101 	streq	r0, [r0, #-257]	; 0x101
    3004:	00000002 	andeq	r0, r0, r2
    3008:	01980300 	orrseq	r0, r8, r0, lsl #6
    300c:	3e762301 	cdpcc	3, 7, cr2, cr6, cr1, {0}
    3010:	5b31675a 	blpl	c5cd80 <__Stack_Size+0xc5c980>
    3014:	085b313f 	ldmdaeq	fp, {r0, r1, r2, r3, r4, r5, r8, ip, sp}^
    3018:	Address 0x0000000000003018 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  {
    statusreg = SysTick->CTRL;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	0000000c 	andeq	r0, r0, ip
      14:	00000000 	andeq	r0, r0, r0
      18:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
      1c:	0000000c 	andeq	r0, r0, ip
      20:	0000000c 	andeq	r0, r0, ip
	...
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
      30:	0000000c 	andeq	r0, r0, ip
      34:	00000000 	andeq	r0, r0, r0
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	08000140 	stmdaeq	r0, {r6, r8}

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	00000010 	andeq	r0, r0, r0, lsl r0

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      4c:	0000004e 	andeq	r0, r0, lr, asr #32

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	80180e41 	andshi	r0, r8, r1, asr #28
      54:	82058106 	andhi	r8, r5, #-2147483647	; 0x80000001
      58:	84038304 	strhi	r8, [r3], #-772	; 0x304
      5c:	00018e02 	andeq	r8, r1, r2, lsl #28
      60:	0000000c 	andeq	r0, r0, ip
	...
      6c:	00000002 	andeq	r0, r0, r2
      70:	0000000c 	andeq	r0, r0, ip
	...
      7c:	00000002 	andeq	r0, r0, r2
      80:	0000000c 	andeq	r0, r0, ip
	...
      8c:	00000002 	andeq	r0, r0, r2
      90:	0000000c 	andeq	r0, r0, ip
	...
      9c:	00000002 	andeq	r0, r0, r2
      a0:	0000000c 	andeq	r0, r0, ip
	...
      ac:	00000002 	andeq	r0, r0, r2
      b0:	0000000c 	andeq	r0, r0, ip
	...
      bc:	00000002 	andeq	r0, r0, r2
      c0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      cc:	0000004a 	andeq	r0, r0, sl, asr #32
				{
					FLASH_Lock();
      d0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	86038504 	strhi	r8, [r3], -r4, lsl #10
      d8:	00018e02 	andeq	r8, r1, r2, lsl #28
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	00000014 	andeq	r0, r0, r4, lsl r0
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	00000000 	andeq	r0, r0, r0
				TIM_Cmd(TIM2, ENABLE);
      e4:	08000150 	stmdaeq	r0, {r4, r6, r8}
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	00000012 	andeq	r0, r0, r2, lsl r0

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
      f0:	00018e02 	andeq	r8, r1, r2, lsl #28
						usbRxCount = USB_Rx_Cnt;
      f4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
					if(CheckTimeOut()){
     100:	00000030 	andeq	r0, r0, r0, lsr r0
     104:	84080e43 	strhi	r0, [r8], #-3651	; 0xe43
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	00018e02 	andeq	r8, r1, r2, lsl #28
     10c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	00000014 	andeq	r0, r0, r4, lsl r0
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	00018e02 	andeq	r8, r1, r2, lsl #28
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	00000014 	andeq	r0, r0, r4, lsl r0
	...
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
				gbIsFlashLock = TRUE;
     130:	00000014 	andeq	r0, r0, r4, lsl r0
     134:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	00018e02 	andeq	r8, r1, r2, lsl #28
     13c:	0000000c 	andeq	r0, r0, ip
	...
					USB_TxDString("Success..\n");
     148:	00000020 	andeq	r0, r0, r0, lsr #32
				}
				else
					USB_TxDString("Fail..\n");
     14c:	00000014 	andeq	r0, r0, r4, lsl r0
     150:	00000000 	andeq	r0, r0, r0
			//WDTCR = 0x08;
				Delay(100);
     154:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
     158:	0000002c 	andeq	r0, r0, ip, lsr #32

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     160:	00018e02 	andeq	r8, r1, r2, lsl #28
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	00000014 	andeq	r0, r0, r4, lsl r0
	...

				UsbVcpDisconnect();
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
     170:	00000030 	andeq	r0, r0, r0, lsr r0

				Jump_To_Application();
     174:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	00018e02 	andeq	r8, r1, r2, lsl #28
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
     188:	0000001a 	andeq	r0, r0, sl, lsl r0
     18c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41

		}
		USART_BUFFER_CLEAR;
     190:	00018e02 	andeq	r8, r1, r2, lsl #28
     194:	00000024 	andeq	r0, r0, r4, lsr #32
	...
		gwpUSARTBuffer[0]='\0';
     1a0:	000001d8 	ldrdeq	r0, [r0], -r8
     1a4:	84240e42 	strthi	r0, [r4], #-3650	; 0xe42
     1a8:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1ac:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1b0:	8a048905 	bhi	1225cc <__Stack_Size+0x1221cc>
     1b4:	8e028b03 	vmlahi.f64	d8, d2, d3
     1b8:	480e4501 	stmdami	lr, {r0, r8, sl, lr}
     1bc:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     1c8:	0000008c 	andeq	r0, r0, ip, lsl #1
     1cc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     1d0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     1d4:	00018e02 	andeq	r8, r1, r2, lsl #28
     1d8:	00000018 	andeq	r0, r0, r8, lsl r0
	...
     1e4:	0000004c 	andeq	r0, r0, ip, asr #32
     1e8:	83100e41 	tsthi	r0, #1040	; 0x410
     1ec:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     1f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     1f4:	00000018 	andeq	r0, r0, r8, lsl r0
     1f8:	00000000 	andeq	r0, r0, r0
     1fc:	08000190 	stmdaeq	r0, {r4, r7, r8}
     200:	000000a8 	andeq	r0, r0, r8, lsr #1
     204:	80100e41 	andshi	r0, r0, r1, asr #28
     208:	84038104 	strhi	r8, [r3], #-260	; 0x104
     20c:	00018e02 	andeq	r8, r1, r2, lsl #28
     210:	00000014 	andeq	r0, r0, r4, lsl r0
     214:	00000000 	andeq	r0, r0, r0
     218:	08000238 	stmdaeq	r0, {r3, r4, r5, r9}
     21c:	00000006 	andeq	r0, r0, r6
     220:	83080e41 	movwhi	r0, #36417	; 0x8e41
     224:	00018e02 	andeq	r8, r1, r2, lsl #28
     228:	00000020 	andeq	r0, r0, r0, lsr #32
	...
     234:	00000074 	andeq	r0, r0, r4, ror r0
     238:	80200e41 	eorhi	r0, r0, r1, asr #28
     23c:	82078108 	andhi	r8, r7, #8, 2
     240:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
     244:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     248:	00018e02 	andeq	r8, r1, r2, lsl #28
     24c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
     258:	00000064 	andeq	r0, r0, r4, rrx
     25c:	80180e41 	andshi	r0, r8, r1, asr #28
     260:	82058106 	andhi	r8, r5, #-2147483647	; 0x80000001
     264:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     268:	00018e02 	andeq	r8, r1, r2, lsl #28
     26c:	0000000c 	andeq	r0, r0, ip
     270:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     274:	7c020001 	stcvc	0, cr0, [r2], {1}
     278:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     27c:	0000000c 	andeq	r0, r0, ip
     280:	0000026c 	andeq	r0, r0, ip, ror #4
     284:	0800023e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9}
     288:	00000002 	andeq	r0, r0, r2
     28c:	0000000c 	andeq	r0, r0, ip
     290:	0000026c 	andeq	r0, r0, ip, ror #4
     294:	08000240 	stmdaeq	r0, {r6, r9}
     298:	00000002 	andeq	r0, r0, r2
     29c:	0000000c 	andeq	r0, r0, ip
     2a0:	0000026c 	andeq	r0, r0, ip, ror #4
     2a4:	08000242 	stmdaeq	r0, {r1, r6, r9}
     2a8:	00000002 	andeq	r0, r0, r2
     2ac:	0000000c 	andeq	r0, r0, ip
     2b0:	0000026c 	andeq	r0, r0, ip, ror #4
     2b4:	08000244 	stmdaeq	r0, {r2, r6, r9}
     2b8:	00000002 	andeq	r0, r0, r2
     2bc:	0000000c 	andeq	r0, r0, ip
     2c0:	0000026c 	andeq	r0, r0, ip, ror #4
     2c4:	08000246 	stmdaeq	r0, {r1, r2, r6, r9}
     2c8:	00000002 	andeq	r0, r0, r2
     2cc:	0000000c 	andeq	r0, r0, ip
     2d0:	0000026c 	andeq	r0, r0, ip, ror #4
     2d4:	08000248 	stmdaeq	r0, {r3, r6, r9}
     2d8:	00000002 	andeq	r0, r0, r2
     2dc:	0000000c 	andeq	r0, r0, ip
     2e0:	0000026c 	andeq	r0, r0, ip, ror #4
     2e4:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
     2e8:	00000002 	andeq	r0, r0, r2
     2ec:	0000000c 	andeq	r0, r0, ip
     2f0:	0000026c 	andeq	r0, r0, ip, ror #4
     2f4:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
     2f8:	00000002 	andeq	r0, r0, r2
     2fc:	0000000c 	andeq	r0, r0, ip
     300:	0000026c 	andeq	r0, r0, ip, ror #4
     304:	08000250 	stmdaeq	r0, {r4, r6, r9}
     308:	00000014 	andeq	r0, r0, r4, lsl r0
     30c:	0000000c 	andeq	r0, r0, ip
     310:	0000026c 	andeq	r0, r0, ip, ror #4
     314:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
     318:	00000002 	andeq	r0, r0, r2
     31c:	0000000c 	andeq	r0, r0, ip
     320:	0000026c 	andeq	r0, r0, ip, ror #4
     324:	08000266 	stmdaeq	r0, {r1, r2, r5, r6, r9}
     328:	00000002 	andeq	r0, r0, r2
     32c:	0000000c 	andeq	r0, r0, ip
     330:	0000026c 	andeq	r0, r0, ip, ror #4
     334:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
     338:	00000002 	andeq	r0, r0, r2
     33c:	0000000c 	andeq	r0, r0, ip
     340:	0000026c 	andeq	r0, r0, ip, ror #4
     344:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
     348:	00000002 	andeq	r0, r0, r2
     34c:	0000000c 	andeq	r0, r0, ip
     350:	0000026c 	andeq	r0, r0, ip, ror #4
     354:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
     358:	00000002 	andeq	r0, r0, r2
     35c:	0000000c 	andeq	r0, r0, ip
     360:	0000026c 	andeq	r0, r0, ip, ror #4
     364:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
     368:	00000002 	andeq	r0, r0, r2
     36c:	0000000c 	andeq	r0, r0, ip
     370:	0000026c 	andeq	r0, r0, ip, ror #4
     374:	08000270 	stmdaeq	r0, {r4, r5, r6, r9}
     378:	00000002 	andeq	r0, r0, r2
     37c:	0000000c 	andeq	r0, r0, ip
     380:	0000026c 	andeq	r0, r0, ip, ror #4
     384:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}
     388:	00000002 	andeq	r0, r0, r2
     38c:	0000000c 	andeq	r0, r0, ip
     390:	0000026c 	andeq	r0, r0, ip, ror #4
     394:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
     398:	00000002 	andeq	r0, r0, r2
     39c:	0000000c 	andeq	r0, r0, ip
     3a0:	0000026c 	andeq	r0, r0, ip, ror #4
     3a4:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
     3a8:	00000002 	andeq	r0, r0, r2
     3ac:	0000000c 	andeq	r0, r0, ip
     3b0:	0000026c 	andeq	r0, r0, ip, ror #4
     3b4:	08000278 	stmdaeq	r0, {r3, r4, r5, r6, r9}
     3b8:	00000002 	andeq	r0, r0, r2
     3bc:	0000000c 	andeq	r0, r0, ip
     3c0:	0000026c 	andeq	r0, r0, ip, ror #4
     3c4:	00000000 	andeq	r0, r0, r0
     3c8:	00000002 	andeq	r0, r0, r2
     3cc:	0000000c 	andeq	r0, r0, ip
     3d0:	0000026c 	andeq	r0, r0, ip, ror #4
     3d4:	00000000 	andeq	r0, r0, r0
     3d8:	00000002 	andeq	r0, r0, r2
     3dc:	0000000c 	andeq	r0, r0, ip
     3e0:	0000026c 	andeq	r0, r0, ip, ror #4
     3e4:	00000000 	andeq	r0, r0, r0
     3e8:	00000002 	andeq	r0, r0, r2
     3ec:	0000000c 	andeq	r0, r0, ip
     3f0:	0000026c 	andeq	r0, r0, ip, ror #4
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	00000002 	andeq	r0, r0, r2
     3fc:	0000000c 	andeq	r0, r0, ip
     400:	0000026c 	andeq	r0, r0, ip, ror #4
     404:	00000000 	andeq	r0, r0, r0
     408:	00000002 	andeq	r0, r0, r2
     40c:	0000000c 	andeq	r0, r0, ip
     410:	0000026c 	andeq	r0, r0, ip, ror #4
     414:	00000000 	andeq	r0, r0, r0
     418:	00000002 	andeq	r0, r0, r2
     41c:	0000000c 	andeq	r0, r0, ip
     420:	0000026c 	andeq	r0, r0, ip, ror #4
     424:	00000000 	andeq	r0, r0, r0
     428:	00000002 	andeq	r0, r0, r2
     42c:	0000000c 	andeq	r0, r0, ip
     430:	0000026c 	andeq	r0, r0, ip, ror #4
     434:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
     438:	00000002 	andeq	r0, r0, r2
     43c:	0000000c 	andeq	r0, r0, ip
     440:	0000026c 	andeq	r0, r0, ip, ror #4
     444:	0800027c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9}
     448:	00000002 	andeq	r0, r0, r2
     44c:	0000000c 	andeq	r0, r0, ip
     450:	0000026c 	andeq	r0, r0, ip, ror #4
     454:	0800027e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9}
     458:	00000004 	andeq	r0, r0, r4
     45c:	0000000c 	andeq	r0, r0, ip
     460:	0000026c 	andeq	r0, r0, ip, ror #4
     464:	08000282 	stmdaeq	r0, {r1, r7, r9}
     468:	00000002 	andeq	r0, r0, r2
     46c:	0000000c 	andeq	r0, r0, ip
     470:	0000026c 	andeq	r0, r0, ip, ror #4
     474:	08000284 	stmdaeq	r0, {r2, r7, r9}
     478:	00000002 	andeq	r0, r0, r2
     47c:	0000000c 	andeq	r0, r0, ip
     480:	0000026c 	andeq	r0, r0, ip, ror #4
     484:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
     488:	00000002 	andeq	r0, r0, r2
     48c:	0000000c 	andeq	r0, r0, ip
     490:	0000026c 	andeq	r0, r0, ip, ror #4
     494:	08000288 	stmdaeq	r0, {r3, r7, r9}
     498:	00000002 	andeq	r0, r0, r2
     49c:	0000000c 	andeq	r0, r0, ip
     4a0:	0000026c 	andeq	r0, r0, ip, ror #4
     4a4:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
     4a8:	00000002 	andeq	r0, r0, r2
     4ac:	0000000c 	andeq	r0, r0, ip
     4b0:	0000026c 	andeq	r0, r0, ip, ror #4
     4b4:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
     4b8:	00000002 	andeq	r0, r0, r2
     4bc:	0000000c 	andeq	r0, r0, ip
     4c0:	0000026c 	andeq	r0, r0, ip, ror #4
     4c4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
     4c8:	00000002 	andeq	r0, r0, r2
     4cc:	00000014 	andeq	r0, r0, r4, lsl r0
     4d0:	0000026c 	andeq	r0, r0, ip, ror #4
     4d4:	08000290 	stmdaeq	r0, {r4, r7, r9}
     4d8:	00000014 	andeq	r0, r0, r4, lsl r0
     4dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4e4:	0000000c 	andeq	r0, r0, ip
     4e8:	0000026c 	andeq	r0, r0, ip, ror #4
     4ec:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
     4f0:	00000002 	andeq	r0, r0, r2
     4f4:	0000000c 	andeq	r0, r0, ip
     4f8:	0000026c 	andeq	r0, r0, ip, ror #4
     4fc:	080002a6 	stmdaeq	r0, {r1, r2, r5, r7, r9}
     500:	00000002 	andeq	r0, r0, r2
     504:	0000000c 	andeq	r0, r0, ip
     508:	0000026c 	andeq	r0, r0, ip, ror #4
     50c:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
     510:	00000002 	andeq	r0, r0, r2
     514:	0000000c 	andeq	r0, r0, ip
     518:	0000026c 	andeq	r0, r0, ip, ror #4
     51c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
     520:	00000002 	andeq	r0, r0, r2
     524:	0000000c 	andeq	r0, r0, ip
     528:	0000026c 	andeq	r0, r0, ip, ror #4
     52c:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
     530:	00000002 	andeq	r0, r0, r2
     534:	0000000c 	andeq	r0, r0, ip
     538:	0000026c 	andeq	r0, r0, ip, ror #4
     53c:	080002ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9}
     540:	00000002 	andeq	r0, r0, r2
     544:	0000000c 	andeq	r0, r0, ip
     548:	0000026c 	andeq	r0, r0, ip, ror #4
     54c:	080002b0 	stmdaeq	r0, {r4, r5, r7, r9}
     550:	00000002 	andeq	r0, r0, r2
     554:	0000000c 	andeq	r0, r0, ip
     558:	0000026c 	andeq	r0, r0, ip, ror #4
     55c:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
     560:	00000002 	andeq	r0, r0, r2
     564:	0000000c 	andeq	r0, r0, ip
     568:	0000026c 	andeq	r0, r0, ip, ror #4
     56c:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
     570:	00000002 	andeq	r0, r0, r2
     574:	00000018 	andeq	r0, r0, r8, lsl r0
     578:	0000026c 	andeq	r0, r0, ip, ror #4
     57c:	080002b8 	stmdaeq	r0, {r3, r4, r5, r7, r9}
     580:	0000003c 	andeq	r0, r0, ip, lsr r0
     584:	83100e42 	tsthi	r0, #1056	; 0x420
     588:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     58c:	00018e02 	andeq	r8, r1, r2, lsl #28
     590:	0000000c 	andeq	r0, r0, ip
     594:	0000026c 	andeq	r0, r0, ip, ror #4
     598:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
     59c:	00000002 	andeq	r0, r0, r2
     5a0:	0000000c 	andeq	r0, r0, ip
     5a4:	0000026c 	andeq	r0, r0, ip, ror #4
     5a8:	080002f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9}
     5ac:	00000002 	andeq	r0, r0, r2
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	0000026c 	andeq	r0, r0, ip, ror #4
     5b8:	080002f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9}
     5bc:	00000002 	andeq	r0, r0, r2
     5c0:	0000000c 	andeq	r0, r0, ip
     5c4:	0000026c 	andeq	r0, r0, ip, ror #4
     5c8:	080002fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9}
     5cc:	00000002 	andeq	r0, r0, r2
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	0000026c 	andeq	r0, r0, ip, ror #4
     5d8:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
     5dc:	00000002 	andeq	r0, r0, r2
     5e0:	0000000c 	andeq	r0, r0, ip
     5e4:	0000026c 	andeq	r0, r0, ip, ror #4
     5e8:	080002fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9}
     5ec:	00000002 	andeq	r0, r0, r2
     5f0:	0000000c 	andeq	r0, r0, ip
     5f4:	0000026c 	andeq	r0, r0, ip, ror #4
     5f8:	08000300 	stmdaeq	r0, {r8, r9}
     5fc:	00000002 	andeq	r0, r0, r2
     600:	0000000c 	andeq	r0, r0, ip
     604:	0000026c 	andeq	r0, r0, ip, ror #4
     608:	08000302 	stmdaeq	r0, {r1, r8, r9}
     60c:	00000002 	andeq	r0, r0, r2
     610:	0000000c 	andeq	r0, r0, ip
     614:	0000026c 	andeq	r0, r0, ip, ror #4
     618:	08000304 	stmdaeq	r0, {r2, r8, r9}
     61c:	00000002 	andeq	r0, r0, r2
     620:	0000000c 	andeq	r0, r0, ip
     624:	0000026c 	andeq	r0, r0, ip, ror #4
     628:	08000306 	stmdaeq	r0, {r1, r2, r8, r9}
     62c:	00000002 	andeq	r0, r0, r2
     630:	0000000c 	andeq	r0, r0, ip
     634:	0000026c 	andeq	r0, r0, ip, ror #4
     638:	08000308 	stmdaeq	r0, {r3, r8, r9}
     63c:	00000002 	andeq	r0, r0, r2
     640:	0000000c 	andeq	r0, r0, ip
     644:	0000026c 	andeq	r0, r0, ip, ror #4
     648:	0800030a 	stmdaeq	r0, {r1, r3, r8, r9}
     64c:	00000002 	andeq	r0, r0, r2
     650:	0000000c 	andeq	r0, r0, ip
     654:	0000026c 	andeq	r0, r0, ip, ror #4
     658:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
     65c:	00000002 	andeq	r0, r0, r2
     660:	0000000c 	andeq	r0, r0, ip
     664:	0000026c 	andeq	r0, r0, ip, ror #4
     668:	0800030e 	stmdaeq	r0, {r1, r2, r3, r8, r9}
     66c:	00000002 	andeq	r0, r0, r2
     670:	0000000c 	andeq	r0, r0, ip
     674:	0000026c 	andeq	r0, r0, ip, ror #4
     678:	08000310 	stmdaeq	r0, {r4, r8, r9}
     67c:	00000002 	andeq	r0, r0, r2
     680:	0000000c 	andeq	r0, r0, ip
     684:	0000026c 	andeq	r0, r0, ip, ror #4
     688:	08000312 	stmdaeq	r0, {r1, r4, r8, r9}
     68c:	00000002 	andeq	r0, r0, r2
     690:	0000000c 	andeq	r0, r0, ip
     694:	0000026c 	andeq	r0, r0, ip, ror #4
     698:	08000314 	stmdaeq	r0, {r2, r4, r8, r9}
     69c:	00000002 	andeq	r0, r0, r2
     6a0:	0000000c 	andeq	r0, r0, ip
     6a4:	0000026c 	andeq	r0, r0, ip, ror #4
     6a8:	08000316 	stmdaeq	r0, {r1, r2, r4, r8, r9}
     6ac:	00000002 	andeq	r0, r0, r2
     6b0:	0000000c 	andeq	r0, r0, ip
     6b4:	0000026c 	andeq	r0, r0, ip, ror #4
     6b8:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
     6bc:	00000002 	andeq	r0, r0, r2
     6c0:	0000000c 	andeq	r0, r0, ip
     6c4:	0000026c 	andeq	r0, r0, ip, ror #4
     6c8:	0800031a 	stmdaeq	r0, {r1, r3, r4, r8, r9}
     6cc:	00000002 	andeq	r0, r0, r2
     6d0:	0000000c 	andeq	r0, r0, ip
     6d4:	0000026c 	andeq	r0, r0, ip, ror #4
     6d8:	0800031c 	stmdaeq	r0, {r2, r3, r4, r8, r9}
     6dc:	00000002 	andeq	r0, r0, r2
     6e0:	0000000c 	andeq	r0, r0, ip
     6e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     6ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6f0:	0000000c 	andeq	r0, r0, ip
     6f4:	000006e0 	andeq	r0, r0, r0, ror #13
     6f8:	0800031e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9}
     6fc:	00000002 	andeq	r0, r0, r2
     700:	00000024 	andeq	r0, r0, r4, lsr #32
     704:	000006e0 	andeq	r0, r0, r0, ror #13
     708:	08000320 	stmdaeq	r0, {r5, r8, r9}
     70c:	00000100 	andeq	r0, r0, r0, lsl #2
     710:	84240e42 	strthi	r0, [r4], #-3650	; 0xe42
     714:	86088509 	strhi	r8, [r8], -r9, lsl #10
     718:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     71c:	8a048905 	bhi	122b38 <__Stack_Size+0x122738>
     720:	8e028b03 	vmlahi.f64	d8, d2, d3
     724:	380e4201 	stmdacc	lr, {r0, r9, lr}
     728:	00000018 	andeq	r0, r0, r8, lsl r0
     72c:	000006e0 	andeq	r0, r0, r0, ror #13
     730:	08000420 	stmdaeq	r0, {r5, sl}
     734:	0000005c 	andeq	r0, r0, ip, asr r0
     738:	83100e41 	tsthi	r0, #1040	; 0x410
     73c:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     740:	00018e02 	andeq	r8, r1, r2, lsl #28
     744:	0000000c 	andeq	r0, r0, ip
     748:	000006e0 	andeq	r0, r0, r0, ror #13
     74c:	00000000 	andeq	r0, r0, r0
     750:	00000020 	andeq	r0, r0, r0, lsr #32
     754:	0000000c 	andeq	r0, r0, ip
     758:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     75c:	7c020001 	stcvc	0, cr0, [r2], {1}
     760:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     764:	00000018 	andeq	r0, r0, r8, lsl r0
     768:	00000754 	andeq	r0, r0, r4, asr r7
     76c:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
     770:	0000006c 	andeq	r0, r0, ip, rrx
     774:	83100e41 	tsthi	r0, #1040	; 0x410
     778:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     77c:	00018e02 	andeq	r8, r1, r2, lsl #28
     780:	0000000c 	andeq	r0, r0, ip
     784:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     788:	7c020001 	stcvc	0, cr0, [r2], {1}
     78c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     790:	0000000c 	andeq	r0, r0, ip
     794:	00000780 	andeq	r0, r0, r0, lsl #15
     798:	080004e8 	stmdaeq	r0, {r3, r5, r6, r7, sl}
     79c:	00000018 	andeq	r0, r0, r8, lsl r0
     7a0:	0000000c 	andeq	r0, r0, ip
     7a4:	00000780 	andeq	r0, r0, r0, lsl #15
     7a8:	08000500 	stmdaeq	r0, {r8, sl}
     7ac:	0000000c 	andeq	r0, r0, ip
     7b0:	0000000c 	andeq	r0, r0, ip
     7b4:	00000780 	andeq	r0, r0, r0, lsl #15
     7b8:	0800050c 	stmdaeq	r0, {r2, r3, r8, sl}
     7bc:	00000014 	andeq	r0, r0, r4, lsl r0
     7c0:	0000000c 	andeq	r0, r0, ip
     7c4:	00000780 	andeq	r0, r0, r0, lsl #15
     7c8:	08000520 	stmdaeq	r0, {r5, r8, sl}
     7cc:	00000002 	andeq	r0, r0, r2
     7d0:	00000014 	andeq	r0, r0, r4, lsl r0
     7d4:	00000780 	andeq	r0, r0, r0, lsl #15
     7d8:	08000524 	stmdaeq	r0, {r2, r5, r8, sl}
     7dc:	0000005c 	andeq	r0, r0, ip, asr r0
     7e0:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
     7e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7e8:	0000000c 	andeq	r0, r0, ip
     7ec:	00000780 	andeq	r0, r0, r0, lsl #15
     7f0:	08000580 	stmdaeq	r0, {r7, r8, sl}
     7f4:	00000024 	andeq	r0, r0, r4, lsr #32
     7f8:	0000000c 	andeq	r0, r0, ip
     7fc:	00000780 	andeq	r0, r0, r0, lsl #15
     800:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
     804:	00000010 	andeq	r0, r0, r0, lsl r0
     808:	0000000c 	andeq	r0, r0, ip
     80c:	00000780 	andeq	r0, r0, r0, lsl #15
     810:	080005b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl}
     814:	00000018 	andeq	r0, r0, r8, lsl r0
     818:	0000000c 	andeq	r0, r0, ip
     81c:	00000780 	andeq	r0, r0, r0, lsl #15
     820:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
     824:	0000002c 	andeq	r0, r0, ip, lsr #32
     828:	00000014 	andeq	r0, r0, r4, lsl r0
     82c:	00000780 	andeq	r0, r0, r0, lsl #15
     830:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
     834:	00000024 	andeq	r0, r0, r4, lsr #32
     838:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     83c:	00018e02 	andeq	r8, r1, r2, lsl #28
     840:	00000014 	andeq	r0, r0, r4, lsl r0
     844:	00000780 	andeq	r0, r0, r0, lsl #15
     848:	0800061c 	stmdaeq	r0, {r2, r3, r4, r9, sl}
     84c:	000000e0 	andeq	r0, r0, r0, ror #1
     850:	84080e45 	strhi	r0, [r8], #-3653	; 0xe45
     854:	00018e02 	andeq	r8, r1, r2, lsl #28
     858:	0000000c 	andeq	r0, r0, ip
     85c:	00000780 	andeq	r0, r0, r0, lsl #15
     860:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
     864:	0000000c 	andeq	r0, r0, ip
     868:	0000000c 	andeq	r0, r0, ip
     86c:	00000780 	andeq	r0, r0, r0, lsl #15
     870:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
     874:	0000000c 	andeq	r0, r0, ip
     878:	0000000c 	andeq	r0, r0, ip
     87c:	00000780 	andeq	r0, r0, r0, lsl #15
     880:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
     884:	00000020 	andeq	r0, r0, r0, lsr #32
     888:	0000000c 	andeq	r0, r0, ip
     88c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     890:	7c020001 	stcvc	0, cr0, [r2], {1}
     894:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     898:	0000000c 	andeq	r0, r0, ip
     89c:	00000888 	andeq	r0, r0, r8, lsl #17
     8a0:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
     8a4:	00000024 	andeq	r0, r0, r4, lsr #32
     8a8:	00000014 	andeq	r0, r0, r4, lsl r0
     8ac:	00000888 	andeq	r0, r0, r8, lsl #17
     8b0:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
     8b4:	00000038 	andeq	r0, r0, r8, lsr r0
     8b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c0:	0000000c 	andeq	r0, r0, ip
     8c4:	00000888 	andeq	r0, r0, r8, lsl #17
     8c8:	00000000 	andeq	r0, r0, r0
     8cc:	00000004 	andeq	r0, r0, r4
     8d0:	0000000c 	andeq	r0, r0, ip
     8d4:	00000888 	andeq	r0, r0, r8, lsl #17
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8e0:	00000018 	andeq	r0, r0, r8, lsl r0
     8e4:	00000888 	andeq	r0, r0, r8, lsl #17
     8e8:	00000000 	andeq	r0, r0, r0
     8ec:	00000024 	andeq	r0, r0, r4, lsr #32
     8f0:	83100e41 	tsthi	r0, #1040	; 0x410
     8f4:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     8f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8fc:	0000000c 	andeq	r0, r0, ip
     900:	00000888 	andeq	r0, r0, r8, lsl #17
     904:	00000000 	andeq	r0, r0, r0
     908:	00000004 	andeq	r0, r0, r4
     90c:	00000014 	andeq	r0, r0, r4, lsl r0
     910:	00000888 	andeq	r0, r0, r8, lsl #17
     914:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
     918:	0000003c 	andeq	r0, r0, ip, lsr r0
     91c:	84080e43 	strhi	r0, [r8], #-3651	; 0xe43
     920:	00018e02 	andeq	r8, r1, r2, lsl #28
     924:	00000018 	andeq	r0, r0, r8, lsl r0
     928:	00000888 	andeq	r0, r0, r8, lsl #17
     92c:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
     930:	0000002a 	andeq	r0, r0, sl, lsr #32
     934:	80100e41 	andshi	r0, r0, r1, asr #28
     938:	84038104 	strhi	r8, [r3], #-260	; 0x104
     93c:	00018e02 	andeq	r8, r1, r2, lsl #28
     940:	0000000c 	andeq	r0, r0, ip
     944:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     948:	7c020001 	stcvc	0, cr0, [r2], {1}
     94c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     950:	0000000c 	andeq	r0, r0, ip
     954:	00000940 	andeq	r0, r0, r0, asr #18
     958:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
     95c:	00000018 	andeq	r0, r0, r8, lsl r0
     960:	0000000c 	andeq	r0, r0, ip
     964:	00000940 	andeq	r0, r0, r0, asr #18
     968:	00000000 	andeq	r0, r0, r0
     96c:	00000018 	andeq	r0, r0, r8, lsl r0
     970:	0000000c 	andeq	r0, r0, ip
     974:	00000940 	andeq	r0, r0, r0, asr #18
     978:	08000810 	stmdaeq	r0, {r4, fp}
     97c:	00000018 	andeq	r0, r0, r8, lsl r0
     980:	0000000c 	andeq	r0, r0, ip
     984:	00000940 	andeq	r0, r0, r0, asr #18
     988:	00000000 	andeq	r0, r0, r0
     98c:	00000018 	andeq	r0, r0, r8, lsl r0
     990:	0000000c 	andeq	r0, r0, ip
     994:	00000940 	andeq	r0, r0, r0, asr #18
     998:	00000000 	andeq	r0, r0, r0
     99c:	00000010 	andeq	r0, r0, r0, lsl r0
     9a0:	0000000c 	andeq	r0, r0, ip
     9a4:	00000940 	andeq	r0, r0, r0, asr #18
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	0000000c 	andeq	r0, r0, ip
     9b0:	0000000c 	andeq	r0, r0, ip
     9b4:	00000940 	andeq	r0, r0, r0, asr #18
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	0000000c 	andeq	r0, r0, ip
     9c0:	0000000c 	andeq	r0, r0, ip
     9c4:	00000940 	andeq	r0, r0, r0, asr #18
     9c8:	00000000 	andeq	r0, r0, r0
     9cc:	00000010 	andeq	r0, r0, r0, lsl r0
     9d0:	0000000c 	andeq	r0, r0, ip
     9d4:	00000940 	andeq	r0, r0, r0, asr #18
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	00000010 	andeq	r0, r0, r0, lsl r0
     9e0:	0000000c 	andeq	r0, r0, ip
     9e4:	00000940 	andeq	r0, r0, r0, asr #18
     9e8:	00000000 	andeq	r0, r0, r0
     9ec:	00000018 	andeq	r0, r0, r8, lsl r0
     9f0:	0000000c 	andeq	r0, r0, ip
     9f4:	00000940 	andeq	r0, r0, r0, asr #18
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000020 	andeq	r0, r0, r0, lsr #32
     a00:	0000000c 	andeq	r0, r0, ip
     a04:	00000940 	andeq	r0, r0, r0, asr #18
     a08:	00000000 	andeq	r0, r0, r0
     a0c:	0000000c 	andeq	r0, r0, ip
     a10:	0000000c 	andeq	r0, r0, ip
     a14:	00000940 	andeq	r0, r0, r0, asr #18
     a18:	08000828 	stmdaeq	r0, {r3, r5, fp}
     a1c:	00000028 	andeq	r0, r0, r8, lsr #32
     a20:	00000018 	andeq	r0, r0, r8, lsl r0
     a24:	00000940 	andeq	r0, r0, r0, asr #18
     a28:	08000850 	stmdaeq	r0, {r4, r6, fp}
     a2c:	00000036 	andeq	r0, r0, r6, lsr r0
     a30:	80100e41 	andshi	r0, r0, r1, asr #28
     a34:	84038104 	strhi	r8, [r3], #-260	; 0x104
     a38:	00018e02 	andeq	r8, r1, r2, lsl #28
     a3c:	00000018 	andeq	r0, r0, r8, lsl r0
     a40:	00000940 	andeq	r0, r0, r0, asr #18
     a44:	00000000 	andeq	r0, r0, r0
     a48:	00000040 	andeq	r0, r0, r0, asr #32
     a4c:	83100e41 	tsthi	r0, #1040	; 0x410
     a50:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     a54:	00018e02 	andeq	r8, r1, r2, lsl #28
     a58:	00000014 	andeq	r0, r0, r4, lsl r0
     a5c:	00000940 	andeq	r0, r0, r0, asr #18
     a60:	00000000 	andeq	r0, r0, r0
     a64:	0000003c 	andeq	r0, r0, ip, lsr r0
     a68:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     a6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a70:	00000014 	andeq	r0, r0, r4, lsl r0
     a74:	00000940 	andeq	r0, r0, r0, asr #18
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	00000070 	andeq	r0, r0, r0, ror r0
     a80:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     a84:	00018e02 	andeq	r8, r1, r2, lsl #28
     a88:	00000018 	andeq	r0, r0, r8, lsl r0
     a8c:	00000940 	andeq	r0, r0, r0, asr #18
     a90:	08000888 	stmdaeq	r0, {r3, r7, fp}
     a94:	00000048 	andeq	r0, r0, r8, asr #32
     a98:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     a9c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     aa0:	00018e02 	andeq	r8, r1, r2, lsl #28
     aa4:	00000018 	andeq	r0, r0, r8, lsl r0
     aa8:	00000940 	andeq	r0, r0, r0, asr #18
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	00000038 	andeq	r0, r0, r8, lsr r0
     ab4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     ab8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     abc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ac0:	00000018 	andeq	r0, r0, r8, lsl r0
     ac4:	00000940 	andeq	r0, r0, r0, asr #18
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000044 	andeq	r0, r0, r4, asr #32
     ad0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
     ad4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ad8:	00018e02 	andeq	r8, r1, r2, lsl #28
     adc:	00000014 	andeq	r0, r0, r4, lsl r0
     ae0:	00000940 	andeq	r0, r0, r0, asr #18
     ae4:	00000000 	andeq	r0, r0, r0
     ae8:	0000009c 	muleq	r0, ip, r0
     aec:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
     af0:	00018e02 	andeq	r8, r1, r2, lsl #28
     af4:	00000018 	andeq	r0, r0, r8, lsl r0
     af8:	00000940 	andeq	r0, r0, r0, asr #18
     afc:	00000000 	andeq	r0, r0, r0
     b00:	0000008c 	andeq	r0, r0, ip, lsl #1
     b04:	83100e41 	tsthi	r0, #1040	; 0x410
     b08:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
     b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b10:	0000001c 	andeq	r0, r0, ip, lsl r0
     b14:	00000940 	andeq	r0, r0, r0, asr #18
     b18:	00000000 	andeq	r0, r0, r0
     b1c:	00000054 	andeq	r0, r0, r4, asr r0
     b20:	83180e41 	tsthi	r8, #1040	; 0x410
     b24:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
     b28:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     b2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b30:	0000000c 	andeq	r0, r0, ip
     b34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b38:	7c020001 	stcvc	0, cr0, [r2], {1}
     b3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b40:	00000014 	andeq	r0, r0, r4, lsl r0
     b44:	00000b30 	andeq	r0, r0, r0, lsr fp
     b48:	00000000 	andeq	r0, r0, r0
     b4c:	000000a4 	andeq	r0, r0, r4, lsr #1
     b50:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b54:	00018e02 	andeq	r8, r1, r2, lsl #28
     b58:	00000014 	andeq	r0, r0, r4, lsl r0
     b5c:	00000b30 	andeq	r0, r0, r0, lsr fp
     b60:	00000000 	andeq	r0, r0, r0
     b64:	00000016 	andeq	r0, r0, r6, lsl r0
     b68:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b70:	0000001c 	andeq	r0, r0, ip, lsl r0
     b74:	00000b30 	andeq	r0, r0, r0, lsr fp
     b78:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
     b7c:	0000009c 	muleq	r0, ip, r0
     b80:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xe42
     b84:	86048505 	strhi	r8, [r4], -r5, lsl #10
     b88:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     b8c:	00000001 	andeq	r0, r0, r1
     b90:	0000000c 	andeq	r0, r0, ip
     b94:	00000b30 	andeq	r0, r0, r0, lsr fp
     b98:	00000000 	andeq	r0, r0, r0
     b9c:	00000010 	andeq	r0, r0, r0, lsl r0
     ba0:	0000000c 	andeq	r0, r0, ip
     ba4:	00000b30 	andeq	r0, r0, r0, lsr fp
     ba8:	00000000 	andeq	r0, r0, r0
     bac:	0000000c 	andeq	r0, r0, ip
     bb0:	0000000c 	andeq	r0, r0, ip
     bb4:	00000b30 	andeq	r0, r0, r0, lsr fp
     bb8:	00000000 	andeq	r0, r0, r0
     bbc:	00000006 	andeq	r0, r0, r6
     bc0:	0000000c 	andeq	r0, r0, ip
     bc4:	00000b30 	andeq	r0, r0, r0, lsr fp
     bc8:	00000000 	andeq	r0, r0, r0
     bcc:	0000000c 	andeq	r0, r0, ip
     bd0:	0000000c 	andeq	r0, r0, ip
     bd4:	00000b30 	andeq	r0, r0, r0, lsr fp
     bd8:	00000000 	andeq	r0, r0, r0
     bdc:	00000006 	andeq	r0, r0, r6
     be0:	0000000c 	andeq	r0, r0, ip
     be4:	00000b30 	andeq	r0, r0, r0, lsr fp
     be8:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
     bec:	00000004 	andeq	r0, r0, r4
     bf0:	0000000c 	andeq	r0, r0, ip
     bf4:	00000b30 	andeq	r0, r0, r0, lsr fp
     bf8:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
     bfc:	00000004 	andeq	r0, r0, r4
     c00:	0000000c 	andeq	r0, r0, ip
     c04:	00000b30 	andeq	r0, r0, r0, lsr fp
     c08:	00000000 	andeq	r0, r0, r0
     c0c:	0000000a 	andeq	r0, r0, sl
     c10:	0000000c 	andeq	r0, r0, ip
     c14:	00000b30 	andeq	r0, r0, r0, lsr fp
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	00000004 	andeq	r0, r0, r4
     c20:	0000000c 	andeq	r0, r0, ip
     c24:	00000b30 	andeq	r0, r0, r0, lsr fp
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	00000010 	andeq	r0, r0, r0, lsl r0
     c30:	0000000c 	andeq	r0, r0, ip
     c34:	00000b30 	andeq	r0, r0, r0, lsr fp
     c38:	00000000 	andeq	r0, r0, r0
     c3c:	0000001c 	andeq	r0, r0, ip, lsl r0
     c40:	0000000c 	andeq	r0, r0, ip
     c44:	00000b30 	andeq	r0, r0, r0, lsr fp
     c48:	00000000 	andeq	r0, r0, r0
     c4c:	0000000c 	andeq	r0, r0, ip
     c50:	00000018 	andeq	r0, r0, r8, lsl r0
     c54:	00000b30 	andeq	r0, r0, r0, lsr fp
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	00000054 	andeq	r0, r0, r4, asr r0
     c60:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     c64:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     c68:	00000001 	andeq	r0, r0, r1
     c6c:	00000014 	andeq	r0, r0, r4, lsl r0
     c70:	00000b30 	andeq	r0, r0, r0, lsr fp
     c74:	00000000 	andeq	r0, r0, r0
     c78:	0000002a 	andeq	r0, r0, sl, lsr #32
     c7c:	84080e4d 	strhi	r0, [r8], #-3661	; 0xe4d
     c80:	00018e02 	andeq	r8, r1, r2, lsl #28
     c84:	0000000c 	andeq	r0, r0, ip
     c88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c8c:	7c020001 	stcvc	0, cr0, [r2], {1}
     c90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c94:	0000000c 	andeq	r0, r0, ip
     c98:	00000c84 	andeq	r0, r0, r4, lsl #25
     c9c:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
     ca0:	0000003c 	andeq	r0, r0, ip, lsr r0
     ca4:	0000000c 	andeq	r0, r0, ip
     ca8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cac:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
     cb0:	00000038 	andeq	r0, r0, r8, lsr r0
     cb4:	0000000c 	andeq	r0, r0, ip
     cb8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cbc:	00000000 	andeq	r0, r0, r0
     cc0:	00000014 	andeq	r0, r0, r4, lsl r0
     cc4:	0000000c 	andeq	r0, r0, ip
     cc8:	00000c84 	andeq	r0, r0, r4, lsl #25
     ccc:	00000000 	andeq	r0, r0, r0
     cd0:	0000000c 	andeq	r0, r0, ip
     cd4:	0000000c 	andeq	r0, r0, ip
     cd8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cdc:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
     ce0:	00000014 	andeq	r0, r0, r4, lsl r0
     ce4:	0000000c 	andeq	r0, r0, ip
     ce8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cec:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
     cf0:	0000000c 	andeq	r0, r0, ip
     cf4:	0000000c 	andeq	r0, r0, ip
     cf8:	00000c84 	andeq	r0, r0, r4, lsl #25
     cfc:	08000a08 	stmdaeq	r0, {r3, r9, fp}
     d00:	00000014 	andeq	r0, r0, r4, lsl r0
     d04:	0000000c 	andeq	r0, r0, ip
     d08:	00000c84 	andeq	r0, r0, r4, lsl #25
     d0c:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
     d10:	00000010 	andeq	r0, r0, r0, lsl r0
     d14:	0000000c 	andeq	r0, r0, ip
     d18:	00000c84 	andeq	r0, r0, r4, lsl #25
     d1c:	08000a2c 	stmdaeq	r0, {r2, r3, r5, r9, fp}
     d20:	00000014 	andeq	r0, r0, r4, lsl r0
     d24:	0000000c 	andeq	r0, r0, ip
     d28:	00000c84 	andeq	r0, r0, r4, lsl #25
     d2c:	08000a40 	stmdaeq	r0, {r6, r9, fp}
     d30:	00000014 	andeq	r0, r0, r4, lsl r0
     d34:	0000000c 	andeq	r0, r0, ip
     d38:	00000c84 	andeq	r0, r0, r4, lsl #25
     d3c:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
     d40:	00000014 	andeq	r0, r0, r4, lsl r0
     d44:	0000000c 	andeq	r0, r0, ip
     d48:	00000c84 	andeq	r0, r0, r4, lsl #25
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000018 	andeq	r0, r0, r8, lsl r0
     d54:	0000000c 	andeq	r0, r0, ip
     d58:	00000c84 	andeq	r0, r0, r4, lsl #25
     d5c:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
     d60:	0000000c 	andeq	r0, r0, ip
     d64:	0000000c 	andeq	r0, r0, ip
     d68:	00000c84 	andeq	r0, r0, r4, lsl #25
     d6c:	00000000 	andeq	r0, r0, r0
     d70:	00000014 	andeq	r0, r0, r4, lsl r0
     d74:	0000000c 	andeq	r0, r0, ip
     d78:	00000c84 	andeq	r0, r0, r4, lsl #25
     d7c:	00000000 	andeq	r0, r0, r0
     d80:	00000020 	andeq	r0, r0, r0, lsr #32
     d84:	0000000c 	andeq	r0, r0, ip
     d88:	00000c84 	andeq	r0, r0, r4, lsl #25
     d8c:	00000000 	andeq	r0, r0, r0
     d90:	0000000c 	andeq	r0, r0, ip
     d94:	0000000c 	andeq	r0, r0, ip
     d98:	00000c84 	andeq	r0, r0, r4, lsl #25
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	00000010 	andeq	r0, r0, r0, lsl r0
     da4:	0000000c 	andeq	r0, r0, ip
     da8:	00000c84 	andeq	r0, r0, r4, lsl #25
     dac:	00000000 	andeq	r0, r0, r0
     db0:	0000000c 	andeq	r0, r0, ip
     db4:	00000014 	andeq	r0, r0, r4, lsl r0
     db8:	00000c84 	andeq	r0, r0, r4, lsl #25
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00000084 	andeq	r0, r0, r4, lsl #1
     dc4:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
     dc8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dcc:	0000000c 	andeq	r0, r0, ip
     dd0:	00000c84 	andeq	r0, r0, r4, lsl #25
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	00000018 	andeq	r0, r0, r8, lsl r0
     ddc:	0000000c 	andeq	r0, r0, ip
     de0:	00000c84 	andeq	r0, r0, r4, lsl #25
     de4:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
     de8:	00000018 	andeq	r0, r0, r8, lsl r0
     dec:	0000000c 	andeq	r0, r0, ip
     df0:	00000c84 	andeq	r0, r0, r4, lsl #25
     df4:	00000000 	andeq	r0, r0, r0
     df8:	00000018 	andeq	r0, r0, r8, lsl r0
     dfc:	0000000c 	andeq	r0, r0, ip
     e00:	00000c84 	andeq	r0, r0, r4, lsl #25
     e04:	00000000 	andeq	r0, r0, r0
     e08:	00000018 	andeq	r0, r0, r8, lsl r0
     e0c:	0000000c 	andeq	r0, r0, ip
     e10:	00000c84 	andeq	r0, r0, r4, lsl #25
     e14:	00000000 	andeq	r0, r0, r0
     e18:	00000018 	andeq	r0, r0, r8, lsl r0
     e1c:	0000000c 	andeq	r0, r0, ip
     e20:	00000c84 	andeq	r0, r0, r4, lsl #25
     e24:	00000000 	andeq	r0, r0, r0
     e28:	0000000c 	andeq	r0, r0, ip
     e2c:	0000000c 	andeq	r0, r0, ip
     e30:	00000c84 	andeq	r0, r0, r4, lsl #25
     e34:	00000000 	andeq	r0, r0, r0
     e38:	0000000c 	andeq	r0, r0, ip
     e3c:	0000000c 	andeq	r0, r0, ip
     e40:	00000c84 	andeq	r0, r0, r4, lsl #25
     e44:	00000000 	andeq	r0, r0, r0
     e48:	0000000c 	andeq	r0, r0, ip
     e4c:	0000000c 	andeq	r0, r0, ip
     e50:	00000c84 	andeq	r0, r0, r4, lsl #25
     e54:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
     e58:	00000028 	andeq	r0, r0, r8, lsr #32
     e5c:	00000018 	andeq	r0, r0, r8, lsl r0
     e60:	00000c84 	andeq	r0, r0, r4, lsl #25
     e64:	08000ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp}
     e68:	0000002e 	andeq	r0, r0, lr, lsr #32
     e6c:	80100e41 	andshi	r0, r0, r1, asr #28
     e70:	82038104 	andhi	r8, r3, #4, 2
     e74:	00018e02 	andeq	r8, r1, r2, lsl #28
     e78:	0000000c 	andeq	r0, r0, ip
     e7c:	00000c84 	andeq	r0, r0, r4, lsl #25
     e80:	00000000 	andeq	r0, r0, r0
     e84:	00000010 	andeq	r0, r0, r0, lsl r0
     e88:	0000000c 	andeq	r0, r0, ip
     e8c:	00000c84 	andeq	r0, r0, r4, lsl #25
     e90:	00000000 	andeq	r0, r0, r0
     e94:	00000014 	andeq	r0, r0, r4, lsl r0
     e98:	0000000c 	andeq	r0, r0, ip
     e9c:	00000c84 	andeq	r0, r0, r4, lsl #25
     ea0:	00000000 	andeq	r0, r0, r0
     ea4:	0000000c 	andeq	r0, r0, ip
     ea8:	0000000c 	andeq	r0, r0, ip
     eac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     eb0:	7c020001 	stcvc	0, cr0, [r2], {1}
     eb4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     eb8:	00000018 	andeq	r0, r0, r8, lsl r0
     ebc:	00000ea8 	andeq	r0, r0, r8, lsr #29
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	00000032 	andeq	r0, r0, r2, lsr r0
     ec8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     ecc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     ed0:	00000001 	andeq	r0, r0, r1
     ed4:	00000018 	andeq	r0, r0, r8, lsl r0
     ed8:	00000ea8 	andeq	r0, r0, r8, lsr #29
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	0000003a 	andeq	r0, r0, sl, lsr r0
     ee4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
     ee8:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     eec:	00000001 	andeq	r0, r0, r1
     ef0:	00000014 	andeq	r0, r0, r4, lsl r0
     ef4:	00000ea8 	andeq	r0, r0, r8, lsr #29
     ef8:	00000000 	andeq	r0, r0, r0
     efc:	000000c8 	andeq	r0, r0, r8, asr #1
     f00:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f04:	00018e02 	andeq	r8, r1, r2, lsl #28
     f08:	0000000c 	andeq	r0, r0, ip
     f0c:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f10:	00000000 	andeq	r0, r0, r0
     f14:	0000003c 	andeq	r0, r0, ip, lsr r0
     f18:	00000018 	andeq	r0, r0, r8, lsl r0
     f1c:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f20:	00000000 	andeq	r0, r0, r0
     f24:	00000074 	andeq	r0, r0, r4, ror r0
     f28:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xe42
     f2c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f30:	00018e02 	andeq	r8, r1, r2, lsl #28
     f34:	00000018 	andeq	r0, r0, r8, lsl r0
     f38:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f3c:	00000000 	andeq	r0, r0, r0
     f40:	00000088 	andeq	r0, r0, r8, lsl #1
     f44:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
     f48:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     f4c:	00000001 	andeq	r0, r0, r1
     f50:	00000018 	andeq	r0, r0, r8, lsl r0
     f54:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	00000084 	andeq	r0, r0, r4, lsl #1
     f60:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
     f64:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     f68:	00000001 	andeq	r0, r0, r1
     f6c:	00000018 	andeq	r0, r0, r8, lsl r0
     f70:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f74:	00000000 	andeq	r0, r0, r0
     f78:	00000068 	andeq	r0, r0, r8, rrx
     f7c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xe42
     f80:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     f84:	00000001 	andeq	r0, r0, r1
     f88:	0000000c 	andeq	r0, r0, ip
     f8c:	00000ea8 	andeq	r0, r0, r8, lsr #29
     f90:	00000000 	andeq	r0, r0, r0
     f94:	00000022 	andeq	r0, r0, r2, lsr #32
     f98:	0000000c 	andeq	r0, r0, ip
     f9c:	00000ea8 	andeq	r0, r0, r8, lsr #29
     fa0:	00000000 	andeq	r0, r0, r0
     fa4:	00000012 	andeq	r0, r0, r2, lsl r0
     fa8:	0000000c 	andeq	r0, r0, ip
     fac:	00000ea8 	andeq	r0, r0, r8, lsr #29
     fb0:	00000000 	andeq	r0, r0, r0
     fb4:	00000014 	andeq	r0, r0, r4, lsl r0
     fb8:	0000000c 	andeq	r0, r0, ip
     fbc:	00000ea8 	andeq	r0, r0, r8, lsr #29
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	00000010 	andeq	r0, r0, r0, lsl r0
     fc8:	0000000c 	andeq	r0, r0, ip
     fcc:	00000ea8 	andeq	r0, r0, r8, lsr #29
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	00000012 	andeq	r0, r0, r2, lsl r0
     fd8:	0000000c 	andeq	r0, r0, ip
     fdc:	00000ea8 	andeq	r0, r0, r8, lsr #29
     fe0:	00000000 	andeq	r0, r0, r0
     fe4:	00000018 	andeq	r0, r0, r8, lsl r0
     fe8:	0000000c 	andeq	r0, r0, ip
     fec:	00000ea8 	andeq	r0, r0, r8, lsr #29
     ff0:	00000000 	andeq	r0, r0, r0
     ff4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1000:	00000000 	andeq	r0, r0, r0
    1004:	00000012 	andeq	r0, r0, r2, lsl r0
    1008:	0000000c 	andeq	r0, r0, ip
    100c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00000004 	andeq	r0, r0, r4
    1018:	0000000c 	andeq	r0, r0, ip
    101c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1020:	00000000 	andeq	r0, r0, r0
    1024:	00000008 	andeq	r0, r0, r8
    1028:	0000000c 	andeq	r0, r0, ip
    102c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00000012 	andeq	r0, r0, r2, lsl r0
    1038:	0000000c 	andeq	r0, r0, ip
    103c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1040:	00000000 	andeq	r0, r0, r0
    1044:	0000000e 	andeq	r0, r0, lr
    1048:	0000000c 	andeq	r0, r0, ip
    104c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1050:	00000000 	andeq	r0, r0, r0
    1054:	0000001a 	andeq	r0, r0, sl, lsl r0
    1058:	00000018 	andeq	r0, r0, r8, lsl r0
    105c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1060:	00000000 	andeq	r0, r0, r0
    1064:	00000034 	andeq	r0, r0, r4, lsr r0
    1068:	83100e41 	tsthi	r0, #1040	; 0x410
    106c:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1070:	00018e02 	andeq	r8, r1, r2, lsl #28
    1074:	00000014 	andeq	r0, r0, r4, lsl r0
    1078:	00000ea8 	andeq	r0, r0, r8, lsr #29
    107c:	00000000 	andeq	r0, r0, r0
    1080:	00000014 	andeq	r0, r0, r4, lsl r0
    1084:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1088:	00018e02 	andeq	r8, r1, r2, lsl #28
    108c:	00000014 	andeq	r0, r0, r4, lsl r0
    1090:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1094:	00000000 	andeq	r0, r0, r0
    1098:	0000001a 	andeq	r0, r0, sl, lsl r0
    109c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    10a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10a4:	00000014 	andeq	r0, r0, r4, lsl r0
    10a8:	00000ea8 	andeq	r0, r0, r8, lsr #29
    10ac:	00000000 	andeq	r0, r0, r0
    10b0:	00000014 	andeq	r0, r0, r4, lsl r0
    10b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    10b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    10bc:	0000000c 	andeq	r0, r0, ip
    10c0:	00000ea8 	andeq	r0, r0, r8, lsr #29
    10c4:	00000000 	andeq	r0, r0, r0
    10c8:	00000006 	andeq	r0, r0, r6
    10cc:	0000000c 	andeq	r0, r0, ip
    10d0:	00000ea8 	andeq	r0, r0, r8, lsr #29
    10d4:	00000000 	andeq	r0, r0, r0
    10d8:	00000010 	andeq	r0, r0, r0, lsl r0
    10dc:	0000000c 	andeq	r0, r0, ip
    10e0:	00000ea8 	andeq	r0, r0, r8, lsr #29
    10e4:	00000000 	andeq	r0, r0, r0
    10e8:	00000010 	andeq	r0, r0, r0, lsl r0
    10ec:	00000018 	andeq	r0, r0, r8, lsl r0
    10f0:	00000ea8 	andeq	r0, r0, r8, lsr #29
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	0000003c 	andeq	r0, r0, ip, lsr r0
    10fc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    1100:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1104:	00018e02 	andeq	r8, r1, r2, lsl #28
    1108:	0000000c 	andeq	r0, r0, ip
    110c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1110:	00000000 	andeq	r0, r0, r0
    1114:	00000010 	andeq	r0, r0, r0, lsl r0
    1118:	0000000c 	andeq	r0, r0, ip
    111c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1120:	00000000 	andeq	r0, r0, r0
    1124:	00000014 	andeq	r0, r0, r4, lsl r0
    1128:	0000000c 	andeq	r0, r0, ip
    112c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1130:	00000000 	andeq	r0, r0, r0
    1134:	00000010 	andeq	r0, r0, r0, lsl r0
    1138:	0000000c 	andeq	r0, r0, ip
    113c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1140:	00000000 	andeq	r0, r0, r0
    1144:	00000014 	andeq	r0, r0, r4, lsl r0
    1148:	0000000c 	andeq	r0, r0, ip
    114c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1150:	00000000 	andeq	r0, r0, r0
    1154:	00000018 	andeq	r0, r0, r8, lsl r0
    1158:	0000000c 	andeq	r0, r0, ip
    115c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1160:	00000000 	andeq	r0, r0, r0
    1164:	00000018 	andeq	r0, r0, r8, lsl r0
    1168:	0000000c 	andeq	r0, r0, ip
    116c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1170:	00000000 	andeq	r0, r0, r0
    1174:	00000018 	andeq	r0, r0, r8, lsl r0
    1178:	0000000c 	andeq	r0, r0, ip
    117c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1180:	00000000 	andeq	r0, r0, r0
    1184:	00000018 	andeq	r0, r0, r8, lsl r0
    1188:	0000000c 	andeq	r0, r0, ip
    118c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1190:	00000000 	andeq	r0, r0, r0
    1194:	00000010 	andeq	r0, r0, r0, lsl r0
    1198:	0000000c 	andeq	r0, r0, ip
    119c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11a0:	00000000 	andeq	r0, r0, r0
    11a4:	00000014 	andeq	r0, r0, r4, lsl r0
    11a8:	0000000c 	andeq	r0, r0, ip
    11ac:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11b0:	00000000 	andeq	r0, r0, r0
    11b4:	00000010 	andeq	r0, r0, r0, lsl r0
    11b8:	0000000c 	andeq	r0, r0, ip
    11bc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11c0:	00000000 	andeq	r0, r0, r0
    11c4:	00000014 	andeq	r0, r0, r4, lsl r0
    11c8:	0000000c 	andeq	r0, r0, ip
    11cc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11d0:	00000000 	andeq	r0, r0, r0
    11d4:	00000010 	andeq	r0, r0, r0, lsl r0
    11d8:	0000000c 	andeq	r0, r0, ip
    11dc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11e0:	00000000 	andeq	r0, r0, r0
    11e4:	00000014 	andeq	r0, r0, r4, lsl r0
    11e8:	0000000c 	andeq	r0, r0, ip
    11ec:	00000ea8 	andeq	r0, r0, r8, lsr #29
    11f0:	00000000 	andeq	r0, r0, r0
    11f4:	00000010 	andeq	r0, r0, r0, lsl r0
    11f8:	0000000c 	andeq	r0, r0, ip
    11fc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1200:	00000000 	andeq	r0, r0, r0
    1204:	00000014 	andeq	r0, r0, r4, lsl r0
    1208:	0000000c 	andeq	r0, r0, ip
    120c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1210:	00000000 	andeq	r0, r0, r0
    1214:	00000010 	andeq	r0, r0, r0, lsl r0
    1218:	0000000c 	andeq	r0, r0, ip
    121c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1220:	00000000 	andeq	r0, r0, r0
    1224:	00000010 	andeq	r0, r0, r0, lsl r0
    1228:	0000000c 	andeq	r0, r0, ip
    122c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1230:	00000000 	andeq	r0, r0, r0
    1234:	00000010 	andeq	r0, r0, r0, lsl r0
    1238:	0000000c 	andeq	r0, r0, ip
    123c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1240:	00000000 	andeq	r0, r0, r0
    1244:	00000010 	andeq	r0, r0, r0, lsl r0
    1248:	0000000c 	andeq	r0, r0, ip
    124c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1250:	00000000 	andeq	r0, r0, r0
    1254:	00000010 	andeq	r0, r0, r0, lsl r0
    1258:	0000000c 	andeq	r0, r0, ip
    125c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1260:	00000000 	andeq	r0, r0, r0
    1264:	00000010 	andeq	r0, r0, r0, lsl r0
    1268:	0000000c 	andeq	r0, r0, ip
    126c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1270:	00000000 	andeq	r0, r0, r0
    1274:	00000014 	andeq	r0, r0, r4, lsl r0
    1278:	0000000c 	andeq	r0, r0, ip
    127c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00000014 	andeq	r0, r0, r4, lsl r0
    1288:	0000000c 	andeq	r0, r0, ip
    128c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1290:	00000000 	andeq	r0, r0, r0
    1294:	00000014 	andeq	r0, r0, r4, lsl r0
    1298:	0000000c 	andeq	r0, r0, ip
    129c:	00000ea8 	andeq	r0, r0, r8, lsr #29
    12a0:	00000000 	andeq	r0, r0, r0
    12a4:	00000014 	andeq	r0, r0, r4, lsl r0
    12a8:	0000000c 	andeq	r0, r0, ip
    12ac:	00000ea8 	andeq	r0, r0, r8, lsr #29
    12b0:	00000000 	andeq	r0, r0, r0
    12b4:	00000014 	andeq	r0, r0, r4, lsl r0
    12b8:	00000014 	andeq	r0, r0, r4, lsl r0
    12bc:	00000ea8 	andeq	r0, r0, r8, lsr #29
    12c0:	00000000 	andeq	r0, r0, r0
    12c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    12c8:	84080e44 	strhi	r0, [r8], #-3652	; 0xe44
    12cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12d0:	00000014 	andeq	r0, r0, r4, lsl r0
    12d4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    12d8:	00000000 	andeq	r0, r0, r0
    12dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e0:	84080e44 	strhi	r0, [r8], #-3652	; 0xe44
    12e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    12e8:	00000014 	andeq	r0, r0, r4, lsl r0
    12ec:	00000ea8 	andeq	r0, r0, r8, lsr #29
    12f0:	00000000 	andeq	r0, r0, r0
    12f4:	00000044 	andeq	r0, r0, r4, asr #32
    12f8:	84080e43 	strhi	r0, [r8], #-3651	; 0xe43
    12fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1300:	0000000c 	andeq	r0, r0, ip
    1304:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1308:	00000000 	andeq	r0, r0, r0
    130c:	00000018 	andeq	r0, r0, r8, lsl r0
    1310:	0000000c 	andeq	r0, r0, ip
    1314:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1318:	00000000 	andeq	r0, r0, r0
    131c:	00000018 	andeq	r0, r0, r8, lsl r0
    1320:	0000000c 	andeq	r0, r0, ip
    1324:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1328:	00000000 	andeq	r0, r0, r0
    132c:	00000018 	andeq	r0, r0, r8, lsl r0
    1330:	0000000c 	andeq	r0, r0, ip
    1334:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1338:	00000000 	andeq	r0, r0, r0
    133c:	00000016 	andeq	r0, r0, r6, lsl r0
    1340:	0000000c 	andeq	r0, r0, ip
    1344:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1348:	00000000 	andeq	r0, r0, r0
    134c:	00000016 	andeq	r0, r0, r6, lsl r0
    1350:	0000000c 	andeq	r0, r0, ip
    1354:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1358:	00000000 	andeq	r0, r0, r0
    135c:	00000016 	andeq	r0, r0, r6, lsl r0
    1360:	0000000c 	andeq	r0, r0, ip
    1364:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1368:	00000000 	andeq	r0, r0, r0
    136c:	00000016 	andeq	r0, r0, r6, lsl r0
    1370:	0000000c 	andeq	r0, r0, ip
    1374:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1378:	00000000 	andeq	r0, r0, r0
    137c:	00000004 	andeq	r0, r0, r4
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1388:	00000000 	andeq	r0, r0, r0
    138c:	00000004 	andeq	r0, r0, r4
    1390:	0000000c 	andeq	r0, r0, ip
    1394:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1398:	00000000 	andeq	r0, r0, r0
    139c:	00000004 	andeq	r0, r0, r4
    13a0:	0000000c 	andeq	r0, r0, ip
    13a4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13a8:	00000000 	andeq	r0, r0, r0
    13ac:	00000004 	andeq	r0, r0, r4
    13b0:	0000000c 	andeq	r0, r0, ip
    13b4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	00000004 	andeq	r0, r0, r4
    13c0:	0000000c 	andeq	r0, r0, ip
    13c4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13c8:	00000000 	andeq	r0, r0, r0
    13cc:	00000006 	andeq	r0, r0, r6
    13d0:	0000000c 	andeq	r0, r0, ip
    13d4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	00000016 	andeq	r0, r0, r6, lsl r0
    13e0:	0000000c 	andeq	r0, r0, ip
    13e4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13e8:	00000000 	andeq	r0, r0, r0
    13ec:	0000001a 	andeq	r0, r0, sl, lsl r0
    13f0:	0000001c 	andeq	r0, r0, ip, lsl r0
    13f4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    13f8:	00000000 	andeq	r0, r0, r0
    13fc:	0000006e 	andeq	r0, r0, lr, rrx
    1400:	83180e41 	tsthi	r8, #1040	; 0x410
    1404:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    1408:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    140c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1410:	0000000c 	andeq	r0, r0, ip
    1414:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1418:	00000000 	andeq	r0, r0, r0
    141c:	00000016 	andeq	r0, r0, r6, lsl r0
    1420:	0000000c 	andeq	r0, r0, ip
    1424:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1428:	00000000 	andeq	r0, r0, r0
    142c:	0000001a 	andeq	r0, r0, sl, lsl r0
    1430:	0000001c 	andeq	r0, r0, ip, lsl r0
    1434:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1438:	00000000 	andeq	r0, r0, r0
    143c:	000000b4 	strheq	r0, [r0], -r4
    1440:	83180e41 	tsthi	r8, #1040	; 0x410
    1444:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    1448:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    144c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1450:	0000000c 	andeq	r0, r0, ip
    1454:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1458:	00000000 	andeq	r0, r0, r0
    145c:	00000010 	andeq	r0, r0, r0, lsl r0
    1460:	0000000c 	andeq	r0, r0, ip
    1464:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1468:	00000000 	andeq	r0, r0, r0
    146c:	00000006 	andeq	r0, r0, r6
    1470:	0000000c 	andeq	r0, r0, ip
    1474:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1478:	00000000 	andeq	r0, r0, r0
    147c:	00000006 	andeq	r0, r0, r6
    1480:	0000000c 	andeq	r0, r0, ip
    1484:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1488:	00000000 	andeq	r0, r0, r0
    148c:	00000006 	andeq	r0, r0, r6
    1490:	0000000c 	andeq	r0, r0, ip
    1494:	00000ea8 	andeq	r0, r0, r8, lsr #29
    1498:	00000000 	andeq	r0, r0, r0
    149c:	00000008 	andeq	r0, r0, r8
    14a0:	0000000c 	andeq	r0, r0, ip
    14a4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	00000006 	andeq	r0, r0, r6
    14b0:	0000000c 	andeq	r0, r0, ip
    14b4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14b8:	00000000 	andeq	r0, r0, r0
    14bc:	00000006 	andeq	r0, r0, r6
    14c0:	0000000c 	andeq	r0, r0, ip
    14c4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	0000000c 	andeq	r0, r0, ip
    14d0:	0000000c 	andeq	r0, r0, ip
    14d4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14d8:	00000000 	andeq	r0, r0, r0
    14dc:	00000008 	andeq	r0, r0, r8
    14e0:	0000000c 	andeq	r0, r0, ip
    14e4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14e8:	00000000 	andeq	r0, r0, r0
    14ec:	00000016 	andeq	r0, r0, r6, lsl r0
    14f0:	0000000c 	andeq	r0, r0, ip
    14f4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    14f8:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
    14fc:	00000008 	andeq	r0, r0, r8
    1500:	0000000c 	andeq	r0, r0, ip
    1504:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1508:	7c020001 	stcvc	0, cr0, [r2], {1}
    150c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1510:	0000000c 	andeq	r0, r0, ip
    1514:	00001500 	andeq	r1, r0, r0, lsl #10
    1518:	00000000 	andeq	r0, r0, r0
    151c:	00000018 	andeq	r0, r0, r8, lsl r0
    1520:	0000000c 	andeq	r0, r0, ip
    1524:	00001500 	andeq	r1, r0, r0, lsl #10
    1528:	00000000 	andeq	r0, r0, r0
    152c:	0000000c 	andeq	r0, r0, ip
    1530:	0000000c 	andeq	r0, r0, ip
    1534:	00001500 	andeq	r1, r0, r0, lsl #10
    1538:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
    153c:	00000028 	andeq	r0, r0, r8, lsr #32
    1540:	0000000c 	andeq	r0, r0, ip
    1544:	00001500 	andeq	r1, r0, r0, lsl #10
    1548:	00000000 	andeq	r0, r0, r0
    154c:	00000018 	andeq	r0, r0, r8, lsl r0
    1550:	0000000c 	andeq	r0, r0, ip
    1554:	00001500 	andeq	r1, r0, r0, lsl #10
    1558:	00000000 	andeq	r0, r0, r0
    155c:	0000000c 	andeq	r0, r0, ip
    1560:	0000000c 	andeq	r0, r0, ip
    1564:	00001500 	andeq	r1, r0, r0, lsl #10
    1568:	00000000 	andeq	r0, r0, r0
    156c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1578:	7c020001 	stcvc	0, cr0, [r2], {1}
    157c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1580:	00000014 	andeq	r0, r0, r4, lsl r0
    1584:	00001570 	andeq	r1, r0, r0, ror r5
    1588:	00000000 	andeq	r0, r0, r0
    158c:	00000094 	muleq	r0, r4, r0
    1590:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1594:	00018e02 	andeq	r8, r1, r2, lsl #28
    1598:	00000018 	andeq	r0, r0, r8, lsl r0
    159c:	00001570 	andeq	r1, r0, r0, ror r5
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	00000088 	andeq	r0, r0, r8, lsl #1
    15a8:	840c0e47 	strhi	r0, [ip], #-3655	; 0xe47
    15ac:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    15b0:	280e5601 	stmdacs	lr, {r0, r9, sl, ip, lr}
    15b4:	0000000c 	andeq	r0, r0, ip
    15b8:	00001570 	andeq	r1, r0, r0, ror r5
    15bc:	00000000 	andeq	r0, r0, r0
    15c0:	00000016 	andeq	r0, r0, r6, lsl r0
    15c4:	00000014 	andeq	r0, r0, r4, lsl r0
    15c8:	00001570 	andeq	r1, r0, r0, ror r5
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	00000020 	andeq	r0, r0, r0, lsr #32
    15d4:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    15d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15dc:	0000000c 	andeq	r0, r0, ip
    15e0:	00001570 	andeq	r1, r0, r0, ror r5
    15e4:	00000000 	andeq	r0, r0, r0
    15e8:	0000000c 	andeq	r0, r0, ip
    15ec:	0000000c 	andeq	r0, r0, ip
    15f0:	00001570 	andeq	r1, r0, r0, ror r5
    15f4:	00000000 	andeq	r0, r0, r0
    15f8:	00000018 	andeq	r0, r0, r8, lsl r0
    15fc:	00000014 	andeq	r0, r0, r4, lsl r0
    1600:	00001570 	andeq	r1, r0, r0, ror r5
    1604:	00000000 	andeq	r0, r0, r0
    1608:	00000030 	andeq	r0, r0, r0, lsr r0
    160c:	84080e43 	strhi	r0, [r8], #-3651	; 0xe43
    1610:	00018e02 	andeq	r8, r1, r2, lsl #28
    1614:	0000000c 	andeq	r0, r0, ip
    1618:	00001570 	andeq	r1, r0, r0, ror r5
    161c:	00000000 	andeq	r0, r0, r0
    1620:	00000012 	andeq	r0, r0, r2, lsl r0
    1624:	0000000c 	andeq	r0, r0, ip
    1628:	00001570 	andeq	r1, r0, r0, ror r5
    162c:	00000000 	andeq	r0, r0, r0
    1630:	00000016 	andeq	r0, r0, r6, lsl r0
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	00001570 	andeq	r1, r0, r0, ror r5
    163c:	00000000 	andeq	r0, r0, r0
    1640:	00000016 	andeq	r0, r0, r6, lsl r0
    1644:	0000000c 	andeq	r0, r0, ip
    1648:	00001570 	andeq	r1, r0, r0, ror r5
    164c:	00000000 	andeq	r0, r0, r0
    1650:	00000018 	andeq	r0, r0, r8, lsl r0
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	00001570 	andeq	r1, r0, r0, ror r5
    165c:	00000000 	andeq	r0, r0, r0
    1660:	00000016 	andeq	r0, r0, r6, lsl r0
    1664:	0000000c 	andeq	r0, r0, ip
    1668:	00001570 	andeq	r1, r0, r0, ror r5
    166c:	00000000 	andeq	r0, r0, r0
    1670:	00000018 	andeq	r0, r0, r8, lsl r0
    1674:	0000000c 	andeq	r0, r0, ip
    1678:	00001570 	andeq	r1, r0, r0, ror r5
    167c:	00000000 	andeq	r0, r0, r0
    1680:	00000008 	andeq	r0, r0, r8
    1684:	0000000c 	andeq	r0, r0, ip
    1688:	00001570 	andeq	r1, r0, r0, ror r5
    168c:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
    1690:	00000008 	andeq	r0, r0, r8
    1694:	0000000c 	andeq	r0, r0, ip
    1698:	00001570 	andeq	r1, r0, r0, ror r5
    169c:	00000000 	andeq	r0, r0, r0
    16a0:	0000000c 	andeq	r0, r0, ip
    16a4:	0000000c 	andeq	r0, r0, ip
    16a8:	00001570 	andeq	r1, r0, r0, ror r5
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	00000012 	andeq	r0, r0, r2, lsl r0
    16b4:	0000000c 	andeq	r0, r0, ip
    16b8:	00001570 	andeq	r1, r0, r0, ror r5
    16bc:	00000000 	andeq	r0, r0, r0
    16c0:	00000012 	andeq	r0, r0, r2, lsl r0
    16c4:	0000000c 	andeq	r0, r0, ip
    16c8:	00001570 	andeq	r1, r0, r0, ror r5
    16cc:	00000000 	andeq	r0, r0, r0
    16d0:	00000018 	andeq	r0, r0, r8, lsl r0
    16d4:	0000000c 	andeq	r0, r0, ip
    16d8:	00001570 	andeq	r1, r0, r0, ror r5
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	00000018 	andeq	r0, r0, r8, lsl r0
    16e4:	0000000c 	andeq	r0, r0, ip
    16e8:	00001570 	andeq	r1, r0, r0, ror r5
    16ec:	00000000 	andeq	r0, r0, r0
    16f0:	00000018 	andeq	r0, r0, r8, lsl r0
    16f4:	0000000c 	andeq	r0, r0, ip
    16f8:	00001570 	andeq	r1, r0, r0, ror r5
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000016 	andeq	r0, r0, r6, lsl r0
    1704:	0000000c 	andeq	r0, r0, ip
    1708:	00001570 	andeq	r1, r0, r0, ror r5
    170c:	00000000 	andeq	r0, r0, r0
    1710:	00000018 	andeq	r0, r0, r8, lsl r0
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	00001570 	andeq	r1, r0, r0, ror r5
    171c:	00000000 	andeq	r0, r0, r0
    1720:	0000000c 	andeq	r0, r0, ip
    1724:	0000000c 	andeq	r0, r0, ip
    1728:	00001570 	andeq	r1, r0, r0, ror r5
    172c:	00000000 	andeq	r0, r0, r0
    1730:	00000008 	andeq	r0, r0, r8
    1734:	00000014 	andeq	r0, r0, r4, lsl r0
    1738:	00001570 	andeq	r1, r0, r0, ror r5
    173c:	00000000 	andeq	r0, r0, r0
    1740:	00000040 	andeq	r0, r0, r0, asr #32
    1744:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1748:	00018e02 	andeq	r8, r1, r2, lsl #28
    174c:	0000000c 	andeq	r0, r0, ip
    1750:	00001570 	andeq	r1, r0, r0, ror r5
    1754:	00000000 	andeq	r0, r0, r0
    1758:	0000000e 	andeq	r0, r0, lr
    175c:	0000000c 	andeq	r0, r0, ip
    1760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1764:	7c020001 	stcvc	0, cr0, [r2], {1}
    1768:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    176c:	00000018 	andeq	r0, r0, r8, lsl r0
    1770:	0000175c 	andeq	r1, r0, ip, asr r7
    1774:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
    1778:	00000050 	andeq	r0, r0, r0, asr r0
    177c:	000d0941 	andeq	r0, sp, r1, asr #18
    1780:	8d080e44 	stchi	14, cr0, [r8, #-272]	; 0xfffffef0
    1784:	00018e02 	andeq	r8, r1, r2, lsl #28
    1788:	0000000c 	andeq	r0, r0, ip
    178c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1790:	7c020001 	stcvc	0, cr0, [r2], {1}
    1794:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1798:	00000014 	andeq	r0, r0, r4, lsl r0
    179c:	00001788 	andeq	r1, r0, r8, lsl #15
    17a0:	00000000 	andeq	r0, r0, r0
    17a4:	00000038 	andeq	r0, r0, r8, lsr r0
    17a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    17ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17c0:	00000014 	andeq	r0, r0, r4, lsl r0
    17c4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    17c8:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
    17cc:	00000024 	andeq	r0, r0, r4, lsr #32
    17d0:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    17d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    17d8:	00000014 	andeq	r0, r0, r4, lsl r0
    17dc:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    17e0:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    17e4:	00000024 	andeq	r0, r0, r4, lsr #32
    17e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    17ec:	00018e02 	andeq	r8, r1, r2, lsl #28
    17f0:	00000014 	andeq	r0, r0, r4, lsl r0
    17f4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    17f8:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
    17fc:	00000090 	muleq	r0, r0, r0
    1800:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1804:	00018e02 	andeq	r8, r1, r2, lsl #28
    1808:	00000020 	andeq	r0, r0, r0, lsr #32
    180c:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1810:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
    1814:	000000a8 	andeq	r0, r0, r8, lsr #1
    1818:	83200e43 	teqhi	r0, #1072	; 0x430
    181c:	85078408 	strhi	r8, [r7, #-1032]	; 0x408
    1820:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1824:	89038804 	stmdbhi	r3, {r2, fp, pc}
    1828:	00018e02 	andeq	r8, r1, r2, lsl #28
    182c:	00000014 	andeq	r0, r0, r4, lsl r0
    1830:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1834:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}
    1838:	00000038 	andeq	r0, r0, r8, lsr r0
    183c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1840:	00018e02 	andeq	r8, r1, r2, lsl #28
    1844:	00000018 	andeq	r0, r0, r8, lsl r0
    1848:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    184c:	08000d24 	stmdaeq	r0, {r2, r5, r8, sl, fp}
    1850:	00000048 	andeq	r0, r0, r8, asr #32
    1854:	83100e41 	tsthi	r0, #1040	; 0x410
    1858:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    185c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1860:	00000018 	andeq	r0, r0, r8, lsl r0
    1864:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1868:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
    186c:	000000d8 	ldrdeq	r0, [r0], -r8
    1870:	83100e41 	tsthi	r0, #1040	; 0x410
    1874:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1878:	00018e02 	andeq	r8, r1, r2, lsl #28
    187c:	00000018 	andeq	r0, r0, r8, lsl r0
    1880:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1884:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
    1888:	0000008c 	andeq	r0, r0, ip, lsl #1
    188c:	83100e41 	tsthi	r0, #1040	; 0x410
    1890:	85038404 	strhi	r8, [r3, #-1028]	; 0x404
    1894:	00018e02 	andeq	r8, r1, r2, lsl #28
    1898:	00000014 	andeq	r0, r0, r4, lsl r0
    189c:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    18a0:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
    18a4:	00000024 	andeq	r0, r0, r4, lsr #32
    18a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    18ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    18b0:	0000000c 	andeq	r0, r0, ip
    18b4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    18b8:	08000ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp}
    18bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    18c0:	00000014 	andeq	r0, r0, r4, lsl r0
    18c4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    18c8:	08000f10 	stmdaeq	r0, {r4, r8, r9, sl, fp}
    18cc:	00000040 	andeq	r0, r0, r0, asr #32
    18d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    18d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    18d8:	00000020 	andeq	r0, r0, r0, lsr #32
    18dc:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    18e0:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
    18e4:	000002e8 	andeq	r0, r0, r8, ror #5
    18e8:	80200e41 	eorhi	r0, r0, r1, asr #28
    18ec:	82078108 	andhi	r8, r7, #8, 2
    18f0:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    18f4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    18f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    18fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1900:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1904:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
    1908:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    190c:	83180e41 	tsthi	r8, #1040	; 0x410
    1910:	85058406 	strhi	r8, [r5, #-1030]	; 0x406
    1914:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1918:	00018e02 	andeq	r8, r1, r2, lsl #28
    191c:	00000018 	andeq	r0, r0, r8, lsl r0
    1920:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1924:	08001308 	stmdaeq	r0, {r3, r8, r9, ip}
    1928:	00000040 	andeq	r0, r0, r0, asr #32
    192c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    1930:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1934:	00018e02 	andeq	r8, r1, r2, lsl #28
    1938:	00000014 	andeq	r0, r0, r4, lsl r0
    193c:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1940:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
    1944:	0000005c 	andeq	r0, r0, ip, asr r0
    1948:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    194c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1950:	0000000c 	andeq	r0, r0, ip
    1954:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    1958:	080013a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip}
    195c:	00000002 	andeq	r0, r0, r2
    1960:	0000000c 	andeq	r0, r0, ip
    1964:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1968:	7c020001 	stcvc	0, cr0, [r2], {1}
    196c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1970:	00000018 	andeq	r0, r0, r8, lsl r0
    1974:	00001960 	andeq	r1, r0, r0, ror #18
    1978:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
    197c:	00000030 	andeq	r0, r0, r0, lsr r0
    1980:	840c0e41 	strhi	r0, [ip], #-3649	; 0xe41
    1984:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1988:	00000001 	andeq	r0, r0, r1
    198c:	00000014 	andeq	r0, r0, r4, lsl r0
    1990:	00001960 	andeq	r1, r0, r0, ror #18
    1994:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
    1998:	00000024 	andeq	r0, r0, r4, lsr #32
    199c:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    19a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    19a4:	0000000c 	andeq	r0, r0, ip
    19a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19ac:	7c020001 	stcvc	0, cr0, [r2], {1}
    19b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19b4:	0000000c 	andeq	r0, r0, ip
    19b8:	000019a4 	andeq	r1, r0, r4, lsr #19
    19bc:	00000000 	andeq	r0, r0, r0
    19c0:	0000000c 	andeq	r0, r0, ip
    19c4:	0000000c 	andeq	r0, r0, ip
    19c8:	000019a4 	andeq	r1, r0, r4, lsr #19
    19cc:	00000000 	andeq	r0, r0, r0
    19d0:	0000000c 	andeq	r0, r0, ip
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000019a4 	andeq	r1, r0, r4, lsr #19
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	0000000c 	andeq	r0, r0, ip
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	000019a4 	andeq	r1, r0, r4, lsr #19
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	0000000c 	andeq	r0, r0, ip
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	000019a4 	andeq	r1, r0, r4, lsr #19
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	0000000c 	andeq	r0, r0, ip
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	0000000c 	andeq	r0, r0, ip
    1a14:	0000000c 	andeq	r0, r0, ip
    1a18:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a1c:	00000000 	andeq	r0, r0, r0
    1a20:	0000000c 	andeq	r0, r0, ip
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a2c:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
    1a30:	00000010 	andeq	r0, r0, r0, lsl r0
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a3c:	00000000 	andeq	r0, r0, r0
    1a40:	0000000c 	andeq	r0, r0, ip
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a4c:	00000000 	andeq	r0, r0, r0
    1a50:	0000000e 	andeq	r0, r0, lr
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00000010 	andeq	r0, r0, r0, lsl r0
    1a64:	0000000c 	andeq	r0, r0, ip
    1a68:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a6c:	0800140c 	stmdaeq	r0, {r2, r3, sl, ip}
    1a70:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a74:	0000000c 	andeq	r0, r0, ip
    1a78:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a7c:	00000000 	andeq	r0, r0, r0
    1a80:	00000012 	andeq	r0, r0, r2, lsl r0
    1a84:	0000000c 	andeq	r0, r0, ip
    1a88:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a8c:	08001428 	stmdaeq	r0, {r3, r5, sl, ip}
    1a90:	00000032 	andeq	r0, r0, r2, lsr r0
    1a94:	0000000c 	andeq	r0, r0, ip
    1a98:	000019a4 	andeq	r1, r0, r4, lsr #19
    1a9c:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
    1aa0:	00000032 	andeq	r0, r0, r2, lsr r0
    1aa4:	0000000c 	andeq	r0, r0, ip
    1aa8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1aac:	00000000 	andeq	r0, r0, r0
    1ab0:	00000024 	andeq	r0, r0, r4, lsr #32
    1ab4:	0000000c 	andeq	r0, r0, ip
    1ab8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1abc:	00000000 	andeq	r0, r0, r0
    1ac0:	00000012 	andeq	r0, r0, r2, lsl r0
    1ac4:	0000000c 	andeq	r0, r0, ip
    1ac8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1acc:	00000000 	andeq	r0, r0, r0
    1ad0:	00000012 	andeq	r0, r0, r2, lsl r0
    1ad4:	0000000c 	andeq	r0, r0, ip
    1ad8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1adc:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
    1ae0:	00000026 	andeq	r0, r0, r6, lsr #32
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1aec:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
    1af0:	00000026 	andeq	r0, r0, r6, lsr #32
    1af4:	0000000c 	andeq	r0, r0, ip
    1af8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1afc:	00000000 	andeq	r0, r0, r0
    1b00:	00000020 	andeq	r0, r0, r0, lsr #32
    1b04:	0000000c 	andeq	r0, r0, ip
    1b08:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b0c:	00000000 	andeq	r0, r0, r0
    1b10:	00000020 	andeq	r0, r0, r0, lsr #32
    1b14:	0000000c 	andeq	r0, r0, ip
    1b18:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b1c:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
    1b20:	00000020 	andeq	r0, r0, r0, lsr #32
    1b24:	0000000c 	andeq	r0, r0, ip
    1b28:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b2c:	00000000 	andeq	r0, r0, r0
    1b30:	00000020 	andeq	r0, r0, r0, lsr #32
    1b34:	0000000c 	andeq	r0, r0, ip
    1b38:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	00000020 	andeq	r0, r0, r0, lsr #32
    1b44:	0000000c 	andeq	r0, r0, ip
    1b48:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b4c:	00000000 	andeq	r0, r0, r0
    1b50:	00000020 	andeq	r0, r0, r0, lsr #32
    1b54:	0000000c 	andeq	r0, r0, ip
    1b58:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b5c:	00000000 	andeq	r0, r0, r0
    1b60:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b64:	0000000c 	andeq	r0, r0, ip
    1b68:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b6c:	00000000 	andeq	r0, r0, r0
    1b70:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b74:	0000000c 	andeq	r0, r0, ip
    1b78:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b7c:	00000000 	andeq	r0, r0, r0
    1b80:	00000018 	andeq	r0, r0, r8, lsl r0
    1b84:	0000000c 	andeq	r0, r0, ip
    1b88:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b8c:	00000000 	andeq	r0, r0, r0
    1b90:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b94:	0000000c 	andeq	r0, r0, ip
    1b98:	000019a4 	andeq	r1, r0, r4, lsr #19
    1b9c:	00000000 	andeq	r0, r0, r0
    1ba0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ba4:	0000000c 	andeq	r0, r0, ip
    1ba8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bac:	00000000 	andeq	r0, r0, r0
    1bb0:	00000020 	andeq	r0, r0, r0, lsr #32
    1bb4:	0000000c 	andeq	r0, r0, ip
    1bb8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bbc:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
    1bc0:	00000024 	andeq	r0, r0, r4, lsr #32
    1bc4:	0000000c 	andeq	r0, r0, ip
    1bc8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bcc:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
    1bd0:	00000024 	andeq	r0, r0, r4, lsr #32
    1bd4:	0000000c 	andeq	r0, r0, ip
    1bd8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bdc:	00000000 	andeq	r0, r0, r0
    1be0:	00000022 	andeq	r0, r0, r2, lsr #32
    1be4:	0000000c 	andeq	r0, r0, ip
    1be8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bec:	00000000 	andeq	r0, r0, r0
    1bf0:	00000012 	andeq	r0, r0, r2, lsl r0
    1bf4:	0000000c 	andeq	r0, r0, ip
    1bf8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1bfc:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    1c00:	00000020 	andeq	r0, r0, r0, lsr #32
    1c04:	0000000c 	andeq	r0, r0, ip
    1c08:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c0c:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
    1c10:	00000020 	andeq	r0, r0, r0, lsr #32
    1c14:	0000000c 	andeq	r0, r0, ip
    1c18:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c1c:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
    1c20:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c24:	0000000c 	andeq	r0, r0, ip
    1c28:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c2c:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    1c30:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c34:	0000000c 	andeq	r0, r0, ip
    1c38:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c3c:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	0000000c 	andeq	r0, r0, ip
    1c48:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c4c:	00000000 	andeq	r0, r0, r0
    1c50:	00000026 	andeq	r0, r0, r6, lsr #32
    1c54:	0000000c 	andeq	r0, r0, ip
    1c58:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c5c:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
    1c60:	00000040 	andeq	r0, r0, r0, asr #32
    1c64:	0000000c 	andeq	r0, r0, ip
    1c68:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c6c:	00000000 	andeq	r0, r0, r0
    1c70:	00000020 	andeq	r0, r0, r0, lsr #32
    1c74:	0000000c 	andeq	r0, r0, ip
    1c78:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c7c:	08001614 	stmdaeq	r0, {r2, r4, r9, sl, ip}
    1c80:	00000020 	andeq	r0, r0, r0, lsr #32
    1c84:	00000014 	andeq	r0, r0, r4, lsl r0
    1c88:	000019a4 	andeq	r1, r0, r4, lsr #19
    1c8c:	00000000 	andeq	r0, r0, r0
    1c90:	00000038 	andeq	r0, r0, r8, lsr r0
    1c94:	84080e41 	strhi	r0, [r8], #-3649	; 0xe41
    1c98:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c9c:	0000000c 	andeq	r0, r0, ip
    1ca0:	000019a4 	andeq	r1, r0, r4, lsr #19
    1ca4:	00000000 	andeq	r0, r0, r0
    1ca8:	00000020 	andeq	r0, r0, r0, lsr #32
    1cac:	0000000c 	andeq	r0, r0, ip
    1cb0:	000019a4 	andeq	r1, r0, r4, lsr #19
    1cb4:	00000000 	andeq	r0, r0, r0
    1cb8:	00000020 	andeq	r0, r0, r0, lsr #32
    1cbc:	0000000c 	andeq	r0, r0, ip
    1cc0:	000019a4 	andeq	r1, r0, r4, lsr #19
    1cc4:	00000000 	andeq	r0, r0, r0
    1cc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ccc:	0000000c 	andeq	r0, r0, ip
    1cd0:	000019a4 	andeq	r1, r0, r4, lsr #19
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cdc:	00000014 	andeq	r0, r0, r4, lsl r0
    1ce0:	000019a4 	andeq	r1, r0, r4, lsr #19
    1ce4:	00000000 	andeq	r0, r0, r0
    1ce8:	000000a8 	andeq	r0, r0, r8, lsr #1
    1cec:	84080e42 	strhi	r0, [r8], #-3650	; 0xe42
    1cf0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1cf4:	0000000c 	andeq	r0, r0, ip
    1cf8:	000019a4 	andeq	r1, r0, r4, lsr #19
    1cfc:	00000000 	andeq	r0, r0, r0
    1d00:	0000005c 	andeq	r0, r0, ip, asr r0
    1d04:	0000000c 	andeq	r0, r0, ip
    1d08:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d0c:	00000000 	andeq	r0, r0, r0
    1d10:	0000005c 	andeq	r0, r0, ip, asr r0
    1d14:	0000000c 	andeq	r0, r0, ip
    1d18:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d1c:	00000000 	andeq	r0, r0, r0
    1d20:	00000020 	andeq	r0, r0, r0, lsr #32
    1d24:	0000000c 	andeq	r0, r0, ip
    1d28:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d2c:	00000000 	andeq	r0, r0, r0
    1d30:	00000020 	andeq	r0, r0, r0, lsr #32
    1d34:	0000000c 	andeq	r0, r0, ip
    1d38:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d3c:	00000000 	andeq	r0, r0, r0
    1d40:	00000044 	andeq	r0, r0, r4, asr #32
    1d44:	0000000c 	andeq	r0, r0, ip
    1d48:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d4c:	00000000 	andeq	r0, r0, r0
    1d50:	00000042 	andeq	r0, r0, r2, asr #32
    1d54:	0000000c 	andeq	r0, r0, ip
    1d58:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d5c:	00000000 	andeq	r0, r0, r0
    1d60:	00000006 	andeq	r0, r0, r6
    1d64:	0000000c 	andeq	r0, r0, ip
    1d68:	000019a4 	andeq	r1, r0, r4, lsr #19
    1d6c:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
    1d70:	0000000a 	andeq	r0, r0, sl
    1d74:	0000000c 	andeq	r0, r0, ip
    1d78:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d7c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d80:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d84:	0000000c 	andeq	r0, r0, ip
    1d88:	00001d74 	andeq	r1, r0, r4, ror sp
    1d8c:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
    1d90:	00000020 	andeq	r0, r0, r0, lsr #32
    1d94:	00000018 	andeq	r0, r0, r8, lsl r0
    1d98:	00001d74 	andeq	r1, r0, r4, ror sp
    1d9c:	08001660 	stmdaeq	r0, {r5, r6, r9, sl, ip}
    1da0:	00000024 	andeq	r0, r0, r4, lsr #32
    1da4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xe41
    1da8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1dac:	00018e02 	andeq	r8, r1, r2, lsl #28
    1db0:	0000000c 	andeq	r0, r0, ip
    1db4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1db8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1dbc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1dc0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dc4:	00001db0 			; <UNDEFINED> instruction: 0x00001db0
    1dc8:	08001684 	stmdaeq	r0, {r2, r7, r9, sl, ip}
    1dcc:	0000016c 	andeq	r0, r0, ip, ror #2
    1dd0:	80180e41 	andshi	r0, r8, r1, asr #28
    1dd4:	84058106 	strhi	r8, [r5], #-262	; 0x106
    1dd8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1ddc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1de0:	00000014 	andeq	r0, r0, r4, lsl r0
    1de4:	00001db0 			; <UNDEFINED> instruction: 0x00001db0
    1de8:	00000000 	andeq	r0, r0, r0
    1dec:	00000070 	andeq	r0, r0, r0, ror r0
    1df0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1df4:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	4f495047 	svcmi	0x00495047
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
       4:	646f4d5f 	strbtvs	r4, [pc], #-3423	; c <_Minimum_Stack_Size-0xf4>
  {
    statusreg = SysTick->CTRL;
       8:	754f5f65 	strbvc	r5, [pc, #-3941]	; fffff0ab <SCS_BASE+0x1fff10ab>
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	50505f74 	subspl	r5, r0, r4, ror pc
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	6f437700 	svcvs	0x00437700
      14:	00746e75 	rsbseq	r6, r4, r5, ror lr
      18:	5f434352 	svcpl	0x00434352
      1c:	43535953 	cmpmi	r3, #1359872	; 0x14c000
      20:	6f434b4c 	svcvs	0x00434b4c
      24:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
      28:	70776700 	rsbsvc	r6, r7, r0, lsl #14
      2c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
      30:	66754254 			; <UNDEFINED> instruction: 0x66754254
      34:	00726566 	rsbseq	r6, r2, r6, ror #10
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	5f434352 	svcpl	0x00434352

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	67007469 	strvs	r7, [r0, -r9, ror #8]
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	54323375 	ldrtpl	r3, [r2], #-885	; 0x375
      48:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
      4c:	756f4367 	strbvc	r4, [pc, #-871]!	; fffffced <SCS_BASE+0x1fff1ced>

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
      54:	00736d31 	rsbseq	r6, r3, r1, lsr sp
      58:	6e69616d 	powvsez	f6, f1, #5.0
      5c:	4200632e 	andmi	r6, r0, #-1207959552	; 0xb8000000
      60:	00525253 	subseq	r5, r2, r3, asr r2
      64:	4f495047 	svcmi	0x00495047
      68:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 70 <_Minimum_Stack_Size-0x90>
      6c:	70620065 	rsbvc	r0, r2, r5, rrx
      70:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
      74:	00646e61 	rsbeq	r6, r4, r1, ror #28
      78:	4f495047 	svcmi	0x00495047
      7c:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
      80:	42535500 	subsmi	r5, r3, #0, 10
      break;            

    default:
      break;
  }
}
      84:	4478545f 	ldrbtmi	r5, [r8], #-1119	; 0x45f
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
      88:	6365445f 	cmnvs	r5, #1593835520	; 0x5f000000
      8c:	0038555f 	eorseq	r5, r8, pc, asr r5
      90:	5f746942 	svcpl	0x00746942
      94:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
      98:	682f0054 	stmdavs	pc!, {r2, r4, r6}	; <UNPREDICTABLE>
      9c:	2f656d6f 	svccs	0x00656d6f
      a0:	67657267 	strbvs	r7, [r5, -r7, ror #4]!
      a4:	2f726177 	svccs	0x00726177
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	78396d63 	ldmdavc	r9!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	72742f78 	rsbsvc	r2, r4, #120, 30	; 0x1e0
      b0:	2f6b6e75 	svccs	0x006b6e75
      break; 
      
    default:
      break;
  }
}
      b4:	746f6f62 	strbtvc	r6, [pc], #-3938	; bc <_Minimum_Stack_Size-0x44>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xf6c
      bc:	46007265 	strmi	r7, [r0], -r5, ror #4
      c0:	454c4941 	strbmi	r4, [ip, #-2369]	; 0x941
      c4:	75460044 	strbvc	r0, [r6, #-68]	; 0x44
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      c8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
      cc:	6c616e6f 	stclvs	14, cr6, [r1], #-444	; 0xfffffe44
				{
					FLASH_Lock();
      d0:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	4c460065 	mcrrmi	0, 6, r0, r6, cr5
      d8:	5f485341 	svcpl	0x00485341
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	4f525245 	svcmi	0x00525245
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	52575f52 	subspl	r5, r7, #328	; 0x148
				TIM_Cmd(TIM2, ENABLE);
      e4:	536c0050 	cmnpl	ip, #80	; 0x50
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	44746e65 	ldrbtmi	r6, [r4], #-3685	; 0xe65

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	00617461 	rsbeq	r7, r1, r1, ror #8
      f0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
						usbRxCount = USB_Rx_Cnt;
      f4:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
      f8:	45007469 	strmi	r7, [r0, #-1129]	; 0x469
      fc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
					if(CheckTimeOut()){
     100:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
     104:	4a007375 	bmi	1cee0 <__Stack_Size+0x1cae0>
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	41706d75 	cmnmi	r0, r5, ror sp
     10c:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
     110:	52007373 	andpl	r7, r0, #-872415231	; 0xcc000001
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     114:	505f4343 	subspl	r4, pc, r3, asr #6
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	6f434c4c 	svcvs	0x00434c4c
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	41535500 	cmpmi	r3, r0, lsl #10
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	575f5452 			; <UNDEFINED> instruction: 0x575f5452
     128:	4c64726f 	sfmmi	f7, 2, [r4], #-444	; 0xfffffe44
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
     12c:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xe65
				gbIsFlashLock = TRUE;
     130:	77670068 	strbvc	r0, [r7, -r8, rrx]!
     134:	6f547852 	svcvs	0x00547852
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	436c6174 	cmnmi	ip, #116, 2
     13c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     140:	41535500 	cmpmi	r3, r0, lsl #10
     144:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
					USB_TxDString("Success..\n");
     148:	42706f74 	rsbsmi	r6, r0, #116, 30	; 0x1d0
				}
				else
					USB_TxDString("Fail..\n");
     14c:	00737469 	rsbseq	r7, r3, r9, ror #8
     150:	53414c46 	movtpl	r4, #7238	; 0x1c46
			//WDTCR = 0x08;
				Delay(100);
     154:	72505f48 	subsvc	r5, r0, #72, 30	; 0x120
     158:	74656665 	strbtvc	r6, [r5], #-1637	; 0x665

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	75426863 	strbvc	r6, [r2, #-2147]	; 0x863
     160:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	00646d43 	rsbeq	r6, r4, r3, asr #26
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
     168:	4f495047 	svcmi	0x00495047
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
     16c:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     170:	43520074 	cmpmi	r2, #116	; 0x74

				Jump_To_Application();
     174:	43505f43 	cmpmi	r0, #268	; 0x10c
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	43324b4c 	teqmi	r2, #76, 22	; 0x13000
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     180:	69540067 	ldmdbvs	r4, {r0, r1, r2, r5, r6}^
     184:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
     188:	616c6544 	cmnvs	ip, r4, asr #10
     18c:	65540079 	ldrbvs	r0, [r4, #-121]	; 0x79

		}
		USART_BUFFER_CLEAR;
     190:	74537473 	ldrbvc	r7, [r3], #-1139	; 0x473
     194:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
		gwpUSARTBuffer[0]='\0';
     198:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     19c:	70535f4f 	subsvc	r5, r3, pc, asr #30
     1a0:	5f646565 	svcpl	0x00646565
     1a4:	7a484d32 	bvc	1213674 <__Stack_Size+0x1213274>
     1a8:	414c4600 	cmpmi	ip, r0, lsl #12
     1ac:	435f4853 	cmpmi	pc, #5439488	; 0x530000
     1b0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     1b4:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
     1b8:	50544700 	subspl	r4, r4, r0, lsl #14
     1bc:	43520052 	cmpmi	r2, #82	; 0x52
     1c0:	61575f43 	cmpvs	r7, r3, asr #30
     1c4:	6f467469 	svcvs	0x00467469
     1c8:	45534872 	ldrbmi	r4, [r3, #-2162]	; 0x872
     1cc:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
     1d0:	00705574 	rsbseq	r5, r0, r4, ror r5
     1d4:	5f4d4954 	svcpl	0x004d4954
     1d8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
     1dc:	00666544 	rsbeq	r6, r6, r4, asr #10
     1e0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     1e4:	6d435f54 	stclvs	15, cr5, [r3, #-336]	; 0xfffffeb0
     1e8:	53550064 	cmppl	r5, #100	; 0x64
     1ec:	78545f42 	ldmdavc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     1f0:	78654844 	stmdavc	r5!, {r2, r6, fp, lr}^
     1f4:	55003631 	strpl	r3, [r0, #-1585]	; 0x631
     1f8:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     1fc:	7561425f 	strbvc	r4, [r1, #-607]!	; 0x25f
     200:	74615264 	strbtvc	r5, [r1], #-612	; 0x264
     204:	52540065 	subspl	r0, r4, #101	; 0x65
     208:	54004555 	strpl	r4, [r0], #-1365	; 0x555
     20c:	435f4d49 	cmpmi	pc, #4672	; 0x1240
     210:	6b636f6c 	blvs	18dbfc8 <__Stack_Size+0x18dbbc8>
     214:	69766944 	ldmdbvs	r6!, {r2, r6, r8, fp, sp, lr}^
     218:	6e6f6973 	mcrvs	9, 3, r6, cr15, cr3, {3}
     21c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     220:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
     224:	6c467261 	sfmvs	f7, 2, [r6], {97}	; 0x61
     228:	42006761 	andmi	r6, r0, #25427968	; 0x1840000
     22c:	00525444 	subseq	r5, r2, r4, asr #8
     230:	36317576 			; <UNDEFINED> instruction: 0x36317576
     234:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     238:	6e495f43 	cdpvs	15, 4, cr5, cr9, cr3, {2}
     23c:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     240:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
     244:	53620066 	cmnpl	r2, #102	; 0x66
     248:	44746e65 	ldrbtmi	r6, [r4], #-3685	; 0xe65
     24c:	00617461 	rsbeq	r7, r1, r1, ror #8
     250:	31524343 	cmpcc	r2, r3, asr #6
     254:	52434300 	subpl	r4, r3, #0, 6
     258:	43430032 	movtmi	r0, #12338	; 0x3032
     25c:	43003352 	movwmi	r3, #850	; 0x352
     260:	00345243 	eorseq	r5, r4, r3, asr #4
     264:	524d4343 	subpl	r4, sp, #201326593	; 0xc000001
     268:	43430031 	movtmi	r0, #12337	; 0x3031
     26c:	0032524d 	eorseq	r5, r2, sp, asr #4
     270:	4f495047 	svcmi	0x00495047
     274:	6570535f 	ldrbvs	r5, [r0, #-863]!	; 0x35f
     278:	315f6465 	cmpcc	pc, r5, ror #8
     27c:	7a484d30 	bvc	1213744 <__Stack_Size+0x1213344>
     280:	41776700 	cmnmi	r7, r0, lsl #14
     284:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
     288:	6f507373 	svcvs	0x00507373
     28c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xe69
     290:	53770072 	cmnpl	r7, #114	; 0x72
     294:	44746e65 	ldrbtmi	r6, [r4], #-3685	; 0xe65
     298:	00617461 	rsbeq	r7, r1, r1, ror #8
     29c:	52706267 	rsbspl	r6, r0, #1879048198	; 0x70000006
     2a0:	66754278 			; <UNDEFINED> instruction: 0x66754278
     2a4:	00726566 	rsbseq	r6, r2, r6, ror #10
     2a8:	4f495047 	svcmi	0x00495047
     2ac:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
     2b0:	73746942 	cmnvc	r4, #1081344	; 0x108000
     2b4:	414c4600 	cmpmi	ip, r0, lsl #12
     2b8:	74534853 	ldrbvc	r4, [r3], #-2131	; 0x853
     2bc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     2c0:	554e4700 	strbpl	r4, [lr, #-1792]	; 0x700
     2c4:	34204320 	strtcc	r4, [r0], #-800	; 0x320
     2c8:	332e382e 	teqcc	lr, #3014656	; 0x2e0000
     2cc:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
     2d0:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
     2d4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0x26f
     2d8:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
     2dc:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xd20
     2e0:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     2e4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     2e8:	20734f2d 	rsbscs	r4, r3, sp, lsr #30
     2ec:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0x62d
     2f0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     2f4:	732d6e6f 	teqvc	sp, #1776	; 0x6f0
     2f8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     2fc:	00736e6f 	rsbseq	r6, r3, pc, ror #28
     300:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     304:	54495f54 	strbpl	r5, [r9], #-3924	; 0xf54
     308:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     30c:	62006769 	andvs	r6, r0, #27525120	; 0x1a40000
     310:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     314:	74536563 	ldrbvc	r6, [r3], #-1379	; 0x563
     318:	00657461 	rsbeq	r7, r5, r1, ror #8
     31c:	4f495047 	svcmi	0x00495047
     320:	646f4d5f 	strbtvs	r4, [pc], #-3423	; 328 <_Minimum_Stack_Size+0x228>
     324:	50495f65 	subpl	r5, r9, r5, ror #30
     328:	654d0044 	strbvs	r0, [sp, #-68]	; 0x44
     32c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     330:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
     334:	536d6172 	cmnpl	sp, #-2147483620	; 0x8000001c
     338:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
     33c:	77670073 			; <UNDEFINED> instruction: 0x77670073
     340:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     344:	69725754 	ldmdbvs	r2!, {r2, r4, r6, r8, r9, sl, ip, lr}^
     348:	74506574 	ldrbvc	r6, [r0], #-1396	; 0x574
     34c:	50470072 	subpl	r0, r7, r2, ror r0
     350:	4d5f4f49 	ldclmi	15, cr4, [pc, #-292]	; 234 <_Minimum_Stack_Size+0x134>
     354:	5f65646f 	svcpl	0x0065646f
     358:	00555049 	subseq	r5, r5, r9, asr #32
     35c:	53414c46 	movtpl	r4, #7238	; 0x1c46
     360:	49545f48 	ldmdbmi	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
     364:	554f454d 	strbpl	r4, [pc, #-1357]	; fffffe1f <SCS_BASE+0x1fff1e1f>
     368:	53550054 	cmppl	r5, #84	; 0x54
     36c:	78545f42 	ldmdavc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     370:	78654844 	stmdavc	r5!, {r2, r6, fp, lr}^
     374:	47003233 	smladxmi	r0, r3, r2, r3
     378:	5f4f4950 	svcpl	0x004f4950
     37c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     380:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xf5f
     384:	00444f5f 	subeq	r4, r4, pc, asr pc
     388:	73617245 	cmnvc	r1, #1342177284	; 0x50000004
     38c:	756f4365 	strbvc	r4, [pc, #-869]!	; 2f <_Minimum_Stack_Size-0xd1>
     390:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     394:	78526200 	ldmdavc	r2, {r9, sp, lr}^
     398:	61746144 	cmnvs	r4, r4, asr #2
     39c:	72624e00 	rsbvc	r4, r2, #0, 28
     3a0:	6150664f 	cmpvs	r0, pc, asr #12
     3a4:	76006567 	strvc	r6, [r0], -r7, ror #10
     3a8:	00323375 	eorseq	r3, r2, r5, ror r3
     3ac:	5f4d4954 	svcpl	0x004d4954
     3b0:	73657250 	cmnvc	r5, #80, 4
     3b4:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
     3b8:	4c460072 	mcrrmi	0, 7, r0, r6, cr2
     3bc:	5f485341 	svcpl	0x00485341
     3c0:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     3c4:	45494400 	strbmi	r4, [r9, #-1024]	; 0x400
     3c8:	53550052 	cmppl	r5, #82	; 0x52
     3cc:	78545f42 	ldmdavc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     3d0:	78654844 	stmdavc	r5!, {r2, r6, fp, lr}^
     3d4:	4c460038 	mcrrmi	0, 3, r0, r6, cr8
     3d8:	5f485341 	svcpl	0x00485341
     3dc:	6f6c6e55 	svcvs	0x006c6e55
     3e0:	55006b63 	strpl	r6, [r0, #-2915]	; 0xb63
     3e4:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     3e8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     3ec:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     3f0:	44444100 	strbmi	r4, [r4], #-256	; 0x100
     3f4:	53534552 	cmppl	r3, #343932928	; 0x14800000
     3f8:	54004445 	strpl	r4, [r0], #-1093	; 0x445
     3fc:	525f4d49 	subspl	r4, pc, #4672	; 0x1240
     400:	74657065 	strbtvc	r7, [r5], #-101	; 0x65
     404:	6f697469 	svcvs	0x00697469
     408:	756f436e 	strbvc	r4, [pc, #-878]!	; a2 <_Minimum_Stack_Size-0x5e>
     40c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     410:	46626700 	strbtmi	r6, [r2], -r0, lsl #14
     414:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
     418:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
     41c:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xf6c
     420:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
     424:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     428:	6d435f4d 	stclvs	15, cr5, [r3, #-308]	; 0xfffffecc
     42c:	4c460064 	mcrrmi	0, 6, r0, r6, cr4
     430:	5f485341 	svcpl	0x00485341
     434:	504d4f43 	subpl	r4, sp, r3, asr #30
     438:	4554454c 	ldrbmi	r4, [r4, #-1356]	; 0x54c
     43c:	41535500 	cmpmi	r3, r0, lsl #10
     440:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     444:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
     448:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
     44c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
     450:	72745300 	rsbsvc	r5, r4, #0, 6
     454:	43676e69 	cmnmi	r7, #1680	; 0x690
     458:	61706d6f 	cmnvs	r0, pc, ror #26
     45c:	43006572 	movwmi	r6, #1394	; 0x572
     460:	00524543 	subseq	r4, r2, r3, asr #10
     464:	4349564e 	movtmi	r5, #38478	; 0x964e
     468:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     46c:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     470:	75746375 	ldrbvc	r6, [r4, #-885]!	; 0x375
     474:	44006572 	strmi	r6, [r0], #-1394	; 0x572
     478:	42415349 	submi	r5, r1, #603979777	; 0x24000001
     47c:	7500454c 	strvc	r4, [r0, #-1356]	; 0x54c
     480:	78526273 	ldmdavc	r2, {r0, r1, r4, r5, r6, r9, sp, lr}^
     484:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     488:	65470074 	strbvs	r0, [r7, #-116]	; 0x74
     48c:	6d6f4374 	stclvs	3, cr4, [pc, #-464]!	; 2c4 <_Minimum_Stack_Size+0x1c4>
     490:	646e616d 	strbtvs	r6, [lr], #-365	; 0x16d
     494:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 384 <_Minimum_Stack_Size+0x284>
     498:	74736f48 	ldrbtvc	r6, [r3], #-3912	; 0xf48
     49c:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     4a0:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xf43
     4a4:	63655674 	cmnvs	r5, #116, 12	; 0x7400000
     4a8:	54726f74 	ldrbtpl	r6, [r2], #-3956	; 0xf74
     4ac:	656c6261 	strbvs	r6, [ip, #-609]!	; 0x261
     4b0:	44706200 	ldrbtmi	r6, [r0], #-512	; 0x200
     4b4:	54007473 	strpl	r7, [r0], #-1139	; 0x473
     4b8:	435f4d49 	cmpmi	pc, #4672	; 0x1240
     4bc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     4c0:	6f4d7265 	svcvs	0x004d7265
     4c4:	67006564 	strvs	r6, [r0, -r4, ror #10]
     4c8:	41535577 	cmpmi	r3, r7, ror r5
     4cc:	65525452 	ldrbvs	r5, [r2, #-1106]	; 0x452
     4d0:	74506461 	ldrbvc	r6, [r0], #-1121	; 0x461
     4d4:	53550072 	cmppl	r5, #114	; 0x72
     4d8:	5f545241 	svcpl	0x00545241
     4dc:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     4e0:	434d5300 	movtmi	r5, #54016	; 0xd300
     4e4:	43520052 	cmpmi	r2, #82	; 0x52
     4e8:	53485f43 	movtpl	r5, #36675	; 0x8f43
     4ec:	6e6f4345 	cdpvs	3, 6, cr4, cr15, cr5, {2}
     4f0:	00676966 	rsbeq	r6, r7, r6, ror #18
     4f4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     4f8:	61485f54 	cmpvs	r8, r4, asr pc
     4fc:	61776472 	cmnvs	r7, r2, ror r4
     500:	6c466572 	cfstr64vs	mvdx6, [r6], {114}	; 0x72
     504:	6f43776f 	svcvs	0x0043776f
     508:	6f72746e 	svcvs	0x0072746e
     50c:	7767006c 	strbvc	r0, [r7, -ip, rrx]!
     510:	74697257 	strbtvc	r7, [r9], #-599	; 0x257
     514:	6f725065 	svcvs	0x00725065
     518:	74636574 	strbtvc	r6, [r3], #-1396	; 0x574
     51c:	61506465 	cmpvs	r0, r5, ror #8
     520:	00736567 	rsbseq	r6, r3, r7, ror #10
     524:	45574f50 	ldrbmi	r4, [r7, #-3920]	; 0xf50
     528:	00444552 	subeq	r4, r4, r2, asr r5
     52c:	53414c46 	movtpl	r4, #7238	; 0x1c46
     530:	6f4c5f48 	svcvs	0x004c5f48
     534:	62006b63 	andvs	r6, r0, #101376	; 0x18c00
     538:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     53c:	5f434352 	svcpl	0x00434352
     540:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     544:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     548:	6f697461 	svcvs	0x00697461
     54c:	7062006e 	rsbvc	r0, r2, lr, rrx
     550:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     554:	6f50676e 	svcvs	0x0050676e
     558:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xe69
     55c:	62670072 	rsbvs	r0, r7, #114	; 0x72
     560:	6c467349 	mcrrvs	3, 4, r7, r6, cr9
     564:	4c687361 	stclmi	3, cr7, [r8], #-388	; 0xfffffe7c
     568:	006b636f 	rsbeq	r6, fp, pc, ror #6
     56c:	4f495047 	svcmi	0x00495047
     570:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     574:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     578:	75746375 	ldrbvc	r6, [r4, #-885]!	; 0x375
     57c:	52006572 	andpl	r6, r0, #478150656	; 0x1c800000
     580:	75424478 	strbvc	r4, [r2, #-1144]	; 0x478
     584:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     588:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 478 <__Stack_Size+0x78>
     58c:	74736f48 	ldrbtvc	r6, [r3], #-3912	; 0xf48
     590:	746e4900 	strbtvc	r4, [lr], #-2304	; 0x900
     594:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0x265
     598:	6d317470 	cfldrsvs	mvf7, [r1, #-448]!	; 0xfffffe40
     59c:	43520073 	cmpmi	r2, #115	; 0x73
     5a0:	43485f43 	movtmi	r5, #36675	; 0x8f43
     5a4:	6f434b4c 	svcvs	0x00434b4c
     5a8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     5ac:	79426200 	stmdbvc	r2, {r9, sp, lr}^
     5b0:	62006574 	andvs	r6, r0, #116, 10	; 0x1d000000
     5b4:	63614270 	cmnvs	r1, #112, 4
     5b8:	4270756b 	rsbsmi	r7, r0, #448790528	; 0x1ac00000
     5bc:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
     5c0:	564e0072 			; <UNDEFINED> instruction: 0x564e0072
     5c4:	495f4349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     5c8:	68435152 	stmdavs	r3, {r1, r4, r6, r8, ip, lr}^
     5cc:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
     5d0:	4954006c 	ldmdbmi	r4, {r2, r3, r5, r6}^
     5d4:	65505f4d 	ldrbvs	r5, [r0, #-3917]	; 0xf4d
     5d8:	646f6972 	strbtvs	r6, [pc], #-2418	; 5e0 <__Stack_Size+0x1e0>
     5dc:	43435200 	movtmi	r5, #12800	; 0x3200
     5e0:	4c43505f 	mcrrmi	0, 5, r5, r3, cr15
     5e4:	6f43314b 	svcvs	0x0043314b
     5e8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     5ec:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     5f0:	6e495f43 	cdpvs	15, 4, cr5, cr9, cr3, {2}
     5f4:	47007469 	strmi	r7, [r0, -r9, ror #8]
     5f8:	5f4f4950 	svcpl	0x004f4950
     5fc:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     600:	5f46415f 	svcpl	0x0046415f
     604:	5400444f 	strpl	r4, [r0], #-1103	; 0x44f
     608:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     60c:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
     610:	75676966 	strbvc	r6, [r7, #-2406]!	; 0x966
     614:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     618:	74006e6f 	strvc	r6, [r0], #-3695	; 0xe6f
     61c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
     620:	64644174 	strbtvs	r4, [r4], #-372	; 0x174
     624:	50470072 	subpl	r0, r7, r2, ror r0
     628:	525f4f49 	subspl	r4, pc, #292	; 0x124
     62c:	74657365 	strbtvc	r7, [r5], #-869	; 0x365
     630:	73746942 	cmnvc	r4, #1081344	; 0x108000
     634:	656c4300 	strbvs	r4, [ip, #-768]!	; 0x300
     638:	69547261 	ldmdbvs	r4, {r0, r5, r6, r9, ip, sp, lr}^
     63c:	754f656d 	strbvc	r6, [pc, #-1389]	; d7 <_Minimum_Stack_Size-0x29>
     640:	66754274 			; <UNDEFINED> instruction: 0x66754274
     644:	00726566 	rsbseq	r6, r2, r6, ror #10
     648:	53414c46 	movtpl	r4, #7238	; 0x1c46
     64c:	65535f48 	ldrbvs	r5, [r3, #-3912]	; 0xf48
     650:	74614c74 	strbtvc	r4, [r1], #-3188	; 0xc74
     654:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     658:	414c4600 	cmpmi	ip, r0, lsl #12
     65c:	535f4853 	cmppl	pc, #5439488	; 0x530000
     660:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
     664:	43520073 	cmpmi	r2, #115	; 0x73
     668:	53555f43 	cmppl	r5, #268	; 0x10c
     66c:	4b4c4342 	blmi	131137c <__Stack_Size+0x1310f7c>
     670:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     674:	52006769 	andpl	r6, r0, #27525120	; 0x1a40000
     678:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
     67c:	6c467465 	cfstrdvs	mvd7, [r6], {101}	; 0x65
     680:	74536761 	ldrbvc	r6, [r3], #-1889	; 0x761
     684:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     688:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     68c:	6570534f 	ldrbvs	r5, [r0, #-847]!	; 0x34f
     690:	545f6465 	ldrbpl	r6, [pc], #-1125	; 698 <__Stack_Size+0x298>
     694:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     698:	47006665 	strmi	r6, [r0, -r5, ror #12]
     69c:	5f4f4950 	svcpl	0x004f4950
     6a0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
     6a4:	4e49415f 	mcrmi	1, 2, r4, cr9, cr15, {2}
     6a8:	53455200 	movtpl	r5, #20992	; 0x5200
     6ac:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     6b0:	52003044 	andpl	r3, r0, #68	; 0x44
     6b4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     6b8:	31444556 	cmpcc	r4, r6, asr r5
     6bc:	53455200 	movtpl	r5, #20992	; 0x5200
     6c0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     6c4:	52003244 	andpl	r3, r0, #68, 4	; 0x40000004
     6c8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     6cc:	33444556 	movtcc	r4, #17750	; 0x4556
     6d0:	53455200 	movtpl	r5, #20992	; 0x5200
     6d4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     6d8:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
     6dc:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     6e0:	35444556 	strbcc	r4, [r4, #-1366]	; 0x556
     6e4:	53455200 	movtpl	r5, #20992	; 0x5200
     6e8:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     6ec:	73003644 	movwvc	r3, #1604	; 0x644
     6f0:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
     6f4:	746e6920 	strbtvc	r6, [lr], #-2336	; 0x920
     6f8:	53455200 	movtpl	r5, #20992	; 0x5200
     6fc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     700:	52003844 	andpl	r3, r0, #68, 16	; 0x440000
     704:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     708:	39444556 	stmdbcc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     70c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     710:	6f4d5f4f 	svcvs	0x004d5f4f
     714:	415f6564 	cmpmi	pc, r4, ror #10
     718:	50505f46 	subspl	r5, r0, r6, asr #30
     71c:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     720:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     724:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     728:	46005241 	strmi	r5, [r0], -r1, asr #4
     72c:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     730:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     734:	505f524f 	subspl	r5, pc, pc, asr #4
     738:	41500047 	cmpmi	r0, r7, asr #32
     73c:	44455353 	strbmi	r5, [r5], #-851	; 0x353
     740:	43626700 	cmnmi	r2, #0, 14
     744:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
     748:	65684300 	strbvs	r4, [r8, #-768]!	; 0x300
     74c:	69546b63 	ldmdbvs	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
     750:	754f656d 	strbvc	r6, [pc, #-1389]	; 1eb <_Minimum_Stack_Size+0xeb>
     754:	41460074 	hvcmi	24580	; 0x6004
     758:	0045534c 	subeq	r5, r5, ip, asr #6
     75c:	6e457767 	cdpvs	7, 4, cr7, cr5, cr7, {3}
     760:	64644164 	strbtvs	r4, [r4], #-356	; 0x164
     764:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
     768:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
     76c:	00726574 	rsbseq	r6, r2, r4, ror r5
     770:	5f4d4954 	svcpl	0x004d4954
     774:	6f435449 	svcvs	0x00435449
     778:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     77c:	73795300 	cmnvc	r9, #0, 6
     780:	6b636954 	blvs	18dacd8 <__Stack_Size+0x18da8d8>
     784:	756f435f 	strbvc	r4, [pc, #-863]!	; 42d <__Stack_Size+0x2d>
     788:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     78c:	00646d43 	rsbeq	r6, r4, r3, asr #26
     790:	65527767 	ldrbvs	r7, [r2, #-1895]	; 0x767
     794:	76696563 	strbtvc	r6, [r9], -r3, ror #10
     798:	68436465 	stmdavs	r3, {r0, r2, r5, r6, sl, sp, lr}^
     79c:	536b6365 	cmnpl	fp, #-1811939327	; 0x94000001
     7a0:	72466d75 	subvc	r6, r6, #7488	; 0x1d40
     7a4:	6f486d6f 	svcvs	0x00486d6f
     7a8:	6e007473 	mcrvs	4, 0, r7, cr0, cr3, {3}
     7ac:	64756142 	ldrbtvs	r6, [r5], #-322	; 0x142
     7b0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     7b4:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     7b8:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
     7bc:	69420066 	stmdbvs	r2, {r1, r2, r5, r6}^
     7c0:	45535f74 	ldrbmi	r5, [r3, #-3956]	; 0xf74
     7c4:	50470054 	subpl	r0, r7, r4, asr r0
     7c8:	6f4d4f49 	svcvs	0x004d4f49
     7cc:	545f6564 	ldrbpl	r6, [pc], #-1380	; 7d4 <__Stack_Size+0x3d4>
     7d0:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     7d4:	55006665 	strpl	r6, [r0, #-1637]	; 0x665
     7d8:	525f4253 	subspl	r4, pc, #805306373	; 0x30000005
     7dc:	6e435f78 	mcrvs	15, 2, r5, cr3, cr8, {3}
     7e0:	43520074 	cmpmi	r2, #116	; 0x74
     7e4:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xf43
     7e8:	53595374 	cmppl	r9, #116, 6	; 0xd0000001
     7ec:	534b4c43 	movtpl	r4, #48195	; 0xbc43
     7f0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     7f4:	4e450065 	cdpmi	0, 4, cr0, cr5, cr5, {3}
     7f8:	454c4241 	strbmi	r4, [ip, #-577]	; 0x241
     7fc:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     800:	52495f43 	subpl	r5, r9, #268	; 0x10c
     804:	61684351 	cmnvs	r8, r1, asr r3
     808:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     80c:	00646d43 	rsbeq	r6, r4, r3, asr #26
     810:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0x973
     814:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0x974
     818:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     81c:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
     820:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
     824:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     828:	5500746e 	strpl	r7, [r0, #-1134]	; 0x46e
     82c:	63566273 	cmpvs	r6, #805306375	; 0x30000007
     830:	73694470 	cmnvc	r9, #112, 8	; 0x70000000
     834:	6e6e6f63 	cdpvs	15, 6, cr6, cr14, cr3, {3}
     838:	00746365 	rsbseq	r6, r4, r5, ror #6
     83c:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
     840:	6f4d6c61 	svcvs	0x004d6c61
     844:	6f74696e 	svcvs	0x0074696e
     848:	53550072 	cmppl	r5, #114	; 0x72
     84c:	78545f42 	ldmdavc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
     850:	72745344 	rsbsvc	r5, r4, #68, 6	; 0x10000001
     854:	00676e69 	rsbeq	r6, r7, r9, ror #28
     858:	5f4d4954 	svcpl	0x004d4954
     85c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
     860:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0x142
     864:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0x453
     868:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
     86c:	4f430065 	svcmi	0x00430065
     870:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
     874:	44455255 	strbmi	r5, [r5], #-597	; 0x255
     878:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     87c:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     880:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     884:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
     888:	6e750066 	cdpvs	0, 7, cr0, cr5, cr6, {3}
     88c:	6e676973 	mcrvs	9, 3, r6, cr7, cr3, {3}
     890:	63206465 	teqvs	r0, #1694498816	; 0x65000000
     894:	00726168 	rsbseq	r6, r2, r8, ror #2
     898:	706d5462 	rsbvc	r5, sp, r2, ror #8
     89c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     8a0:	70535f4f 	subsvc	r5, r3, pc, asr #30
     8a4:	5f646565 	svcpl	0x00646565
     8a8:	484d3035 	stmdami	sp, {r0, r2, r4, r5, ip, sp}^
     8ac:	5355007a 	cmppl	r5, #122	; 0x7a
     8b0:	5f545241 	svcpl	0x00545241
     8b4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     8b8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     8bc:	6f697461 	svcvs	0x00697461
     8c0:	445f006e 	ldrbmi	r0, [pc], #-110	; 8c8 <__Stack_Size+0x4c8>
     8c4:	43495645 	movtmi	r5, #38469	; 0x9645
     8c8:	54535f45 	ldrbpl	r5, [r3], #-3909	; 0xf45
     8cc:	00455441 	subeq	r5, r5, r1, asr #8
     8d0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     8d4:	65445f54 	strbvs	r5, [r4, #-3924]	; 0xf54
     8d8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     8dc:	6d754a00 	vldmdbvs	r5!, {s9-s8}
     8e0:	6f545f70 	svcvs	0x00545f70
     8e4:	7070415f 	rsbsvc	r4, r0, pc, asr r1
     8e8:	6163696c 	cmnvs	r3, ip, ror #18
     8ec:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     8f0:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     8f4:	6f435f43 	svcvs	0x00435f43
     8f8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     8fc:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
     900:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     904:	4f434e55 	svcmi	0x00434e55
     908:	43454e4e 	movtmi	r4, #24142	; 0x5e4e
     90c:	00444554 	subeq	r4, r4, r4, asr r5
     910:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     914:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     918:	52003031 	andpl	r3, r0, #49	; 0x31
     91c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     920:	31444556 	cmpcc	r4, r6, asr r5
     924:	45520031 	ldrbmi	r0, [r2, #-49]	; 0x31
     928:	56524553 			; <UNDEFINED> instruction: 0x56524553
     92c:	32314445 	eorscc	r4, r1, #1157627904	; 0x45000000
     930:	53455200 	movtpl	r5, #20992	; 0x5200
     934:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     938:	00333144 	eorseq	r3, r3, r4, asr #2
     93c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     940:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     944:	52003431 	andpl	r3, r0, #822083584	; 0x31000000
     948:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     94c:	31444556 	cmpcc	r4, r6, asr r5
     950:	45520035 	ldrbmi	r0, [r2, #-53]	; 0x35
     954:	56524553 			; <UNDEFINED> instruction: 0x56524553
     958:	36314445 	ldrtcc	r4, [r1], -r5, asr #8
     95c:	53455200 	movtpl	r5, #20992	; 0x5200
     960:	45565245 	ldrbmi	r5, [r6, #-581]	; 0x245
     964:	00373144 	eorseq	r3, r7, r4, asr #2
     968:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0x552
     96c:	44455652 	strbmi	r5, [r5], #-1618	; 0x652
     970:	52003831 	andpl	r3, r0, #3211264	; 0x310000
     974:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     978:	31444556 	cmpcc	r4, r6, asr r5
     97c:	50470039 	subpl	r0, r7, r9, lsr r0
     980:	435f4f49 	cmpmi	pc, #292	; 0x124
     984:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     988:	61727567 	cmnvs	r2, r7, ror #10
     98c:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     990:	41535500 	cmpmi	r3, r0, lsl #10
     994:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     998:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0x96e
     99c:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
     9a0:	4e006665 	cfmadd32mi	mvax3, mvfx6, mvfx0, mvfx5
     9a4:	5f434956 	svcpl	0x00434956
     9a8:	43515249 	cmpmi	r1, #-1879048188	; 0x90000004
     9ac:	6e6e6168 	powvsez	f6, f6, #0.0
     9b0:	75536c65 	ldrbvc	r6, [r3, #-3173]	; 0xc65
     9b4:	69725062 	ldmdbvs	r2!, {r1, r5, r6, ip, lr}^
     9b8:	7469726f 	strbtvc	r7, [r9], #-623	; 0x26f
     9bc:	53550079 	cmppl	r5, #121	; 0x79
     9c0:	5f545241 	svcpl	0x00545241
     9c4:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     9c8:	52007974 	andpl	r7, r0, #116, 18	; 0x1d0000
     9cc:	415f4343 	cmpmi	pc, r3, asr #6
     9d0:	50324250 	eorspl	r4, r2, r0, asr r2
     9d4:	70697265 	rsbvc	r7, r9, r5, ror #4
     9d8:	6f6c4368 	svcvs	0x006c4368
     9dc:	6d436b63 	vstrvs	d22, [r3, #-396]	; 0xfffffe74
     9e0:	53550064 	cmppl	r5, #100	; 0x64
     9e4:	78525f42 	ldmdavc	r2, {r1, r6, r8, r9, sl, fp, ip, lr}^
     9e8:	6675425f 			; <UNDEFINED> instruction: 0x6675425f
     9ec:	00726566 	rsbseq	r6, r2, r6, ror #10
     9f0:	72655462 	rsbvc	r5, r5, #1644167168	; 0x62000000
     9f4:	616e696d 	cmnvs	lr, sp, ror #18
     9f8:	55006574 	strpl	r6, [r0, #-1396]	; 0x574
     9fc:	545f4253 	ldrbpl	r4, [pc], #-595	; a04 <__Stack_Size+0x604>
     a00:	79424478 	stmdbvc	r2, {r3, r4, r5, r6, sl, lr}^
     a04:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
     a08:	505f4343 	subspl	r4, pc, r3, asr #6
     a0c:	6d434c4c 	stclvs	12, cr4, [r3, #-304]	; 0xfffffed0
     a10:	46700064 	ldrbtmi	r0, [r0], -r4, rrx
     a14:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xe75
     a18:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     a1c:	5f4d4954 	svcpl	0x004d4954
     a20:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0x954
     a24:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0x142
     a28:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
     a2c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
     a30:	00666544 	rsbeq	r6, r6, r4, asr #10
     a34:	61437767 	cmpvs	r3, r7, ror #14
     a38:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
     a3c:	64657461 	strbtvs	r7, [r5], #-1121	; 0x461
     a40:	63656843 	cmnvs	r5, #4390912	; 0x430000
     a44:	6d75536b 	ldclvs	3, cr5, [r5, #-428]!	; 0xfffffe54
     a48:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     a4c:	72505f43 	subsvc	r5, r0, #268	; 0x10c
     a50:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     a54:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
     a58:	4370756f 	cmnmi	r0, #465567744	; 0x1bc00000
     a5c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     a60:	50470067 	subpl	r0, r7, r7, rrx
     a64:	535f4f49 	cmppl	pc, #292	; 0x124
     a68:	64656570 	strbtvs	r6, [r5], #-1392	; 0x570
     a6c:	53706200 	cmnpl	r0, #0, 4
     a70:	73006372 	movwvc	r6, #882	; 0x372
     a74:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xf68
     a78:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     a7c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0x769
     a80:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     a84:	54410074 	strbpl	r0, [r1], #-116	; 0x74
     a88:	48434154 	stmdami	r3, {r2, r4, r6, r8, lr}^
     a8c:	6d004445 	cfstrsvs	mvf4, [r0, #-276]	; 0xfffffeec
     a90:	006e6961 	rsbeq	r6, lr, r1, ror #18
     a94:	53414c46 	movtpl	r4, #7238	; 0x1c46
     a98:	72455f48 	subvc	r5, r5, #72, 30	; 0x120
     a9c:	50657361 	rsbpl	r7, r5, r1, ror #6
     aa0:	00656761 	rsbeq	r6, r5, r1, ror #14
     aa4:	4349564e 	movtmi	r5, #38478	; 0x964e
     aa8:	5152495f 	cmppl	r2, pc, asr r9
     aac:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     ab0:	506c656e 	rsbpl	r6, ip, lr, ror #10
     ab4:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
     ab8:	6f697470 	svcvs	0x00697470
     abc:	6972506e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, lr}^
     ac0:	7469726f 	strbtvc	r7, [r9], #-623	; 0x26f
     ac4:	55530079 	ldrbpl	r0, [r3, #-121]	; 0x79
     ac8:	4e455053 	mcrmi	0, 2, r5, cr5, cr3, {2}
     acc:	00444544 	subeq	r4, r4, r4, asr #10
     ad0:	4f495047 	svcmi	0x00495047
     ad4:	646f4d5f 	strbtvs	r4, [pc], #-3423	; adc <__Stack_Size+0x6dc>
     ad8:	4e495f65 	cdpmi	15, 4, cr5, cr9, cr5, {3}
     adc:	4f4c465f 	svcmi	0x004c465f
     ae0:	4e495441 	cdpmi	4, 4, cr5, cr9, cr1, {2}
     ae4:	45520047 	ldrbmi	r0, [r2, #-71]	; 0x47
     ae8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     aec:	00374445 	eorseq	r4, r7, r5, asr #8
     af0:	5f4d4954 	svcpl	0x004d4954
     af4:	73657250 	cmnvc	r5, #80, 4
     af8:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
     afc:	6e6f4372 	mcrvs	3, 3, r4, cr15, cr2, {3}
     b00:	00676966 	rsbeq	r6, r7, r6, ror #18
     b04:	6d69546e 	cfstrdvs	mvd5, [r9, #-440]!	; 0xfffffe48
     b08:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
     b0c:	69545f4d 	ldmdbvs	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     b10:	6142656d 	cmpvs	r2, sp, ror #10
     b14:	6e496573 	mcrvs	5, 2, r6, cr9, cr3, {3}
     b18:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
     b1c:	74534553 	ldrbvc	r4, [r3], #-1363	; 0x553
     b20:	55747261 	ldrbpl	r7, [r4, #-609]!	; 0x261
     b24:	61745370 	cmnvs	r4, r0, ror r3
     b28:	00737574 	rsbseq	r7, r3, r4, ror r5
     b2c:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
     b30:	6f43676e 	svcvs	0x0043676e
     b34:	4c007970 	stcmi	9, cr7, [r0], {112}	; 0x70
     b38:	00524b43 	subseq	r4, r2, r3, asr #22
     b3c:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     b40:	5f56455f 	svcpl	0x0056455f
     b44:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     b48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     b4c:	45007265 	strmi	r7, [r0, #-613]	; 0x265
     b50:	39495458 	stmdbcc	r9, {r3, r4, r6, sl, ip, lr}^
     b54:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     b58:	61485152 	cmpvs	r8, r2, asr r1
     b5c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     b60:	65500072 	ldrbvs	r0, [r0, #-114]	; 0x72
     b64:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
     b68:	74730043 	ldrbtvc	r0, [r3], #-67	; 0x43
     b6c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     b70:	5f783031 	svcpl	0x00783031
     b74:	632e7469 	teqvs	lr, #1761607680	; 0x69000000
     b78:	414d4400 	cmpmi	sp, r0, lsl #8
     b7c:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     b80:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
     b84:	355f346c 	ldrbcc	r3, [pc, #-1132]	; 720 <__Stack_Size+0x320>
     b88:	5152495f 	cmppl	r2, pc, asr r9
     b8c:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     b90:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b94:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     b98:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
     b9c:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     ba0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ba4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ba8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     bac:	52425f31 	subpl	r5, r2, #49, 30	; 0xc4
     bb0:	52495f4b 	subpl	r5, r9, #300	; 0x12c
     bb4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     bb8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     bbc:	52415500 	subpl	r5, r1, #0, 10
     bc0:	495f3454 	ldmdbmi	pc, {r2, r4, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     bc4:	61485152 	cmpvs	r8, r2, asr r1
     bc8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     bcc:	54520072 	ldrbpl	r0, [r2], #-114	; 0x72
     bd0:	616c4143 	cmnvs	ip, r3, asr #2
     bd4:	495f6d72 	ldmdbmi	pc, {r1, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     bd8:	61485152 	cmpvs	r8, r2, asr r1
     bdc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     be0:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     be4:	435f384d 	cmpmi	pc, #5046272	; 0x4d0000
     be8:	52495f43 	subpl	r5, r9, #268	; 0x10c
     bec:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     bf0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     bf4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0x500
     bf8:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     bfc:	61485152 	cmpvs	r8, r2, asr r1
     c00:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     c04:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     c08:	435f3241 	cmpmi	pc, #268435460	; 0x10000004
     c0c:	6e6e6168 	powvsez	f6, f6, #0.0
     c10:	5f336c65 	svcpl	0x00336c65
     c14:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c18:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c1c:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     c20:	5f314332 	svcpl	0x00314332
     c24:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     c28:	61485152 	cmpvs	r8, r2, asr r1
     c2c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     c30:	53550072 	cmppl	r5, #114	; 0x72
     c34:	6b615742 	blvs	1856944 <__Stack_Size+0x1856544>
     c38:	5f705565 	svcpl	0x00705565
     c3c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c40:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c44:	44007265 	strmi	r7, [r0], #-613	; 0x265
     c48:	5f31414d 	svcpl	0x0031414d
     c4c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     c50:	356c656e 	strbcc	r6, [ip, #-1390]!	; 0x56e
     c54:	5152495f 	cmppl	r2, pc, asr r9
     c58:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     c5c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     c60:	31414d44 	cmpcc	r1, r4, asr #26
     c64:	6168435f 	cmnvs	r8, pc, asr r3
     c68:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     c6c:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     c70:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     c74:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c78:	43444100 	movtmi	r4, #16640	; 0x4100
     c7c:	5f325f31 	svcpl	0x00325f31
     c80:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c84:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c88:	53007265 	movwpl	r7, #613	; 0x265
     c8c:	5f4f4944 	svcpl	0x004f4944
     c90:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c94:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c98:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     c9c:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     ca0:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
     ca4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0x965
     ca8:	61746144 	cmnvs	r4, r4, asr #2
     cac:	54584500 	ldrbpl	r4, [r8], #-1280	; 0x500
     cb0:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     cb4:	61485152 	cmpvs	r8, r2, asr r1
     cb8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     cbc:	50530072 	subspl	r0, r3, r2, ror r0
     cc0:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     cc4:	61485152 	cmpvs	r8, r2, asr r1
     cc8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     ccc:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     cd0:	6c435f4d 	mcrrvs	15, 4, r5, r3, cr13
     cd4:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     cd8:	6e655054 	mcrvs	0, 3, r5, cr5, cr4, {2}
     cdc:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
     ce0:	00746942 	rsbseq	r6, r4, r2, asr #18
     ce4:	374d4954 	smlsldcc	r4, sp, r4, r9
     ce8:	5152495f 	cmppl	r2, pc, asr r9
     cec:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     cf0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     cf4:	334d4954 	movtcc	r4, #55636	; 0xd954
     cf8:	5152495f 	cmppl	r2, pc, asr r9
     cfc:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     d00:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d04:	5f425355 	svcpl	0x00425355
     d08:	435f5048 	cmpmi	pc, #72	; 0x48
     d0c:	545f4e41 	ldrbpl	r4, [pc], #-3649	; d14 <__Stack_Size+0x914>
     d10:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     d14:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     d18:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     d1c:	61735500 	cmnvs	r3, r0, lsl #10
     d20:	61466567 	cmpvs	r6, r7, ror #10
     d24:	45746c75 	ldrbmi	r6, [r4, #-3189]!	; 0xc75
     d28:	70656378 	rsbvc	r6, r5, r8, ror r3
     d2c:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     d30:	41535500 	cmpmi	r3, r0, lsl #10
     d34:	5f335452 	svcpl	0x00335452
     d38:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     d3c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d40:	43007265 	movwmi	r7, #613	; 0x265
     d44:	535f4e41 	cmppl	pc, #1040	; 0x410
     d48:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     d4c:	61485152 	cmpvs	r8, r2, asr r1
     d50:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     d54:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     d58:	545f384d 	ldrbpl	r3, [pc], #-2125	; d60 <__Stack_Size+0x960>
     d5c:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     d60:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     d64:	61485152 	cmpvs	r8, r2, asr r1
     d68:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     d6c:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     d70:	495f364d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     d74:	61485152 	cmpvs	r8, r2, asr r1
     d78:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     d7c:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     d80:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     d84:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
     d88:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     d8c:	72614800 	rsbvc	r4, r1, #0, 16
     d90:	75614664 	strbvc	r4, [r1, #-1636]!	; 0x664
     d94:	7845746c 	stmdavc	r5, {r2, r3, r5, r6, sl, ip, sp, lr}^
     d98:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0x563
     d9c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     da0:	33434441 	movtcc	r4, #13377	; 0x3441
     da4:	5152495f 	cmppl	r2, pc, asr r9
     da8:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     dac:	0072656c 	rsbseq	r6, r2, ip, ror #10
     db0:	47445757 	smlsldmi	r5, r4, r7, r7
     db4:	5152495f 	cmppl	r2, pc, asr r9
     db8:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     dbc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     dc0:	45494d4e 	strbmi	r4, [r9, #-3406]	; 0xd4e
     dc4:	70656378 	rsbvc	r6, r5, r8, ror r3
     dc8:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
     dcc:	414d4400 	cmpmi	sp, r0, lsl #8
     dd0:	68435f32 	stmdavs	r3, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     dd4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
     dd8:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     ddc:	61485152 	cmpvs	r8, r2, asr r1
     de0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     de4:	75420072 	strbvc	r0, [r2, #-114]	; 0x72
     de8:	75614673 	strbvc	r4, [r1, #-1651]!	; 0x673
     dec:	7845746c 	stmdavc	r5, {r2, r3, r5, r6, sl, ip, sp, lr}^
     df0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0x563
     df4:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     df8:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     dfc:	5f50555f 	svcpl	0x0050555f
     e00:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e04:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e08:	54007265 	strpl	r7, [r0], #-613	; 0x265
     e0c:	5f314d49 	svcpl	0x00314d49
     e10:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     e14:	61485152 	cmpvs	r8, r2, asr r1
     e18:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     e1c:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     e20:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     e24:	6e6e6168 	powvsez	f6, f6, #0.0
     e28:	5f336c65 	svcpl	0x00336c65
     e2c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e30:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e34:	46007265 	strmi	r7, [r0], -r5, ror #4
     e38:	5f434d53 	svcpl	0x00434d53
     e3c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e40:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e44:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     e48:	35545241 	ldrbcc	r5, [r4, #-577]	; 0x241
     e4c:	5152495f 	cmppl	r2, pc, asr r9
     e50:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     e54:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e58:	504d4154 	subpl	r4, sp, r4, asr r1
     e5c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     e60:	61485152 	cmpvs	r8, r2, asr r1
     e64:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     e68:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     e6c:	545f314d 	ldrbpl	r3, [pc], #-333	; e74 <__Stack_Size+0xa74>
     e70:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     e74:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     e78:	61485152 	cmpvs	r8, r2, asr r1
     e7c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     e80:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     e84:	5f344954 	svcpl	0x00344954
     e88:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e8c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e90:	5f007265 	svcpl	0x00007265
     e94:	4253555f 	subsmi	r5, r3, #398458880	; 0x17c00000
     e98:	5f434443 	svcpl	0x00434443
     e9c:	00525349 	subseq	r5, r2, r9, asr #6
     ea0:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     ea4:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     ea8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     eac:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     eb0:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     eb4:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     eb8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ebc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ec0:	42535500 	subsmi	r5, r3, #0, 10
     ec4:	5f504c5f 	svcpl	0x00504c5f
     ec8:	5f4e4143 	svcpl	0x004e4143
     ecc:	5f305852 	svcpl	0x00305852
     ed0:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     ed4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     ed8:	44007265 	strmi	r7, [r0], #-613	; 0x265
     edc:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     ee0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     ee4:	00726f74 	rsbseq	r6, r2, r4, ror pc
     ee8:	5f435452 	svcpl	0x00435452
     eec:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     ef0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     ef4:	44007265 	strmi	r7, [r0], #-613	; 0x265
     ef8:	5f31414d 	svcpl	0x0031414d
     efc:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     f00:	366c656e 	strbtcc	r6, [ip], -lr, ror #10
     f04:	5152495f 	cmppl	r2, pc, asr r9
     f08:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     f0c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f10:	344d4954 	strbcc	r4, [sp], #-2388	; 0x954
     f14:	5152495f 	cmppl	r2, pc, asr r9
     f18:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     f1c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f20:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     f24:	5f52455f 	svcpl	0x0052455f
     f28:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     f2c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     f30:	55007265 	strpl	r7, [r0, #-613]	; 0x265
     f34:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
     f38:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     f3c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     f40:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     f44:	414c4600 	cmpmi	ip, r0, lsl #12
     f48:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     f4c:	61485152 	cmpvs	r8, r2, asr r1
     f50:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
     f54:	32490072 	subcc	r0, r9, #114	; 0x72
     f58:	455f3143 	ldrbmi	r3, [pc, #-323]	; e1d <__Stack_Size+0xa1d>
     f5c:	52495f52 	subpl	r5, r9, #328	; 0x148
     f60:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     f64:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     f68:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     f6c:	3158525f 	cmpcc	r8, pc, asr r2
     f70:	5152495f 	cmppl	r2, pc, asr r9
     f74:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     f78:	0072656c 	rsbseq	r6, r2, ip, ror #10
     f7c:	48435653 	stmdami	r3, {r0, r1, r4, r6, r9, sl, ip, lr}^
     f80:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     f84:	54007265 	strpl	r7, [r0], #-613	; 0x265
     f88:	5f384d49 	svcpl	0x00384d49
     f8c:	5f4b5242 	svcpl	0x004b5242
     f90:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     f94:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     f98:	44007265 	strmi	r7, [r0], #-613	; 0x265
     f9c:	5f32414d 	svcpl	0x0032414d
     fa0:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     fa4:	326c656e 	rsbcc	r6, ip, #461373440	; 0x1b800000
     fa8:	5152495f 	cmppl	r2, pc, asr r9
     fac:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     fb0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     fb4:	31414d44 	cmpcc	r1, r4, asr #26
     fb8:	6168435f 	cmnvs	r8, pc, asr r3
     fbc:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     fc0:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     fc4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     fc8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     fcc:	43435200 	movtmi	r5, #12800	; 0x3200
     fd0:	5152495f 	cmppl	r2, pc, asr r9
     fd4:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
     fd8:	0072656c 	rsbseq	r6, r2, ip, ror #10
     fdc:	31414d44 	cmpcc	r1, r4, asr #26
     fe0:	6168435f 	cmnvs	r8, pc, asr r3
     fe4:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     fe8:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     fec:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ff0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ff4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0x500
     ff8:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     ffc:	61485152 	cmpvs	r8, r2, asr r1
    1000:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1004:	50530072 	subspl	r0, r3, r2, ror r0
    1008:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    100c:	61485152 	cmpvs	r8, r2, asr r1
    1010:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1014:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    1018:	555f314d 	ldrbpl	r3, [pc, #-333]	; ed3 <__Stack_Size+0xad3>
    101c:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
    1020:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1024:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1028:	414d4400 	cmpmi	sp, r0, lsl #8
    102c:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    1030:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    1034:	495f376c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    1038:	61485152 	cmpvs	r8, r2, asr r1
    103c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1040:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    1044:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
    1048:	61485152 	cmpvs	r8, r2, asr r1
    104c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1050:	654d0072 	strbvs	r0, [sp, #-114]	; 0x72
    1054:	6e614d6d 	cdpvs	13, 6, cr4, cr1, cr13, {3}
    1058:	45656761 	strbmi	r6, [r5, #-1889]!	; 0x761
    105c:	70656378 	rsbvc	r6, r5, r8, ror r3
    1060:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1064:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1068:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    106c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1070:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1074:	44565000 	ldrbmi	r5, [r6], #-0
    1078:	5152495f 	cmppl	r2, pc, asr r9
    107c:	646e6148 	strbtvs	r6, [lr], #-328	; 0x148
    1080:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1084:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    1088:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
    108c:	61485152 	cmpvs	r8, r2, asr r1
    1090:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
    1094:	73750072 	cmnvc	r5, #114	; 0x72
    1098:	65645f62 	strbvs	r5, [r4, #-3938]!	; 0xf62
    109c:	632e6373 	teqvs	lr, #-872415231	; 0xcc000001
    10a0:	72695600 	rsbvc	r5, r9, #0, 12
    10a4:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    10a8:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; f34 <__Stack_Size+0xb34>
    10ac:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    10b0:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    10b4:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    10b8:	646e6556 	strbtvs	r6, [lr], #-1366	; 0x556
    10bc:	5600726f 	strpl	r7, [r0], -pc, ror #4
    10c0:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    10c4:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    10c8:	505f6d6f 	subspl	r6, pc, pc, ror #26
    10cc:	5f74726f 	svcpl	0x0074726f
    10d0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    10d4:	65446563 	strbvs	r6, [r4, #-1379]	; 0x563
    10d8:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    10dc:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    10e0:	72695600 	rsbvc	r5, r9, #0, 12
    10e4:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    10e8:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; f74 <__Stack_Size+0xb74>
    10ec:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    10f0:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    10f4:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    10f8:	676e614c 	strbvs	r6, [lr, -ip, asr #2]!
    10fc:	56004449 	strpl	r4, [r0], -r9, asr #8
    1100:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    1104:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    1108:	505f6d6f 	subspl	r6, pc, pc, ror #26
    110c:	5f74726f 	svcpl	0x0074726f
    1110:	69727453 	ldmdbvs	r2!, {r0, r1, r4, r6, sl, ip, sp, lr}^
    1114:	7250676e 	subsvc	r6, r0, #28835840	; 0x1b80000
    1118:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
    111c:	69560074 	ldmdbvs	r6, {r2, r4, r5, r6}^
    1120:	61757472 	cmnvs	r5, r2, ror r4
    1124:	6f435f6c 	svcvs	0x00435f6c
    1128:	6f505f6d 	svcvs	0x00505f6d
    112c:	435f7472 	cmpmi	pc, #1912602624	; 0x72000000
    1130:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1134:	73654467 	cmnvc	r5, #1728053248	; 0x67000000
    1138:	70697263 	rsbvc	r7, r9, r3, ror #4
    113c:	00726f74 	rsbseq	r6, r2, r4, ror pc
    1140:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1144:	5f6c6175 	svcpl	0x006c6175
    1148:	5f6d6f43 	svcpl	0x006d6f43
    114c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1150:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1154:	53676e69 	cmnpl	r7, #1680	; 0x690
    1158:	61697265 	cmnvs	r9, r5, ror #4
    115c:	5045006c 	subpl	r0, r5, ip, rrx
    1160:	554f5f33 	strbpl	r5, [pc, #-3891]	; 235 <_Minimum_Stack_Size+0x135>
    1164:	61435f54 	cmpvs	r3, r4, asr pc
    1168:	61626c6c 	cmnvs	r2, ip, ror #24
    116c:	75006b63 	strvc	r6, [r0, #-2915]	; 0xb63
    1170:	655f6273 	ldrbvs	r6, [pc, #-627]	; f05 <__Stack_Size+0xb05>
    1174:	2e70646e 	cdpcs	4, 7, cr6, cr0, cr14, {3}
    1178:	466c0063 	strbtmi	r0, [ip], -r3, rrx
    117c:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
    1180:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    1184:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
    1188:	5f485341 	svcpl	0x00485341
    118c:	676f7250 			; <UNDEFINED> instruction: 0x676f7250
    1190:	576d6172 			; <UNDEFINED> instruction: 0x576d6172
    1194:	0064726f 	rsbeq	r7, r4, pc, ror #4
    1198:	74697257 	strbtvc	r7, [r9], #-599	; 0x257
    119c:	616c4665 	cmnvs	ip, r5, ror #12
    11a0:	34366873 	ldrtcc	r6, [r6], #-2163	; 0x873
    11a4:	42535500 	subsmi	r5, r3, #0, 10
    11a8:	4c49535f 	mcrrmi	3, 5, r5, r9, cr15
    11ac:	6165525f 	cmnvs	r5, pc, asr r2
    11b0:	50450064 	subpl	r0, r5, r4, rrx
    11b4:	4e495f31 	mcrmi	15, 2, r5, cr9, cr1, {1}
    11b8:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    11bc:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    11c0:	4f53006b 	svcmi	0x0053006b
    11c4:	61435f46 	cmpvs	r3, r6, asr #30
    11c8:	61626c6c 	cmnvs	r2, ip, ror #24
    11cc:	46006b63 	strmi	r6, [r0], -r3, ror #22
    11d0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0x172
    11d4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    11d8:	65530074 	ldrbvs	r0, [r3, #-116]	; 0x74
    11dc:	52504574 	subspl	r4, r0, #116, 10	; 0x1d000000
    11e0:	6c615678 	stclvs	6, cr5, [r1], #-480	; 0xfffffe20
    11e4:	6c006469 	cfstrsvs	mvf6, [r0], {105}	; 0x69
    11e8:	52656854 	rsbpl	r6, r5, #84, 16	; 0x540000
    11ec:	43747365 	cmnmi	r4, #-1811939327	; 0x94000001
    11f0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    11f4:	45445f00 	strbmi	r5, [r4, #-3840]	; 0xf00
    11f8:	45434956 	strbmi	r4, [r3, #-2390]	; 0x956
    11fc:	4f52505f 	svcmi	0x0052505f
    1200:	78520050 	ldmdavc	r2, {r4, r6}^
    1204:	625f5045 	subsvs	r5, pc, #69	; 0x45
    1208:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    120c:	45700072 	ldrbmi	r0, [r0, #-114]!	; 0x72
    1210:	746e4970 	strbtvc	r4, [lr], #-2416	; 0x970
    1214:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xf5f
    1218:	616c4300 	cmnvs	ip, r0, lsl #6
    121c:	4e5f7373 	mrcmi	3, 2, r7, cr15, cr3, {3}
    1220:	7461446f 	strbtvc	r4, [r1], #-1135	; 0x46f
    1224:	65535f61 	ldrbvs	r5, [r3, #-3937]	; 0xf61
    1228:	00707574 	rsbseq	r7, r0, r4, ror r5
    122c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1230:	505f6563 	subspl	r6, pc, r3, ror #10
    1234:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xf72
    1238:	00797472 	rsbseq	r7, r9, r2, ror r4
    123c:	74734977 	ldrbtvc	r4, [r3], #-2423	; 0x977
    1240:	525f0072 	subspl	r0, pc, #114	; 0x72
    1244:	4c555345 	mrrcmi	3, 4, r5, r5, cr5	; <UNPREDICTABLE>
    1248:	49620054 	stmdbmi	r2!, {r2, r4, r6}^
    124c:	6150746e 	cmpvs	r0, lr, ror #8
    1250:	4f536b63 	svcmi	0x00536b63
    1254:	53550046 	cmppl	r5, #70	; 0x46
    1258:	55535f42 	ldrbpl	r5, [r3, #-3906]	; 0xf42
    125c:	53454343 	movtpl	r4, #21315	; 0x5343
    1260:	72500053 	subsvc	r0, r0, #83	; 0x53
    1264:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    1268:	74535f73 	ldrbvc	r5, [r3], #-3955	; 0xf73
    126c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1270:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xf5f
    1274:	70457000 	subvc	r7, r5, r0
    1278:	5f746e49 	svcpl	0x00746e49
    127c:	55004e49 	strpl	r4, [r0, #-3657]	; 0xe49
    1280:	555f4253 	ldrbpl	r4, [pc, #-595]	; 1035 <__Stack_Size+0xc35>
    1284:	5055534e 	subspl	r5, r5, lr, asr #6
    1288:	54524f50 	ldrbpl	r4, [r2], #-3920	; 0xf50
    128c:	62737500 	rsbsvs	r7, r3, #0, 10
    1290:	7473695f 	ldrbtvc	r6, [r3], #-2399	; 0x95f
    1294:	00632e72 	rsbeq	r2, r3, r2, ror lr
    1298:	73616c43 	cmnvc	r1, #17152	; 0x4300
    129c:	61445f73 	hvcvs	17907	; 0x45f3
    12a0:	535f6174 	cmppl	pc, #116, 2
    12a4:	70757465 	rsbsvc	r7, r5, r5, ror #8
    12a8:	616c4300 	cmnvs	ip, r0, lsl #6
    12ac:	475f7373 			; <UNDEFINED> instruction: 0x475f7373
    12b0:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    12b4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    12b8:	65636166 	strbvs	r6, [r3, #-358]!	; 0x166
    12bc:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    12c0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    12c4:	6f725000 	svcvs	0x00725000
    12c8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    12cc:	6174535f 	cmnvs	r4, pc, asr r3
    12d0:	5f737574 	svcpl	0x00737574
    12d4:	43004e49 	movwmi	r4, #3657	; 0xe49
    12d8:	4c5f5254 	lfmmi	f5, 2, [pc], {84}	; 0x54
    12dc:	53550050 	cmppl	r5, #80	; 0x50
    12e0:	4f4e5f42 	svcmi	0x004e5f42
    12e4:	45525f54 	ldrbmi	r5, [r2, #-3924]	; 0xf54
    12e8:	00594441 	subseq	r4, r9, r1, asr #8
    12ec:	5f425355 	svcpl	0x00425355
    12f0:	4f525245 	svcmi	0x00525245
    12f4:	53550052 	cmppl	r5, #82	; 0x52
    12f8:	65526242 	ldrbvs	r6, [r2, #-578]	; 0x242
    12fc:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    1300:	6f630074 	svcvs	0x00630074
    1304:	6174736d 	cmnvs	r4, sp, ror #6
    1308:	65746574 	ldrbvs	r6, [r4, #-1396]!	; 0x574
    130c:	6600706d 	strvs	r7, [r0], -sp, rrx
    1310:	616d726f 	cmnvs	sp, pc, ror #4
    1314:	65530074 	ldrbvs	r0, [r3, #-116]	; 0x74
    1318:	54504574 	ldrbpl	r4, [r0], #-1396	; 0x574
    131c:	61745378 	cmnvs	r4, r8, ror r3
    1320:	00737574 	rsbseq	r7, r3, r4, ror r5
    1324:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    1328:	70795450 	rsbsvc	r5, r9, r0, asr r4
    132c:	6e4f0065 	cdpvs	0, 4, cr0, cr15, cr5, {3}
    1330:	73654465 	cmnvc	r5, #1694498816	; 0x65000000
    1334:	70697263 	rsbvc	r7, r9, r3, ror #4
    1338:	00726f74 	rsbseq	r6, r2, r4, ror pc
    133c:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    1340:	41785250 	cmnmi	r8, r0, asr r2
    1344:	00726464 	rsbseq	r6, r2, r4, ror #8
    1348:	4553555f 	ldrbmi	r5, [r3, #-1375]	; 0x55f
    134c:	54535f52 	ldrbpl	r5, [r3], #-3922	; 0xf52
    1350:	41444e41 	cmpmi	r4, r1, asr #28
    1354:	525f4452 	subspl	r4, pc, #1375731712	; 0x52000000
    1358:	45555145 	ldrbmi	r5, [r5, #-325]	; 0x145
    135c:	00535453 	subseq	r5, r3, r3, asr r4
    1360:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1364:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    1368:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    136c:	70007375 	andvc	r7, r0, r5, ror r3
    1370:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    1374:	70797479 	rsbsvc	r7, r9, r9, ror r4
    1378:	53550065 	cmppl	r5, #101	; 0x65
    137c:	49535f42 	ldmdbmi	r3, {r1, r6, r8, r9, sl, fp, ip, lr}^
    1380:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
    1384:	5f007469 	svcpl	0x00007469
    1388:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    138c:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
    1390:	004f464e 	subeq	r4, pc, lr, asr #12
    1394:	5f627375 	svcpl	0x00627375
    1398:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    139c:	4700632e 	strmi	r6, [r0, -lr, lsr #6]
    13a0:	535f7465 	cmppl	pc, #1694498816	; 0x65000000
    13a4:	61697265 	cmnvs	r9, r5, ror #4
    13a8:	6d754e6c 	ldclvs	14, cr4, [r5, #-432]!	; 0xfffffe50
    13ac:	42535500 	subsmi	r5, r3, #0, 10
    13b0:	646e4977 	strbtvs	r4, [lr], #-2423	; 0x977
    13b4:	00737865 	rsbseq	r7, r3, r5, ror #16
    13b8:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    13bc:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    13c0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    13c4:	64416563 	strbvs	r6, [r1], #-1379	; 0x563
    13c8:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    13cc:	696c0073 	stmdbvs	ip!, {r0, r1, r4, r5, r6}^
    13d0:	6f63656e 	svcvs	0x0063656e
    13d4:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    13d8:	72695600 	rsbvc	r5, r9, #0, 12
    13dc:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    13e0:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 126c <__Stack_Size+0xe6c>
    13e4:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    13e8:	6f4e5f74 	svcvs	0x004e5f74
    13ec:	61746144 	cmnvs	r4, r4, asr #2
    13f0:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    13f4:	45007075 	strmi	r7, [r0, #-117]	; 0x75
    13f8:	4f50444e 	svcmi	0x0050444e
    13fc:	5f544e49 	svcpl	0x00544e49
    1400:	49434552 	stmdbmi	r3, {r1, r4, r6, r8, sl, lr}^
    1404:	4e454950 	mcrmi	9, 2, r4, cr5, cr0, {2}
    1408:	73550054 	cmpvc	r5, #84	; 0x54
    140c:	535f7265 	cmppl	pc, #1342177286	; 0x50000006
    1410:	65447465 	strbvs	r7, [r4, #-1125]	; 0x465
    1414:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    1418:	74616546 	strbtvc	r6, [r1], #-1350	; 0x546
    141c:	00657275 	rsbeq	r7, r5, r5, ror r2
    1420:	5f627355 	svcpl	0x00627355
    1424:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
    1428:	00687467 	rsbeq	r7, r8, r7, ror #8
    142c:	666e4970 			; <UNDEFINED> instruction: 0x666e4970
    1430:	616d726f 	cmnvs	sp, pc, ror #4
    1434:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1438:	72745300 	rsbsvc	r5, r4, #0, 6
    143c:	5f676e69 	svcpl	0x00676e69
    1440:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    1444:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0x972
    1448:	6200726f 	andvs	r7, r0, #-268435450	; 0xf0000006
    144c:	61727469 	cmnvs	r2, r9, ror #8
    1450:	44006574 	strmi	r6, [r0], #-1396	; 0x574
    1454:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    1458:	61545f65 	cmpvs	r4, r5, ror #30
    145c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1460:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    1464:	41785450 	cmnmi	r8, r0, asr r4
    1468:	00726464 	rsbseq	r6, r2, r4, ror #8
    146c:	4345525f 	movtmi	r5, #21087	; 0x525f
    1470:	45495049 	strbmi	r5, [r9, #-73]	; 0x49
    1474:	545f544e 	ldrbpl	r5, [pc], #-1102	; 147c <__Stack_Size+0x107c>
    1478:	00455059 	subeq	r5, r5, r9, asr r0
    147c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    1480:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    1484:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    1488:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    148c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0x972
    1490:	6144726f 	cmpvs	r4, pc, ror #4
    1494:	56006174 			; <UNDEFINED> instruction: 0x56006174
    1498:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    149c:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    14a0:	505f6d6f 	subspl	r6, pc, pc, ror #26
    14a4:	5f74726f 	svcpl	0x0074726f
    14a8:	4c746547 	cfldr64mi	mvdx6, [r4], #-284	; 0xfffffee4
    14ac:	43656e69 	cmnmi	r5, #1680	; 0x690
    14b0:	6e69646f 	cdpvs	4, 6, cr6, cr9, cr15, {3}
    14b4:	65530067 	ldrbvs	r0, [r3, #-103]	; 0x67
    14b8:	41544274 	cmpmi	r4, r4, ror r2
    14bc:	00454c42 	subeq	r4, r5, r2, asr #24
    14c0:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    14c4:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    14c8:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xe49
    14cc:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    14d0:	53550065 	cmppl	r5, #101	; 0x65
    14d4:	61567742 	cmpvs	r6, r2, asr #14
    14d8:	7365756c 	cmnvc	r5, #108, 10	; 0x1b000000
    14dc:	72695600 	rsbvc	r5, r9, #0, 12
    14e0:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    14e4:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1370 <__Stack_Size+0xf70>
    14e8:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    14ec:	65475f74 	strbvs	r5, [r7, #-3956]	; 0xf74
    14f0:	76654474 			; <UNDEFINED> instruction: 0x76654474
    14f4:	44656369 	strbtmi	r6, [r5], #-873	; 0x369
    14f8:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    14fc:	6f747069 	svcvs	0x00747069
    1500:	6f540072 	svcvs	0x00540072
    1504:	5f6c6174 	svcpl	0x006c6174
    1508:	70646e45 	rsbvc	r6, r4, r5, asr #28
    150c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    1510:	72695600 	rsbvc	r5, r9, #0, 12
    1514:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    1518:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 13a4 <__Stack_Size+0xfa4>
    151c:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1520:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xf74
    1524:	00746573 	rsbseq	r6, r4, r3, ror r5
    1528:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    152c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0x972
    1530:	535f726f 	cmppl	pc, #-268435450	; 0xf0000006
    1534:	00657a69 	rsbeq	r7, r5, r9, ror #20
    1538:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    153c:	53785250 	cmnpl	r8, #80, 4
    1540:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    1544:	73550073 	cmpvc	r5, #115	; 0x73
    1548:	535f7265 	cmppl	pc, #1342177286	; 0x50000006
    154c:	6f437465 	svcvs	0x00437465
    1550:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1554:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
    1558:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    155c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1560:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    1564:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xe49
    1568:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    156c:	49700065 	ldmdbmi	r0!, {r0, r2, r5, r6}^
    1570:	006f666e 	rsbeq	r6, pc, lr, ror #12
    1574:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1578:	5f6c6175 	svcpl	0x006c6175
    157c:	5f6d6f43 	svcpl	0x006d6f43
    1580:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1584:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    1588:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    158c:	64416563 	strbvs	r6, [r1], #-1379	; 0x563
    1590:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1594:	65440073 	strbvs	r0, [r4, #-115]	; 0x73
    1598:	65636976 	strbvs	r6, [r3, #-2422]!	; 0x976
    159c:	7365445f 	cmnvc	r5, #1593835520	; 0x5f000000
    15a0:	70697263 	rsbvc	r7, r9, r3, ror #4
    15a4:	00726f74 	rsbseq	r6, r2, r4, ror pc
    15a8:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0x552
    15ac:	4e747365 	cdpmi	3, 7, cr7, cr4, cr5, {3}
    15b0:	5355006f 	cmppl	r5, #111	; 0x6f
    15b4:	654c7742 	strbvs	r7, [ip, #-1858]	; 0x742
    15b8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    15bc:	75430073 	strbvc	r0, [r3, #-115]	; 0x73
    15c0:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    15c4:	6f435f74 	svcvs	0x00435f74
    15c8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    15cc:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
    15d0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    15d4:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    15d8:	525f4543 	subspl	r4, pc, #281018368	; 0x10c00000
    15dc:	50494345 	subpl	r4, r9, r5, asr #6
    15e0:	544e4549 	strbpl	r4, [lr], #-1353	; 0x549
    15e4:	61567700 	cmpvs	r6, r0, lsl #14
    15e8:	3065756c 	rsbcc	r7, r5, ip, ror #10
    15ec:	72695600 	rsbvc	r5, r9, #0, 12
    15f0:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    15f4:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1480 <__Stack_Size+0x1080>
    15f8:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    15fc:	65535f74 	ldrbvs	r5, [r3, #-3956]	; 0xf74
    1600:	6e694c74 	mcrvs	12, 3, r4, cr9, cr4, {3}
    1604:	646f4365 	strbtvs	r4, [pc], #-869	; 160c <__Stack_Size+0x120c>
    1608:	00676e69 	rsbeq	r6, r7, r9, ror #28
    160c:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    1610:	5f746e65 	svcpl	0x00746e65
    1614:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xe49
    1618:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    161c:	4f500065 	svcmi	0x00500065
    1620:	445f454e 	ldrbmi	r4, [pc], #-1358	; 1628 <__Stack_Size+0x1228>
    1624:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    1628:	4f545049 	svcmi	0x00545049
    162c:	6f540052 	svcvs	0x00540052
    1630:	5f6c6174 	svcpl	0x006c6174
    1634:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1638:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
    163c:	6f697461 	svcvs	0x00697461
    1640:	6f50006e 	svcvs	0x0050006e
    1644:	4f726577 	svcmi	0x00726577
    1648:	7355006e 	cmpvc	r5, #110	; 0x6e
    164c:	475f7265 	ldrbmi	r7, [pc, -r5, ror #4]
    1650:	6f437465 	svcvs	0x00437465
    1654:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1658:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
    165c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1660:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1664:	5f6c6175 	svcpl	0x006c6175
    1668:	5f6d6f43 	svcpl	0x006d6f43
    166c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1670:	6174535f 	cmnvs	r4, pc, asr r3
    1674:	5f737574 	svcpl	0x00737574
    1678:	43006e49 	movwmi	r6, #3657	; 0xe49
    167c:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0x275
    1680:	415f746e 	cmpmi	pc, lr, ror #8
    1684:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
    1688:	6574616e 	ldrbvs	r6, [r4, #-366]!	; 0x16e
    168c:	74746553 	ldrbtvc	r6, [r4], #-1363	; 0x553
    1690:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1694:	444e455f 	strbmi	r4, [lr], #-1375	; 0x55f
    1698:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
    169c:	4e495f54 	mcrmi	15, 2, r5, cr9, cr4, {2}
    16a0:	56004f46 	strpl	r4, [r0], -r6, asr #30
    16a4:	75747269 	ldrbvc	r7, [r4, #-617]!	; 0x269
    16a8:	435f6c61 	cmpmi	pc, #24832	; 0x6100
    16ac:	505f6d6f 	subspl	r6, pc, pc, ror #26
    16b0:	5f74726f 	svcpl	0x0074726f
    16b4:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    16b8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    16bc:	61727567 	cmnvs	r2, r7, ror #10
    16c0:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    16c4:	706f4300 	rsbvc	r4, pc, r0, lsl #6
    16c8:	756f5279 	strbvc	r5, [pc, #-633]!	; 1457 <__Stack_Size+0x1057>
    16cc:	656e6974 	strbvs	r6, [lr, #-2420]!	; 0x974
    16d0:	74616400 	strbtvc	r6, [r1], #-1024	; 0x400
    16d4:	70797461 	rsbsvc	r7, r9, r1, ror #8
    16d8:	445f0065 	ldrbmi	r0, [pc], #-101	; 16e0 <__Stack_Size+0x12e0>
    16dc:	43495645 	movtmi	r5, #38469	; 0x9645
    16e0:	6f430045 	svcvs	0x00430045
    16e4:	6f72746e 	svcvs	0x0072746e
    16e8:	6174536c 	cmnvs	r4, ip, ror #6
    16ec:	49006574 	stmdbmi	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    16f0:	5245544e 	subpl	r5, r5, #1308622848	; 0x4e000000
    16f4:	45434146 	strbmi	r4, [r3, #-326]	; 0x146
    16f8:	4345525f 	movtmi	r5, #21087	; 0x525f
    16fc:	45495049 	strbmi	r5, [r9, #-73]	; 0x49
    1700:	4300544e 	movwmi	r5, #1102	; 0x44e
    1704:	4479706f 	ldrbtmi	r7, [r9], #-111	; 0x6f
    1708:	00617461 	rsbeq	r7, r1, r1, ror #8
    170c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    1710:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    1714:	65467261 	strbvs	r7, [r6, #-609]	; 0x261
    1718:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
    171c:	69560065 	ldmdbvs	r6, {r0, r2, r5, r6}^
    1720:	61757472 	cmnvs	r5, r2, ror r4
    1724:	6f435f6c 	svcvs	0x00435f6c
    1728:	6f505f6d 	svcvs	0x00505f6d
    172c:	475f7472 			; <UNDEFINED> instruction: 0x475f7472
    1730:	74537465 	ldrbvc	r7, [r3], #-1125	; 0x465
    1734:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    1738:	63736544 	cmnvs	r3, #68, 10	; 0x11000000
    173c:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0x972
    1740:	5500726f 	strpl	r7, [r0, #-623]	; 0x26f
    1744:	6d624253 	sfmvs	f4, 2, [r2, #-332]!	; 0xfffffeb4
    1748:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0x552
    174c:	54747365 	ldrbtpl	r7, [r4], #-869	; 0x365
    1750:	00657079 	rsbeq	r7, r5, r9, ror r0
    1754:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1758:	5f6c6175 	svcpl	0x006c6175
    175c:	5f6d6f43 	svcpl	0x006d6f43
    1760:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1764:	6174535f 	cmnvs	r4, pc, asr r3
    1768:	5f737574 	svcpl	0x00737574
    176c:	0074754f 	rsbseq	r7, r4, pc, asr #10
    1770:	61656c43 	cmnvs	r5, r3, asr #24
    1774:	74535f72 	ldrbvc	r5, [r3], #-3954	; 0xf72
    1778:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    177c:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xf5f
    1780:	72695600 	rsbvc	r5, r9, #0, 12
    1784:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
    1788:	6d6f435f 	stclvs	3, cr4, [pc, #-380]!	; 1614 <__Stack_Size+0x1214>
    178c:	726f505f 	rsbvc	r5, pc, #95	; 0x5f
    1790:	65475f74 	strbvs	r5, [r7, #-3956]	; 0xf74
    1794:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
    1798:	66726574 			; <UNDEFINED> instruction: 0x66726574
    179c:	5f656361 	svcpl	0x00656361
    17a0:	74746553 	ldrbtvc	r6, [r4], #-1363	; 0x553
    17a4:	00676e69 	rsbeq	r6, r7, r9, ror #28
    17a8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    17ac:	495f6563 	ldmdbmi	pc, {r0, r1, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    17b0:	006f666e 	rsbeq	r6, pc, lr, ror #12
    17b4:	6c727443 	cfldrdvs	mvd7, [r2], #-268	; 0xfffffef4
    17b8:	666e495f 			; <UNDEFINED> instruction: 0x666e495f
    17bc:	6f43006f 	svcvs	0x0043006f
    17c0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    17c4:	7365445f 	cmnvc	r5, #1593835520	; 0x5f000000
    17c8:	70697263 	rsbvc	r7, r9, r3, ror #4
    17cc:	00726f74 	rsbseq	r6, r2, r4, ror pc
    17d0:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    17d4:	5f746e65 	svcpl	0x00746e65
    17d8:	74616546 	strbtvc	r6, [r1], #-1350	; 0x546
    17dc:	00657275 	rsbeq	r7, r5, r5, ror r2
    17e0:	5f627355 	svcpl	0x00627355
    17e4:	66664f77 	uqsub16vs	r4, r6, r7
    17e8:	00746573 	rsbseq	r6, r4, r3, ror r5
    17ec:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    17f0:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    17f4:	50646e45 	rsbpl	r6, r4, r5, asr #28
    17f8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    17fc:	74616546 	strbtvc	r6, [r1], #-1350	; 0x546
    1800:	00657275 	rsbeq	r7, r5, r5, ror r2
    1804:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1808:	5f6c6175 	svcpl	0x006c6175
    180c:	5f6d6f43 	svcpl	0x006d6f43
    1810:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1814:	7461445f 	strbtvc	r4, [r1], #-1119	; 0x45f
    1818:	65535f61 	ldrbvs	r5, [r3, #-3937]	; 0xf61
    181c:	00707574 	rsbseq	r7, r0, r4, ror r5
    1820:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1824:	5f6c6175 	svcpl	0x006c6175
    1828:	5f6d6f43 	svcpl	0x006d6f43
    182c:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    1830:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    1834:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1838:	65446769 	strbvs	r6, [r4, #-1897]	; 0x769
    183c:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
    1840:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
    1844:	48544f00 	ldmdami	r4, {r8, r9, sl, fp, lr}^
    1848:	525f5245 	subspl	r5, pc, #1342177284	; 0x50000004
    184c:	50494345 	subpl	r4, r9, r5, asr #6
    1850:	544e4549 	strbpl	r4, [lr], #-1353	; 0x549
    1854:	36317500 	ldrtcc	r7, [r1], -r0, lsl #10
    1858:	0038755f 	eorseq	r7, r8, pc, asr r5
    185c:	74726956 	ldrbtvc	r6, [r2], #-2390	; 0x956
    1860:	5f6c6175 	svcpl	0x006c6175
    1864:	5f6d6f43 	svcpl	0x006d6f43
    1868:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xf50
    186c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1870:	494c0074 	stmdbmi	ip, {r2, r4, r5, r6}^
    1874:	435f454e 	cmpmi	pc, #327155712	; 0x13800000
    1878:	4e49444f 	cdpmi	4, 4, cr4, cr9, cr15, {2}
    187c:	65530047 	ldrbvs	r0, [r3, #-71]	; 0x47
    1880:	52504574 	subspl	r4, r0, #116, 10	; 0x1d000000
    1884:	756f4378 	strbvc	r4, [pc, #-888]!	; 1514 <__Stack_Size+0x1114>
    1888:	5000746e 	andpl	r7, r0, lr, ror #8
    188c:	7265776f 	rsbvc	r7, r5, #29097984	; 0x1bc0000
    1890:	0066664f 	rsbeq	r6, r6, pc, asr #12
    1894:	54746e49 	ldrbtpl	r6, [r4], #-3657	; 0xe49
    1898:	696e556f 	stmdbvs	lr!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, lr}^
    189c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xf63
    18a0:	42535500 	subsmi	r5, r3, #0, 10
    18a4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    18a8:	4400632e 	strmi	r6, [r0], #-814	; 0x32e
    18ac:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    18b0:	65535f65 	ldrbvs	r5, [r3, #-3941]	; 0xf65
    18b4:	6c616972 	stclvs	9, cr6, [r1], #-456	; 0xfffffe38
    18b8:	65530031 	ldrbvs	r0, [r3, #-49]	; 0x31
    18bc:	54504574 	ldrbpl	r4, [r0], #-1396	; 0x574
    18c0:	756f4378 	strbvc	r4, [pc, #-888]!	; 1550 <__Stack_Size+0x1150>
    18c4:	4e00746e 	cdpmi	4, 0, cr7, cr0, cr14, {3}
    18c8:	74537765 	ldrbvc	r7, [r3], #-1893	; 0x765
    18cc:	00657461 	rsbeq	r7, r5, r1, ror #8
    18d0:	746e4977 	strbtvc	r4, [lr], #-2423	; 0x977
    18d4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0x265
    18d8:	4d5f7470 	cfldrdmi	mvd7, [pc, #-448]	; 1720 <__Stack_Size+0x1320>
    18dc:	006b7361 	rsbeq	r7, fp, r1, ror #6
    18e0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    18e4:	535f6563 	cmppl	pc, #415236096	; 0x18c00000
    18e8:	61697265 	cmnvs	r9, r5, ror #4
    18ec:	4400306c 	strmi	r3, [r0], #-108	; 0x6c
    18f0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    18f4:	65535f65 	ldrbvs	r5, [r3, #-3941]	; 0xf65
    18f8:	6c616972 	stclvs	9, cr6, [r1], #-456	; 0xfffffe38
    18fc:	53550032 	cmppl	r5, #50	; 0x32
    1900:	61435f42 	cmpvs	r3, r2, asr #30
    1904:	5f656c62 	svcpl	0x00656c62
    1908:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    190c:	55006769 	strpl	r6, [r0, #-1897]	; 0x769
    1910:	545f4253 	ldrbpl	r4, [pc], #-595	; 1918 <__Stack_Size+0x1518>
    1914:	74535f78 	ldrbvc	r5, [r3], #-3960	; 0xf78
    1918:	00657461 	rsbeq	r7, r5, r1, ror #8
    191c:	56627355 			; <UNDEFINED> instruction: 0x56627355
    1920:	6f437063 	svcvs	0x00437063
    1924:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
    1928:	73550074 	cmpvc	r5, #116	; 0x74
    192c:	6f547265 	svcvs	0x00547265
    1930:	42414d50 	submi	r4, r1, #80, 26	; 0x1400
    1934:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    1938:	706f4372 	rsbvc	r4, pc, r2, ror r3	; <UNPREDICTABLE>
    193c:	65530079 	ldrbvs	r0, [r3, #-121]	; 0x79
    1940:	54504574 	ldrbpl	r4, [r0], #-1396	; 0x574
    1944:	6c615678 	stclvs	6, cr5, [r1], #-480	; 0xfffffe20
    1948:	76006469 	strvc	r6, [r0], -r9, ror #8
    194c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
    1950:	41535500 	cmpmi	r3, r0, lsl #10
    1954:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    1958:	656c5f78 	strbvs	r5, [ip, #-3960]!	; 0xf78
    195c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1960:	75627000 	strbvc	r7, [r2, #-0]!
    1964:	4c460066 	mcrrmi	0, 6, r0, r6, cr6
    1968:	5f485341 	svcpl	0x00485341
    196c:	6f435449 	svcvs	0x00435449
    1970:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1974:	50525700 	subspl	r5, r2, r0, lsl #14
    1978:	61445f32 	cmpvs	r4, r2, lsr pc
    197c:	4f006174 	svcmi	0x00006174
    1980:	54535f42 	ldrbpl	r5, [r3], #-3906	; 0xf42
    1984:	4600504f 	strmi	r5, [r0], -pc, asr #32
    1988:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    198c:	6172455f 	cmnvs	r2, pc, asr r5
    1990:	704f6573 	subvc	r6, pc, r3, ror r5	; <UNPREDICTABLE>
    1994:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1998:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0x942
    199c:	65720073 	ldrbvs	r0, [r2, #-115]!	; 0x73
    19a0:	756f6461 	strbvc	r6, [pc, #-1121]!	; 1547 <__Stack_Size+0x1147>
    19a4:	61747374 	cmnvs	r4, r4, ror r3
    19a8:	00737574 	rsbseq	r7, r3, r4, ror r5
    19ac:	53414c46 	movtpl	r4, #7238	; 0x1c46
    19b0:	614c5f48 	cmpvs	ip, r8, asr #30
    19b4:	636e6574 	cmnvs	lr, #116, 10	; 0x1d000000
    19b8:	4c460079 	mcrrmi	0, 7, r0, r6, cr9
    19bc:	5f485341 	svcpl	0x00485341
    19c0:	50746547 	rsbspl	r6, r4, r7, asr #10
    19c4:	65666572 	strbvs	r6, [r6, #-1394]!	; 0x572
    19c8:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
    19cc:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    19d0:	61745372 	cmnvs	r4, r2, ror r3
    19d4:	00737574 	rsbseq	r7, r3, r4, ror r5
    19d8:	616c6564 	cmnvs	ip, r4, ror #10
    19dc:	696c0079 	stmdbvs	ip!, {r0, r3, r4, r5, r6}^
    19e0:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    19e4:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    19e8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    19ec:	5f783031 	svcpl	0x00783031
    19f0:	73616c66 	cmnvc	r1, #26112	; 0x6600
    19f4:	00632e68 	rsbeq	r2, r3, r8, ror #28
    19f8:	52505257 	subspl	r5, r0, #1879048197	; 0x70000005
    19fc:	414c4600 	cmpmi	ip, r0, lsl #12
    1a00:	455f4853 	ldrbmi	r4, [pc, #-2131]	; 11b5 <__Stack_Size+0xdb5>
    1a04:	65736172 	ldrbvs	r6, [r3, #-370]!	; 0x172
    1a08:	506c6c41 	rsbpl	r6, ip, r1, asr #24
    1a0c:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    1a10:	50525700 	subspl	r5, r2, r0, lsl #14
    1a14:	52570030 	subspl	r0, r7, #48	; 0x30
    1a18:	57003150 	smlsdpl	r0, r0, r1, r3
    1a1c:	00325052 	eorseq	r5, r2, r2, asr r0
    1a20:	33505257 	cmpcc	r0, #1879048197	; 0x70000005
    1a24:	414c4600 	cmpmi	ip, r0, lsl #12
    1a28:	475f4853 			; <UNDEFINED> instruction: 0x475f4853
    1a2c:	72577465 	subsvc	r7, r7, #1694498816	; 0x65000000
    1a30:	50657469 	rsbpl	r7, r5, r9, ror #8
    1a34:	65746f72 	ldrbvs	r6, [r4, #-3954]!	; 0xf72
    1a38:	6f697463 	svcvs	0x00697463
    1a3c:	74704f6e 	ldrbtvc	r4, [r0], #-3950	; 0xf6e
    1a40:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1a44:	00657479 	rsbeq	r7, r5, r9, ror r4
    1a48:	4b54504f 	blmi	1515b8c <__Stack_Size+0x151578c>
    1a4c:	00525945 	subseq	r5, r2, r5, asr #18
    1a50:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1a54:	73555f48 	cmpvc	r5, #72, 30	; 0x120
    1a58:	704f7265 	subvc	r7, pc, r5, ror #4
    1a5c:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1a60:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0x942
    1a64:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1a68:	4f006769 	svcmi	0x00006769
    1a6c:	57495f42 	strbpl	r5, [r9, -r2, asr #30]
    1a70:	46004744 	strmi	r4, [r0], -r4, asr #14
    1a74:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1a78:	6165525f 	cmnvs	r5, pc, asr r2
    1a7c:	74754f64 	ldrbtvc	r4, [r5], #-3940	; 0xf64
    1a80:	746f7250 	strbtvc	r7, [pc], #-592	; 1a88 <__Stack_Size+0x1688>
    1a84:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1a88:	66006e6f 	strvs	r6, [r0], -pc, ror #28
    1a8c:	6873616c 	ldmdavs	r3!, {r2, r3, r5, r6, r8, sp, lr}^
    1a90:	74617473 	strbtvc	r7, [r1], #-1139	; 0x473
    1a94:	62007375 	andvs	r7, r0, #-738197503	; 0xd4000001
    1a98:	74737469 	ldrbtvc	r7, [r3], #-1129	; 0x469
    1a9c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1aa0:	67615000 	strbvs	r5, [r1, -r0]!
    1aa4:	64415f65 	strbvs	r5, [r1], #-3941	; 0xf65
    1aa8:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1aac:	52570073 	subspl	r0, r7, #115	; 0x73
    1ab0:	445f3350 	ldrbmi	r3, [pc], #-848	; 1ab8 <__Stack_Size+0x16b8>
    1ab4:	00617461 	rsbeq	r7, r1, r1, ror #8
    1ab8:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1abc:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1ac0:	616c4674 	smcvs	50276	; 0xc464
    1ac4:	61745367 	cmnvs	r4, r7, ror #6
    1ac8:	00737574 	rsbseq	r7, r3, r4, ror r5
    1acc:	31505257 	cmpcc	r0, r7, asr r2
    1ad0:	7461445f 	strbtvc	r4, [r1], #-1119	; 0x45f
    1ad4:	69540061 	ldmdbvs	r4, {r0, r5, r6}^
    1ad8:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1573 <__Stack_Size+0x1173>
    1adc:	4c460074 	mcrrmi	0, 7, r0, r6, cr4
    1ae0:	5f485341 	svcpl	0x00485341
    1ae4:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    1ae8:	4f646165 	svcmi	0x00646165
    1aec:	72507475 	subsvc	r7, r0, #1962934272	; 0x75000000
    1af0:	6365746f 	cmnvs	r5, #1862270976	; 0x6f000000
    1af4:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1af8:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1afc:	4f007375 	svcmi	0x00007375
    1b00:	54535f42 	ldrbpl	r5, [r3], #-3906	; 0xf42
    1b04:	00594244 	subseq	r4, r9, r4, asr #4
    1b08:	30505257 	subscc	r5, r0, r7, asr r2
    1b0c:	7461445f 	strbtvc	r4, [r1], #-1119	; 0x45f
    1b10:	4c460061 	mcrrmi	0, 6, r0, r6, cr1
    1b14:	5f485341 	svcpl	0x00485341
    1b18:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1b1c:	6c637943 	stclvs	9, cr7, [r3], #-268	; 0xfffffef4
    1b20:	63634165 	cmnvs	r3, #1073741849	; 0x40000019
    1b24:	00737365 	rsbseq	r7, r3, r5, ror #6
    1b28:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1b2c:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1b30:	61745374 	cmnvs	r4, r4, ror r3
    1b34:	00737574 	rsbseq	r7, r3, r4, ror r5
    1b38:	545f424f 	ldrbpl	r4, [pc], #-591	; 1b40 <__Stack_Size+0x1740>
    1b3c:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    1b40:	46006665 	strmi	r6, [r0], -r5, ror #12
    1b44:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    1b48:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    1b4c:	63794366 	cmnvs	r9, #-1744830463	; 0x98000001
    1b50:	6341656c 	movtvs	r6, #5484	; 0x156c
    1b54:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1b58:	00646d43 	rsbeq	r6, r4, r3, asr #26
    1b5c:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1b60:	72505f48 	subsvc	r5, r0, #72, 30	; 0x120
    1b64:	6172676f 	cmnvs	r2, pc, ror #14
    1b68:	74704f6d 	ldrbtvc	r4, [r0], #-3949	; 0xf6d
    1b6c:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1b70:	44657479 	strbtmi	r7, [r5], #-1145	; 0x479
    1b74:	00617461 	rsbeq	r7, r1, r1, ror #8
    1b78:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1b7c:	65475f48 	strbvs	r5, [r7, #-3912]	; 0xf48
    1b80:	65735574 	ldrbvs	r5, [r3, #-1396]!	; 0x574
    1b84:	74704f72 	ldrbtvc	r4, [r0], #-3954	; 0xf72
    1b88:	426e6f69 	rsbmi	r6, lr, #420	; 0x1a4
    1b8c:	00657479 	rsbeq	r7, r5, r9, ror r4
    1b90:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1b94:	72505f48 	subsvc	r5, r0, #72, 30	; 0x120
    1b98:	6172676f 	cmnvs	r2, pc, ror #14
    1b9c:	6c61486d 	stclvs	8, cr4, [r1], #-436	; 0xfffffe4c
    1ba0:	726f5766 	rsbvc	r5, pc, #26738688	; 0x1980000
    1ba4:	4c460064 	mcrrmi	0, 6, r0, r6, cr4
    1ba8:	5f485341 	svcpl	0x00485341
    1bac:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    1bb0:	414c4600 	cmpmi	ip, r0, lsl #12
    1bb4:	455f4853 	ldrbmi	r4, [pc, #-2131]	; 1369 <__Stack_Size+0xf69>
    1bb8:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1bbc:	69725765 	ldmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, ip, lr}^
    1bc0:	72506574 	subsvc	r6, r0, #116, 10	; 0x1d000000
    1bc4:	6365746f 	cmnvs	r5, #1862270976	; 0x6f000000
    1bc8:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1bcc:	45535500 	ldrbmi	r5, [r3, #-1280]	; 0x500
    1bd0:	61440052 	qdaddvs	r0, r2, r4
    1bd4:	00306174 	eorseq	r6, r0, r4, ror r1
    1bd8:	61746144 	cmnvs	r4, r4, asr #2
    1bdc:	4c460031 	mcrrmi	0, 3, r0, r6, cr1
    1be0:	5f485341 	svcpl	0x00485341
    1be4:	65676150 	strbvs	r6, [r7, #-336]!	; 0x150
    1be8:	4c460073 	mcrrmi	0, 7, r0, r6, cr3
    1bec:	5f485341 	svcpl	0x00485341
    1bf0:	52005449 	andpl	r5, r0, #1224736768	; 0x49000000
    1bf4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
    1bf8:	00444556 	subeq	r4, r4, r6, asr r5
    1bfc:	53414c46 	movtpl	r4, #7238	; 0x1c46
    1c00:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
    1c04:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    1c08:	4c460066 	mcrrmi	0, 6, r0, r6, cr6
    1c0c:	5f485341 	svcpl	0x00485341
    1c10:	74696157 	strbtvc	r6, [r9], #-343	; 0x157
    1c14:	4c726f46 	ldclmi	15, cr6, [r2], #-280	; 0xfffffee8
    1c18:	4f747361 	svcmi	0x00747361
    1c1c:	61726570 	cmnvs	r2, r0, ror r5
    1c20:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    1c24:	414c4600 	cmpmi	ip, r0, lsl #12
    1c28:	505f4853 	subspl	r4, pc, r3, asr r8	; <UNPREDICTABLE>
    1c2c:	65666572 	strbvs	r6, [r6, #-1394]!	; 0x572
    1c30:	42686374 	rsbmi	r6, r8, #116, 6	; 0xd0000001
    1c34:	65666675 	strbvs	r6, [r6, #-1653]!	; 0x675
    1c38:	69700072 	ldmdbvs	r0!, {r1, r4, r5, r6}^
    1c3c:	736f706e 	cmnvc	pc, #110	; 0x6e
    1c40:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1c44:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
    1c48:	754f6461 	strbvc	r6, [pc, #-1121]	; 17ef <__Stack_Size+0x13ef>
    1c4c:	74757074 	ldrbtvc	r7, [r5], #-116	; 0x74
    1c50:	61746144 	cmnvs	r4, r4, asr #2
    1c54:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1c58:	76455f4f 	strbvc	r5, [r5], -pc, asr #30
    1c5c:	4f746e65 	svcmi	0x00746e65
    1c60:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0x475
    1c64:	646d4374 	strbtvs	r4, [sp], #-884	; 0x374
    1c68:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1c6c:	74535f4f 	ldrbvc	r5, [r3], #-3919	; 0xf4f
    1c70:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    1c74:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    1c78:	74694200 	strbtvc	r4, [r9], #-512	; 0x200
    1c7c:	006c6156 	rsbeq	r6, ip, r6, asr r1
    1c80:	4f495047 	svcmi	0x00495047
    1c84:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1c88:	69426574 	stmdbvs	r2, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1c8c:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
    1c90:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    1c94:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    1c98:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1c9c:	5f783031 	svcpl	0x00783031
    1ca0:	6f697067 	svcvs	0x00697067
    1ca4:	4500632e 	strmi	r6, [r0, #-814]	; 0x32e
    1ca8:	43495458 	movtmi	r5, #37976	; 0x9458
    1cac:	69700052 	ldmdbvs	r0!, {r1, r4, r6}^
    1cb0:	73616d6e 	cmnvc	r1, #7040	; 0x1b80
    1cb4:	5047006b 	subpl	r0, r7, fp, rrx
    1cb8:	505f4f49 	subspl	r4, pc, r9, asr #30
    1cbc:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    1cc0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    1cc4:	50470065 	subpl	r0, r7, r5, rrx
    1cc8:	445f4f49 	ldrbmi	r4, [pc], #-3913	; 1cd0 <__Stack_Size+0x18d0>
    1ccc:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1cd0:	50470074 	subpl	r0, r7, r4, ror r0
    1cd4:	455f4f49 	ldrbmi	r4, [pc, #-3913]	; d93 <__Stack_Size+0x993>
    1cd8:	746e6576 	strbtvc	r6, [lr], #-1398	; 0x576
    1cdc:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1ce0:	6f437475 	svcvs	0x00437475
    1ce4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1ce8:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1cec:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xf4f
    1cf0:	0070616d 	rsbseq	r6, r0, sp, ror #2
    1cf4:	4f495047 	svcmi	0x00495047
    1cf8:	6165525f 	cmnvs	r5, pc, asr r2
    1cfc:	706e4964 	rsbvc	r4, lr, r4, ror #18
    1d00:	61447475 	hvcvs	18245	; 0x4745
    1d04:	69426174 	stmdbvs	r2, {r2, r4, r5, r6, r8, sp, lr}^
    1d08:	6d740074 	ldclvs	0, cr0, [r4, #-464]!	; 0xfffffe30
    1d0c:	67657270 			; <UNDEFINED> instruction: 0x67657270
    1d10:	726f5000 	rsbvc	r5, pc, #0
    1d14:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    1d18:	72756300 	rsbsvc	r6, r5, #0, 6
    1d1c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0x572
    1d20:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xf6d
    1d24:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1d28:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1d2c:	6d65526e 	sfmvs	f5, 2, [r5, #-440]!	; 0xfffffe48
    1d30:	6f437061 	svcvs	0x00437061
    1d34:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1d38:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1d3c:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1d40:	756f536e 	strbvc	r5, [pc, #-878]!	; 19da <__Stack_Size+0x15da>
    1d44:	00656372 	rsbeq	r6, r5, r2, ror r3
    1d48:	5f434352 	svcpl	0x00434352
    1d4c:	32425041 	subcc	r5, r2, #65	; 0x41
    1d50:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    1d54:	65526870 	ldrbvs	r6, [r2, #-2160]	; 0x870
    1d58:	43746573 	cmnmi	r4, #482344960	; 0x1cc00000
    1d5c:	4700646d 	strmi	r6, [r0, -sp, ror #8]
    1d60:	5f4f4950 	svcpl	0x004f4950
    1d64:	64616552 	strbtvs	r6, [r1], #-1362	; 0x552
    1d68:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xe49
    1d6c:	74614474 	strbtvc	r4, [r1], #-1140	; 0x474
    1d70:	6d740061 	ldclvs	0, cr0, [r4, #-388]!	; 0xfffffe7c
    1d74:	73616d70 	cmnvc	r1, #112, 26	; 0x1c00
    1d78:	5047006b 	subpl	r0, r7, fp, rrx
    1d7c:	505f4f49 	subspl	r4, pc, r9, asr #30
    1d80:	6f4c6e69 	svcvs	0x004c6e69
    1d84:	6f436b63 	svcvs	0x00436b63
    1d88:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1d8c:	72756300 	rsbsvc	r6, r5, #0, 6
    1d90:	746e6572 	strbtvc	r6, [lr], #-1394	; 0x572
    1d94:	006e6970 	rsbeq	r6, lr, r0, ror r9
    1d98:	4f495047 	svcmi	0x00495047
    1d9c:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1da0:	74006574 	strvc	r6, [r0], #-1396	; 0x574
    1da4:	0031706d 	eorseq	r7, r1, sp, rrx
    1da8:	4f495047 	svcmi	0x00495047
    1dac:	5458455f 	ldrbpl	r4, [r8], #-1375	; 0x55f
    1db0:	6e694c49 	cdpvs	12, 6, cr4, cr9, cr9, {2}
    1db4:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
    1db8:	00676966 	rsbeq	r6, r7, r6, ror #18
    1dbc:	4f494641 	svcmi	0x00494641
    1dc0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1dc4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1dc8:	74694200 	strbtvc	r4, [r9], #-512	; 0x200
    1dcc:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    1dd0:	4d006e6f 	stcmi	14, cr6, [r0, #-444]	; 0xfffffe44
    1dd4:	00525041 	subseq	r5, r2, r1, asr #32
    1dd8:	4f495047 	svcmi	0x00495047
    1ddc:	50470078 	subpl	r0, r7, r8, ror r0
    1de0:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
    1de4:	5374696e 	cmnpl	r4, #1802240	; 0x1b8000
    1de8:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    1dec:	56450074 			; <UNDEFINED> instruction: 0x56450074
    1df0:	47005243 	strmi	r5, [r0, -r3, asr #4]
    1df4:	5f4f4950 	svcpl	0x004f4950
    1df8:	64616552 	strbtvs	r6, [r1], #-1362	; 0x552
    1dfc:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1e00:	61447475 	hvcvs	18245	; 0x4745
    1e04:	69426174 	stmdbvs	r2, {r2, r4, r5, r6, r8, sp, lr}^
    1e08:	50470074 	subpl	r0, r7, r4, ror r0
    1e0c:	415f4f49 	cmpmi	pc, r9, asr #30
    1e10:	444f4946 	strbmi	r4, [pc], #-2374	; 1e18 <__Stack_Size+0x1a18>
    1e14:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1e18:	43520074 	cmpmi	r2, #116	; 0x74
    1e1c:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1e20:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    1e24:	50410066 	subpl	r0, r1, r6, rrx
    1e28:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
    1e2c:	52005254 	andpl	r5, r0, #84, 4	; 0x40000005
    1e30:	485f4343 	ldmdami	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    1e34:	004b4c43 	subeq	r4, fp, r3, asr #24
    1e38:	5f434352 	svcpl	0x00434352
    1e3c:	43434441 	movtmi	r4, #13377	; 0x3441
    1e40:	6f434b4c 	svcvs	0x00434b4c
    1e44:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1e48:	43435200 	movtmi	r5, #12800	; 0x3200
    1e4c:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    1e50:	54497261 	strbpl	r7, [r9], #-609	; 0x261
    1e54:	646e6550 	strbtvs	r6, [lr], #-1360	; 0x550
    1e58:	42676e69 	rsbmi	r6, r7, #1680	; 0x690
    1e5c:	6c007469 	cfstrsvs	mvf7, [r0], {105}	; 0x69
    1e60:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    1e64:	732f6372 	teqvc	pc, #-939524095	; 0xc8000001
    1e68:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1e6c:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    1e70:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    1e74:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    1e78:	4c5f4343 	mrrcmi	3, 4, r4, pc, cr3	; <UNPREDICTABLE>
    1e7c:	52004553 	andpl	r4, r0, #348127232	; 0x14c00000
    1e80:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1e84:	54497465 	strbpl	r7, [r9], #-1125	; 0x465
    1e88:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    1e8c:	42007375 	andmi	r7, r0, #-738197503	; 0xd4000001
    1e90:	00524344 	subseq	r4, r2, r4, asr #6
    1e94:	5f434352 	svcpl	0x00434352
    1e98:	32425041 	subcc	r5, r2, #65	; 0x41
    1e9c:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    1ea0:	52006870 	andpl	r6, r0, #112, 16	; 0x700000
    1ea4:	505f4343 	subspl	r4, pc, r3, asr #6
    1ea8:	324b4c43 	subcc	r4, fp, #17152	; 0x4300
    1eac:	43435200 	movtmi	r5, #12800	; 0x3200
    1eb0:	6f6c435f 	svcvs	0x006c435f
    1eb4:	54736b63 	ldrbtpl	r6, [r3], #-2915	; 0xb63
    1eb8:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    1ebc:	52006665 	andpl	r6, r0, #105906176	; 0x6500000
    1ec0:	505f4343 	subspl	r4, pc, r3, asr #6
    1ec4:	754d4c4c 	strbvc	r4, [sp, #-3148]	; 0xc4c
    1ec8:	4352006c 	cmpmi	r2, #108	; 0x6c
    1ecc:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1ed0:	72655042 	rsbvc	r5, r5, #66	; 0x42
    1ed4:	43687069 	cmnmi	r8, #105	; 0x69
    1ed8:	6b636f6c 	blvs	18ddc90 <__Stack_Size+0x18dd890>
    1edc:	00646d43 	rsbeq	r6, r4, r3, asr #26
    1ee0:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
    1ee4:	4c434800 	mcrrmi	8, 0, r4, r3, cr0
    1ee8:	72465f4b 	subvc	r5, r6, #300	; 0x12c
    1eec:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    1ef0:	0079636e 	rsbseq	r6, r9, lr, ror #6
    1ef4:	31425041 	cmpcc	r2, r1, asr #32
    1ef8:	00524e45 	subseq	r4, r2, r5, asr #28
    1efc:	5f434352 	svcpl	0x00434352
    1f00:	434f434d 	movtmi	r4, #62285	; 0xf34d
    1f04:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    1f08:	43520067 	cmpmi	r2, #103	; 0x67
    1f0c:	54525f43 	ldrbpl	r5, [r2], #-3907	; 0xf43
    1f10:	4b4c4343 	blmi	1312c24 <__Stack_Size+0x1312824>
    1f14:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1f18:	52006563 	andpl	r6, r0, #415236096	; 0x18c00000
    1f1c:	415f4343 	cmpmi	pc, r3, asr #6
    1f20:	50314250 	eorspl	r4, r1, r0, asr r2
    1f24:	70697265 	rsbvc	r7, r9, r5, ror #4
    1f28:	73655268 	cmnvc	r5, #104, 4	; 0x80000006
    1f2c:	6d437465 	cfstrdvs	mvd7, [r3, #-404]	; 0xfffffe6c
    1f30:	6c700064 	ldclvs	0, cr0, [r0], #-400	; 0xfffffe70
    1f34:	6c756d6c 	ldclvs	13, cr6, [r5], #-432	; 0xfffffe50
    1f38:	4352006c 	cmpmi	r2, #108	; 0x6c
    1f3c:	534c5f43 	movtpl	r5, #53059	; 0xcf43
    1f40:	646d4349 	strbtvs	r4, [sp], #-841	; 0x349
    1f44:	42504100 	subsmi	r4, r0, #0, 2
    1f48:	54535232 	ldrbpl	r5, [r3], #-562	; 0x232
    1f4c:	43520052 	cmpmi	r2, #82	; 0x52
    1f50:	50415f43 	subpl	r5, r1, r3, asr #30
    1f54:	65503142 	ldrbvs	r3, [r0, #-322]	; 0x142
    1f58:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1f5c:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    1f60:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    1f64:	41006563 	tstmi	r0, r3, ror #10
    1f68:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
    1f6c:	74730052 	ldrbtvc	r0, [r3], #-82	; 0x52
    1f70:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    1f74:	00676572 	rsbeq	r6, r7, r2, ror r5
    1f78:	5f434352 	svcpl	0x00434352
    1f7c:	31425041 	cmpcc	r2, r1, asr #32
    1f80:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    1f84:	6c436870 	mcrrvs	8, 7, r6, r3, cr0
    1f88:	436b636f 	cmnmi	fp, #-1140850687	; 0xbc000001
    1f8c:	4100646d 	tstmi	r0, sp, ror #8
    1f90:	45324250 	ldrmi	r4, [r2, #-592]!	; 0x250
    1f94:	5300524e 	movwpl	r5, #590	; 0x24e
    1f98:	74726174 	ldrbtvc	r6, [r2], #-372	; 0x174
    1f9c:	6f437055 	svcvs	0x00437055
    1fa0:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xe75
    1fa4:	43520072 	cmpmi	r2, #114	; 0x72
    1fa8:	61425f43 	cmpvs	r2, r3, asr #30
    1fac:	70756b63 	rsbsvc	r6, r5, r3, ror #22
    1fb0:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0x552
    1fb4:	646d4374 	strbtvs	r4, [sp], #-884	; 0x374
    1fb8:	43435200 	movtmi	r5, #12800	; 0x3200
    1fbc:	6a64415f 	bvs	1912540 <__Stack_Size+0x1912140>
    1fc0:	48747375 	ldmdami	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
    1fc4:	61434953 	cmpvs	r3, r3, asr r9
    1fc8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1fcc:	6f697461 	svcvs	0x00697461
    1fd0:	6c61566e 	stclvs	6, cr5, [r1], #-440	; 0xfffffe48
    1fd4:	41006575 	tstmi	r0, r5, ror r5
    1fd8:	4c434344 	mcrrmi	3, 4, r4, r3, cr4
    1fdc:	72465f4b 	subvc	r5, r6, #300	; 0x12c
    1fe0:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    1fe4:	0079636e 	rsbseq	r6, r9, lr, ror #6
    1fe8:	5f434352 	svcpl	0x00434352
    1fec:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    1ff0:	43435200 	movtmi	r5, #12800	; 0x3200
    1ff4:	4c4c505f 	mcrrmi	0, 5, r5, ip, cr15
    1ff8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    1ffc:	52006563 	andpl	r6, r0, #415236096	; 0x18c00000
    2000:	525f4343 	subspl	r4, pc, #201326593	; 0xc000001
    2004:	4c434354 	mcrrmi	3, 5, r4, r3, cr4
    2008:	6e6f434b 	cdpvs	3, 6, cr4, cr15, cr11, {2}
    200c:	00676966 	rsbeq	r6, r7, r6, ror #18
    2010:	5f434352 	svcpl	0x00434352
    2014:	43425355 	movtmi	r5, #9045	; 0x2355
    2018:	6f534b4c 	svcvs	0x00534b4c
    201c:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
    2020:	43435200 	movtmi	r5, #12800	; 0x3200
    2024:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2028:	6c467261 	sfmvs	f7, 2, [r6], {97}	; 0x61
    202c:	52006761 	andpl	r6, r0, #25427968	; 0x1840000
    2030:	535f4343 	cmppl	pc, #201326593	; 0xc000001
    2034:	4c435359 	mcrrmi	3, 5, r5, r3, cr9
    2038:	5348004b 	movtpl	r0, #32843	; 0x804b
    203c:	61745345 	cmnvs	r4, r5, asr #6
    2040:	00737574 	rsbseq	r7, r3, r4, ror r5
    2044:	43535953 	cmpmi	r3, #1359872	; 0x14c000
    2048:	465f4b4c 	ldrbmi	r4, [pc], -ip, asr #22
    204c:	75716572 	ldrbvc	r6, [r1, #-1394]!	; 0x572
    2050:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2054:	43435200 	movtmi	r5, #12800	; 0x3200
    2058:	6f6c435f 	svcvs	0x006c435f
    205c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2060:	4b4c4350 	blmi	1312da8 <__Stack_Size+0x13129a8>
    2064:	72465f32 	subvc	r5, r6, #50, 30	; 0xc8
    2068:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    206c:	0079636e 	rsbseq	r6, r9, lr, ror #6
    2070:	5f434352 	svcpl	0x00434352
    2074:	6f435449 	svcvs	0x00435449
    2078:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    207c:	65727000 	ldrbvs	r7, [r2, #-0]!
    2080:	52006373 	andpl	r6, r0, #-872415231	; 0xcc000001
    2084:	485f4343 	ldmdami	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    2088:	52004553 	andpl	r4, r0, #348127232	; 0x14c00000
    208c:	535f4343 	cmppl	pc, #201326593	; 0xc000001
    2090:	4c435359 	mcrrmi	3, 5, r5, r3, cr9
    2094:	756f534b 	strbvc	r5, [pc, #-843]!	; 1d51 <__Stack_Size+0x1951>
    2098:	00656372 	rsbeq	r6, r5, r2, ror r3
    209c:	4b4c4350 	blmi	1312de4 <__Stack_Size+0x13129e4>
    20a0:	72465f31 	subvc	r5, r6, #49, 30	; 0xc4
    20a4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    20a8:	0079636e 	rsbseq	r6, r9, lr, ror #6
    20ac:	5f434352 	svcpl	0x00434352
    20b0:	4345534c 	movtmi	r5, #21324	; 0x534c
    20b4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    20b8:	50410067 	subpl	r0, r1, r7, rrx
    20bc:	42484142 	submi	r4, r8, #-2147483632	; 0x80000010
    20c0:	73657250 	cmnvc	r5, #80, 4
    20c4:	62615463 	rsbvs	r5, r1, #1660944384	; 0x63000000
    20c8:	5200656c 	andpl	r6, r0, #108, 10	; 0x1b000000
    20cc:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    20d0:	6c437465 	cfstrdvs	mvd7, [r3], {101}	; 0x65
    20d4:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
    20d8:	71657246 	cmnvc	r5, r6, asr #4
    20dc:	43435200 	movtmi	r5, #12800	; 0x3200
    20e0:	4354525f 	cmpmi	r4, #-268435451	; 0xf0000005
    20e4:	434b4c43 	movtmi	r4, #48195	; 0xbc43
    20e8:	5200646d 	andpl	r6, r0, #1828716544	; 0x6d000000
    20ec:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
    20f0:	6b636f6c 	blvs	18ddea8 <__Stack_Size+0x18ddaa8>
    20f4:	75636553 	strbvc	r6, [r3, #-1363]!	; 0x553
    20f8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    20fc:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0x953
    2100:	6d436d65 	stclvs	13, cr6, [r3, #-404]	; 0xfffffe6c
    2104:	43520064 	cmpmi	r2, #100	; 0x64
    2108:	53485f43 	movtpl	r5, #36675	; 0x8f43
    210c:	646d4349 	strbtvs	r4, [sp], #-841	; 0x349
    2110:	43435200 	movtmi	r5, #12800	; 0x3200
    2114:	4f434d5f 	svcmi	0x00434d5f
    2118:	43435200 	movtmi	r5, #12800	; 0x3200
    211c:	0054495f 	subseq	r4, r4, pc, asr r9
    2120:	5f434352 	svcpl	0x00434352
    2124:	50424841 	subpl	r4, r2, r1, asr #16
    2128:	70697265 	rsbvc	r7, r9, r5, ror #4
    212c:	44410068 	strbmi	r0, [r1], #-104	; 0x68
    2130:	65725043 	ldrbvs	r5, [r2, #-67]!	; 0x43
    2134:	61546373 	cmpvs	r4, r3, ror r3
    2138:	00656c62 	rsbeq	r6, r5, r2, ror #24
    213c:	5f4d4954 	svcpl	0x004d4954
    2140:	4634434f 	ldrtmi	r4, [r4], -pc, asr #6
    2144:	43747361 	cmnmi	r4, #-2080374783	; 0x84000001
    2148:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    214c:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2150:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2154:	6c6f5031 	stclvs	0, cr5, [pc], #-196	; 2098 <__Stack_Size+0x1c98>
    2158:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    215c:	6e6f4379 	mcrvs	3, 3, r4, cr15, cr9, {3}
    2160:	00676966 	rsbeq	r6, r7, r6, ror #18
    2164:	5f4d4954 	svcpl	0x004d4954
    2168:	74534349 	ldrbvc	r4, [r3], #-841	; 0x349
    216c:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2170:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2174:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2178:	34434f5f 	strbcc	r4, [r3], #-3935	; 0xf5f
    217c:	6c657250 	sfmvs	f7, 2, [r5], #-320	; 0xfffffec0
    2180:	4364616f 	cmnmi	r4, #-1073741797	; 0xc000001b
    2184:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2188:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    218c:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2190:	6d6f4374 	stclvs	3, cr4, [pc, #-464]!	; 1fc8 <__Stack_Size+0x1bc8>
    2194:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0x170
    2198:	49540031 	ldmdbmi	r4, {r0, r4, r5}^
    219c:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    21a0:	6d6f4374 	stclvs	3, cr4, [pc, #-464]!	; 1fd8 <__Stack_Size+0x1bd8>
    21a4:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0x170
    21a8:	49540032 	ldmdbmi	r4, {r1, r4, r5}^
    21ac:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    21b0:	6d6f4374 	stclvs	3, cr4, [pc, #-464]!	; 1fe8 <__Stack_Size+0x1be8>
    21b4:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0x170
    21b8:	49540034 	ldmdbmi	r4, {r2, r4, r5}^
    21bc:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    21c0:	6f504e33 	svcvs	0x00504e33
    21c4:	6972616c 	ldmdbvs	r2!, {r2, r3, r5, r6, r8, sp, lr}^
    21c8:	6f437974 	svcvs	0x00437974
    21cc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    21d0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    21d4:	50434f5f 	subpl	r4, r3, pc, asr pc
    21d8:	6f6c6572 	svcvs	0x006c6572
    21dc:	54006461 	strpl	r6, [r0], #-1121	; 0x461
    21e0:	4f5f4d49 	svcmi	0x005f4d49
    21e4:	696e4943 	stmdbvs	lr!, {r0, r1, r6, r8, fp, lr}^
    21e8:	70795474 	rsbsvc	r5, r9, r4, ror r4
    21ec:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    21f0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    21f4:	50434f5f 	subpl	r4, r3, pc, asr pc
    21f8:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    21fc:	00797469 	rsbseq	r7, r9, r9, ror #8
    2200:	5f4d4954 	svcpl	0x004d4954
    2204:	5033434f 	eorspl	r4, r3, pc, asr #6
    2208:	6f6c6572 	svcvs	0x006c6572
    220c:	6f436461 	svcvs	0x00436461
    2210:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2214:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2218:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    221c:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    2220:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    2224:	54007375 	strpl	r7, [r0], #-885	; 0x375
    2228:	435f3249 	cmpmi	pc, #-1879048188	; 0x90000004
    222c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2230:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2234:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2238:	74736146 	ldrbtvc	r6, [r3], #-326	; 0x146
    223c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2240:	444b435f 	strbmi	r4, [fp], #-863	; 0x35f
    2244:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2248:	4943495f 	stmdbmi	r3, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    224c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0x96e
    2250:	44657079 	strbtmi	r7, [r5], #-121	; 0x79
    2254:	54006665 	strpl	r6, [r0], #-1637	; 0x665
    2258:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    225c:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0x6e
    2260:	67697254 			; <UNDEFINED> instruction: 0x67697254
    2264:	53726567 	cmnpl	r2, #432013312	; 0x19c00000
    2268:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    226c:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2270:	78455f4d 	stmdavc	r5, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2274:	47525474 			; <UNDEFINED> instruction: 0x47525474
    2278:	73657250 	cmnvc	r5, #80, 4
    227c:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
    2280:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2284:	43435f4d 	movtmi	r5, #16205	; 0x3f4d
    2288:	6d434e78 	stclvs	14, cr4, [r3, #-480]	; 0xfffffe20
    228c:	74690064 	strbtvc	r0, [r9], #-100	; 0x64
    2290:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
    2294:	5400656c 	strpl	r6, [r0], #-1388	; 0x56c
    2298:	4f5f4d49 	svcmi	0x005f4d49
    229c:	72503243 	subsvc	r3, r0, #805306372	; 0x30000004
    22a0:	616f6c65 	cmnvs	pc, r5, ror #24
    22a4:	6e6f4364 	cdpvs	3, 6, cr4, cr15, cr4, {3}
    22a8:	00676966 	rsbeq	r6, r7, r6, ror #18
    22ac:	5f4d4954 	svcpl	0x004d4954
    22b0:	63726f46 	cmnvs	r2, #280	; 0x118
    22b4:	434f6465 	movtmi	r6, #62565	; 0xf465
    22b8:	6e6f4332 	mcrvs	3, 3, r4, cr15, cr2, {1}
    22bc:	00676966 	rsbeq	r6, r7, r6, ror #18
    22c0:	5f4d4954 	svcpl	0x004d4954
    22c4:	7453434f 	ldrbvc	r4, [r3], #-847	; 0x34f
    22c8:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    22cc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    22d0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    22d4:	6470555f 	ldrbtvs	r5, [r0], #-1375	; 0x55f
    22d8:	52657461 	rsbpl	r7, r5, #1627389952	; 0x61000000
    22dc:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0x165
    22e0:	6f437473 	svcvs	0x00437473
    22e4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    22e8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    22ec:	6c65535f 	stclvs	3, cr5, [r5], #-380	; 0xfffffe84
    22f0:	43746365 	cmnmi	r4, #-1811939327	; 0x94000001
    22f4:	414d4443 	cmpmi	sp, r3, asr #8
    22f8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    22fc:	4d504f5f 	ldclmi	15, cr4, [r0, #-380]	; 0xfffffe84
    2300:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2304:	5f4d4954 	svcpl	0x004d4954
    2308:	4931434f 	ldmdbmi	r1!, {r0, r1, r2, r3, r6, r8, r9, lr}
    230c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2310:	5f4d4954 	svcpl	0x004d4954
    2314:	5031434f 	eorspl	r4, r1, pc, asr #6
    2318:	6f6c6572 	svcvs	0x006c6572
    231c:	6f436461 	svcvs	0x00436461
    2320:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2324:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2328:	3143495f 	cmpcc	r3, pc, asr r9
    232c:	616c6f50 	cmnvs	ip, r0, asr pc
    2330:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2334:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2338:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    233c:	74706143 	ldrbtvc	r6, [r0], #-323	; 0x143
    2340:	31657275 	smccc	22309	; 0x5725
    2344:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2348:	49434f5f 	stmdbmi	r3, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, lr}^
    234c:	53656c64 	cmnpl	r5, #100, 24	; 0x6400
    2350:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    2354:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2358:	72636d73 	rsbvc	r6, r3, #7360	; 0x1cc0
    235c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2360:	33434f5f 	movtcc	r4, #16223	; 0x3f5f
    2364:	74736146 	ldrbtvc	r6, [r3], #-326	; 0x146
    2368:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    236c:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2370:	00784d49 	rsbseq	r4, r8, r9, asr #26
    2374:	5f4d4954 	svcpl	0x004d4954
    2378:	63726f46 	cmnvs	r2, #280	; 0x118
    237c:	63416465 	movtvs	r6, #5221	; 0x1465
    2380:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2384:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2388:	3243495f 	subcc	r4, r3, #1556480	; 0x17c000
    238c:	616c6f50 	cmnvs	ip, r0, asr pc
    2390:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2394:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2398:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    239c:	50344349 	eorspl	r4, r4, r9, asr #6
    23a0:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    23a4:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    23a8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    23ac:	616c535f 	cmnvs	ip, pc, asr r3
    23b0:	6f4d6576 	svcvs	0x004d6576
    23b4:	54006564 	strpl	r6, [r0], #-1380	; 0x564
    23b8:	4f5f4d49 	svcmi	0x005f4d49
    23bc:	53495353 	movtpl	r5, #37715	; 0x9353
    23c0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    23c4:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    23c8:	00317263 	eorseq	r7, r1, r3, ror #4
    23cc:	5f4d4954 	svcpl	0x004d4954
    23d0:	4932434f 	ldmdbmi	r2!, {r0, r1, r2, r3, r6, r8, r9, lr}
    23d4:	0074696e 	rsbseq	r6, r4, lr, ror #18
    23d8:	5f4d4954 	svcpl	0x004d4954
    23dc:	43525445 	cmpmi	r2, #1157627904	; 0x45000000
    23e0:	6b636f6c 	blvs	18de198 <__Stack_Size+0x18ddd98>
    23e4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
    23e8:	6e6f4332 	mcrvs	3, 3, r4, cr15, cr2, {1}
    23ec:	00676966 	rsbeq	r6, r7, r6, ror #18
    23f0:	5f314954 	svcpl	0x00314954
    23f4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    23f8:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    23fc:	475f4d49 	ldrbmi	r4, [pc, -r9, asr #26]
    2400:	61437465 	cmpvs	r3, r5, ror #8
    2404:	72757470 	rsbsvc	r7, r5, #112, 8	; 0x70000000
    2408:	54003265 	strpl	r3, [r0], #-613	; 0x265
    240c:	475f4d49 	ldrbmi	r4, [pc, -r9, asr #26]
    2410:	61437465 	cmpvs	r3, r5, ror #8
    2414:	72757470 	rsbsvc	r7, r5, #112, 8	; 0x70000000
    2418:	54003365 	strpl	r3, [r0], #-869	; 0x365
    241c:	475f4d49 	ldrbmi	r4, [pc, -r9, asr #26]
    2420:	61437465 	cmpvs	r3, r5, ror #8
    2424:	72757470 	rsbsvc	r7, r5, #112, 8	; 0x70000000
    2428:	54003465 	strpl	r3, [r0], #-1125	; 0x465
    242c:	505f4d49 	subspl	r4, pc, r9, asr #26
    2430:	65736c75 	ldrbvs	r6, [r3, #-3189]!	; 0xc75
    2434:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2438:	414d445f 	cmpmi	sp, pc, asr r4
    243c:	73727542 	cmnvc	r2, #276824064	; 0x10800000
    2440:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    2444:	00687467 	rsbeq	r7, r8, r7, ror #8
    2448:	5f4d4954 	svcpl	0x004d4954
    244c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    2450:	74537475 	ldrbvc	r7, [r3], #-1141	; 0x475
    2454:	00657461 	rsbeq	r7, r5, r1, ror #8
    2458:	5f4d4954 	svcpl	0x004d4954
    245c:	4933434f 	ldmdbmi	r3!, {r0, r1, r2, r3, r6, r8, r9, lr}
    2460:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2464:	5f4d4954 	svcpl	0x004d4954
    2468:	61656c43 	cmnvs	r5, r3, asr #24
    246c:	34434f72 	strbcc	r4, [r3], #-3954	; 0xf72
    2470:	00666552 	rsbeq	r6, r6, r2, asr r5
    2474:	5f4d4954 	svcpl	0x004d4954
    2478:	78525449 	ldmdavc	r2, {r0, r3, r6, sl, ip, lr}^
    247c:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0x845
    2480:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    2484:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2488:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
    248c:	00676966 	rsbeq	r6, r7, r6, ror #18
    2490:	5f4d4954 	svcpl	0x004d4954
    2494:	43414d44 	movtmi	r4, #7492	; 0x1d44
    2498:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    249c:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    24a0:	44425f4d 	strbmi	r5, [r2], #-3917	; 0xf4d
    24a4:	6e495254 	mcrvs	2, 2, r5, cr9, cr4, {2}
    24a8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    24ac:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    24b0:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    24b4:	72656363 	rsbvc	r6, r5, #-1946157055	; 0x8c000001
    24b8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    24bc:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    24c0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    24c4:	7669446b 	strbtvc	r4, [r9], -fp, ror #8
    24c8:	6f697369 	svcvs	0x00697369
    24cc:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    24d0:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    24d4:	73614632 	cmnvc	r1, #52428800	; 0x3200000
    24d8:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    24dc:	00676966 	rsbeq	r6, r7, r6, ror #18
    24e0:	5f4d4954 	svcpl	0x004d4954
    24e4:	61657242 	cmnvs	r5, r2, asr #4
    24e8:	6c6f506b 	stclvs	0, cr5, [pc], #-428	; 2344 <__Stack_Size+0x1f44>
    24ec:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    24f0:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
    24f4:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    24f8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    24fc:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    2500:	72547475 	subsvc	r7, r4, #1962934272	; 0x75000000
    2504:	65676769 	strbvs	r6, [r7, #-1897]!	; 0x769
    2508:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    250c:	69545f4d 	ldmdbvs	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2510:	6142656d 	cmpvs	r2, sp, ror #10
    2514:	6e496573 	mcrvs	5, 2, r6, cr9, cr3, {3}
    2518:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    251c:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2520:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2524:	6c65535f 	stclvs	3, cr5, [r5], #-380	; 0xfffffe84
    2528:	4f746365 	svcmi	0x00746365
    252c:	004d7843 	subeq	r7, sp, r3, asr #16
    2530:	5f4d4954 	svcpl	0x004d4954
    2534:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    2538:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    253c:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
    2540:	76654c4b 	strbtvc	r4, [r5], -fp, asr #24
    2544:	54006c65 	strpl	r6, [r0], #-3173	; 0xc65
    2548:	535f4d49 	cmppl	pc, #4672	; 0x1240
    254c:	6f437465 	svcvs	0x00437465
    2550:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xe75
    2554:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2558:	6e455f4d 	cdpvs	15, 4, cr5, cr5, cr13, {2}
    255c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xf63
    2560:	646f4d72 	strbtvs	r4, [pc], #-3442	; 2568 <__Stack_Size+0x2168>
    2564:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2568:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    256c:	73657250 	cmnvc	r5, #80, 4
    2570:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
    2574:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2578:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    257c:	61656c43 	cmnvs	r5, r3, asr #24
    2580:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2584:	53505f4d 	cmppl	r0, #308	; 0x134
    2588:	6c655243 	sfmvs	f5, 2, [r5], #-268	; 0xfffffef4
    258c:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    2590:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2594:	5f4d4954 	svcpl	0x004d4954
    2598:	43784343 	cmnmi	r8, #201326593	; 0xc000001
    259c:	5400646d 	strpl	r6, [r0], #-1133	; 0x46d
    25a0:	475f4d49 	ldrbmi	r4, [pc, -r9, asr #26]
    25a4:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    25a8:	61637365 	cmnvs	r3, r5, ror #6
    25ac:	0072656c 	rsbseq	r6, r2, ip, ror #10
    25b0:	5f4d4954 	svcpl	0x004d4954
    25b4:	42414d44 	submi	r4, r1, #68, 26	; 0x1100
    25b8:	00657361 	rsbeq	r7, r5, r1, ror #6
    25bc:	5f4d4954 	svcpl	0x004d4954
    25c0:	52544442 	subspl	r4, r4, #1107296256	; 0x42000000
    25c4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    25c8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    25cc:	00666544 	rsbeq	r6, r6, r4, asr #10
    25d0:	5f4d4954 	svcpl	0x004d4954
    25d4:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0x553
    25d8:	61487463 	cmpvs	r8, r3, ror #8
    25dc:	65536c6c 	ldrbvs	r6, [r3, #-3180]	; 0xc6c
    25e0:	726f736e 	rsbvc	r7, pc, #-1207959551	; 0xb8000001
    25e4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    25e8:	6e65475f 	mcrvs	7, 3, r4, cr5, cr15, {2}
    25ec:	74617265 	strbtvc	r7, [r1], #-613	; 0x265
    25f0:	65764565 	ldrbvs	r4, [r6, #-1381]!	; 0x565
    25f4:	5400746e 	strpl	r7, [r0], #-1134	; 0x46e
    25f8:	535f4d49 	cmppl	pc, #4672	; 0x1240
    25fc:	43497465 	movtmi	r7, #37989	; 0x9465
    2600:	65725032 	ldrbvs	r5, [r2, #-50]!	; 0x32
    2604:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    2608:	54007265 	strpl	r7, [r0], #-613	; 0x265
    260c:	455f4d49 	ldrbmi	r4, [pc, #-3401]	; 18cb <__Stack_Size+0x14cb>
    2610:	646f636e 	strbtvs	r6, [pc], #-878	; 2618 <__Stack_Size+0x2218>
    2614:	6e497265 	cdpvs	2, 4, cr7, cr9, cr5, {3}
    2618:	66726574 			; <UNDEFINED> instruction: 0x66726574
    261c:	43656361 	cmnmi	r5, #-2080374783	; 0x84000001
    2620:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2624:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2628:	43435f4d 	movtmi	r5, #16205	; 0x3f4d
    262c:	54004e78 	strpl	r4, [r0], #-3704	; 0xe78
    2630:	425f4d49 	subsmi	r4, pc, #4672	; 0x1240
    2634:	6b616572 	blvs	185bc04 <__Stack_Size+0x185b804>
    2638:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    263c:	4e434f5f 	mcrmi	15, 2, r4, cr3, cr15, {2}
    2640:	616c6f50 	cmnvs	ip, r0, asr pc
    2644:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2648:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    264c:	7849545f 	stmdavc	r9, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
    2650:	65747845 	ldrbvs	r7, [r4, #-2117]!	; 0x845
    2654:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    2658:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    265c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    2660:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2664:	70555f4d 	subsvc	r5, r5, sp, asr #30
    2668:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0x164
    266c:	61736944 	cmnvs	r3, r4, asr #18
    2670:	43656c62 	cmnmi	r5, #25088	; 0x6200
    2674:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2678:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    267c:	70555f4d 	subsvc	r5, r5, sp, asr #30
    2680:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0x164
    2684:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    2688:	54006563 	strpl	r6, [r0], #-1379	; 0x563
    268c:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    2690:	696e4943 	stmdbvs	lr!, {r0, r1, r6, r8, fp, lr}^
    2694:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    2698:	00746375 	rsbseq	r6, r4, r5, ror r3
    269c:	5f334954 	svcpl	0x00334954
    26a0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    26a4:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    26a8:	435f4d49 	cmpmi	pc, #4672	; 0x1240
    26ac:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    26b0:	6f4d7265 	svcvs	0x004d7265
    26b4:	6f436564 	svcvs	0x00436564
    26b8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    26bc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    26c0:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    26c4:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    26c8:	33657261 	cmncc	r5, #268435462	; 0x10000006
    26cc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    26d0:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    26d4:	434f7261 	movtmi	r7, #62049	; 0xf261
    26d8:	66655233 			; <UNDEFINED> instruction: 0x66655233
    26dc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    26e0:	34434f5f 	strbcc	r4, [r3], #-3935	; 0xf5f
    26e4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    26e8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    26ec:	726f465f 	rsbvc	r4, pc, #99614720	; 0x5f00000
    26f0:	4f646563 	svcmi	0x00646563
    26f4:	6f433443 	svcvs	0x00433443
    26f8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    26fc:	62696c00 	rsbvs	r6, r9, #0, 24
    2700:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2704:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    2708:	31663233 	cmncc	r6, r3, lsr r2
    270c:	745f7830 	ldrbvc	r7, [pc], #-2096	; 2714 <__Stack_Size+0x2314>
    2710:	632e6d69 	teqvs	lr, #6720	; 0x1a40
    2714:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2718:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    271c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2720:	00726574 	rsbseq	r6, r2, r4, ror r5
    2724:	5f4d4954 	svcpl	0x004d4954
    2728:	6e49434f 	cdpvs	3, 4, cr4, cr9, cr15, {2}
    272c:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2730:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2734:	74784500 	ldrbtvc	r4, [r8], #-1280	; 0x500
    2738:	46475254 			; <UNDEFINED> instruction: 0x46475254
    273c:	65746c69 	ldrbvs	r6, [r4, #-3177]!	; 0xc69
    2740:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2744:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    2748:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    274c:	76616c53 			; <UNDEFINED> instruction: 0x76616c53
    2750:	646f4d65 	strbtvs	r4, [pc], #-3429	; 2758 <__Stack_Size+0x2358>
    2754:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    2758:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    275c:	73614631 	cmnvc	r1, #51380224	; 0x3100000
    2760:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    2764:	00676966 	rsbeq	r6, r7, r6, ror #18
    2768:	5f4d4954 	svcpl	0x004d4954
    276c:	494e434f 	stmdbmi	lr, {r0, r1, r2, r3, r6, r8, r9, lr}^
    2770:	53656c64 	cmnpl	r5, #100, 24	; 0x6400
    2774:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    2778:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    277c:	5254455f 	subspl	r4, r4, #398458880	; 0x17c00000
    2780:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2784:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2788:	4f5f4d49 	svcmi	0x005f4d49
    278c:	504e3143 	subpl	r3, lr, r3, asr #2
    2790:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    2794:	43797469 	cmnmi	r9, #1761607680	; 0x69000000
    2798:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    279c:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    27a0:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    27a4:	00435350 	subeq	r5, r3, r0, asr r3
    27a8:	5f4d4954 	svcpl	0x004d4954
    27ac:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    27b0:	756f5374 	strbvc	r5, [pc, #-884]!	; 2444 <__Stack_Size+0x2044>
    27b4:	00656372 	rsbeq	r6, r5, r2, ror r3
    27b8:	63706d74 	cmnvs	r0, #116, 26	; 0x1d00
    27bc:	31726d63 	cmncc	r2, r3, ror #26
    27c0:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    27c4:	726d6363 	rsbvc	r6, sp, #-1946157055	; 0x8c000001
    27c8:	49540032 	ldmdbmi	r4, {r1, r4, r5}^
    27cc:	68435f4d 	stmdavs	r3, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    27d0:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xe61
    27d4:	4954006c 	ldmdbmi	r4, {r2, r3, r5, r6}^
    27d8:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    27dc:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    27e0:	004d4f43 	subeq	r4, sp, r3, asr #30
    27e4:	5f4d4954 	svcpl	0x004d4954
    27e8:	72504343 	subsvc	r4, r0, #201326593	; 0xc000001
    27ec:	616f6c65 	cmnvs	pc, r5, ror #24
    27f0:	6e6f4364 	cdpvs	3, 6, cr4, cr15, cr4, {3}
    27f4:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 262c <__Stack_Size+0x222c>
    27f8:	6f636900 	svcvs	0x00636900
    27fc:	736f7070 	cmnvc	pc, #112	; 0x70
    2800:	73657469 	cmnvc	r5, #1761607680	; 0x69000000
    2804:	63656c65 	cmnvs	r5, #25856	; 0x6500
    2808:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    280c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2810:	746e495f 	strbtvc	r4, [lr], #-2399	; 0x95f
    2814:	616e7265 	cmnvs	lr, r5, ror #4
    2818:	6f6c436c 	svcvs	0x006c436c
    281c:	6f436b63 	svcvs	0x00436b63
    2820:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2824:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2828:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    282c:	50314349 	eorspl	r4, r1, r9, asr #6
    2830:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    2834:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    2838:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    283c:	7843435f 	stmdavc	r3, {r0, r1, r2, r3, r4, r6, r8, r9, lr}^
    2840:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2844:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2848:	50334349 	eorspl	r4, r3, r9, asr #6
    284c:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
    2850:	72656c61 	rsbvc	r6, r5, #24832	; 0x6100
    2854:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2858:	5343495f 	movtpl	r4, #14687	; 0x395f
    285c:	63656c65 	cmnvs	r5, #25856	; 0x6500
    2860:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2864:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2868:	5254455f 	subspl	r4, r4, #398458880	; 0x17c00000
    286c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2870:	646f4d6b 	strbtvs	r4, [pc], #-3435	; 2878 <__Stack_Size+0x2478>
    2874:	6f433165 	svcvs	0x00433165
    2878:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    287c:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2880:	726d6363 	rsbvc	r6, sp, #-1946157055	; 0x8c000001
    2884:	49540078 	ldmdbmi	r4, {r3, r4, r5, r6}^
    2888:	65535f4d 	ldrbvs	r5, [r3, #-3917]	; 0xf4d
    288c:	7463656c 	strbtvc	r6, [r3], #-1388	; 0x56c
    2890:	50656e4f 	rsbpl	r6, r5, pc, asr #28
    2894:	65736c75 	ldrbvs	r6, [r3, #-3189]!	; 0xc75
    2898:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
    289c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    28a0:	4d434f5f 	stclmi	15, cr4, [r3, #-380]	; 0xfffffe84
    28a4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    28a8:	5f4d4954 	svcpl	0x004d4954
    28ac:	4f475254 	svcmi	0x00475254
    28b0:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    28b4:	54006563 	strpl	r6, [r0], #-1379	; 0x563
    28b8:	4f5f4d49 	svcmi	0x005f4d49
    28bc:	53525353 	cmppl	r2, #1275068417	; 0x4c000001
    28c0:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0x174
    28c4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    28c8:	5043495f 	subpl	r4, r3, pc, asr r9
    28cc:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    28d0:	00797469 	rsbseq	r7, r9, r9, ror #8
    28d4:	5f4d4954 	svcpl	0x004d4954
    28d8:	6c727443 	cfldrdvs	mvd7, [r2], #-268	; 0xfffffef4
    28dc:	4f4d5750 	svcmi	0x004d5750
    28e0:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0x475
    28e4:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    28e8:	70706f63 	rsbsvc	r6, r0, r3, ror #30
    28ec:	7469736f 	strbtvc	r7, [r9], #-879	; 0x36f
    28f0:	6c6f7065 	stclvs	0, cr7, [pc], #-404	; 2764 <__Stack_Size+0x2364>
    28f4:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    28f8:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
    28fc:	44425f4d 	strbmi	r5, [r2], #-3917	; 0xf4d
    2900:	6f435254 	svcvs	0x00435254
    2904:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2908:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    290c:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2910:	434f7261 	movtmi	r7, #62049	; 0xf261
    2914:	66655232 			; <UNDEFINED> instruction: 0x66655232
    2918:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    291c:	5252415f 	subspl	r4, r2, #-1073741801	; 0xc0000017
    2920:	6c657250 	sfmvs	f7, 2, [r5], #-320	; 0xfffffec0
    2924:	4364616f 	cmnmi	r4, #-1073741797	; 0xc000001b
    2928:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    292c:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2930:	49545f4d 	ldmdbmi	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2934:	74784578 	ldrbtvc	r4, [r8], #-1400	; 0x578
    2938:	616e7265 	cmnvs	lr, r5, ror #4
    293c:	6f6c436c 	svcvs	0x006c436c
    2940:	6f436b63 	svcvs	0x00436b63
    2944:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2948:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    294c:	73614d5f 	cmnvc	r1, #6080	; 0x17c0
    2950:	53726574 	cmnpl	r2, #116, 10	; 0x1d000000
    2954:	6576616c 	ldrbvs	r6, [r6, #-364]!	; 0x16c
    2958:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
    295c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2960:	7475415f 	ldrbtvc	r4, [r5], #-351	; 0x15f
    2964:	74616d6f 	strbtvc	r6, [r1], #-3439	; 0xd6f
    2968:	754f6369 	strbvc	r6, [pc, #-873]	; 2607 <__Stack_Size+0x2207>
    296c:	74757074 	ldrbtvc	r7, [r5], #-116	; 0x74
    2970:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2974:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2978:	6f747541 	svcvs	0x00747541
    297c:	6f6c6572 	svcvs	0x006c6572
    2980:	54006461 	strpl	r6, [r0], #-1121	; 0x461
    2984:	4f5f4d49 	svcmi	0x005f4d49
    2988:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0x475
    298c:	74534e74 	ldrbvc	r4, [r3], #-3700	; 0xe74
    2990:	00657461 	rsbeq	r7, r5, r1, ror #8
    2994:	5f4d4954 	svcpl	0x004d4954
    2998:	43414d44 	movtmi	r4, #7492	; 0x1d44
    299c:	5400646d 	strpl	r6, [r0], #-1133	; 0x46d
    29a0:	545f4d49 	ldrbpl	r4, [pc], #-3401	; 29a8 <__Stack_Size+0x25a8>
    29a4:	42656d69 	rsbmi	r6, r5, #6720	; 0x1a40
    29a8:	53657361 	cmnpl	r5, #-2080374783	; 0x84000001
    29ac:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    29b0:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    29b4:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
    29b8:	6f465f4d 	svcvs	0x00465f4d
    29bc:	64656372 	strbtvs	r6, [r5], #-882	; 0x372
    29c0:	4331434f 	teqmi	r1, #1006632961	; 0x3c000001
    29c4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    29c8:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    29cc:	6f435f34 	svcvs	0x00435f34
    29d0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    29d4:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    29d8:	6165445f 	cmnvs	r5, pc, asr r4
    29dc:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    29e0:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
    29e4:	65445f4d 	strbvs	r5, [r4, #-3917]	; 0xf4d
    29e8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    29ec:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    29f0:	32434f5f 	subcc	r4, r3, #380	; 0x17c
    29f4:	6c6f504e 	stclvs	0, cr5, [pc], #-312	; 28c4 <__Stack_Size+0x24c4>
    29f8:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    29fc:	6e6f4379 	mcrvs	3, 3, r4, cr15, cr9, {3}
    2a00:	00676966 	rsbeq	r6, r7, r6, ror #18
    2a04:	5f4d4954 	svcpl	0x004d4954
    2a08:	5034434f 	eorspl	r4, r4, pc, asr #6
    2a0c:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    2a10:	43797469 	cmnmi	r9, #1761607680	; 0x69000000
    2a14:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2a18:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
    2a1c:	44425f4d 	strbmi	r5, [r2], #-3917	; 0xf4d
    2a20:	74535254 	ldrbvc	r5, [r3], #-596	; 0x254
    2a24:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2a28:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2a2c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2a30:	656c435f 	strbvs	r4, [ip, #-863]!	; 0x35f
    2a34:	434f7261 	movtmi	r7, #62049	; 0xf261
    2a38:	66655231 			; <UNDEFINED> instruction: 0x66655231
    2a3c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2a40:	33434f5f 	movtcc	r4, #16223	; 0x3f5f
    2a44:	616c6f50 	cmnvs	ip, r0, asr pc
    2a48:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2a4c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2a50:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2a54:	455f4d49 	ldrbmi	r4, [pc, #-3401]	; 1d13 <__Stack_Size+0x1913>
    2a58:	52547478 	subspl	r7, r4, #120, 8	; 0x78000000
    2a5c:	6c6f5047 	stclvs	0, cr5, [pc], #-284	; 2948 <__Stack_Size+0x2548>
    2a60:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    2a64:	49540079 	ldmdbmi	r4, {r0, r3, r4, r5, r6}^
    2a68:	57505f4d 	ldrbpl	r5, [r0, -sp, asr #30]
    2a6c:	6f43494d 	svcvs	0x0043494d
    2a70:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2a74:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2a78:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2a7c:	74535449 	ldrbvc	r5, [r3], #-1097	; 0x449
    2a80:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2a84:	706d7400 	rsbvc	r7, sp, r0, lsl #8
    2a88:	00327263 	eorseq	r7, r2, r3, ror #4
    2a8c:	5f4d4954 	svcpl	0x004d4954
    2a90:	54005449 	strpl	r5, [r0], #-1097	; 0x449
    2a94:	465f4d49 	ldrbmi	r4, [pc], -r9, asr #26
    2a98:	6563726f 	strbvs	r7, [r3, #-623]!	; 0x26f
    2a9c:	33434f64 	movtcc	r4, #16228	; 0x3f64
    2aa0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2aa4:	54006769 	strpl	r6, [r0], #-1897	; 0x769
    2aa8:	495f4d49 	ldmdbmi	pc, {r0, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    2aac:	696e4943 	stmdbvs	lr!, {r0, r1, r6, r8, fp, lr}^
    2ab0:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
    2ab4:	43495f4d 	movtmi	r5, #40781	; 0x9f4d
    2ab8:	746c6946 	strbtvc	r6, [ip], #-2374	; 0x946
    2abc:	54007265 	strpl	r7, [r0], #-613	; 0x265
    2ac0:	445f4d49 	ldrbmi	r4, [pc], #-3401	; 2ac8 <__Stack_Size+0x26c8>
    2ac4:	6f53414d 	svcvs	0x0053414d
    2ac8:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
    2acc:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    2ad0:	6c65535f 	stclvs	3, cr5, [r5], #-380	; 0xfffffe84
    2ad4:	4d746365 	ldclmi	3, cr6, [r4, #-404]!	; 0xfffffe6c
    2ad8:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0x361
    2adc:	616c5372 	smcvs	50482	; 0xc532
    2ae0:	6f4d6576 	svcvs	0x004d6576
    2ae4:	54006564 	strpl	r6, [r0], #-1380	; 0x564
    2ae8:	535f4d49 	cmppl	pc, #4672	; 0x1240
    2aec:	63656c65 	cmnvs	r5, #25856	; 0x6500
    2af0:	706e4974 	rsbvc	r4, lr, r4, ror r9
    2af4:	72547475 	subsvc	r7, r4, #1962934272	; 0x75000000
    2af8:	65676769 	strbvs	r6, [r7, #-1897]!	; 0x769
    2afc:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
    2b00:	434f5f4d 	movtmi	r5, #65357	; 0xff4d
    2b04:	6c6f5032 	stclvs	0, cr5, [pc], #-200	; 2a44 <__Stack_Size+0x2644>
    2b08:	74697261 	strbtvc	r7, [r9], #-609	; 0x261
    2b0c:	6e6f4379 	mcrvs	3, 3, r4, cr15, cr9, {3}
    2b10:	00676966 	rsbeq	r6, r7, r6, ror #18
    2b14:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
    2b18:	5f6b6369 	svcpl	0x006b6369
    2b1c:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    2b20:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    2b24:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
    2b28:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    2b2c:	732f6372 	teqvc	pc, #-939524095	; 0xc8000001
    2b30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2b34:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2b38:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2b3c:	6b636974 	blvs	18dd114 <__Stack_Size+0x18dcd14>
    2b40:	5300632e 	movwpl	r6, #814	; 0x32e
    2b44:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2b48:	535f6b63 	cmppl	pc, #101376	; 0x18c00
    2b4c:	65527465 	ldrbvs	r7, [r2, #-1125]	; 0x465
    2b50:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xf6c
    2b54:	73795300 	cmnvc	r9, #0, 6
    2b58:	6b636954 	blvs	18dd0b0 <__Stack_Size+0x18dccb0>
    2b5c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0x75f
    2b60:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    2b64:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    2b68:	53007375 	movwpl	r7, #885	; 0x375
    2b6c:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2b70:	465f6b63 	ldrbmi	r6, [pc], -r3, ror #22
    2b74:	0047414c 	subeq	r4, r7, ip, asr #2
    2b78:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
    2b7c:	79530042 	ldmdbvc	r3, {r1, r6}^
    2b80:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2b84:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2b88:	65446570 	strbvs	r6, [r4, #-1392]	; 0x570
    2b8c:	54430066 	strbpl	r0, [r3], #-102	; 0x66
    2b90:	53004c52 	movwpl	r4, #3154	; 0xc52
    2b94:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2b98:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
    2b9c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    2ba0:	53007265 	movwpl	r7, #613	; 0x265
    2ba4:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2ba8:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
    2bac:	6f534b4c 	svcvs	0x00534b4c
    2bb0:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
    2bb4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2bb8:	76006769 	strvc	r6, [r0], -r9, ror #14
    2bbc:	32336375 	eorscc	r6, r3, #-738197503	; 0xd4000001
    2bc0:	414f4c00 	cmpmi	pc, r0, lsl #24
    2bc4:	79530044 	ldmdbvc	r3, {r2, r6}^
    2bc8:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    2bcc:	4c435f6b 	mcrrmi	15, 6, r5, r3, cr11
    2bd0:	756f534b 	strbvc	r5, [pc, #-843]!	; 288d <__Stack_Size+0x248d>
    2bd4:	00656372 	rsbeq	r6, r5, r2, ror r3
    2bd8:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0x953
    2bdc:	5f6b6369 	svcpl	0x006b6369
    2be0:	6f435449 	svcvs	0x00435449
    2be4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2be8:	746e6900 	strbtvc	r6, [lr], #-2304	; 0x900
    2bec:	72656765 	rsbvc	r6, r5, #26476544	; 0x1940000
    2bf0:	69766964 	ldmdbvs	r6!, {r2, r5, r6, r8, fp, sp, lr}^
    2bf4:	00726564 	rsbseq	r6, r2, r4, ror #10
    2bf8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2bfc:	50435f54 	subpl	r5, r3, r4, asr pc
    2c00:	55004148 	strpl	r4, [r0, #-328]	; 0x148
    2c04:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2c08:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2c0c:	73657250 	cmnvc	r5, #80, 4
    2c10:	656c6163 	strbvs	r6, [ip, #-355]!	; 0x163
    2c14:	53550072 	cmppl	r5, #114	; 0x72
    2c18:	5f545241 	svcpl	0x00545241
    2c1c:	424e494c 	submi	r4, lr, #76, 18	; 0x130000
    2c20:	6b616572 	blvs	185c1f0 <__Stack_Size+0x185bdf0>
    2c24:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0x544
    2c28:	654c7463 	strbvs	r7, [ip, #-1123]	; 0x463
    2c2c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2c30:	41535500 	cmpmi	r3, r0, lsl #10
    2c34:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    2c38:	6b636f6c 	blvs	18de9f0 <__Stack_Size+0x18de5f0>
    2c3c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2c40:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    2c44:	00666544 	rsbeq	r6, r6, r4, asr #10
    2c48:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2c4c:	65535f54 	ldrbvs	r5, [r3, #-3924]	; 0xf54
    2c50:	6144646e 	cmpvs	r4, lr, ror #8
    2c54:	55006174 	strpl	r6, [r0, #-372]	; 0x174
    2c58:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2c5c:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    2c60:	70754466 	rsbsvc	r4, r5, r6, ror #8
    2c64:	4378656c 	cmnmi	r8, #108, 10	; 0x1b000000
    2c68:	5500646d 	strpl	r6, [r0, #-1133]	; 0x46d
    2c6c:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2c70:	6b61575f 	blvs	18589f4 <__Stack_Size+0x18585f4>
    2c74:	00705565 	rsbseq	r5, r0, r5, ror #10
    2c78:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2c7c:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    2c80:	646d4341 	strbtvs	r4, [sp], #-833	; 0x341
    2c84:	41535500 	cmpmi	r3, r0, lsl #10
    2c88:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    2c8c:	53550054 	cmppl	r5, #84	; 0x54
    2c90:	5f545241 	svcpl	0x00545241
    2c94:	41447249 	cmpmi	r4, r9, asr #4
    2c98:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xf4d
    2c9c:	62706100 	rsbsvs	r6, r0, #0, 2
    2ca0:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    2ca4:	5355006b 	cmppl	r5, #107	; 0x6b
    2ca8:	5f545241 	svcpl	0x00545241
    2cac:	61656c43 	cmnvs	r5, r3, asr #24
    2cb0:	50544972 	subspl	r4, r4, r2, ror r9
    2cb4:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2cb8:	6942676e 	stmdbvs	r2, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2cbc:	53550074 	cmppl	r5, #116	; 0x74
    2cc0:	5f545241 	svcpl	0x00545241
    2cc4:	72617547 	rsbvc	r7, r1, #297795584	; 0x11c00000
    2cc8:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    2ccc:	53550065 	cmppl	r5, #101	; 0x65
    2cd0:	5f545241 	svcpl	0x00545241
    2cd4:	424e494c 	submi	r4, lr, #76, 18	; 0x130000
    2cd8:	6b616572 	blvs	185c2a8 <__Stack_Size+0x185bea8>
    2cdc:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0x544
    2ce0:	654c7463 	strbvs	r7, [ip, #-1123]	; 0x463
    2ce4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2ce8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2cec:	55006769 	strpl	r6, [r0, #-1897]	; 0x769
    2cf0:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2cf4:	414c465f 	cmpmi	ip, pc, asr r6
    2cf8:	53550047 	cmppl	r5, #71	; 0x47
    2cfc:	5f545241 	svcpl	0x00545241
    2d00:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2d04:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
    2d08:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
    2d0c:	00746375 	rsbseq	r6, r4, r5, ror r3
    2d10:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2d14:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    2d18:	71655241 	cmnvc	r5, r1, asr #4
    2d1c:	41535500 	cmpmi	r3, r0, lsl #10
    2d20:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    2d24:	6b636f6c 	blvs	18deadc <__Stack_Size+0x18de6dc>
    2d28:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0x453
    2d2c:	6e497463 	cdpvs	4, 4, cr7, cr9, cr3, {3}
    2d30:	75007469 	strvc	r7, [r0, #-1129]	; 0x469
    2d34:	74726173 	ldrbtvc	r6, [r2], #-371	; 0x173
    2d38:	73616278 	cmnvc	r1, #120, 4	; 0x80000007
    2d3c:	43520065 	cmpmi	r2, #101	; 0x65
    2d40:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
    2d44:	736b636f 	cmnvc	fp, #-1140850687	; 0xbc000001
    2d48:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    2d4c:	55007375 	strpl	r7, [r0, #-885]	; 0x375
    2d50:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2d54:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    2d58:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    2d5c:	00737365 	rsbseq	r7, r3, r5, ror #6
    2d60:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2d64:	65535f54 	ldrbvs	r5, [r3, #-3924]	; 0xf54
    2d68:	61754774 	cmnvs	r5, r4, ror r7
    2d6c:	69546472 	ldmdbvs	r4, {r1, r4, r5, r6, sl, sp, lr}^
    2d70:	5500656d 	strpl	r6, [r0, #-1389]	; 0x56d
    2d74:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2d78:	6e65535f 	mcrvs	3, 3, r5, cr5, cr15, {2}
    2d7c:	65724264 	ldrbvs	r4, [r2, #-612]!	; 0x264
    2d80:	55006b61 	strpl	r6, [r0, #-2913]	; 0xb61
    2d84:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2d88:	696c0078 	stmdbvs	ip!, {r3, r4, r5, r6}^
    2d8c:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    2d90:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xf63
    2d94:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2d98:	5f783031 	svcpl	0x00783031
    2d9c:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
    2da0:	00632e74 	rsbeq	r2, r3, r4, ror lr
    2da4:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2da8:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
    2dac:	74537469 	ldrbvc	r7, [r3], #-1129	; 0x469
    2db0:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2db4:	41535500 	cmpmi	r3, r0, lsl #10
    2db8:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    2dbc:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    2dc0:	62007373 	andvs	r7, r0, #-872415231	; 0xcc000001
    2dc4:	6f707469 	svcvs	0x00707469
    2dc8:	53550073 	cmppl	r5, #115	; 0x73
    2dcc:	5f545241 	svcpl	0x00545241
    2dd0:	61656c43 	cmnvs	r5, r3, asr #24
    2dd4:	616c4672 	smcvs	50274	; 0xc462
    2dd8:	53550067 	cmppl	r5, #103	; 0x67
    2ddc:	5f545241 	svcpl	0x00545241
    2de0:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    2de4:	61745354 	cmnvs	r4, r4, asr r3
    2de8:	00737574 	rsbseq	r7, r3, r4, ror r5
    2dec:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2df0:	72495f54 	subvc	r5, r9, #84, 30	; 0x150
    2df4:	6f434144 	svcvs	0x00434144
    2df8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    2dfc:	41535500 	cmpmi	r3, r0, lsl #10
    2e00:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    2e04:	6b636f6c 	blvs	18debbc <__Stack_Size+0x18de7bc>
    2e08:	41535500 	cmpmi	r3, r0, lsl #10
    2e0c:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    2e10:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    2e14:	57726576 			; <UNDEFINED> instruction: 0x57726576
    2e18:	55656b61 	strbpl	r6, [r5, #-2913]!	; 0xb61
    2e1c:	646d4370 	strbtvs	r4, [sp], #-880	; 0x370
    2e20:	41535500 	cmpmi	r3, r0, lsl #10
    2e24:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    2e28:	43414472 	movtmi	r4, #5234	; 0x1472
    2e2c:	5500646d 	strpl	r6, [r0, #-1133]	; 0x46d
    2e30:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2e34:	4e494c5f 	mcrmi	12, 2, r4, cr9, cr15, {2}
    2e38:	00646d43 	rsbeq	r6, r4, r3, asr #26
    2e3c:	63617266 	cmnvs	r1, #1610612742	; 0x60000006
    2e40:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
    2e44:	69646c61 	stmdbvs	r4!, {r0, r5, r6, sl, fp, sp, lr}^
    2e48:	65646976 	strbvs	r6, [r4, #-2422]!	; 0x976
    2e4c:	53550072 	cmppl	r5, #114	; 0x72
    2e50:	5f545241 	svcpl	0x00545241
    2e54:	72616d53 	rsbvc	r6, r1, #5312	; 0x14c0
    2e58:	72614374 	rsbvc	r4, r1, #116, 6	; 0xd0000001
    2e5c:	43414e64 	movtmi	r4, #7780	; 0x1e64
    2e60:	646d434b 	strbtvs	r4, [sp], #-843	; 0x34b
    2e64:	41535500 	cmpmi	r3, r0, lsl #10
    2e68:	475f5452 			; <UNDEFINED> instruction: 0x475f5452
    2e6c:	6c467465 	cfstrdvs	mvd7, [r6], {101}	; 0x65
    2e70:	74536761 	ldrbvc	r6, [r3], #-1889	; 0x761
    2e74:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    2e78:	41535500 	cmpmi	r3, r0, lsl #10
    2e7c:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    2e80:	7472616d 	ldrbtvc	r6, [r2], #-365	; 0x16d
    2e84:	64726143 	ldrbtvs	r6, [r2], #-323	; 0x143
    2e88:	00646d43 	rsbeq	r6, r4, r3, asr #26
    2e8c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2e90:	6c435f54 	mcrrvs	15, 5, r5, r3, cr4
    2e94:	496b636f 	stmdbmi	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2e98:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2e9c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2ea0:	61575f54 	cmpvs	r7, r4, asr pc
    2ea4:	7055656b 	subsvc	r6, r5, fp, ror #10
    2ea8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2eac:	55006769 	strpl	r6, [r0, #-1897]	; 0x769
    2eb0:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2eb4:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0x5f
    2eb8:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    2ebc:	55007265 	strpl	r7, [r0, #-613]	; 0x265
    2ec0:	54524153 	ldrbpl	r4, [r2], #-339	; 0x153
    2ec4:	4f50435f 	svcmi	0x0050435f
    2ec8:	7469004c 	strbtvc	r0, [r9], #-76	; 0x4c
    2ecc:	6b73616d 	blvs	1cdb488 <__Stack_Size+0x1cdb088>
    2ed0:	41535500 	cmpmi	r3, r0, lsl #10
    2ed4:	4c5f5452 	cfldrdmi	mvd5, [pc], {82}	; 0x52
    2ed8:	42747361 	rsbsmi	r7, r4, #-2080374783	; 0x84000001
    2edc:	75007469 	strvc	r7, [r0, #-1129]	; 0x469
    2ee0:	74726173 	ldrbtvc	r6, [r2], #-371	; 0x173
    2ee4:	00676572 	rsbeq	r6, r7, r2, ror r5
    2ee8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
    2eec:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xf54
    2ef0:	74637572 	strbtvc	r7, [r3], #-1394	; 0x572
    2ef4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xe49
    2ef8:	62655f00 	rsbvs	r5, r5, #0, 30
    2efc:	5f007373 	svcpl	0x00007373
    2f00:	61747365 	cmnvs	r4, r5, ror #6
    2f04:	6c006b63 	stcvs	11, cr6, [r0], {99}	; 0x63
    2f08:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    2f0c:	732f6372 	teqvc	pc, #-939524095	; 0xc8000001
    2f10:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    2f14:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
    2f18:	6365765f 	cmnvs	r5, #99614720	; 0x5f00000
    2f1c:	2e726f74 	mrccs	15, 3, r6, cr2, cr4, {3}
    2f20:	75700063 	ldrbvc	r0, [r0, #-99]!	; 0x63
    2f24:	7365446c 	cmnvc	r5, #108, 8	; 0x6c000000
    2f28:	735f0074 	cmpvc	pc, #116	; 0x74
    2f2c:	74616469 	strbtvc	r6, [r1], #-1129	; 0x469
    2f30:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0x61
    2f34:	6372536c 	cmnvs	r2, #108, 6	; 0xb0000001
    2f38:	73655200 	cmnvc	r5, #0, 4
    2f3c:	485f7465 	ldmdami	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    2f40:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2f44:	67007265 	strvs	r7, [r0, -r5, ror #4]
    2f48:	6e66705f 	mcrvs	0, 3, r7, cr6, cr15, {2}
    2f4c:	74636556 	strbtvc	r6, [r3], #-1366	; 0x556
    2f50:	0073726f 	rsbseq	r7, r3, pc, ror #4
    2f54:	6164735f 	cmnvs	r4, pc, asr r3
    2f58:	5f006174 	svcpl	0x00006174
    2f5c:	73736273 	cmnvc	r3, #805306375	; 0x30000007
    2f60:	64655f00 	strbtvs	r5, [r5], #-3840	; 0xf00
    2f64:	00617461 	rsbeq	r7, r1, r1, ror #8
    2f68:	65766153 	ldrbvs	r6, [r6, #-339]!	; 0x153
    2f6c:	74617453 	strbtvc	r7, [r1], #-1107	; 0x453
    2f70:	55700065 	ldrbpl	r0, [r0, #-101]!	; 0x65
    2f74:	5f726573 	svcpl	0x00726573
    2f78:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    2f7c:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    2f80:	7165525f 	cmnvc	r5, pc, asr r2
    2f84:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0x575
    2f88:	696c0073 	stmdbvs	ip!, {r0, r1, r4, r5, r6}^
    2f8c:	53552f62 	cmppl	r5, #392	; 0x188
    2f90:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    2f94:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    2f98:	73752f63 	cmnvc	r5, #396	; 0x18c
    2f9c:	6e695f62 	cdpvs	15, 6, cr5, cr9, cr2, {3}
    2fa0:	632e7469 	teqvs	lr, #1761607680	; 0x69000000
    2fa4:	69504500 	ldmdbvs	r0, {r8, sl, lr}^
    2fa8:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2fac:	42535500 	subsmi	r5, r3, #0, 10
    2fb0:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    2fb4:	50700074 	rsbspl	r0, r0, r4, ror r0
    2fb8:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xf72
    2fbc:	00797472 	rsbseq	r7, r9, r2, ror r4
    2fc0:	4e4f435f 	mcrmi	3, 2, r4, cr15, cr15, {2}
    2fc4:	4c4f5254 	sfmmi	f5, 2, [pc], {84}	; 0x54
    2fc8:	4154535f 	cmpmi	r4, pc, asr r3
    2fcc:	5f004554 	svcpl	0x00004554
    2fd0:	43534544 	cmpmi	r3, #68, 10	; 0x11000000
    2fd4:	54504952 	ldrbpl	r4, [r0], #-2386	; 0x952
    2fd8:	545f524f 	ldrbpl	r5, [pc], #-591	; 2fe0 <__Stack_Size+0x2be0>
    2fdc:	00455059 	subeq	r5, r5, r9, asr r0
    2fe0:	2f62696c 	svccs	0x0062696c
    2fe4:	5f425355 	svcpl	0x00425355
    2fe8:	2f62696c 	svccs	0x0062696c
    2fec:	2f637273 	svccs	0x00637273
    2ff0:	5f627375 	svcpl	0x00627375
    2ff4:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xf63
    2ff8:	5300632e 	movwpl	r6, #814	; 0x32e
    2ffc:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    3000:	5f647261 	svcpl	0x00647261
    3004:	61656c43 	cmnvs	r5, r3, asr #24
    3008:	61654672 	smcvs	21602	; 0x5462
    300c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    3010:	53414c00 	movtpl	r4, #7168	; 0x1c00
    3014:	554f5f54 	strbpl	r5, [pc, #-3924]	; 20c8 <__Stack_Size+0x1cc8>
    3018:	41445f54 	cmpmi	r4, r4, asr pc
    301c:	4f004154 	svcmi	0x00004154
    3020:	5f307475 	svcpl	0x00307475
    3024:	636f7250 	cmnvs	pc, #80, 4
    3028:	00737365 	rsbseq	r7, r3, r5, ror #6
    302c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    3030:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    3034:	75427000 	strbvc	r7, [r2, #-0]
    3038:	65470066 	strbvs	r0, [r7, #-102]	; 0x66
    303c:	52504574 	subspl	r4, r0, #116, 10	; 0x1d000000
    3040:	64644178 	strbtvs	r4, [r4], #-376	; 0x178
    3044:	74530072 	ldrbvc	r0, [r3], #-114	; 0x72
    3048:	61646e61 	cmnvs	r4, r1, ror #28
    304c:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    3050:	6f437465 	svcvs	0x00437465
    3054:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    3058:	74617275 	strbtvc	r7, [r1], #-629	; 0x275
    305c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    3060:	464e4f43 	strbmi	r4, [lr], -r3, asr #30
    3064:	445f4749 	ldrbmi	r4, [pc], #-1865	; 306c <__Stack_Size+0x2c6c>
    3068:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    306c:	4f545049 	svcmi	0x00545049
    3070:	65520052 	ldrbvs	r0, [r2, #-82]	; 0x52
    3074:	76726573 			; <UNDEFINED> instruction: 0x76726573
    3078:	49006465 	stmdbmi	r0, {r0, r2, r5, r6, sl, sp, lr}
    307c:	505f306e 	subspl	r3, pc, lr, rrx
    3080:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xf72
    3084:	53007373 	movwpl	r7, #883	; 0x373
    3088:	465f5445 	ldrbmi	r5, [pc], -r5, asr #8
    308c:	55544145 	ldrbpl	r4, [r4, #-325]	; 0x145
    3090:	5f004552 	svcpl	0x00004552
    3094:	54414546 	strbpl	r4, [r1], #-1350	; 0x546
    3098:	5f455255 	svcpl	0x00455255
    309c:	454c4553 	strbmi	r4, [ip, #-1363]	; 0x553
    30a0:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
    30a4:	56454400 	strbpl	r4, [r5], -r0, lsl #8
    30a8:	5f454349 	svcpl	0x00454349
    30ac:	4f4d4552 	svcmi	0x004d4552
    30b0:	575f4554 			; <UNDEFINED> instruction: 0x575f4554
    30b4:	55454b41 	strbpl	r4, [r5, #-2881]	; 0xb41
    30b8:	41570050 	cmpmi	r7, r0, asr r0
    30bc:	535f5449 	cmppl	pc, #1224736768	; 0x49000000
    30c0:	55544154 	ldrbpl	r4, [r4, #-340]	; 0x154
    30c4:	554f5f53 	strbpl	r5, [pc, #-3923]	; 2179 <__Stack_Size+0x1d79>
    30c8:	41570054 	cmpmi	r7, r4, asr r0
    30cc:	535f5449 	cmppl	pc, #1224736768	; 0x49000000
    30d0:	50555445 	subspl	r5, r5, r5, asr #8
    30d4:	66666f00 	strbtvs	r6, [r6], -r0, lsl #30
    30d8:	00746573 	rsbseq	r6, r4, r3, ror r5
    30dc:	5453414c 	ldrbpl	r4, [r3], #-332	; 0x14c
    30e0:	5f4e495f 	svcpl	0x004e495f
    30e4:	41544144 	cmpmi	r4, r4, asr #2
    30e8:	54455300 	strbpl	r5, [r5], #-768	; 0x300
    30ec:	4444415f 	strbmi	r4, [r4], #-351	; 0x15f
    30f0:	53534552 	cmppl	r3, #343932928	; 0x14800000
    30f4:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    30f8:	78545045 	ldmdavc	r4, {r0, r2, r6, ip, lr}^
    30fc:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3100:	61745300 	cmnvs	r4, r0, lsl #6
    3104:	49737574 	ldmdbmi	r3!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
    3108:	006f666e 	rsbeq	r6, pc, lr, ror #12
    310c:	41544f54 	cmpmi	r4, r4, asr pc
    3110:	52735f4c 	rsbspl	r5, r3, #76, 30	; 0x130
    3114:	45555145 	ldrbmi	r5, [r5, #-325]	; 0x145
    3118:	77005453 	smlsdvc	r0, r3, r4, r5
    311c:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xe49
    3120:	73003078 	movwvc	r3, #120	; 0x78
    3124:	5f657661 	svcpl	0x00657661
    3128:	6e654c77 	mcrvs	12, 3, r4, cr5, cr7, {3}
    312c:	00687467 	rsbeq	r7, r8, r7, ror #8
    3130:	74697865 	strbtvc	r7, [r9], #-2149	; 0x865
    3134:	446f4e5f 	strbtmi	r4, [pc], #-3679	; 313c <__Stack_Size+0x2d3c>
    3138:	5f617461 	svcpl	0x00617461
    313c:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0x553
    3140:	53003070 	movwpl	r3, #112	; 0x70
    3144:	445f5445 	ldrbmi	r5, [pc], #-1093	; 314c <__Stack_Size+0x2d4c>
    3148:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    314c:	4f545049 	svcmi	0x00545049
    3150:	61440052 	qdaddvs	r0, r2, r4
    3154:	4d5f6174 	ldfmie	f6, [pc, #-464]	; 2f8c <__Stack_Size+0x2b8c>
    3158:	4d5f6c75 	ldclmi	12, cr6, [pc, #-468]	; 2f8c <__Stack_Size+0x2b8c>
    315c:	61507861 	cmpvs	r0, r1, ror #16
    3160:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xb63
    3164:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0x953
    3168:	50457000 	subpl	r7, r5, r0
    316c:	6f666e69 	svcvs	0x00666e69
    3170:	54455300 	strbpl	r5, [r5], #-768	; 0x300
    3174:	474e4954 	smlsldmi	r4, lr, r4, r9
    3178:	0050555f 	subseq	r5, r0, pc, asr r5
    317c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    3180:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    3184:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    3188:	50646e45 	rsbpl	r6, r4, r5, asr #28
    318c:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    3190:	74616546 	strbtvc	r6, [r1], #-1350	; 0x546
    3194:	00657275 	rsbeq	r7, r5, r5, ror r2
    3198:	74736f50 	ldrbtvc	r6, [r3], #-3920	; 0xf50
    319c:	72505f30 	subsvc	r5, r0, #48, 30	; 0xc0
    31a0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    31a4:	4e450073 	mcrmi	0, 2, r0, cr5, cr3, {3}
    31a8:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    31ac:	535f544e 	cmppl	pc, #1308622848	; 0x4e000000
    31b0:	4c4c4154 	stfmie	f4, [ip], {84}	; 0x54
    31b4:	54454700 	strbpl	r4, [r5], #-1792	; 0x700
    31b8:	544e495f 	strbpl	r4, [lr], #-2399	; 0x95f
    31bc:	41465245 	cmpmi	r6, r5, asr #4
    31c0:	77004543 	strvc	r4, [r0, -r3, asr #10]
    31c4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0x156
    31c8:	42003165 	andmi	r3, r0, #1073741849	; 0x40000019
    31cc:	53657479 	cmnpl	r5, #2030043136	; 0x79000000
    31d0:	00706177 	rsbseq	r6, r0, r7, ror r1
    31d4:	61656c43 	cmnvs	r5, r3, asr #24
    31d8:	4f544472 	svcmi	0x00544472
    31dc:	58525f47 	ldmdapl	r2, {r0, r1, r2, r6, r8, r9, sl, fp, ip, lr}^
    31e0:	76617300 	strbtvc	r7, [r1], -r0, lsl #6
    31e4:	4c725f65 	ldclmi	15, cr5, [r2], #-404	; 0xfffffe6c
    31e8:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xe65
    31ec:	4c430068 	mcrrmi	0, 6, r0, r3, cr8
    31f0:	5f524145 	svcpl	0x00524145
    31f4:	54414546 	strbpl	r4, [r1], #-1350	; 0x546
    31f8:	00455255 	subeq	r5, r5, r5, asr r2
    31fc:	4c415453 	cfstrdmi	mvd5, [r1], {83}	; 0x53
    3200:	0044454c 	subeq	r4, r4, ip, asr #10
    3204:	61746144 	cmnvs	r4, r4, asr #2
    3208:	67617453 			; <UNDEFINED> instruction: 0x67617453
    320c:	74754f65 	ldrbtvc	r4, [r5], #-3941	; 0xf65
    3210:	54455300 	strbpl	r5, [r5], #-768	; 0x300
    3214:	544e495f 	strbpl	r4, [lr], #-2399	; 0x95f
    3218:	41465245 	cmpmi	r6, r5, asr #4
    321c:	53004543 	movwpl	r4, #1347	; 0x543
    3220:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    3224:	5f647261 	svcpl	0x00647261
    3228:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    322c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    3230:	65636166 	strbvs	r6, [r3, #-358]!	; 0x166
    3234:	6c655200 	sfmvs	f5, 2, [r5], #-0
    3238:	64657461 	strbtvs	r7, [r5], #-1121	; 0x461
    323c:	646e455f 	strbtvs	r4, [lr], #-1375	; 0x55f
    3240:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
    3244:	61440074 	hvcvs	16388	; 0x4004
    3248:	75426174 	strbvc	r6, [r2, #-372]	; 0x174
    324c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    3250:	54454700 	strbpl	r4, [r5], #-1792	; 0x700
    3254:	5345445f 	movtpl	r4, #21599	; 0x545f
    3258:	50495243 	subpl	r5, r9, r3, asr #4
    325c:	00524f54 	subseq	r4, r2, r4, asr pc
    3260:	49525453 	ldmdbmi	r2, {r0, r1, r4, r6, sl, ip, lr}^
    3264:	445f474e 	ldrbmi	r4, [pc], #-1870	; 326c <__Stack_Size+0x2e6c>
    3268:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    326c:	4f545049 	svcmi	0x00545049
    3270:	61440052 	qdaddvs	r0, r2, r4
    3274:	74536174 	ldrbvc	r6, [r3], #-372	; 0x174
    3278:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
    327c:	6c43006e 	mcrrvs	0, 6, r0, r3, cr14
    3280:	44726165 	ldrbtmi	r6, [r2], #-357	; 0x165
    3284:	5f474f54 	svcpl	0x00474f54
    3288:	5f005854 	svcpl	0x00005854
    328c:	67655277 			; <UNDEFINED> instruction: 0x67655277
    3290:	006c6156 	rsbeq	r6, ip, r6, asr r1
    3294:	75746553 	ldrbvc	r6, [r4, #-1363]!	; 0x553
    3298:	505f3070 	subspl	r3, pc, r0, ror r0	; <UNPREDICTABLE>
    329c:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xf72
    32a0:	45007373 	strmi	r7, [r0, #-883]	; 0x373
    32a4:	63657078 	cmnvs	r5, #120	; 0x78
    32a8:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xf74
    32ac:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    32b0:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xf5f
    32b4:	49415700 	stmdbmi	r1, {r8, r9, sl, ip, lr}^
    32b8:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xf54
    32bc:	53555441 	cmppl	r5, #1090519040	; 0x41000000
    32c0:	004e495f 	subeq	r4, lr, pc, asr r9
    32c4:	53554150 	cmppl	r5, #80, 2
    32c8:	74530045 	ldrbvc	r0, [r3], #-69	; 0x45
    32cc:	61646e61 	cmnvs	r4, r1, ror #28
    32d0:	535f6472 	cmppl	pc, #1912602624	; 0x72000000
    32d4:	6e497465 	cdpvs	4, 4, cr7, cr9, cr5, {3}
    32d8:	66726574 			; <UNDEFINED> instruction: 0x66726574
    32dc:	00656361 	rsbeq	r6, r5, r1, ror #6
    32e0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0x552
    32e4:	5f747365 	svcpl	0x00747365
    32e8:	53006f4e 	movwpl	r6, #3918	; 0xf4e
    32ec:	646e6174 	strbtvs	r6, [lr], #-372	; 0x174
    32f0:	5f647261 	svcpl	0x00647261
    32f4:	44746553 	ldrbtmi	r6, [r4], #-1363	; 0x553
    32f8:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    32fc:	61654665 	cmnvs	r5, r5, ror #12
    3300:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0x574
    3304:	4e595300 	cdpmi	3, 5, cr5, cr9, cr0, {0}
    3308:	465f4843 	ldrbmi	r4, [pc], -r3, asr #16
    330c:	454d4152 	strbmi	r4, [sp, #-338]	; 0x152
    3310:	414d5000 	mrsmi	r5, (UNDEF: 77)
    3314:	73556f54 	cmpvc	r5, #84, 30	; 0x150
    3318:	75427265 	strbvc	r7, [r2, #-613]	; 0x265
    331c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    3320:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    3324:	65447000 	strbvs	r7, [r4, #-0]
    3328:	47006373 	smlsdxmi	r0, r3, r3, r6
    332c:	535f5445 	cmppl	pc, #1157627904	; 0x45000000
    3330:	55544154 	ldrbpl	r4, [r4, #-340]	; 0x154
    3334:	4e450053 	mcrmi	0, 2, r0, cr5, cr3, {2}
    3338:	494f5044 	stmdbmi	pc, {r2, r6, ip, lr}^	; <UNPREDICTABLE>
    333c:	445f544e 	ldrbmi	r5, [pc], #-1102	; 3344 <__Stack_Size+0x2f44>
    3340:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    3344:	4f545049 	svcmi	0x00545049
    3348:	65520052 	ldrbvs	r0, [r2, #-82]	; 0x52
    334c:	746c7573 	strbtvc	r7, [ip], #-1395	; 0x573
    3350:	76615300 	strbtvc	r5, [r1], -r0, lsl #6
    3354:	74535265 	ldrbvc	r5, [r3], #-613	; 0x265
    3358:	00657461 	rsbeq	r7, r5, r1, ror #8
    335c:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xe49
    3360:	43414652 	movtmi	r4, #5714	; 0x1652
    3364:	45445f45 	strbmi	r5, [r4, #-3909]	; 0xf45
    3368:	49524353 	ldmdbmi	r2, {r0, r1, r4, r6, r8, r9, lr}^
    336c:	524f5450 	subpl	r5, pc, #80, 8	; 0x50000000
    3370:	65447000 	strbvs	r7, [r4, #-0]
    3374:	45470076 	strbmi	r0, [r7, #-118]	; 0x76
    3378:	4f435f54 	svcmi	0x00435f54
    337c:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    3380:	54415255 	strbpl	r5, [r1], #-597	; 0x255
    3384:	004e4f49 	subeq	r4, lr, r9, asr #30
    3388:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    338c:	445f4543 	ldrbmi	r4, [pc], #-1347	; 3394 <__Stack_Size+0x2f94>
    3390:	52435345 	subpl	r5, r3, #335544321	; 0x14000001
    3394:	4f545049 	svcmi	0x00545049
    3398:	74530052 	ldrbvc	r0, [r3], #-82	; 0x52
    339c:	61646e61 	cmnvs	r4, r1, ror #28
    33a0:	475f6472 			; <UNDEFINED> instruction: 0x475f6472
    33a4:	74537465 	ldrbvc	r7, [r3], #-1125	; 0x465
    33a8:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    33ac:	76615300 	strbtvc	r5, [r1], -r0, lsl #6
    33b0:	74535465 	ldrbvc	r5, [r3], #-1125	; 0x465
    33b4:	00657461 	rsbeq	r7, r5, r1, ror #8
    33b8:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    33bc:	64726164 	ldrbtvs	r6, [r2], #-356	; 0x164
    33c0:	7465535f 	strbtvc	r5, [r5], #-863	; 0x35f
    33c4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    33c8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
    33cc:	6f697461 	svcvs	0x00697461
    33d0:	4553006e 	ldrbmi	r0, [r3, #-110]	; 0x6e
    33d4:	4f435f54 	svcmi	0x00435f54
    33d8:	4749464e 	strbmi	r4, [r9, -lr, asr #12]
    33dc:	54415255 	strbpl	r5, [r1], #-597	; 0x255
    33e0:	004e4f49 	subeq	r4, lr, r9, asr #30
    33e4:	5f504f4e 	svcpl	0x00504f4e
    33e8:	636f7250 	cmnvs	pc, #80, 4
    33ec:	00737365 	rsbseq	r7, r3, r5, ror #6
    33f0:	73556270 	cmpvc	r5, #112, 4
    33f4:	66754272 			; <UNDEFINED> instruction: 0x66754272
    33f8:	424e7700 	submi	r7, lr, #0, 14
    33fc:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    3400:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    3404:	74003170 	strvc	r3, [r0], #-368	; 0x170
    3408:	32706d65 	rsbscc	r6, r0, #6464	; 0x1940
    340c:	4d507700 	ldclmi	7, cr7, [r0, #-0]
    3410:	66754241 	ldrbtvs	r4, [r5], -r1, asr #4
    3414:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3418:	77647000 	strbvc	r7, [r4, -r0]!
    341c:	006c6156 	rsbeq	r6, ip, r6, asr r1
    3420:	2f62696c 	svccs	0x0062696c
    3424:	5f425355 	svcpl	0x00425355
    3428:	2f62696c 	svccs	0x0062696c
    342c:	2f637273 	svccs	0x00637273
    3430:	5f627375 	svcpl	0x00627375
    3434:	2e6d656d 	cdpcs	5, 6, cr6, cr13, cr13, {3}
    3438:	50450063 	subpl	r0, r5, r3, rrx
    343c:	5542445f 	strbpl	r4, [r2, #-1119]	; 0x45f
    3440:	52455f46 	subpl	r5, r5, #280	; 0x118
    3444:	54620052 	strbtpl	r0, [r2], #-82	; 0x52
    3448:	00706d65 	rsbseq	r6, r0, r5, ror #26
    344c:	67676f54 			; <UNDEFINED> instruction: 0x67676f54
    3450:	5444656c 	strbpl	r6, [r4], #-1388	; 0x56c
    3454:	525f474f 	subspl	r4, pc, #20709376	; 0x13c0000
    3458:	6c430058 	mcrrvs	0, 5, r0, r3, cr8
    345c:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0x165
    3460:	756f4450 	strbvc	r4, [pc, #-1104]!	; 3018 <__Stack_Size+0x2c18>
    3464:	42656c62 	rsbmi	r6, r5, #25088	; 0x6200
    3468:	00666675 	rsbeq	r6, r6, r5, ror r6
    346c:	42746547 	rsbsmi	r6, r4, #297795584	; 0x11c00000
    3470:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
    3474:	65530045 	ldrbvs	r0, [r3, #-69]	; 0x45
    3478:	54534974 	ldrbpl	r4, [r3], #-2420	; 0x974
    347c:	65530052 	ldrbvs	r0, [r3, #-82]	; 0x52
    3480:	41504574 	cmpmi	r0, r4, ror r5
    3484:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0x464
    3488:	45007373 	strmi	r7, [r0, #-883]	; 0x373
    348c:	6f70646e 	svcvs	0x0070646e
    3490:	5f746e69 	svcpl	0x00746e69
    3494:	474f5444 	strbmi	r5, [pc, -r4, asr #8]
    3498:	6174535f 	cmnvs	r4, pc, asr r3
    349c:	00737574 	rsbseq	r7, r3, r4, ror r5
    34a0:	5f50455f 	svcpl	0x0050455f
    34a4:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    34a8:	5249445f 	subpl	r4, r9, #1593835520	; 0x5f000000
    34ac:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    34b0:	62445045 	subvs	r5, r4, #69	; 0x45
    34b4:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    34b8:	756f4331 	strbvc	r4, [pc, #-817]!	; 318f <__Stack_Size+0x2d8f>
    34bc:	7700746e 	strvc	r7, [r0, -lr, ror #8]
    34c0:	6f6c424e 	svcvs	0x006c424e
    34c4:	00736b63 	rsbseq	r6, r3, r3, ror #22
    34c8:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    34cc:	4f50444e 	svcmi	0x0050444e
    34d0:	00544e49 	subseq	r4, r4, r9, asr #28
    34d4:	74655277 	strbtvc	r5, [r5], #-631	; 0x277
    34d8:	5f504500 	svcpl	0x00504500
    34dc:	46554244 	ldrbmi	r4, [r5], -r4, asr #4
    34e0:	004e495f 	subeq	r4, lr, pc, asr r9
    34e4:	61656c43 	cmnvs	r5, r3, asr #24
    34e8:	5f504572 	svcpl	0x00504572
    34ec:	444e494b 	strbmi	r4, [lr], #-2379	; 0x94b
    34f0:	656c4300 	strbvs	r4, [ip, #-768]!	; 0x300
    34f4:	50457261 	subpl	r7, r5, r1, ror #4
    34f8:	5254435f 	subspl	r4, r4, #2080374785	; 0x7c000001
    34fc:	0058545f 	subseq	r5, r8, pc, asr r4
    3500:	64644162 	strbtvs	r4, [r4], #-354	; 0x162
    3504:	65530072 	ldrbvs	r0, [r3, #-114]	; 0x72
    3508:	544e4374 	strbpl	r4, [lr], #-884	; 0x374
    350c:	65470052 	strbvs	r0, [r7, #-82]	; 0x52
    3510:	544e4374 	strbpl	r4, [lr], #-884	; 0x374
    3514:	64700052 	ldrbtvs	r0, [r0], #-82	; 0x52
    3518:	67655277 			; <UNDEFINED> instruction: 0x67655277
    351c:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3520:	00524e46 	subseq	r4, r2, r6, asr #28
    3524:	70795477 	rsbsvc	r5, r9, r7, ror r4
    3528:	65470065 	strbvs	r0, [r7, #-101]	; 0x65
    352c:	44414474 	strbmi	r4, [r1], #-1140	; 0x474
    3530:	47005244 	strmi	r5, [r0, -r4, asr #4]
    3534:	50457465 	subpl	r7, r5, r5, ror #8
    3538:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    353c:	41306675 	teqmi	r0, r5, ror r6
    3540:	00726464 	rsbseq	r6, r2, r4, ror #8
    3544:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0x547
    3548:	53785450 	cmnpl	r8, #80, 8	; 0x50000000
    354c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    3550:	65530073 	ldrbvs	r0, [r3, #-115]	; 0x73
    3554:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3558:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    355c:	64416666 	strbvs	r6, [r1], #-1638	; 0x666
    3560:	47007264 	strmi	r7, [r0, -r4, ror #4]
    3564:	50457465 	subpl	r7, r5, r5, ror #8
    3568:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    356c:	69446675 	stmdbvs	r4, {r0, r2, r4, r5, r6, r9, sl, sp, lr}^
    3570:	696c0072 	stmdbvs	ip!, {r1, r4, r5, r6}^
    3574:	53552f62 	cmppl	r5, #392	; 0x188
    3578:	696c5f42 	stmdbvs	ip!, {r1, r6, r8, r9, sl, fp, ip, lr}^
    357c:	72732f62 	rsbsvc	r2, r3, #392	; 0x188
    3580:	73752f63 	cmnvc	r5, #396	; 0x18c
    3584:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xf62
    3588:	632e7367 	teqvs	lr, #-1677721599	; 0x9c000001
    358c:	77537700 	ldrbvc	r7, [r3, -r0, lsl #14]
    3590:	65470057 	strbvs	r0, [r7, #-87]	; 0x57
    3594:	52504574 	subspl	r4, r0, #116, 10	; 0x1d000000
    3598:	61745378 	cmnvs	r4, r8, ror r3
    359c:	00737574 	rsbseq	r7, r3, r4, ror r5
    35a0:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    35a4:	6c624450 	cfstrdvs	mvd4, [r2], #-320	; 0xfffffec0
    35a8:	30667542 	rsbcc	r7, r6, r2, asr #10
    35ac:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    35b0:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    35b4:	44444144 	strbmi	r4, [r4], #-324	; 0x144
    35b8:	45620052 	strbmi	r0, [r2, #-82]!	; 0x52
    35bc:	6d754e70 	ldclvs	14, cr4, [r5, #-448]!	; 0xfffffe40
    35c0:	656c4300 	strbvs	r4, [ip, #-768]!	; 0x300
    35c4:	50457261 	subpl	r7, r5, r1, ror #4
    35c8:	5254435f 	subspl	r4, r4, #2080374785	; 0x7c000001
    35cc:	0058525f 	subseq	r5, r8, pc, asr r2
    35d0:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    35d4:	756f4350 	strbvc	r4, [pc, #-848]!	; 328c <__Stack_Size+0x2e8c>
    35d8:	7852746e 	ldmdavc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    35dc:	00676552 	rsbeq	r6, r7, r2, asr r5
    35e0:	67676f54 			; <UNDEFINED> instruction: 0x67676f54
    35e4:	5444656c 	strbpl	r6, [r4], #-1388	; 0x56c
    35e8:	545f474f 	ldrbpl	r4, [pc], #-1871	; 35f0 <__Stack_Size+0x31f0>
    35ec:	42770058 	rsbsmi	r0, r7, #88	; 0x58
    35f0:	41306675 	teqmi	r0, r5, ror r6
    35f4:	00726464 	rsbseq	r6, r2, r4, ror #8
    35f8:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    35fc:	61745378 	cmnvs	r4, r8, ror r3
    3600:	74536c6c 	ldrbvc	r6, [r3], #-3180	; 0xc6c
    3604:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    3608:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    360c:	62445045 	subvs	r5, r4, #69	; 0x45
    3610:	6675426c 	ldrbtvs	r4, [r5], -ip, ror #4
    3614:	756f4330 	strbvc	r4, [pc, #-816]!	; 32ec <__Stack_Size+0x2eec>
    3618:	5300746e 	movwpl	r7, #1134	; 0x46e
    361c:	50457465 	subpl	r7, r5, r5, ror #8
    3620:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    3624:	43306675 	teqmi	r0, #122683392	; 0x7500000
    3628:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    362c:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3630:	74537854 	ldrbvc	r7, [r3], #-2132	; 0x854
    3634:	536c6c61 	cmnpl	ip, #24832	; 0x6100
    3638:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0x174
    363c:	50450073 	subpl	r0, r5, r3, ror r0
    3640:	5542445f 	strbpl	r4, [r2, #-1119]	; 0x45f
    3644:	554f5f46 	strbpl	r5, [pc, #-3910]	; 2706 <__Stack_Size+0x2306>
    3648:	44620054 	strbtmi	r0, [r2], #-84	; 0x54
    364c:	47007269 	strmi	r7, [r0, -r9, ror #4]
    3650:	50457465 	subpl	r7, r5, r5, ror #8
    3654:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    3658:	43316675 	teqmi	r1, #122683392	; 0x7500000
    365c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0x56f
    3660:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    3664:	64415045 	strbvs	r5, [r1], #-69	; 0x45
    3668:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    366c:	6f540073 	svcvs	0x00540073
    3670:	64726f57 	ldrbtvs	r6, [r2], #-3927	; 0xf57
    3674:	74655300 	strbtvc	r5, [r5], #-768	; 0x300
    3678:	6174535f 	cmnvs	r4, pc, asr r3
    367c:	5f737574 	svcpl	0x00737574
    3680:	0074754f 	rsbseq	r7, r4, pc, asr #10
    3684:	64644177 	strbtvs	r4, [r4], #-375	; 0x177
    3688:	65470072 	strbvs	r0, [r7, #-114]	; 0x72
    368c:	54534974 	ldrbpl	r4, [r3], #-2420	; 0x974
    3690:	65470052 	strbvs	r0, [r7, #-82]	; 0x52
    3694:	52504574 	subspl	r4, r0, #116, 10	; 0x1d000000
    3698:	756f4378 	strbvc	r4, [pc, #-888]!	; 3328 <__Stack_Size+0x2f28>
    369c:	4700746e 	strmi	r7, [r0, -lr, ror #8]
    36a0:	50457465 	subpl	r7, r5, r5, ror #8
    36a4:	426c6244 	rsbmi	r6, ip, #68, 4	; 0x40000004
    36a8:	41316675 	teqmi	r1, r5, ror r6
    36ac:	00726464 	rsbseq	r6, r2, r4, ror #8
    36b0:	45746553 	ldrbmi	r6, [r4, #-1363]!	; 0x553
    36b4:	6c624450 	cfstrdvs	mvd4, [r2], #-320	; 0xfffffec0
    36b8:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    36bc:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    36c0:	65530074 	ldrbvs	r0, [r3, #-116]	; 0x74
    36c4:	756f4474 	strbvc	r4, [pc, #-1140]!	; 3258 <__Stack_Size+0x2e58>
    36c8:	42656c42 	rsbmi	r6, r5, #16896	; 0x4200
    36cc:	45666675 	strbmi	r6, [r6, #-1653]!	; 0x675
    36d0:	61745350 	cmnvs	r4, r0, asr r3
    36d4:	77006c6c 	strvc	r6, [r0, -ip, ror #24]
    36d8:	56676552 			; <UNDEFINED> instruction: 0x56676552
    36dc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xc61
    36e0:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    36e4:	50444e45 	subpl	r4, r4, r5, asr #28
    36e8:	544e494f 	strbpl	r4, [lr], #-2383	; 0x94f
    36ec:	74654700 	strbtvc	r4, [r5], #-1792	; 0x700
    36f0:	78545045 	ldmdavc	r4, {r0, r2, r6, ip, lr}^
    36f4:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    36f8:	65530074 	ldrbvs	r0, [r3, #-116]	; 0x74
    36fc:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    3700:	75426c62 	strbvc	r6, [r2, #-3170]	; 0xc62
    3704:	64413166 	strbvs	r3, [r1], #-358	; 0x166
    3708:	53007264 	movwpl	r7, #612	; 0x264
    370c:	50457465 	subpl	r7, r5, r5, ror #8
    3710:	4e494b5f 	vmovmi.8	d9[2], r4
    3714:	65530044 	ldrbvs	r0, [r3, #-68]	; 0x44
    3718:	44504574 	ldrbmi	r4, [r0], #-1396	; 0x574
    371c:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
    3720:	66754265 	ldrbtvs	r4, [r5], -r5, ror #4
    3724:	42770066 	rsbsmi	r0, r7, #102	; 0x66
    3728:	41316675 	teqmi	r1, r5, ror r6
    372c:	00726464 	rsbseq	r6, r2, r4, ror #8
    3730:	65657246 	strbvs	r7, [r5, #-582]!	; 0x246
    3734:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    3738:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    373c:	47007265 	strmi	r7, [r0, -r5, ror #4]
    3740:	50457465 	subpl	r7, r5, r5, ror #8
    3744:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0x954
    3748:	70456200 	subvc	r6, r5, r0, lsl #4
    374c:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    3750:	74614400 	strbtvc	r4, [r1], #-1024	; 0x400
    3754:	6e654c61 	cdpvs	12, 6, cr4, cr5, cr1, {3}
    3758:	00687467 	rsbeq	r7, r8, r7, ror #8
    375c:	66754270 			; <UNDEFINED> instruction: 0x66754270
    3760:	50726566 	rsbspl	r6, r2, r6, ror #10
    3764:	746e696f 	strbtvc	r6, [lr], #-2415	; 0x96f
    3768:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
    376c:	552f6269 	strpl	r6, [pc, #-617]!	; 350b <__Stack_Size+0x310b>
    3770:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    3774:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    3778:	752f6372 	strvc	r6, [pc, #-882]!	; 340e <__Stack_Size+0x300e>
    377c:	735f6273 	cmpvc	pc, #805306375	; 0x30000007
    3780:	632e6c69 	teqvs	lr, #26880	; 0x6900
    3784:	52544300 	subspl	r4, r4, #0, 6
    3788:	0050485f 	subseq	r4, r0, pc, asr r8
    378c:	56504577 			; <UNDEFINED> instruction: 0x56504577
    3790:	6c006c61 	stcvs	12, cr6, [r0], {97}	; 0x61
    3794:	552f6269 	strpl	r6, [pc, #-617]!	; 3533 <__Stack_Size+0x3133>
    3798:	6c5f4253 	lfmvs	f4, 2, [pc], {83}	; 0x53
    379c:	732f6269 	teqvc	pc, #-1879048186	; 0x90000006
    37a0:	752f6372 	strvc	r6, [pc, #-882]!	; 3436 <__Stack_Size+0x3036>
    37a4:	695f6273 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r9, sp, lr}^	; <UNPREDICTABLE>
    37a8:	632e746e 	teqvs	lr, #1845493760	; 0x6e000000
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
  {
    statusreg = SysTick->CTRL;
       8:	00500001 	subseq	r0, r0, r1
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
       c:	00000000 	andeq	r0, r0, r0
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
      10:	04000000 	streq	r0, [r0], #-0
      14:	5001f300 	andpl	pc, r1, r0, lsl #6
      18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      1c:	00000000 	andeq	r0, r0, r0
      20:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
      2c:	00740009 	rsbseq	r0, r4, r9
      30:	751ef609 	ldrvc	pc, [lr, #-1545]	; 0x609
      34:	009f2200 	addseq	r2, pc, r0, lsl #4
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
      38:	00000000 	andeq	r0, r0, r0

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
      3c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
      40:	09007400 	stmdbeq	r0, {sl, ip, sp, lr}
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
      44:	50751ef6 	ldrshtpl	r1, [r5], #-230	; 0xffffff1a
      48:	00009f22 	andeq	r9, r0, r2, lsr #30
      4c:	00000000 	andeq	r0, r0, r0

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
      50:	00110000 	andseq	r0, r1, r0
      54:	25f75075 	ldrbcs	r5, [r7, #117]!	; 0x75
      58:	1b25f73a 	blne	97dd48 <__Stack_Size+0x97d948>
      5c:	f60900f7 			; <UNDEFINED> instruction: 0xf60900f7
      60:	2250751e 	subscs	r7, r0, #125829120	; 0x7800000
      64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
      74:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
      80:	0076000c 	rsbseq	r0, r6, ip
      break;            

    default:
      break;
  }
}
      84:	640825f7 	strvs	r2, [r8], #-1527	; 0x5f7
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
      88:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
      8c:	00009f00 	andeq	r9, r0, r0, lsl #30
      90:	00000000 	andeq	r0, r0, r0
      94:	00010000 	andeq	r0, r1, r0
      98:	00000054 	andeq	r0, r0, r4, asr r0
      9c:	00000000 	andeq	r0, r0, r0
      a0:	75000b00 	strvc	r0, [r0, #-2816]	; 0xb00
      a4:	3a25f750 	bcc	97ddec <__Stack_Size+0x97d9ec>
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      a8:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      ac:	00009f00 	andeq	r9, r0, r0, lsl #30
      b0:	00000000 	andeq	r0, r0, r0
      break; 
      
    default:
      break;
  }
}
      b4:	01500000 	cmpeq	r0, r0
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
      b8:	01540800 	cmpeq	r4, r0, lsl #16
      bc:	00010800 	andeq	r0, r1, r0, lsl #16
      c0:	00015450 	andeq	r5, r1, r0, asr r4
      c4:	00016208 	andeq	r6, r1, r8, lsl #4
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
      c8:	f3000408 	vshl.u8	d0, d8, d0
      cc:	009f5001 	addseq	r5, pc, r1
				{
					FLASH_Lock();
      d0:	00000000 	andeq	r0, r0, r0
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
      d4:	50000000 	andpl	r0, r0, r0
      d8:	54080001 	strpl	r0, [r8], #-1
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
      dc:	02080001 	andeq	r0, r8, #1
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
      e0:	549f3000 	ldrpl	r3, [pc], #0	; e8 <_Minimum_Stack_Size-0x18>
				TIM_Cmd(TIM2, ENABLE);
      e4:	58080001 	stmdapl	r8, {r0}
				Delay(100); // some delay is needed because PC have some time to prepare data.
      e8:	09080001 	stmdbeq	r8, {r0}

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
      ec:	f3007400 	vshl.u8	d7, d0, d0
      f0:	231c5001 	tstcs	ip, #1
						usbRxCount = USB_Rx_Cnt;
      f4:	01589f01 	cmpeq	r8, r1, lsl #30
      f8:	015e0800 	cmpeq	lr, r0, lsl #16
      fc:	00070800 	andeq	r0, r7, r0, lsl #16
					if(CheckTimeOut()){
     100:	01f30074 	mvnseq	r0, r4, ror r0
     104:	5e9f1c50 	mrcpl	12, 4, r1, cr15, cr0, {2}
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     108:	60080001 	andvs	r0, r8, r1
     10c:	09080001 	stmdbeq	r8, {r0}
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
     110:	f3007400 	vshl.u8	d7, d0, d0
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
     114:	231c5001 	tstcs	ip, #1
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     118:	01609f01 	cmneq	r0, r1, lsl #30
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
     11c:	01620800 	cmneq	r2, r0, lsl #16
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
     120:	00070800 	andeq	r0, r7, r0, lsl #16
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
     124:	01f30074 	mvnseq	r0, r4, ror r0
     128:	009f1c50 	addseq	r1, pc, r0, asr ip	; <UNPREDICTABLE>
	...
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
				gbIsFlashLock = TRUE;
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
     138:	01000000 	mrseq	r0, (UNDEF: 0)
     13c:	00005000 	andeq	r5, r0, r0
     140:	00000000 	andeq	r0, r0, r0
     144:	00040000 	andeq	r0, r4, r0
					USB_TxDString("Success..\n");
     148:	9f5001f3 	svcls	0x005001f3
	...
					USB_TxDString("Fail..\n");
			//WDTCR = 0x08;
				Delay(100);

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
     15c:	00500001 	subseq	r0, r0, r1
     160:	00000000 	andeq	r0, r0, r0
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
     164:	01000000 	mrseq	r0, (UNDEF: 0)
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
     168:	00005000 	andeq	r5, r0, r0
	...
				Jump_To_Application();
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
     178:	00010000 	andeq	r0, r1, r0
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
     17c:	00000050 	andeq	r0, r0, r0, asr r0
     180:	00000000 	andeq	r0, r0, r0
     184:	f3000400 	vshl.u8	d0, d0, d0
     188:	009f5001 	addseq	r5, pc, r1
	...

		}
		USART_BUFFER_CLEAR;
		gwpUSARTBuffer[0]='\0';
     198:	01000000 	mrseq	r0, (UNDEF: 0)
     19c:	00005000 	andeq	r5, r0, r0
     1a0:	00000000 	andeq	r0, r0, r0
     1a4:	00010000 	andeq	r0, r1, r0
     1a8:	00000054 	andeq	r0, r0, r4, asr r0
     1ac:	00000000 	andeq	r0, r0, r0
     1b0:	f3000400 	vshl.u8	d0, d0, d0
     1b4:	009f5001 	addseq	r5, pc, r1
     1b8:	00000000 	andeq	r0, r0, r0
     1bc:	64000000 	strvs	r0, [r0], #-0
     1c0:	6a080001 	bvs	2001cc <__Stack_Size+0x1ffdcc>
     1c4:	01080001 	tsteq	r8, r1
     1c8:	016a5000 	cmneq	sl, r0
     1cc:	01720800 	cmneq	r2, r0, lsl #16
     1d0:	00010800 	andeq	r0, r1, r0, lsl #16
     1d4:	00017254 	andeq	r7, r1, r4, asr r2
     1d8:	00017f08 	andeq	r7, r1, r8, lsl #30
     1dc:	03000508 	movweq	r0, #1288	; 0x508
     1e0:	20000184 	andcs	r0, r0, r4, lsl #3
     1e4:	0800017f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8}
     1e8:	08000190 	stmdaeq	r0, {r4, r7, r8}
     1ec:	01f30004 	mvnseq	r0, r4
     1f0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     200:	00010000 	andeq	r0, r1, r0
     204:	00000050 	andeq	r0, r0, r0, asr r0
     208:	00000000 	andeq	r0, r0, r0
     20c:	f3000400 	vshl.u8	d0, d0, d0
     210:	009f5001 	addseq	r5, pc, r1
     214:	00000000 	andeq	r0, r0, r0
     218:	01000000 	mrseq	r0, (UNDEF: 0)
     21c:	00005000 	andeq	r5, r0, r0
     220:	00000000 	andeq	r0, r0, r0
     224:	00040000 	andeq	r0, r4, r0
     228:	9f5001f3 	svcls	0x005001f3
	...
     234:	00500001 	subseq	r0, r0, r1
     238:	00000000 	andeq	r0, r0, r0
     23c:	04000000 	streq	r0, [r0], #-0
     240:	5001f300 	andpl	pc, r1, r0, lsl #6
     244:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     254:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     260:	01710003 	cmneq	r1, r3
     264:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     268:	00000000 	andeq	r0, r0, r0
     26c:	f3000400 	vshl.u8	d0, d0, d0
     270:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     280:	02000000 	andeq	r0, r0, #0
     284:	009f3000 	addseq	r3, pc, r0
     288:	00000000 	andeq	r0, r0, r0
     28c:	01000000 	mrseq	r0, (UNDEF: 0)
     290:	00005300 	andeq	r5, r0, r0, lsl #6
     294:	00000000 	andeq	r0, r0, r0
     298:	00030000 	andeq	r0, r3, r0
     29c:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
     2a0:	00000000 	andeq	r0, r0, r0
     2a4:	01000000 	mrseq	r0, (UNDEF: 0)
     2a8:	00005200 	andeq	r5, r0, r0, lsl #4
     2ac:	00000000 	andeq	r0, r0, r0
     2b0:	00030000 	andeq	r0, r3, r0
     2b4:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
     2b8:	00000000 	andeq	r0, r0, r0
     2bc:	01000000 	mrseq	r0, (UNDEF: 0)
     2c0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     2d0:	00010000 	andeq	r0, r1, r0
     2d4:	00000050 	andeq	r0, r0, r0, asr r0
     2d8:	00000000 	andeq	r0, r0, r0
     2dc:	f3000400 	vshl.u8	d0, d0, d0
     2e0:	009f5001 	addseq	r5, pc, r1
	...
     2f0:	02000000 	andeq	r0, r0, #0
     2f4:	009f3000 	addseq	r3, pc, r0
     2f8:	00000000 	andeq	r0, r0, r0
     2fc:	01000000 	mrseq	r0, (UNDEF: 0)
     300:	00005200 	andeq	r5, r0, r0, lsl #4
     304:	00000000 	andeq	r0, r0, r0
     308:	00030000 	andeq	r0, r3, r0
     30c:	009f0173 	addseq	r0, pc, r3, ror r1	; <UNPREDICTABLE>
     310:	00000000 	andeq	r0, r0, r0
     314:	03000000 	movweq	r0, #0
     318:	9f007300 	svcls	0x00007300
	...
     32c:	9f300002 	svcls	0x00300002
	...
     338:	00580001 	subseq	r0, r8, r1
	...
     348:	02000000 	andeq	r0, r0, #0
     34c:	009f3000 	addseq	r3, pc, r0
     350:	00000000 	andeq	r0, r0, r0
     354:	01000000 	mrseq	r0, (UNDEF: 0)
     358:	00005500 	andeq	r5, r0, r0, lsl #10
	...
     368:	00020000 	andeq	r0, r2, r0
     36c:	00000073 	andeq	r0, r0, r3, ror r0
     370:	00000000 	andeq	r0, r0, r0
     374:	00010000 	andeq	r0, r1, r0
     378:	00000055 	andeq	r0, r0, r5, asr r0
	...
     388:	0c000500 	cfstr32eq	mvfx0, [r0], {-0}
     38c:	08003004 	stmdaeq	r0, {r2, ip, sp}
	...
     398:	00730002 	rsbseq	r0, r3, r2
	...
     3a4:	00550001 	subseq	r0, r5, r1
	...
     3b4:	01000000 	mrseq	r0, (UNDEF: 0)
     3b8:	00005000 	andeq	r5, r0, r0
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	00010000 	andeq	r0, r1, r0
     3c4:	00000056 	andeq	r0, r0, r6, asr r0
     3c8:	00000000 	andeq	r0, r0, r0
     3cc:	f3000400 	vshl.u8	d0, d0, d0
     3d0:	009f5001 	addseq	r5, pc, r1
	...
     3e0:	06000000 	streq	r0, [r0], -r0
     3e4:	08007000 	stmdaeq	r0, {ip, sp, lr}
     3e8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     3ec:	00000000 	andeq	r0, r0, r0
     3f0:	06000000 	streq	r0, [r0], -r0
     3f4:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
     3f8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     3fc:	00000000 	andeq	r0, r0, r0
     400:	06000000 	streq	r0, [r0], -r0
     404:	08007000 	stmdaeq	r0, {ip, sp, lr}
     408:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     40c:	00000000 	andeq	r0, r0, r0
     410:	06000000 	streq	r0, [r0], -r0
     414:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
     418:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     41c:	00000000 	andeq	r0, r0, r0
     420:	06000000 	streq	r0, [r0], -r0
     424:	08007000 	stmdaeq	r0, {ip, sp, lr}
     428:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     42c:	00000000 	andeq	r0, r0, r0
     430:	06000000 	streq	r0, [r0], -r0
     434:	08007500 	stmdaeq	r0, {r8, sl, ip, sp, lr}
     438:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
     448:	02000000 	andeq	r0, r0, #0
     44c:	009f3000 	addseq	r3, pc, r0
     450:	00000000 	andeq	r0, r0, r0
     454:	01000000 	mrseq	r0, (UNDEF: 0)
     458:	00005400 	andeq	r5, r0, r0, lsl #8
     45c:	00000000 	andeq	r0, r0, r0
     460:	00010000 	andeq	r0, r1, r0
     464:	00000054 	andeq	r0, r0, r4, asr r0
	...
     474:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     480:	e0030005 	and	r0, r3, r5
     484:	00200001 	eoreq	r0, r0, r1
     488:	00000000 	andeq	r0, r0, r0
     48c:	04000000 	streq	r0, [r0], #-0
     490:	5001f300 	andpl	pc, r1, r0, lsl #6
     494:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     498:	00000000 	andeq	r0, r0, r0
     49c:	00032000 	andeq	r2, r3, r0
     4a0:	00033e08 	andeq	r3, r3, r8, lsl #28
     4a4:	50000108 	andpl	r0, r0, r8, lsl #2
     4a8:	0800033e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9}
     4ac:	08000400 	stmdaeq	r0, {sl}
     4b0:	00540001 	subseq	r0, r4, r1
     4b4:	20080004 	andcs	r0, r8, r4
     4b8:	04080004 	streq	r0, [r8], #-4
     4bc:	5001f300 	andpl	pc, r1, r0, lsl #6
     4c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     4c4:	00000000 	andeq	r0, r0, r0
     4c8:	00032000 	andeq	r2, r3, r0
     4cc:	00033e08 	andeq	r3, r3, r8, lsl #28
     4d0:	51000108 	tstpl	r0, r8, lsl #2
     4d4:	0800033e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9}
     4d8:	08000420 	stmdaeq	r0, {r5, sl}
     4dc:	01f30004 	mvnseq	r0, r4
     4e0:	00009f51 	andeq	r9, r0, r1, asr pc
     4e4:	00000000 	andeq	r0, r0, r0
     4e8:	033c0000 	teqeq	ip, #0
     4ec:	033e0800 	teqeq	lr, #0, 16
     4f0:	00020800 	andeq	r0, r2, r0, lsl #16
     4f4:	033e9f30 	teqeq	lr, #48, 30	; 0xc0
     4f8:	03ac0800 			; <UNDEFINED> instruction: 0x03ac0800
     4fc:	00010800 	andeq	r0, r1, r0, lsl #16
     500:	0003ac55 	andeq	sl, r3, r5, asr ip
     504:	0003c808 	andeq	ip, r3, r8, lsl #16
     508:	75000308 	strvc	r0, [r0, #-776]	; 0x308
     50c:	03c89f7c 	biceq	r9, r8, #124, 30	; 0x1f0
     510:	03f80800 	mvnseq	r0, #0, 16
     514:	00010800 	andeq	r0, r1, r0, lsl #16
     518:	00000055 	andeq	r0, r0, r5, asr r0
     51c:	00000000 	andeq	r0, r0, r0
     520:	00032000 	andeq	r2, r3, r0
     524:	00033c08 	andeq	r3, r3, r8, lsl #24
     528:	30000208 	andcc	r0, r0, r8, lsl #4
     52c:	00033c9f 	muleq	r3, pc, ip	; <UNPREDICTABLE>
     530:	0003f408 	andeq	pc, r3, r8, lsl #8
     534:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
     540:	0800036c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9}
     544:	08000377 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, r9}
     548:	00530001 	subseq	r0, r3, r1
     54c:	00000000 	andeq	r0, r0, r0
     550:	24000000 	strcs	r0, [r0], #-0
     554:	3a080005 	bcc	200570 <__Stack_Size+0x200170>
     558:	01080005 	tsteq	r8, r5
     55c:	053a5000 	ldreq	r5, [sl, #-0]!
     560:	053c0800 	ldreq	r0, [ip, #-2048]!	; 0x800
     564:	00040800 	andeq	r0, r4, r0, lsl #16
     568:	9f5001f3 	svcls	0x005001f3
     56c:	0800053c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl}
     570:	08000564 	stmdaeq	r0, {r2, r5, r6, r8, sl}
     574:	64500001 	ldrbvs	r0, [r0], #-1
     578:	80080005 	andhi	r0, r8, r5
     57c:	04080005 	streq	r0, [r8], #-5
     580:	5001f300 	andpl	pc, r1, r0, lsl #6
     584:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     588:	00000000 	andeq	r0, r0, r0
     58c:	00052400 	andeq	r2, r5, r0, lsl #8
     590:	00053808 	andeq	r3, r5, r8, lsl #16
     594:	30000208 	andcc	r0, r0, r8, lsl #4
     598:	00053c9f 	muleq	r5, pc, ip	; <UNPREDICTABLE>
     59c:	00055608 	andeq	r5, r5, r8, lsl #12
     5a0:	30000208 	andcc	r0, r0, r8, lsl #4
     5a4:	0005569f 	muleq	r5, pc, r6	; <UNPREDICTABLE>
     5a8:	00055a08 	andeq	r5, r5, r8, lsl #20
     5ac:	53000108 	movwpl	r0, #264	; 0x108
     5b0:	0800055a 	stmdaeq	r0, {r1, r3, r4, r6, r8, sl}
     5b4:	0800055c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl}
     5b8:	9f300002 	svcls	0x00300002
     5bc:	0800055c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl}
     5c0:	08000569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl}
     5c4:	00530001 	subseq	r0, r3, r1
     5c8:	00000000 	andeq	r0, r0, r0
     5cc:	80000000 	andhi	r0, r0, r0
     5d0:	92080005 	andls	r0, r8, #5
     5d4:	01080005 	tsteq	r8, r5
     5d8:	05925000 	ldreq	r5, [r2]
     5dc:	059c0800 	ldreq	r0, [ip, #2048]	; 0x800
     5e0:	00040800 	andeq	r0, r4, r0, lsl #16
     5e4:	9f5001f3 	svcls	0x005001f3
     5e8:	0800059c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl}
     5ec:	0800059e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, sl}
     5f0:	9e500001 	cdpls	0, 5, cr0, cr0, cr1, {0}
     5f4:	a4080005 	strge	r0, [r8], #-5
     5f8:	04080005 	streq	r0, [r8], #-5
     5fc:	5001f300 	andpl	pc, r1, r0, lsl #6
     600:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     604:	00000000 	andeq	r0, r0, r0
     608:	0005a400 	andeq	sl, r5, r0, lsl #8
     60c:	0005ae08 	andeq	sl, r5, r8, lsl #28
     610:	50000108 	andpl	r0, r0, r8, lsl #2
     614:	080005ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl}
     618:	080005b0 	stmdaeq	r0, {r4, r5, r7, r8, sl}
     61c:	01f30004 	mvnseq	r0, r4
     620:	05b09f50 	ldreq	r9, [r0, #3920]!	; 0xf50
     624:	05b20800 	ldreq	r0, [r2, #2048]!	; 0x800
     628:	00010800 	andeq	r0, r1, r0, lsl #16
     62c:	0005b250 	andeq	fp, r5, r0, asr r2
     630:	0005b408 	andeq	fp, r5, r8, lsl #8
     634:	f3000408 	vshl.u8	d0, d8, d0
     638:	009f5001 	addseq	r5, pc, r1
     63c:	00000000 	andeq	r0, r0, r0
     640:	b4000000 	strlt	r0, [r0], #-0
     644:	c2080005 	andgt	r0, r8, #5
     648:	01080005 	tsteq	r8, r5
     64c:	05c25000 	strbeq	r5, [r2]
     650:	05cc0800 	strbeq	r0, [ip, #2048]	; 0x800
     654:	00040800 	andeq	r0, r4, r0, lsl #16
     658:	9f5001f3 	svcls	0x005001f3
	...
     664:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
     668:	080005ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, sl}
     66c:	ea500001 	b	1400678 <__Stack_Size+0x1400278>
     670:	f8080005 			; <UNDEFINED> instruction: 0xf8080005
     674:	04080005 	streq	r0, [r8], #-5
     678:	5001f300 	andpl	pc, r1, r0, lsl #6
     67c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     680:	00000000 	andeq	r0, r0, r0
     684:	0006fc00 	andeq	pc, r6, r0, lsl #24
     688:	00070108 	andeq	r0, r7, r8, lsl #2
     68c:	50000108 	andpl	r0, r0, r8, lsl #2
     690:	08000701 	stmdaeq	r0, {r0, r8, r9, sl}
     694:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
     698:	01f30004 	mvnseq	r0, r4
     69c:	00009f50 	andeq	r9, r0, r0, asr pc
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	07080000 	streq	r0, [r8, -r0]
     6a8:	070d0800 	streq	r0, [sp, -r0, lsl #16]
     6ac:	00010800 	andeq	r0, r1, r0, lsl #16
     6b0:	00070d50 	andeq	r0, r7, r0, asr sp
     6b4:	00071408 	andeq	r1, r7, r8, lsl #8
     6b8:	f3000408 	vshl.u8	d0, d8, d0
     6bc:	009f5001 	addseq	r5, pc, r1
     6c0:	00000000 	andeq	r0, r0, r0
     6c4:	14000000 	strne	r0, [r0], #-0
     6c8:	27080007 	strcs	r0, [r8, -r7]
     6cc:	01080007 	tsteq	r8, r7
     6d0:	07275000 	streq	r5, [r7, -r0]!
     6d4:	07280800 	streq	r0, [r8, -r0, lsl #16]!
     6d8:	00040800 	andeq	r0, r4, r0, lsl #16
     6dc:	9f5001f3 	svcls	0x005001f3
     6e0:	08000728 	stmdaeq	r0, {r3, r5, r8, r9, sl}
     6e4:	0800072a 	stmdaeq	r0, {r1, r3, r5, r8, r9, sl}
     6e8:	2a500001 	bcs	14006f4 <__Stack_Size+0x14002f4>
     6ec:	34080007 	strcc	r0, [r8], #-7
     6f0:	04080007 	streq	r0, [r8], #-7
     6f4:	5001f300 	andpl	pc, r1, r0, lsl #6
     6f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     6fc:	00000000 	andeq	r0, r0, r0
     700:	00073400 	andeq	r3, r7, r0, lsl #8
     704:	00075008 	andeq	r5, r7, r8
     708:	50000108 	andpl	r0, r0, r8, lsl #2
     70c:	08000750 	stmdaeq	r0, {r4, r6, r8, r9, sl}
     710:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
     714:	00500001 	subseq	r0, r0, r1
     718:	00000000 	andeq	r0, r0, r0
     71c:	34000000 	strcc	r0, [r0], #-0
     720:	36080007 	strcc	r0, [r8], -r7
     724:	01080007 	tsteq	r8, r7
     728:	07365100 	ldreq	r5, [r6, -r0, lsl #2]!
     72c:	073a0800 	ldreq	r0, [sl, -r0, lsl #16]!
     730:	00030800 	andeq	r0, r3, r0, lsl #16
     734:	3a9f7f71 	bcc	fe7e0500 <SCS_BASE+0x1e7d2500>
     738:	58080007 	stmdapl	r8, {r0, r1, r2}
     73c:	04080007 	streq	r0, [r8], #-7
     740:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     744:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     748:	00000000 	andeq	r0, r0, r0
     74c:	00073400 	andeq	r3, r7, r0, lsl #8
     750:	00073a08 	andeq	r3, r7, r8, lsl #20
     754:	52000108 	andpl	r0, r0, #8, 2
     758:	0800073a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl}
     75c:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
     760:	01f30004 	mvnseq	r0, r4
     764:	00009f52 	andeq	r9, r0, r2, asr pc
     768:	00000000 	andeq	r0, r0, r0
     76c:	07340000 	ldreq	r0, [r4, -r0]!
     770:	073a0800 	ldreq	r0, [sl, -r0, lsl #16]!
     774:	00020800 	andeq	r0, r2, r0, lsl #16
     778:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
     788:	00010000 	andeq	r0, r1, r0
     78c:	00000050 	andeq	r0, r0, r0, asr r0
     790:	00000000 	andeq	r0, r0, r0
     794:	f3000400 	vshl.u8	d0, d0, d0
     798:	009f5001 	addseq	r5, pc, r1
     79c:	00000000 	andeq	r0, r0, r0
     7a0:	01000000 	mrseq	r0, (UNDEF: 0)
     7a4:	00005000 	andeq	r5, r0, r0
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	00040000 	andeq	r0, r4, r0
     7b0:	9f5001f3 	svcls	0x005001f3
	...
     7c4:	00500001 	subseq	r0, r0, r1
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     7d0:	a0080007 	andge	r0, r8, r7
     7d4:	01080007 	tsteq	r8, r7
     7d8:	07a05300 	streq	r5, [r0, r0, lsl #6]!
     7dc:	07a20800 	streq	r0, [r2, r0, lsl #16]!
     7e0:	00060800 	andeq	r0, r6, r0, lsl #16
     7e4:	00730072 	rsbseq	r0, r3, r2, ror r0
     7e8:	07a29f22 	streq	r9, [r2, r2, lsr #30]!
     7ec:	07ab0800 	streq	r0, [fp, r0, lsl #16]!
     7f0:	00010800 	andeq	r0, r1, r0, lsl #16
     7f4:	0007ba50 	andeq	fp, r7, r0, asr sl
     7f8:	0007cc08 	andeq	ip, r7, r8, lsl #24
     7fc:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     808:	0800079e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl}
     80c:	080007b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl}
     810:	b6540001 	ldrblt	r0, [r4], -r1
     814:	b9080007 	stmdblt	r8, {r0, r1, r2}
     818:	01080007 	tsteq	r8, r7
     81c:	07ba5000 	ldreq	r5, [sl, r0]!
     820:	07bc0800 	ldreq	r0, [ip, r0, lsl #16]!
     824:	00010800 	andeq	r0, r1, r0, lsl #16
     828:	00000054 	andeq	r0, r0, r4, asr r0
     82c:	00000000 	andeq	r0, r0, r0
     830:	0007a000 	andeq	sl, r7, r0
     834:	0007a808 	andeq	sl, r7, r8, lsl #16
     838:	52000108 	andpl	r0, r0, #8, 2
     83c:	080007ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, r9, sl}
     840:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
     844:	00520001 	subseq	r0, r2, r1
     848:	00000000 	andeq	r0, r0, r0
     84c:	cc000000 	stcgt	0, cr0, [r0], {-0}
     850:	d6080007 	strle	r0, [r8], -r7
     854:	01080007 	tsteq	r8, r7
     858:	07d65000 	ldrbeq	r5, [r6, r0]
     85c:	07f60800 	ldrbeq	r0, [r6, r0, lsl #16]!
     860:	00020800 	andeq	r0, r2, r0, lsl #16
     864:	00000074 	andeq	r0, r0, r4, ror r0
     868:	00000000 	andeq	r0, r0, r0
     86c:	07f80000 	ldrbeq	r0, [r8, r0]!
     870:	08060800 	stmdaeq	r6, {fp}
     874:	00010800 	andeq	r0, r1, r0, lsl #16
     878:	00080650 	andeq	r0, r8, r0, asr r6
     87c:	00081008 	andeq	r1, r8, r8
     880:	f3000408 	vshl.u8	d0, d8, d0
     884:	009f5001 	addseq	r5, pc, r1
	...
     894:	01000000 	mrseq	r0, (UNDEF: 0)
     898:	00005000 	andeq	r5, r0, r0
     89c:	00000000 	andeq	r0, r0, r0
     8a0:	00040000 	andeq	r0, r4, r0
     8a4:	9f5001f3 	svcls	0x005001f3
	...
     8b0:	08000810 	stmdaeq	r0, {r4, fp}
     8b4:	0800081e 	stmdaeq	r0, {r1, r2, r3, r4, fp}
     8b8:	1e500001 	cdpne	0, 5, cr0, cr0, cr1, {0}
     8bc:	28080008 	stmdacs	r8, {r3}
     8c0:	04080008 	streq	r0, [r8], #-8
     8c4:	5001f300 	andpl	pc, r1, r0, lsl #6
     8c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     8d8:	30000200 	andcc	r0, r0, r0, lsl #4
     8dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     8e0:	00000000 	andeq	r0, r0, r0
     8e4:	70000700 	andvc	r0, r0, r0, lsl #14
     8e8:	301a3200 	andscc	r3, sl, r0, lsl #4
     8ec:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
     8fc:	00020000 	andeq	r0, r2, r0
     900:	00009f30 	andeq	r9, r0, r0, lsr pc
     904:	00000000 	andeq	r0, r0, r0
     908:	00080000 	andeq	r0, r8, r0
     90c:	20080070 	andcs	r0, r8, r0, ror r0
     910:	9f2e301a 	svcls	0x002e301a
	...
     924:	00500001 	subseq	r0, r0, r1
     928:	00000000 	andeq	r0, r0, r0
     92c:	04000000 	streq	r0, [r0], #-0
     930:	5001f300 	andpl	pc, r1, r0, lsl #6
     934:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     938:	00000000 	andeq	r0, r0, r0
     93c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     948:	01f30004 	mvnseq	r0, r4
     94c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     95c:	00010000 	andeq	r0, r1, r0
     960:	00000050 	andeq	r0, r0, r0, asr r0
     964:	00000000 	andeq	r0, r0, r0
     968:	f3000400 	vshl.u8	d0, d0, d0
     96c:	009f5001 	addseq	r5, pc, r1
     970:	00000000 	andeq	r0, r0, r0
     974:	01000000 	mrseq	r0, (UNDEF: 0)
     978:	00005000 	andeq	r5, r0, r0
     97c:	00000000 	andeq	r0, r0, r0
     980:	00040000 	andeq	r0, r4, r0
     984:	9f5001f3 	svcls	0x005001f3
	...
     998:	9f300002 	svcls	0x00300002
	...
     9a4:	00500001 	subseq	r0, r0, r1
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     9b0:	4a080008 	bmi	2009d8 <__Stack_Size+0x2005d8>
     9b4:	02080008 	andeq	r0, r8, #8
     9b8:	4a9f3400 	bmi	fe7cd9c0 <SCS_BASE+0x1e7bf9c0>
     9bc:	50080008 	andpl	r0, r8, r8
     9c0:	01080008 	tsteq	r8, r8
     9c4:	00005000 	andeq	r5, r0, r0
     9c8:	00000000 	andeq	r0, r0, r0
     9cc:	08500000 	ldmdaeq	r0, {}^	; <UNPREDICTABLE>
     9d0:	08570800 	ldmdaeq	r7, {fp}^
     9d4:	00010800 	andeq	r0, r1, r0, lsl #16
     9d8:	00085750 	andeq	r5, r8, r0, asr r7
     9dc:	00088608 	andeq	r8, r8, r8, lsl #12
     9e0:	54000108 	strpl	r0, [r0], #-264	; 0x108
	...
     9ec:	08000850 	stmdaeq	r0, {r4, r6, fp}
     9f0:	08000858 	stmdaeq	r0, {r3, r4, r6, fp}
     9f4:	9f340002 	svcls	0x00340002
     9f8:	08000858 	stmdaeq	r0, {r3, r4, r6, fp}
     9fc:	08000873 	stmdaeq	r0, {r0, r1, r4, r5, r6, fp}
     a00:	74500001 	ldrbvc	r0, [r0], #-1
     a04:	7a080008 	bvc	200a2c <__Stack_Size+0x20062c>
     a08:	01080008 	tsteq	r8, r8
     a0c:	087c5000 	ldmdaeq	ip!, {ip, lr}^
     a10:	08860800 	stmeq	r6, {fp}
     a14:	00010800 	andeq	r0, r1, r0, lsl #16
     a18:	00000050 	andeq	r0, r0, r0, asr r0
	...
     a28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     a34:	00550001 	subseq	r0, r5, r1
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	04000000 	streq	r0, [r0], #-0
     a40:	5001f300 	andpl	pc, r1, r0, lsl #6
     a44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     a54:	34000200 	strcc	r0, [r0], #-512	; 0x200
     a58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     a5c:	00000000 	andeq	r0, r0, r0
     a60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     a6c:	00500001 	subseq	r0, r0, r1
	...
     a7c:	02000000 	andeq	r0, r0, #0
     a80:	009f3400 	addseq	r3, pc, r0, lsl #8
     a84:	00000000 	andeq	r0, r0, r0
     a88:	01000000 	mrseq	r0, (UNDEF: 0)
     a8c:	00005000 	andeq	r5, r0, r0
     a90:	00000000 	andeq	r0, r0, r0
     a94:	00010000 	andeq	r0, r1, r0
     a98:	00000050 	andeq	r0, r0, r0, asr r0
	...
     aa8:	34000200 	strcc	r0, [r0], #-512	; 0x200
     aac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ab0:	00000000 	andeq	r0, r0, r0
     ab4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     ac0:	00500001 	subseq	r0, r0, r1
     ac4:	00000000 	andeq	r0, r0, r0
     ac8:	01000000 	mrseq	r0, (UNDEF: 0)
     acc:	00005000 	andeq	r5, r0, r0
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
     ad8:	088e0800 	stmeq	lr, {fp}
     adc:	00010800 	andeq	r0, r1, r0, lsl #16
     ae0:	00088e50 	andeq	r8, r8, r0, asr lr
     ae4:	0008ca08 	andeq	ip, r8, r8, lsl #20
     ae8:	55000108 	strpl	r0, [r0, #-264]	; 0x108
     aec:	080008ca 	stmdaeq	r0, {r1, r3, r6, r7, fp}
     af0:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
     af4:	01f30004 	mvnseq	r0, r4
     af8:	00009f50 	andeq	r9, r0, r0, asr pc
     afc:	00000000 	andeq	r0, r0, r0
     b00:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
     b04:	08930800 	ldmeq	r3, {fp}
     b08:	00010800 	andeq	r0, r1, r0, lsl #16
     b0c:	00089351 	andeq	r9, r8, r1, asr r3
     b10:	0008b208 	andeq	fp, r8, r8, lsl #4
     b14:	56000108 	strpl	r0, [r0], -r8, lsl #2
     b18:	080008b2 	stmdaeq	r0, {r1, r4, r5, r7, fp}
     b1c:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
     b20:	01f30004 	mvnseq	r0, r4
     b24:	00009f51 	andeq	r9, r0, r1, asr pc
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	08880000 	stmeq	r8, {}	; <UNPREDICTABLE>
     b30:	08940800 	ldmeq	r4, {fp}
     b34:	00020800 	andeq	r0, r2, r0, lsl #16
     b38:	08949f34 	ldmeq	r4, {r2, r4, r5, r8, r9, sl, fp, ip, pc}
     b3c:	089c0800 	ldmeq	ip, {fp}
     b40:	00010800 	andeq	r0, r1, r0, lsl #16
     b44:	0008ac50 	andeq	sl, r8, r0, asr ip
     b48:	0008b608 	andeq	fp, r8, r8, lsl #12
     b4c:	50000108 	andpl	r0, r0, r8, lsl #2
     b50:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
     b54:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
     b58:	00500001 	subseq	r0, r0, r1
	...
     b68:	01000000 	mrseq	r0, (UNDEF: 0)
     b6c:	00005000 	andeq	r5, r0, r0
     b70:	00000000 	andeq	r0, r0, r0
     b74:	00010000 	andeq	r0, r1, r0
     b78:	00000055 	andeq	r0, r0, r5, asr r0
     b7c:	00000000 	andeq	r0, r0, r0
     b80:	f3000400 	vshl.u8	d0, d0, d0
     b84:	009f5001 	addseq	r5, pc, r1
	...
     b94:	01000000 	mrseq	r0, (UNDEF: 0)
     b98:	00005100 	andeq	r5, r0, r0, lsl #2
     b9c:	00000000 	andeq	r0, r0, r0
     ba0:	00040000 	andeq	r0, r4, r0
     ba4:	9f5101f3 	svcls	0x005101f3
	...
     bb8:	9f340002 	svcls	0x00340002
	...
     bc4:	00500001 	subseq	r0, r0, r1
     bc8:	00000000 	andeq	r0, r0, r0
     bcc:	01000000 	mrseq	r0, (UNDEF: 0)
     bd0:	00005000 	andeq	r5, r0, r0
	...
     be0:	00010000 	andeq	r0, r1, r0
     be4:	00000050 	andeq	r0, r0, r0, asr r0
     be8:	00000000 	andeq	r0, r0, r0
     bec:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
     bf8:	01f30004 	mvnseq	r0, r4
     bfc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     c0c:	00010000 	andeq	r0, r1, r0
     c10:	00000051 	andeq	r0, r0, r1, asr r0
     c14:	00000000 	andeq	r0, r0, r0
     c18:	f3000400 	vshl.u8	d0, d0, d0
     c1c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     c2c:	02000000 	andeq	r0, r0, #0
     c30:	009f3400 	addseq	r3, pc, r0, lsl #8
     c34:	00000000 	andeq	r0, r0, r0
     c38:	01000000 	mrseq	r0, (UNDEF: 0)
     c3c:	00005000 	andeq	r5, r0, r0
     c40:	00000000 	andeq	r0, r0, r0
     c44:	00010000 	andeq	r0, r1, r0
     c48:	00000050 	andeq	r0, r0, r0, asr r0
	...
     c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     c64:	00700004 	rsbseq	r0, r0, r4
     c68:	00009f20 	andeq	r9, r0, r0, lsr #30
     c6c:	00000000 	andeq	r0, r0, r0
     c70:	00040000 	andeq	r0, r4, r0
     c74:	9f200074 	svcls	0x00200074
	...
     c80:	00540001 	subseq	r0, r4, r1
     c84:	00000000 	andeq	r0, r0, r0
     c88:	05000000 	streq	r0, [r0, #-0]
     c8c:	5001f300 	andpl	pc, r1, r0, lsl #6
     c90:	00009f20 	andeq	r9, r0, r0, lsr #30
	...
     ca0:	00070000 	andeq	r0, r7, r0
     ca4:	08200070 	stmdaeq	r0!, {r4, r5, r6}
     ca8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
     cac:	00000000 	andeq	r0, r0, r0
     cb0:	07000000 	streq	r0, [r0, -r0]
     cb4:	20007400 	andcs	r7, r0, r0, lsl #8
     cb8:	9f1aff08 	svcls	0x001aff08
	...
     cc4:	00740006 	rsbseq	r0, r4, r6
     cc8:	9f1aff08 	svcls	0x001aff08
	...
     cd4:	01f30008 	mvnseq	r0, r8
     cd8:	ff082050 			; <UNDEFINED> instruction: 0xff082050
     cdc:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
     cec:	000a0000 	andeq	r0, sl, r0
     cf0:	0a200070 	beq	800eb8 <__Stack_Size+0x800ab8>
     cf4:	381aff00 	ldmdacc	sl, {r8, r9, sl, fp, ip, sp, lr, pc}
     cf8:	00009f25 	andeq	r9, r0, r5, lsr #30
     cfc:	00000000 	andeq	r0, r0, r0
     d00:	000a0000 	andeq	r0, sl, r0
     d04:	0a200074 	beq	800edc <__Stack_Size+0x800adc>
     d08:	381aff00 	ldmdacc	sl, {r8, r9, sl, fp, ip, sp, lr, pc}
     d0c:	00009f25 	andeq	r9, r0, r5, lsr #30
     d10:	00000000 	andeq	r0, r0, r0
     d14:	00090000 	andeq	r0, r9, r0
     d18:	000a0074 	andeq	r0, sl, r4, ror r0
     d1c:	25381aff 	ldrcs	r1, [r8, #-2815]!	; 0xaff
     d20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d24:	00000000 	andeq	r0, r0, r0
     d28:	f3000b00 	vqrdmulh.s<illegal width 8>	d0, d0, d0
     d2c:	0a205001 	beq	814d38 <__Stack_Size+0x814938>
     d30:	381aff00 	ldmdacc	sl, {r8, r9, sl, fp, ip, sp, lr, pc}
     d34:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
     d44:	000b0000 	andeq	r0, fp, r0
     d48:	08200070 	stmdaeq	r0!, {r4, r5, r6}
     d4c:	1a2440ff 	bne	911150 <__Stack_Size+0x910d50>
     d50:	009f2540 	addseq	r2, pc, r0, asr #10
     d54:	00000000 	andeq	r0, r0, r0
     d58:	0b000000 	bleq	d60 <__Stack_Size+0x960>
     d5c:	20007400 	andcs	r7, r0, r0, lsl #8
     d60:	2440ff08 	strbcs	pc, [r0], #-3848	; 0xf08	; <UNPREDICTABLE>
     d64:	9f25401a 	svcls	0x0025401a
	...
     d70:	0074000a 	rsbseq	r0, r4, sl
     d74:	2440ff08 	strbcs	pc, [r0], #-3848	; 0xf08	; <UNPREDICTABLE>
     d78:	9f25401a 	svcls	0x0025401a
	...
     d84:	01f3000c 	mvnseq	r0, ip
     d88:	ff082050 			; <UNDEFINED> instruction: 0xff082050
     d8c:	401a2440 	andsmi	r2, sl, r0, asr #8
     d90:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
     da0:	00060000 	andeq	r0, r6, r0
     da4:	48200070 	stmdami	r0!, {r4, r5, r6}
     da8:	00009f25 	andeq	r9, r0, r5, lsr #30
     dac:	00000000 	andeq	r0, r0, r0
     db0:	00060000 	andeq	r0, r6, r0
     db4:	48200074 	stmdami	r0!, {r2, r4, r5, r6}
     db8:	00009f25 	andeq	r9, r0, r5, lsr #30
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00050000 	andeq	r0, r5, r0
     dc4:	25480074 	strbcs	r0, [r8, #-116]	; 0x74
     dc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     dcc:	00000000 	andeq	r0, r0, r0
     dd0:	f3000700 	vabd.u8	d0, d0, d0
     dd4:	48205001 	stmdami	r0!, {r0, ip, lr}
     dd8:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
     de8:	00020000 	andeq	r0, r2, r0
     dec:	00009f34 	andeq	r9, r0, r4, lsr pc
     df0:	00000000 	andeq	r0, r0, r0
     df4:	00010000 	andeq	r0, r1, r0
     df8:	00000050 	andeq	r0, r0, r0, asr r0
     dfc:	00000000 	andeq	r0, r0, r0
     e00:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e0c:	00500001 	subseq	r0, r0, r1
     e10:	00000000 	andeq	r0, r0, r0
     e14:	01000000 	mrseq	r0, (UNDEF: 0)
     e18:	00005000 	andeq	r5, r0, r0
     e1c:	00000000 	andeq	r0, r0, r0
     e20:	00010000 	andeq	r0, r1, r0
     e24:	00000050 	andeq	r0, r0, r0, asr r0
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e40:	00500001 	subseq	r0, r0, r1
     e44:	00000000 	andeq	r0, r0, r0
     e48:	04000000 	streq	r0, [r0], #-0
     e4c:	5001f300 	andpl	pc, r1, r0, lsl #6
     e50:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     e60:	34000200 	strcc	r0, [r0], #-512	; 0x200
     e64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     e68:	00000000 	andeq	r0, r0, r0
     e6c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e78:	00500001 	subseq	r0, r0, r1
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	01000000 	mrseq	r0, (UNDEF: 0)
     e84:	00005000 	andeq	r5, r0, r0
	...
     e94:	00010000 	andeq	r0, r1, r0
     e98:	00000050 	andeq	r0, r0, r0, asr r0
     e9c:	00000000 	andeq	r0, r0, r0
     ea0:	f3000400 	vshl.u8	d0, d0, d0
     ea4:	009f5001 	addseq	r5, pc, r1
	...
     eb4:	01000000 	mrseq	r0, (UNDEF: 0)
     eb8:	00005100 	andeq	r5, r0, r0, lsl #2
     ebc:	00000000 	andeq	r0, r0, r0
     ec0:	00040000 	andeq	r0, r4, r0
     ec4:	9f5101f3 	svcls	0x005101f3
	...
     ed8:	00520001 	subseq	r0, r2, r1
     edc:	00000000 	andeq	r0, r0, r0
     ee0:	04000000 	streq	r0, [r0], #-0
     ee4:	5201f300 	andpl	pc, r1, #0, 6
     ee8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     ef8:	34000200 	strcc	r0, [r0], #-512	; 0x200
     efc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f00:	00000000 	andeq	r0, r0, r0
     f04:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     f10:	00500001 	subseq	r0, r0, r1
	...
     f20:	01000000 	mrseq	r0, (UNDEF: 0)
     f24:	00005000 	andeq	r5, r0, r0
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	00040000 	andeq	r0, r4, r0
     f30:	9f5001f3 	svcls	0x005001f3
	...
     f3c:	00500001 	subseq	r0, r0, r1
     f40:	00000000 	andeq	r0, r0, r0
     f44:	04000000 	streq	r0, [r0], #-0
     f48:	5001f300 	andpl	pc, r1, r0, lsl #6
     f4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f50:	00000000 	andeq	r0, r0, r0
     f54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     f60:	01f30004 	mvnseq	r0, r4
     f64:	00009f50 	andeq	r9, r0, r0, asr pc
     f68:	00000000 	andeq	r0, r0, r0
     f6c:	00010000 	andeq	r0, r1, r0
     f70:	00000050 	andeq	r0, r0, r0, asr r0
     f74:	00000000 	andeq	r0, r0, r0
     f78:	f3000400 	vshl.u8	d0, d0, d0
     f7c:	009f5001 	addseq	r5, pc, r1
     f80:	00000000 	andeq	r0, r0, r0
     f84:	01000000 	mrseq	r0, (UNDEF: 0)
     f88:	00005000 	andeq	r5, r0, r0
     f8c:	00000000 	andeq	r0, r0, r0
     f90:	00040000 	andeq	r0, r4, r0
     f94:	9f5001f3 	svcls	0x005001f3
	...
     fa0:	00500001 	subseq	r0, r0, r1
     fa4:	00000000 	andeq	r0, r0, r0
     fa8:	04000000 	streq	r0, [r0], #-0
     fac:	5001f300 	andpl	pc, r1, r0, lsl #6
     fb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     fc4:	01f30004 	mvnseq	r0, r4
     fc8:	00009f50 	andeq	r9, r0, r0, asr pc
     fcc:	00000000 	andeq	r0, r0, r0
     fd0:	00010000 	andeq	r0, r1, r0
     fd4:	00000050 	andeq	r0, r0, r0, asr r0
     fd8:	00000000 	andeq	r0, r0, r0
     fdc:	0008d000 	andeq	sp, r8, r0
     fe0:	0008dc08 	andeq	sp, r8, r8, lsl #24
     fe4:	51000108 	tstpl	r0, r8, lsl #2
     fe8:	080008dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp}
     fec:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
     ff0:	01f30004 	mvnseq	r0, r4
     ff4:	00009f51 	andeq	r9, r0, r1, asr pc
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    1000:	08e00800 	stmiaeq	r0!, {fp}^
    1004:	00020800 	andeq	r0, r2, r0, lsl #16
    1008:	08e09f30 	stmiaeq	r0!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    100c:	08e40800 	stmiaeq	r4!, {fp}^
    1010:	00060800 	andeq	r0, r6, r0, lsl #16
    1014:	ff080075 			; <UNDEFINED> instruction: 0xff080075
    1018:	08e49f1a 	stmiaeq	r4!, {r1, r3, r4, r8, r9, sl, fp, ip, pc}^
    101c:	096c0800 	stmdbeq	ip!, {fp}^
    1020:	00010800 	andeq	r0, r1, r0, lsl #16
    1024:	00000055 	andeq	r0, r0, r5, asr r0
    1028:	00000000 	andeq	r0, r0, r0
    102c:	0008d000 	andeq	sp, r8, r0
    1030:	0008ee08 	andeq	lr, r8, r8, lsl #28
    1034:	30000208 	andcc	r0, r0, r8, lsl #4
    1038:	0008f69f 	muleq	r8, pc, r6	; <UNPREDICTABLE>
    103c:	00092608 	andeq	r2, r9, r8, lsl #12
    1040:	56000108 	strpl	r0, [r0], -r8, lsl #2
    1044:	0800093a 	stmdaeq	r0, {r1, r3, r4, r5, r8, fp}
    1048:	0800096a 	stmdaeq	r0, {r1, r3, r5, r6, r8, fp}
    104c:	00560001 	subseq	r0, r6, r1
    1050:	00000000 	andeq	r0, r0, r0
    1054:	d0000000 	andle	r0, r0, r0
    1058:	ee080008 	cdp	0, 0, cr0, cr8, cr8, {0}
    105c:	02080008 	andeq	r0, r8, #8
    1060:	ee9f3000 	cdp	0, 9, cr3, cr15, cr0, {0}
    1064:	26080008 	strcs	r0, [r8], -r8
    1068:	01080009 	tsteq	r8, r9
    106c:	092c5200 	stmdbeq	ip!, {r9, ip, lr}
    1070:	092e0800 	stmdbeq	lr!, {fp}
    1074:	00020800 	andeq	r0, r2, r0, lsl #16
    1078:	092e9f30 	stmdbeq	lr!, {r4, r5, r8, r9, sl, fp, ip, pc}
    107c:	096a0800 	stmdbeq	sl!, {fp}^
    1080:	00010800 	andeq	r0, r1, r0, lsl #16
    1084:	00000052 	andeq	r0, r0, r2, asr r0
    1088:	00000000 	andeq	r0, r0, r0
    108c:	0008d000 	andeq	sp, r8, r0
    1090:	0008ee08 	andeq	lr, r8, r8, lsl #28
    1094:	30000208 	andcc	r0, r0, r8, lsl #4
    1098:	0008f29f 	muleq	r8, pc, r2	; <UNPREDICTABLE>
    109c:	0008fa08 	andeq	pc, r8, r8, lsl #20
    10a0:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    10a4:	080008fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, fp}
    10a8:	080008fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp}
    10ac:	00720005 	rsbseq	r0, r2, r5
    10b0:	fc9f2432 	ldc2	4, cr2, [pc], {50}	; 0x32
    10b4:	08080008 	stmdaeq	r8, {r3}
    10b8:	01080009 	tsteq	r8, r9
    10bc:	09085700 	stmdbeq	r8, {r8, r9, sl, ip, lr}
    10c0:	091e0800 	ldmdbeq	lr, {fp}
    10c4:	00050800 	andeq	r0, r5, r0, lsl #16
    10c8:	24320072 	ldrtcs	r0, [r2], #-114	; 0x72
    10cc:	0009369f 	muleq	r9, pc, r6	; <UNPREDICTABLE>
    10d0:	00093e08 	andeq	r3, r9, r8, lsl #28
    10d4:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    10d8:	0800093e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, fp}
    10dc:	08000940 	stmdaeq	r0, {r6, r8, fp}
    10e0:	00720005 	rsbseq	r0, r2, r5
    10e4:	409f2432 	addsmi	r2, pc, r2, lsr r4	; <UNPREDICTABLE>
    10e8:	4c080009 	stcmi	0, cr0, [r8], {9}
    10ec:	01080009 	tsteq	r8, r9
    10f0:	094c5700 	stmdbeq	ip, {r8, r9, sl, ip, lr}^
    10f4:	09620800 	stmdbeq	r2!, {fp}^
    10f8:	00050800 	andeq	r0, r5, r0, lsl #16
    10fc:	24320072 	ldrtcs	r0, [r2], #-114	; 0x72
    1100:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1104:	00000000 	andeq	r0, r0, r0
    1108:	0008d000 	andeq	sp, r8, r0
    110c:	0008ec08 	andeq	lr, r8, r8, lsl #24
    1110:	30000208 	andcc	r0, r0, r8, lsl #4
    1114:	0008ec9f 	muleq	r8, pc, ip	; <UNPREDICTABLE>
    1118:	00092608 	andeq	r2, r9, r8, lsl #12
    111c:	54000108 	strpl	r0, [r0], #-264	; 0x108
    1120:	0800092c 	stmdaeq	r0, {r2, r3, r5, r8, fp}
    1124:	0800096a 	stmdaeq	r0, {r1, r3, r5, r6, r8, fp}
    1128:	00540001 	subseq	r0, r4, r1
    112c:	00000000 	andeq	r0, r0, r0
    1130:	d0000000 	andle	r0, r0, r0
    1134:	ee080008 	cdp	0, 0, cr0, cr8, cr8, {0}
    1138:	02080008 	andeq	r0, r8, #8
    113c:	fc9f3000 	ldc2	0, cr3, [pc], {0}
    1140:	04080008 	streq	r0, [r8], #-8
    1144:	05080009 	streq	r0, [r8, #-9]
    1148:	00773f00 	rsbseq	r3, r7, r0, lsl #30
    114c:	09049f24 	stmdbeq	r4, {r2, r5, r8, r9, sl, fp, ip, pc}
    1150:	091e0800 	ldmdbeq	lr, {fp}
    1154:	00010800 	andeq	r0, r1, r0, lsl #16
    1158:	0009405c 	andeq	r4, r9, ip, asr r0
    115c:	00094808 	andeq	r4, r9, r8, lsl #16
    1160:	3f000508 	svccc	0x00000508
    1164:	9f240077 	svcls	0x00240077
    1168:	08000948 	stmdaeq	r0, {r3, r6, r8, fp}
    116c:	08000962 	stmdaeq	r0, {r1, r5, r6, r8, fp}
    1170:	005c0001 	subseq	r0, ip, r1
	...
    1180:	01000000 	mrseq	r0, (UNDEF: 0)
    1184:	00005000 	andeq	r5, r0, r0
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00040000 	andeq	r0, r4, r0
    1190:	9f5001f3 	svcls	0x005001f3
	...
    11a4:	9f300002 	svcls	0x00300002
	...
    11b0:	0071000c 	rsbseq	r0, r1, ip
    11b4:	1affff0a 	bne	de4 <__Stack_Size+0x9e4>
    11b8:	301a0073 	andscc	r0, sl, r3, ror r0
    11bc:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
    11cc:	00010000 	andeq	r0, r1, r0
    11d0:	00000050 	andeq	r0, r0, r0, asr r0
    11d4:	00000000 	andeq	r0, r0, r0
    11d8:	f3000400 	vshl.u8	d0, d0, d0
    11dc:	009f5001 	addseq	r5, pc, r1
	...
    11ec:	01000000 	mrseq	r0, (UNDEF: 0)
    11f0:	00005000 	andeq	r5, r0, r0
    11f4:	00000000 	andeq	r0, r0, r0
    11f8:	00040000 	andeq	r0, r4, r0
    11fc:	9f5001f3 	svcls	0x005001f3
	...
    1210:	9f300002 	svcls	0x00300002
	...
    121c:	0071000c 	rsbseq	r0, r1, ip
    1220:	1affff0a 	bne	e50 <__Stack_Size+0xa50>
    1224:	301a0073 	andscc	r0, sl, r3, ror r0
    1228:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
    1238:	00010000 	andeq	r0, r1, r0
    123c:	00000050 	andeq	r0, r0, r0, asr r0
    1240:	00000000 	andeq	r0, r0, r0
    1244:	f3000400 	vshl.u8	d0, d0, d0
    1248:	009f5001 	addseq	r5, pc, r1
	...
    1258:	04000000 	streq	r0, [r0], #-0
    125c:	243c4000 	ldrtcs	r4, [ip], #-0
    1260:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1264:	00000000 	andeq	r0, r0, r0
    1268:	53000100 	movwpl	r0, #256	; 0x100
	...
    127c:	00500001 	subseq	r0, r0, r1
    1280:	00000000 	andeq	r0, r0, r0
    1284:	04000000 	streq	r0, [r0], #-0
    1288:	5001f300 	andpl	pc, r1, r0, lsl #6
    128c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    129c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    12a8:	01f30004 	mvnseq	r0, r4
    12ac:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    12bc:	00020000 	andeq	r0, r2, r0
    12c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    12c4:	00000000 	andeq	r0, r0, r0
    12c8:	00010000 	andeq	r0, r1, r0
    12cc:	00000052 	andeq	r0, r0, r2, asr r0
    12d0:	00000000 	andeq	r0, r0, r0
    12d4:	70000b00 	andvc	r0, r0, r0, lsl #22
    12d8:	1aff0800 	bne	fffc32e0 <SCS_BASE+0x1ffb52e0>
    12dc:	00722434 	rsbseq	r2, r2, r4, lsr r4
    12e0:	00009f21 	andeq	r9, r0, r1, lsr #30
    12e4:	00000000 	andeq	r0, r0, r0
    12e8:	00010000 	andeq	r0, r1, r0
    12ec:	00000050 	andeq	r0, r0, r0, asr r0
	...
    12fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1308:	01f30004 	mvnseq	r0, r4
    130c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    131c:	00020000 	andeq	r0, r2, r0
    1320:	00009f30 	andeq	r9, r0, r0, lsr pc
    1324:	00000000 	andeq	r0, r0, r0
    1328:	00010000 	andeq	r0, r1, r0
    132c:	00000054 	andeq	r0, r0, r4, asr r0
    1330:	00000000 	andeq	r0, r0, r0
    1334:	f3000800 	vsub.i8	d0, d0, d0
    1338:	ff0a5001 			; <UNDEFINED> instruction: 0xff0a5001
    133c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    134c:	02000000 	andeq	r0, r0, #0
    1350:	009f3000 	addseq	r3, pc, r0
    1354:	00000000 	andeq	r0, r0, r0
    1358:	0b000000 	bleq	1360 <__Stack_Size+0xf60>
    135c:	00703300 	rsbseq	r3, r0, r0, lsl #6
    1360:	1a243f4e 	bne	9110a0 <__Stack_Size+0x910ca0>
    1364:	9f242540 	svcls	0x00242540
	...
    1370:	9f300002 	svcls	0x00300002
	...
    1384:	9f300002 	svcls	0x00300002
	...
    1390:	00530001 	subseq	r0, r3, r1
	...
    13a0:	02000000 	andeq	r0, r0, #0
    13a4:	009f3000 	addseq	r3, pc, r0
    13a8:	00000000 	andeq	r0, r0, r0
    13ac:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    13b0:	4e007000 	cdpmi	0, 0, cr7, cr0, cr0, {0}
    13b4:	401a243f 	andsmi	r2, sl, pc, lsr r4
    13b8:	00009f25 	andeq	r9, r0, r5, lsr #30
    13bc:	00000000 	andeq	r0, r0, r0
    13c0:	000a0000 	andeq	r0, sl, r0
    13c4:	4e5001f3 	mrcmi	1, 2, r0, cr0, cr3, {7}
    13c8:	401a243f 	andsmi	r2, sl, pc, lsr r4
    13cc:	00009f25 	andeq	r9, r0, r5, lsr #30
	...
    13dc:	00010000 	andeq	r0, r1, r0
    13e0:	00000050 	andeq	r0, r0, r0, asr r0
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	f3000400 	vshl.u8	d0, d0, d0
    13ec:	009f5001 	addseq	r5, pc, r1
	...
    13fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1400:	00005100 	andeq	r5, r0, r0, lsl #2
    1404:	00000000 	andeq	r0, r0, r0
    1408:	00040000 	andeq	r0, r4, r0
    140c:	9f5101f3 	svcls	0x005101f3
	...
    1420:	9f300002 	svcls	0x00300002
	...
    142c:	733f0005 	teqvc	pc, #5
    1430:	009f2400 	addseq	r2, pc, r0, lsl #8
    1434:	00000000 	andeq	r0, r0, r0
    1438:	01000000 	mrseq	r0, (UNDEF: 0)
    143c:	00005200 	andeq	r5, r0, r0, lsl #4
    1440:	00000000 	andeq	r0, r0, r0
    1444:	00050000 	andeq	r0, r5, r0
    1448:	2400733f 	strcs	r7, [r0], #-831	; 0x33f
    144c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    145c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1468:	01f30004 	mvnseq	r0, r4
    146c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    147c:	00020000 	andeq	r0, r2, r0
    1480:	00009f30 	andeq	r9, r0, r0, lsr pc
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00010000 	andeq	r0, r1, r0
    148c:	00000052 	andeq	r0, r0, r2, asr r0
    1490:	00000000 	andeq	r0, r0, r0
    1494:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    14a0:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
    14a4:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
    14a8:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    14ac:	fc080009 	stc2	0, cr0, [r8], {9}
    14b0:	04080009 	streq	r0, [r8], #-9
    14b4:	5001f300 	andpl	pc, r1, r0, lsl #6
    14b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    14bc:	00000000 	andeq	r0, r0, r0
    14c0:	0009e800 	andeq	lr, r9, r0, lsl #16
    14c4:	0009f208 	andeq	pc, r9, r8, lsl #4
    14c8:	51000108 	tstpl	r0, r8, lsl #2
    14cc:	080009f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp}
    14d0:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
    14d4:	01f30004 	mvnseq	r0, r4
    14d8:	00009f51 	andeq	r9, r0, r1, asr pc
    14dc:	00000000 	andeq	r0, r0, r0
    14e0:	09e80000 	stmibeq	r8!, {}^	; <UNPREDICTABLE>
    14e4:	09ec0800 	stmibeq	ip!, {fp}^
    14e8:	00020800 	andeq	r0, r2, r0, lsl #16
    14ec:	09ec9f30 	stmibeq	ip!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    14f0:	09f00800 	ldmibeq	r0!, {fp}^
    14f4:	00090800 	andeq	r0, r9, r0, lsl #16
    14f8:	ff110072 			; <UNDEFINED> instruction: 0xff110072
    14fc:	1a7e83ff 	bne	1fa2500 <__Stack_Size+0x1fa2100>
    1500:	0009f09f 	muleq	r9, pc, r0	; <UNPREDICTABLE>
    1504:	0009f408 	andeq	pc, r9, r8, lsl #8
    1508:	52000108 	andpl	r0, r0, #8, 2
    150c:	080009f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp}
    1510:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
    1514:	00500001 	subseq	r0, r0, r1
    1518:	00000000 	andeq	r0, r0, r0
    151c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1520:	1208000a 	andne	r0, r8, #10
    1524:	0108000a 	tsteq	r8, sl
    1528:	0a125000 	beq	495530 <__Stack_Size+0x495130>
    152c:	0a1c0800 	beq	703534 <__Stack_Size+0x703134>
    1530:	00040800 	andeq	r0, r4, r0, lsl #16
    1534:	9f5001f3 	svcls	0x005001f3
	...
    1540:	08000a08 	stmdaeq	r0, {r3, r9, fp}
    1544:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
    1548:	9f300002 	svcls	0x00300002
    154c:	08000a0c 	stmdaeq	r0, {r2, r3, r9, fp}
    1550:	08000a12 	stmdaeq	r0, {r1, r4, r9, fp}
    1554:	12520001 	subsne	r0, r2, #1
    1558:	1c08000a 	stcne	0, cr0, [r8], {10}
    155c:	0108000a 	tsteq	r8, sl
    1560:	00005000 	andeq	r5, r0, r0
    1564:	00000000 	andeq	r0, r0, r0
    1568:	0a2c0000 	beq	b01570 <__Stack_Size+0xb01170>
    156c:	0a360800 	beq	d83574 <__Stack_Size+0xd83174>
    1570:	00010800 	andeq	r0, r1, r0, lsl #16
    1574:	000a3650 	andeq	r3, sl, r0, asr r6
    1578:	000a4008 	andeq	r4, sl, r8
    157c:	f3000408 	vshl.u8	d0, d8, d0
    1580:	009f5001 	addseq	r5, pc, r1
    1584:	00000000 	andeq	r0, r0, r0
    1588:	2c000000 	stccs	0, cr0, [r0], {-0}
    158c:	3008000a 	andcc	r0, r8, sl
    1590:	0208000a 	andeq	r0, r8, #10
    1594:	309f3000 	addscc	r3, pc, r0
    1598:	3608000a 	strcc	r0, [r8], -sl
    159c:	0108000a 	tsteq	r8, sl
    15a0:	0a365200 	beq	d95da8 <__Stack_Size+0xd959a8>
    15a4:	0a400800 	beq	10035ac <__Stack_Size+0x10031ac>
    15a8:	00010800 	andeq	r0, r1, r0, lsl #16
    15ac:	00000050 	andeq	r0, r0, r0, asr r0
    15b0:	00000000 	andeq	r0, r0, r0
    15b4:	000a4000 	andeq	r4, sl, r0
    15b8:	000a4a08 	andeq	r4, sl, r8, lsl #20
    15bc:	50000108 	andpl	r0, r0, r8, lsl #2
    15c0:	08000a4a 	stmdaeq	r0, {r1, r3, r6, r9, fp}
    15c4:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
    15c8:	01f30004 	mvnseq	r0, r4
    15cc:	00009f50 	andeq	r9, r0, r0, asr pc
    15d0:	00000000 	andeq	r0, r0, r0
    15d4:	0a400000 	beq	10015dc <__Stack_Size+0x10011dc>
    15d8:	0a440800 	beq	11035e0 <__Stack_Size+0x11031e0>
    15dc:	00020800 	andeq	r0, r2, r0, lsl #16
    15e0:	0a449f30 	beq	11292a8 <__Stack_Size+0x1128ea8>
    15e4:	0a4a0800 	beq	12835ec <__Stack_Size+0x12831ec>
    15e8:	00010800 	andeq	r0, r1, r0, lsl #16
    15ec:	000a4a52 	andeq	r4, sl, r2, asr sl
    15f0:	000a5408 	andeq	r5, sl, r8, lsl #8
    15f4:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    1600:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
    1604:	08000a60 	stmdaeq	r0, {r5, r6, r9, fp}
    1608:	60500001 	subsvs	r0, r0, r1
    160c:	6808000a 	stmdavs	r8, {r1, r3}
    1610:	0408000a 	streq	r0, [r8], #-10
    1614:	5001f300 	andpl	pc, r1, r0, lsl #6
    1618:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    161c:	00000000 	andeq	r0, r0, r0
    1620:	000a5400 	andeq	r5, sl, r0, lsl #8
    1624:	000a5808 	andeq	r5, sl, r8, lsl #16
    1628:	30000208 	andcc	r0, r0, r8, lsl #4
    162c:	000a589f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    1630:	000a6008 	andeq	r6, sl, r8
    1634:	52000108 	andpl	r0, r0, #8, 2
    1638:	08000a60 	stmdaeq	r0, {r5, r6, r9, fp}
    163c:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
    1640:	00500001 	subseq	r0, r0, r1
	...
    1650:	01000000 	mrseq	r0, (UNDEF: 0)
    1654:	00005000 	andeq	r5, r0, r0
    1658:	00000000 	andeq	r0, r0, r0
    165c:	00040000 	andeq	r0, r4, r0
    1660:	9f5001f3 	svcls	0x005001f3
	...
    166c:	00500001 	subseq	r0, r0, r1
    1670:	00000000 	andeq	r0, r0, r0
    1674:	04000000 	streq	r0, [r0], #-0
    1678:	5001f300 	andpl	pc, r1, r0, lsl #6
    167c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    168c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1698:	01f30004 	mvnseq	r0, r4
    169c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    16ac:	00020000 	andeq	r0, r2, r0
    16b0:	00009f30 	andeq	r9, r0, r0, lsr pc
    16b4:	00000000 	andeq	r0, r0, r0
    16b8:	00010000 	andeq	r0, r1, r0
    16bc:	00000052 	andeq	r0, r0, r2, asr r0
    16c0:	00000000 	andeq	r0, r0, r0
    16c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    16d8:	00500001 	subseq	r0, r0, r1
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	04000000 	streq	r0, [r0], #-0
    16e4:	5001f300 	andpl	pc, r1, r0, lsl #6
    16e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    16f8:	30000200 	andcc	r0, r0, r0, lsl #4
    16fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1700:	00000000 	andeq	r0, r0, r0
    1704:	72000500 	andvc	r0, r0, #0, 10
    1708:	9f1a3c00 	svcls	0x001a3c00
	...
    1714:	00520001 	subseq	r0, r2, r1
    1718:	00000000 	andeq	r0, r0, r0
    171c:	01000000 	mrseq	r0, (UNDEF: 0)
    1720:	00005200 	andeq	r5, r0, r0, lsl #4
    1724:	00000000 	andeq	r0, r0, r0
    1728:	00080000 	andeq	r0, r8, r0
    172c:	f0080071 			; <UNDEFINED> instruction: 0xf0080071
    1730:	9f25341a 	svcls	0x0025341a
	...
    173c:	00740009 	rsbseq	r0, r4, r9
    1740:	1a07000a 	bne	1c1770 <__Stack_Size+0x1c1370>
    1744:	009f2538 	addseq	r2, pc, r8, lsr r5	; <UNPREDICTABLE>
    1748:	00000000 	andeq	r0, r0, r0
    174c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1750:	0a007400 	beq	1e758 <__Stack_Size+0x1e358>
    1754:	3b1a3800 	blcc	68f75c <__Stack_Size+0x68f35c>
    1758:	00009f25 	andeq	r9, r0, r5, lsr #30
    175c:	00000000 	andeq	r0, r0, r0
    1760:	00090000 	andeq	r0, r9, r0
    1764:	000a0073 	andeq	r0, sl, r3, ror r0
    1768:	253e1ac0 	ldrcs	r1, [lr, #-2752]!	; 0xac0
    176c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    177c:	30000200 	andcc	r0, r0, r0, lsl #4
    1780:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1784:	00000000 	andeq	r0, r0, r0
    1788:	72000700 	andvc	r0, r0, #0, 14
    178c:	24414e00 	strbcs	r4, [r1], #-3584	; 0xe00
    1790:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1794:	00000000 	andeq	r0, r0, r0
    1798:	00010000 	andeq	r0, r1, r0
    179c:	00000052 	andeq	r0, r0, r2, asr r0
	...
    17ac:	30000200 	andcc	r0, r0, r0, lsl #4
    17b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17b4:	00000000 	andeq	r0, r0, r0
    17b8:	71000700 	tstvc	r0, r0, lsl #14
    17bc:	243c4000 	ldrtcs	r4, [ip], #-0
    17c0:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    17d0:	00020000 	andeq	r0, r2, r0
    17d4:	00009f30 	andeq	r9, r0, r0, lsr pc
    17d8:	00000000 	andeq	r0, r0, r0
    17dc:	00130000 	andseq	r0, r3, r0
    17e0:	f0080071 			; <UNDEFINED> instruction: 0xf0080071
    17e4:	0325341a 	teqeq	r5, #436207616	; 0x1a000000
    17e8:	00000000 	andeq	r0, r0, r0
    17ec:	08019422 	stmdaeq	r1, {r1, r5, sl, ip, pc}
    17f0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    17f4:	00000000 	andeq	r0, r0, r0
    17f8:	14000000 	strne	r0, [r0], #-0
    17fc:	0a007400 	beq	1e804 <__Stack_Size+0x1e404>
    1800:	381a0700 	ldmdacc	sl, {r8, r9, sl}
    1804:	00000325 	andeq	r0, r0, r5, lsr #6
    1808:	94220000 	strtls	r0, [r2], #-0
    180c:	1aff0801 	bne	fffc3818 <SCS_BASE+0x1ffb5818>
    1810:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1814:	00000000 	andeq	r0, r0, r0
    1818:	74001400 	strvc	r1, [r0], #-1024	; 0x400
    181c:	38000a00 	stmdacc	r0, {r9, fp}
    1820:	03253b1a 	teqeq	r5, #26624	; 0x6800
    1824:	00000000 	andeq	r0, r0, r0
    1828:	08019422 	stmdaeq	r1, {r1, r5, sl, ip, pc}
    182c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    1830:	00000000 	andeq	r0, r0, r0
    1834:	14000000 	strne	r0, [r0], #-0
    1838:	0a007300 	beq	1e440 <__Stack_Size+0x1e040>
    183c:	3e1ac000 	cdpcc	0, 1, cr12, cr10, cr0, {0}
    1840:	00000325 	andeq	r0, r0, r5, lsr #6
    1844:	94220000 	strtls	r0, [r2], #-0
    1848:	1aff0801 	bne	fffc3854 <SCS_BASE+0x1ffb5854>
    184c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    185c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1868:	01f30004 	mvnseq	r0, r4
    186c:	00009f50 	andeq	r9, r0, r0, asr pc
    1870:	00000000 	andeq	r0, r0, r0
    1874:	00010000 	andeq	r0, r1, r0
    1878:	00000050 	andeq	r0, r0, r0, asr r0
    187c:	00000000 	andeq	r0, r0, r0
    1880:	f3000400 	vshl.u8	d0, d0, d0
    1884:	009f5001 	addseq	r5, pc, r1
    1888:	00000000 	andeq	r0, r0, r0
    188c:	74000000 	strvc	r0, [r0], #-0
    1890:	7c08000a 	stcvc	0, cr0, [r8], {10}
    1894:	0108000a 	tsteq	r8, sl
    1898:	0a7c5000 	beq	1f158a0 <__Stack_Size+0x1f154a0>
    189c:	0a7e0800 	beq	1f838a4 <__Stack_Size+0x1f834a4>
    18a0:	00040800 	andeq	r0, r4, r0, lsl #16
    18a4:	9f5001f3 	svcls	0x005001f3
    18a8:	08000a7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, fp}
    18ac:	08000a82 	stmdaeq	r0, {r1, r7, r9, fp}
    18b0:	82500001 	subshi	r0, r0, #1
    18b4:	8c08000a 	stchi	0, cr0, [r8], {10}
    18b8:	0408000a 	streq	r0, [r8], #-10
    18bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    18c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    18d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    18dc:	01f30004 	mvnseq	r0, r4
    18e0:	00009f50 	andeq	r9, r0, r0, asr pc
    18e4:	00000000 	andeq	r0, r0, r0
    18e8:	00010000 	andeq	r0, r1, r0
    18ec:	00000050 	andeq	r0, r0, r0, asr r0
    18f0:	00000000 	andeq	r0, r0, r0
    18f4:	f3000400 	vshl.u8	d0, d0, d0
    18f8:	009f5001 	addseq	r5, pc, r1
	...
    1908:	01000000 	mrseq	r0, (UNDEF: 0)
    190c:	00005000 	andeq	r5, r0, r0
    1910:	00000000 	andeq	r0, r0, r0
    1914:	00040000 	andeq	r0, r4, r0
    1918:	9f5001f3 	svcls	0x005001f3
	...
    1924:	00500001 	subseq	r0, r0, r1
    1928:	00000000 	andeq	r0, r0, r0
    192c:	04000000 	streq	r0, [r0], #-0
    1930:	5001f300 	andpl	pc, r1, r0, lsl #6
    1934:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1950:	01f30004 	mvnseq	r0, r4
    1954:	00009f50 	andeq	r9, r0, r0, asr pc
    1958:	00000000 	andeq	r0, r0, r0
    195c:	00010000 	andeq	r0, r1, r0
    1960:	00000050 	andeq	r0, r0, r0, asr r0
    1964:	00000000 	andeq	r0, r0, r0
    1968:	f3000400 	vshl.u8	d0, d0, d0
    196c:	009f5001 	addseq	r5, pc, r1
    1970:	00000000 	andeq	r0, r0, r0
    1974:	8c000000 	stchi	0, cr0, [r0], {-0}
    1978:	a408000a 	strge	r0, [r8], #-10
    197c:	0108000a 	tsteq	r8, sl
    1980:	0aa45000 	beq	fe915988 <SCS_BASE+0x1e907988>
    1984:	0ab40800 	beq	fed0398c <SCS_BASE+0x1ecf598c>
    1988:	00040800 	andeq	r0, r4, r0, lsl #16
    198c:	9f5001f3 	svcls	0x005001f3
	...
    1998:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    199c:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
    19a0:	9f300002 	svcls	0x00300002
    19a4:	08000a8e 	stmdaeq	r0, {r1, r2, r3, r7, r9, fp}
    19a8:	08000a96 	stmdaeq	r0, {r1, r2, r4, r7, r9, fp}
    19ac:	96530001 	ldrbls	r0, [r3], -r1
    19b0:	9808000a 	stmdals	r8, {r1, r3}
    19b4:	0508000a 	streq	r0, [r8, #-10]
    19b8:	35007000 	strcc	r7, [r0, #-0]
    19bc:	0a989f25 	beq	fe629658 <SCS_BASE+0x1e61b658>
    19c0:	0a9e0800 	beq	fe7839c8 <SCS_BASE+0x1e7759c8>
    19c4:	00010800 	andeq	r0, r1, r0, lsl #16
    19c8:	000a9e53 	andeq	r9, sl, r3, asr lr
    19cc:	000aa008 	andeq	sl, sl, r8
    19d0:	70000508 	andvc	r0, r0, r8, lsl #10
    19d4:	9f253500 	svcls	0x00253500
    19d8:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
    19dc:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
    19e0:	00700008 	rsbseq	r0, r0, r8
    19e4:	ff081a4f 			; <UNDEFINED> instruction: 0xff081a4f
    19e8:	00009f1a 	andeq	r9, r0, sl, lsl pc
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	0a8c0000 	beq	fe3019f8 <SCS_BASE+0x1e2f39f8>
    19f4:	0a960800 	beq	fe5839fc <SCS_BASE+0x1e5759fc>
    19f8:	00020800 	andeq	r0, r2, r0, lsl #16
    19fc:	0a969f30 	beq	fe5a96c4 <SCS_BASE+0x1e59b6c4>
    1a00:	0a980800 	beq	fe603a08 <SCS_BASE+0x1e5f5a08>
    1a04:	00010800 	andeq	r0, r1, r0, lsl #16
    1a08:	000a9853 	andeq	r9, sl, r3, asr r8
    1a0c:	000a9e08 	andeq	r9, sl, r8, lsl #28
    1a10:	30000208 	andcc	r0, r0, r8, lsl #4
    1a14:	000a9e9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    1a18:	000ab408 	andeq	fp, sl, r8, lsl #8
    1a1c:	53000108 	movwpl	r0, #264	; 0x108
	...
    1a28:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    1a2c:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
    1a30:	9f300002 	svcls	0x00300002
    1a34:	08000aa0 	stmdaeq	r0, {r5, r7, r9, fp}
    1a38:	08000aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp}
    1a3c:	0073000d 	rsbseq	r0, r3, sp
    1a40:	1a4f0070 	bne	13c1c08 <__Stack_Size+0x13c1808>
    1a44:	251aff08 	ldrcs	pc, [sl, #-3848]	; 0xf08
    1a48:	009f1a31 	addseq	r1, pc, r1, lsr sl	; <UNPREDICTABLE>
    1a4c:	00000000 	andeq	r0, r0, r0
    1a50:	ba000000 	blt	1a58 <__Stack_Size+0x1658>
    1a54:	d608000a 	strle	r0, [r8], -sl
    1a58:	0208000a 	andeq	r0, r8, #10
    1a5c:	d69f3000 	ldrle	r3, [pc], r0
    1a60:	d808000a 	stmdale	r8, {r1, r3}
    1a64:	0708000a 	streq	r0, [r8, -sl]
    1a68:	48007000 	stmdami	r0, {ip, sp, lr}
    1a6c:	9f2e3024 	svcls	0x002e3024
	...
    1a78:	08000ac0 	stmdaeq	r0, {r6, r7, r9, fp}
    1a7c:	08000ad2 	stmdaeq	r0, {r1, r4, r6, r7, r9, fp}
    1a80:	00500001 	subseq	r0, r0, r1
	...
    1a90:	01000000 	mrseq	r0, (UNDEF: 0)
    1a94:	00005000 	andeq	r5, r0, r0
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	00040000 	andeq	r0, r4, r0
    1aa0:	9f5001f3 	svcls	0x005001f3
	...
    1ab4:	9f300002 	svcls	0x00300002
	...
    1ac0:	0070000b 	rsbseq	r0, r0, fp
    1ac4:	731aff08 	tstvc	sl, #8, 30
    1ac8:	2e301a00 	vaddcs.f32	s2, s0, s0
    1acc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ad0:	00000000 	andeq	r0, r0, r0
    1ad4:	f3000c00 			; <UNDEFINED> instruction: 0xf3000c00
    1ad8:	ff085001 			; <UNDEFINED> instruction: 0xff085001
    1adc:	1a00731a 	bne	1e74c <__Stack_Size+0x1e34c>
    1ae0:	009f2e30 	addseq	r2, pc, r0, lsr lr	; <UNPREDICTABLE>
	...
    1af0:	01000000 	mrseq	r0, (UNDEF: 0)
    1af4:	00005100 	andeq	r5, r0, r0, lsl #2
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	00040000 	andeq	r0, r4, r0
    1b00:	9f5101f3 	svcls	0x005101f3
	...
    1b14:	00520001 	subseq	r0, r2, r1
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	04000000 	streq	r0, [r0], #-0
    1b20:	5201f300 	andpl	pc, r1, #0, 6
    1b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b34:	53000100 	movwpl	r0, #256	; 0x100
	...
    1b40:	01f30004 	mvnseq	r0, r4
    1b44:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    1b54:	00020000 	andeq	r0, r2, r0
    1b58:	00009f30 	andeq	r9, r0, r0, lsr pc
    1b5c:	00000000 	andeq	r0, r0, r0
    1b60:	00010000 	andeq	r0, r1, r0
    1b64:	00000055 	andeq	r0, r0, r5, asr r0
    1b68:	00000000 	andeq	r0, r0, r0
    1b6c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1b80:	9f300002 	svcls	0x00300002
	...
    1b8c:	00540001 	subseq	r0, r4, r1
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	01000000 	mrseq	r0, (UNDEF: 0)
    1b98:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1ba8:	00010000 	andeq	r0, r1, r0
    1bac:	00000051 	andeq	r0, r0, r1, asr r0
    1bb0:	00000000 	andeq	r0, r0, r0
    1bb4:	f3000400 	vshl.u8	d0, d0, d0
    1bb8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    1bc8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bcc:	00005200 	andeq	r5, r0, r0, lsl #4
    1bd0:	00000000 	andeq	r0, r0, r0
    1bd4:	00040000 	andeq	r0, r4, r0
    1bd8:	9f5201f3 	svcls	0x005201f3
	...
    1bec:	00530001 	subseq	r0, r3, r1
    1bf0:	00000000 	andeq	r0, r0, r0
    1bf4:	04000000 	streq	r0, [r0], #-0
    1bf8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    1bfc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1c0c:	30000200 	andcc	r0, r0, r0, lsl #4
    1c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c14:	00000000 	andeq	r0, r0, r0
    1c18:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    1c24:	00730008 	rsbseq	r0, r3, r8
    1c28:	0075243c 	rsbseq	r2, r5, ip, lsr r4
    1c2c:	00009f21 	andeq	r9, r0, r1, lsr #30
    1c30:	00000000 	andeq	r0, r0, r0
    1c34:	00090000 	andeq	r0, r9, r0
    1c38:	3c5301f3 	ldfcce	f0, [r3], {243}	; 0xf3
    1c3c:	21007524 	tstcs	r0, r4, lsr #10
    1c40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c44:	00000000 	andeq	r0, r0, r0
    1c48:	53000100 	movwpl	r0, #256	; 0x100
	...
    1c5c:	9f300002 	svcls	0x00300002
	...
    1c68:	00540001 	subseq	r0, r4, r1
    1c6c:	00000000 	andeq	r0, r0, r0
    1c70:	01000000 	mrseq	r0, (UNDEF: 0)
    1c74:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1c84:	00020000 	andeq	r0, r2, r0
    1c88:	00009f30 	andeq	r9, r0, r0, lsr pc
    1c8c:	00000000 	andeq	r0, r0, r0
    1c90:	00050000 	andeq	r0, r5, r0
    1c94:	24340071 	ldrtcs	r0, [r4], #-113	; 0x71
    1c98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c9c:	00000000 	andeq	r0, r0, r0
    1ca0:	f3000600 	vmax.u8	d0, d0, d0
    1ca4:	24345101 	ldrtcs	r5, [r4], #-257	; 0x101
    1ca8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1cb8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1cc4:	01f30004 	mvnseq	r0, r4
    1cc8:	00009f50 	andeq	r9, r0, r0, asr pc
    1ccc:	00000000 	andeq	r0, r0, r0
    1cd0:	00010000 	andeq	r0, r1, r0
    1cd4:	00000050 	andeq	r0, r0, r0, asr r0
    1cd8:	00000000 	andeq	r0, r0, r0
    1cdc:	f3000400 	vshl.u8	d0, d0, d0
    1ce0:	009f5001 	addseq	r5, pc, r1
    1ce4:	00000000 	andeq	r0, r0, r0
    1ce8:	01000000 	mrseq	r0, (UNDEF: 0)
    1cec:	00005000 	andeq	r5, r0, r0
    1cf0:	00000000 	andeq	r0, r0, r0
    1cf4:	00040000 	andeq	r0, r4, r0
    1cf8:	9f5001f3 	svcls	0x005001f3
	...
    1d04:	00500001 	subseq	r0, r0, r1
    1d08:	00000000 	andeq	r0, r0, r0
    1d0c:	04000000 	streq	r0, [r0], #-0
    1d10:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d18:	00000000 	andeq	r0, r0, r0
    1d1c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1d28:	01f30004 	mvnseq	r0, r4
    1d2c:	00009f50 	andeq	r9, r0, r0, asr pc
    1d30:	00000000 	andeq	r0, r0, r0
    1d34:	00010000 	andeq	r0, r1, r0
    1d38:	00000050 	andeq	r0, r0, r0, asr r0
    1d3c:	00000000 	andeq	r0, r0, r0
    1d40:	f3000400 	vshl.u8	d0, d0, d0
    1d44:	009f5001 	addseq	r5, pc, r1
    1d48:	00000000 	andeq	r0, r0, r0
    1d4c:	01000000 	mrseq	r0, (UNDEF: 0)
    1d50:	00005000 	andeq	r5, r0, r0
    1d54:	00000000 	andeq	r0, r0, r0
    1d58:	00040000 	andeq	r0, r4, r0
    1d5c:	9f5001f3 	svcls	0x005001f3
	...
    1d68:	00500001 	subseq	r0, r0, r1
    1d6c:	00000000 	andeq	r0, r0, r0
    1d70:	04000000 	streq	r0, [r0], #-0
    1d74:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d7c:	00000000 	andeq	r0, r0, r0
    1d80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1d94:	00510001 	subseq	r0, r1, r1
    1d98:	00000000 	andeq	r0, r0, r0
    1d9c:	04000000 	streq	r0, [r0], #-0
    1da0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1da4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1db4:	30000200 	andcc	r0, r0, r0, lsl #4
    1db8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1dbc:	00000000 	andeq	r0, r0, r0
    1dc0:	52000100 	andpl	r0, r0, #0, 2
	...
    1dd4:	9f300002 	svcls	0x00300002
	...
    1de0:	00530001 	subseq	r0, r3, r1
    1de4:	00000000 	andeq	r0, r0, r0
    1de8:	01000000 	mrseq	r0, (UNDEF: 0)
    1dec:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1dfc:	00020000 	andeq	r0, r2, r0
    1e00:	00009f30 	andeq	r9, r0, r0, lsr pc
    1e04:	00000000 	andeq	r0, r0, r0
    1e08:	00010000 	andeq	r0, r1, r0
    1e0c:	00000054 	andeq	r0, r0, r4, asr r0
    1e10:	00000000 	andeq	r0, r0, r0
    1e14:	74000700 	strvc	r0, [r0], #-1792	; 0x700
    1e18:	7eff0a00 	vmovvc.f32	s1, #240	; 0xf0
    1e1c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1e20:	00000000 	andeq	r0, r0, r0
    1e24:	00080000 	andeq	r0, r8, r0
    1e28:	02940c71 	addseq	r0, r4, #28928	; 0x7100
    1e2c:	9f210075 	svcls	0x00210075
	...
    1e38:	00710006 	rsbseq	r0, r1, r6
    1e3c:	9f210075 	svcls	0x00210075
	...
    1e48:	00540001 	subseq	r0, r4, r1
	...
    1e58:	02000000 	andeq	r0, r0, #0
    1e5c:	009f3000 	addseq	r3, pc, r0
    1e60:	00000000 	andeq	r0, r0, r0
    1e64:	01000000 	mrseq	r0, (UNDEF: 0)
    1e68:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1e78:	00020000 	andeq	r0, r2, r0
    1e7c:	00009f30 	andeq	r9, r0, r0, lsr pc
    1e80:	00000000 	andeq	r0, r0, r0
    1e84:	00010000 	andeq	r0, r1, r0
    1e88:	00000053 	andeq	r0, r0, r3, asr r0
    1e8c:	00000000 	andeq	r0, r0, r0
    1e90:	53000100 	movwpl	r0, #256	; 0x100
	...
    1e9c:	00530001 	subseq	r0, r3, r1
    1ea0:	00000000 	andeq	r0, r0, r0
    1ea4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ea8:	00005500 	andeq	r5, r0, r0, lsl #10
    1eac:	00000000 	andeq	r0, r0, r0
    1eb0:	00010000 	andeq	r0, r1, r0
    1eb4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1ec4:	30000200 	andcc	r0, r0, r0, lsl #4
    1ec8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ecc:	00000000 	andeq	r0, r0, r0
    1ed0:	52000100 	andpl	r0, r0, #0, 2
	...
    1edc:	00550001 	subseq	r0, r5, r1
    1ee0:	00000000 	andeq	r0, r0, r0
    1ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ee8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1ef8:	00020000 	andeq	r0, r2, r0
    1efc:	00009f30 	andeq	r9, r0, r0, lsr pc
    1f00:	00000000 	andeq	r0, r0, r0
    1f04:	00010000 	andeq	r0, r1, r0
    1f08:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1f18:	30000200 	andcc	r0, r0, r0, lsl #4
    1f1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1f20:	00000000 	andeq	r0, r0, r0
    1f24:	53000100 	movwpl	r0, #256	; 0x100
	...
    1f30:	00530001 	subseq	r0, r3, r1
    1f34:	00000000 	andeq	r0, r0, r0
    1f38:	01000000 	mrseq	r0, (UNDEF: 0)
    1f3c:	00005300 	andeq	r5, r0, r0, lsl #6
    1f40:	00000000 	andeq	r0, r0, r0
    1f44:	00010000 	andeq	r0, r1, r0
    1f48:	00000053 	andeq	r0, r0, r3, asr r0
    1f4c:	00000000 	andeq	r0, r0, r0
    1f50:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    1f5c:	00530001 	subseq	r0, r3, r1
	...
    1f6c:	02000000 	andeq	r0, r0, #0
    1f70:	009f3000 	addseq	r3, pc, r0
    1f74:	00000000 	andeq	r0, r0, r0
    1f78:	01000000 	mrseq	r0, (UNDEF: 0)
    1f7c:	00005200 	andeq	r5, r0, r0, lsl #4
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	00010000 	andeq	r0, r1, r0
    1f88:	00000055 	andeq	r0, r0, r5, asr r0
    1f8c:	00000000 	andeq	r0, r0, r0
    1f90:	52000100 	andpl	r0, r0, #0, 2
	...
    1fa4:	00510001 	subseq	r0, r1, r1
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	04000000 	streq	r0, [r0], #-0
    1fb0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1fb4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1fc4:	30000200 	andcc	r0, r0, r0, lsl #4
    1fc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	52000100 	andpl	r0, r0, #0, 2
	...
    1fe4:	9f300002 	svcls	0x00300002
	...
    1ff0:	00530001 	subseq	r0, r3, r1
    1ff4:	00000000 	andeq	r0, r0, r0
    1ff8:	01000000 	mrseq	r0, (UNDEF: 0)
    1ffc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    200c:	00020000 	andeq	r0, r2, r0
    2010:	00009f30 	andeq	r9, r0, r0, lsr pc
    2014:	00000000 	andeq	r0, r0, r0
    2018:	00010000 	andeq	r0, r1, r0
    201c:	00000054 	andeq	r0, r0, r4, asr r0
    2020:	00000000 	andeq	r0, r0, r0
    2024:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2038:	00510001 	subseq	r0, r1, r1
    203c:	00000000 	andeq	r0, r0, r0
    2040:	04000000 	streq	r0, [r0], #-0
    2044:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2048:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    204c:	00000000 	andeq	r0, r0, r0
    2050:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    205c:	01f30004 	mvnseq	r0, r4
    2060:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2070:	00010000 	andeq	r0, r1, r0
    2074:	00000052 	andeq	r0, r0, r2, asr r0
    2078:	00000000 	andeq	r0, r0, r0
    207c:	f3000400 	vshl.u8	d0, d0, d0
    2080:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2090:	01000000 	mrseq	r0, (UNDEF: 0)
    2094:	00005100 	andeq	r5, r0, r0, lsl #2
    2098:	00000000 	andeq	r0, r0, r0
    209c:	00040000 	andeq	r0, r4, r0
    20a0:	9f5101f3 	svcls	0x005101f3
	...
    20ac:	00510001 	subseq	r0, r1, r1
    20b0:	00000000 	andeq	r0, r0, r0
    20b4:	04000000 	streq	r0, [r0], #-0
    20b8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    20bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    20cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    20d8:	01f30004 	mvnseq	r0, r4
    20dc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    20ec:	00020000 	andeq	r0, r2, r0
    20f0:	00009f30 	andeq	r9, r0, r0, lsr pc
    20f4:	00000000 	andeq	r0, r0, r0
    20f8:	00010000 	andeq	r0, r1, r0
    20fc:	00000053 	andeq	r0, r0, r3, asr r0
    2100:	00000000 	andeq	r0, r0, r0
    2104:	53000100 	movwpl	r0, #256	; 0x100
	...
    2110:	00510001 	subseq	r0, r1, r1
	...
    2120:	01000000 	mrseq	r0, (UNDEF: 0)
    2124:	00005000 	andeq	r5, r0, r0
    2128:	00000000 	andeq	r0, r0, r0
    212c:	00010000 	andeq	r0, r1, r0
    2130:	00000054 	andeq	r0, r0, r4, asr r0
    2134:	00000000 	andeq	r0, r0, r0
    2138:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2144:	00540001 	subseq	r0, r4, r1
	...
    2154:	01000000 	mrseq	r0, (UNDEF: 0)
    2158:	00005100 	andeq	r5, r0, r0, lsl #2
    215c:	00000000 	andeq	r0, r0, r0
    2160:	00040000 	andeq	r0, r4, r0
    2164:	9f5101f3 	svcls	0x005101f3
	...
    2178:	00520001 	subseq	r0, r2, r1
    217c:	00000000 	andeq	r0, r0, r0
    2180:	04000000 	streq	r0, [r0], #-0
    2184:	5201f300 	andpl	pc, r1, #0, 6
    2188:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2198:	53000100 	movwpl	r0, #256	; 0x100
	...
    21a4:	01f30004 	mvnseq	r0, r4
    21a8:	00009f53 	andeq	r9, r0, r3, asr pc
    21ac:	00000000 	andeq	r0, r0, r0
    21b0:	00010000 	andeq	r0, r1, r0
    21b4:	00000053 	andeq	r0, r0, r3, asr r0
    21b8:	00000000 	andeq	r0, r0, r0
    21bc:	f3000400 	vshl.u8	d0, d0, d0
    21c0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    21d0:	02000000 	andeq	r0, r0, #0
    21d4:	009f3000 	addseq	r3, pc, r0
    21d8:	00000000 	andeq	r0, r0, r0
    21dc:	01000000 	mrseq	r0, (UNDEF: 0)
    21e0:	00005300 	andeq	r5, r0, r0, lsl #6
    21e4:	00000000 	andeq	r0, r0, r0
    21e8:	00010000 	andeq	r0, r1, r0
    21ec:	00000053 	andeq	r0, r0, r3, asr r0
	...
    21fc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2208:	01f30004 	mvnseq	r0, r4
    220c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    221c:	00010000 	andeq	r0, r1, r0
    2220:	00000053 	andeq	r0, r0, r3, asr r0
    2224:	00000000 	andeq	r0, r0, r0
    2228:	f3000400 	vshl.u8	d0, d0, d0
    222c:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    223c:	02000000 	andeq	r0, r0, #0
    2240:	009f3000 	addseq	r3, pc, r0
    2244:	00000000 	andeq	r0, r0, r0
    2248:	06000000 	streq	r0, [r0], -r0
    224c:	08007400 	stmdaeq	r0, {sl, ip, sp, lr}
    2250:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    2254:	00000000 	andeq	r0, r0, r0
    2258:	01000000 	mrseq	r0, (UNDEF: 0)
    225c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    226c:	00010000 	andeq	r0, r1, r0
    2270:	00000050 	andeq	r0, r0, r0, asr r0
    2274:	00000000 	andeq	r0, r0, r0
    2278:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    228c:	00510001 	subseq	r0, r1, r1
    2290:	00000000 	andeq	r0, r0, r0
    2294:	04000000 	streq	r0, [r0], #-0
    2298:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    229c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    22ac:	52000100 	andpl	r0, r0, #0, 2
	...
    22b8:	01f30004 	mvnseq	r0, r4
    22bc:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    22cc:	00010000 	andeq	r0, r1, r0
    22d0:	00000053 	andeq	r0, r0, r3, asr r0
    22d4:	00000000 	andeq	r0, r0, r0
    22d8:	f3000400 	vshl.u8	d0, d0, d0
    22dc:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    22ec:	02000000 	andeq	r0, r0, #0
    22f0:	009f3000 	addseq	r3, pc, r0
    22f4:	00000000 	andeq	r0, r0, r0
    22f8:	05000000 	streq	r0, [r0, #-0]
    22fc:	37007300 	strcc	r7, [r0, -r0, lsl #6]
    2300:	00009f21 	andeq	r9, r0, r1, lsr #30
    2304:	00000000 	andeq	r0, r0, r0
    2308:	00050000 	andeq	r0, r5, r0
    230c:	21370073 	teqcs	r7, r3, ror r0
    2310:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2314:	00000000 	andeq	r0, r0, r0
    2318:	53000100 	movwpl	r0, #256	; 0x100
	...
    232c:	00500001 	subseq	r0, r0, r1
    2330:	00000000 	andeq	r0, r0, r0
    2334:	01000000 	mrseq	r0, (UNDEF: 0)
    2338:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2348:	00010000 	andeq	r0, r1, r0
    234c:	00000051 	andeq	r0, r0, r1, asr r0
    2350:	00000000 	andeq	r0, r0, r0
    2354:	f3000400 	vshl.u8	d0, d0, d0
    2358:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2368:	01000000 	mrseq	r0, (UNDEF: 0)
    236c:	00005200 	andeq	r5, r0, r0, lsl #4
    2370:	00000000 	andeq	r0, r0, r0
    2374:	00040000 	andeq	r0, r4, r0
    2378:	9f5201f3 	svcls	0x005201f3
	...
    238c:	00530001 	subseq	r0, r3, r1
    2390:	00000000 	andeq	r0, r0, r0
    2394:	04000000 	streq	r0, [r0], #-0
    2398:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    239c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    23ac:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    23b8:	01f30004 	mvnseq	r0, r4
    23bc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    23cc:	00020000 	andeq	r0, r2, r0
    23d0:	00009f30 	andeq	r9, r0, r0, lsr pc
    23d4:	00000000 	andeq	r0, r0, r0
    23d8:	00010000 	andeq	r0, r1, r0
    23dc:	00000053 	andeq	r0, r0, r3, asr r0
    23e0:	00000000 	andeq	r0, r0, r0
    23e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    23f0:	00510001 	subseq	r0, r1, r1
	...
    2400:	01000000 	mrseq	r0, (UNDEF: 0)
    2404:	00005100 	andeq	r5, r0, r0, lsl #2
    2408:	00000000 	andeq	r0, r0, r0
    240c:	00040000 	andeq	r0, r4, r0
    2410:	9f5101f3 	svcls	0x005101f3
	...
    2424:	9f300002 	svcls	0x00300002
	...
    2430:	00530001 	subseq	r0, r3, r1
    2434:	00000000 	andeq	r0, r0, r0
    2438:	01000000 	mrseq	r0, (UNDEF: 0)
    243c:	00005300 	andeq	r5, r0, r0, lsl #6
    2440:	00000000 	andeq	r0, r0, r0
    2444:	00010000 	andeq	r0, r1, r0
    2448:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2458:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2464:	01f30004 	mvnseq	r0, r4
    2468:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2478:	00010000 	andeq	r0, r1, r0
    247c:	00000052 	andeq	r0, r0, r2, asr r0
    2480:	00000000 	andeq	r0, r0, r0
    2484:	f3000400 	vshl.u8	d0, d0, d0
    2488:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2498:	01000000 	mrseq	r0, (UNDEF: 0)
    249c:	00005300 	andeq	r5, r0, r0, lsl #6
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	00040000 	andeq	r0, r4, r0
    24a8:	9f5301f3 	svcls	0x005301f3
	...
    24bc:	9f300002 	svcls	0x00300002
	...
    24c8:	00550001 	subseq	r0, r5, r1
    24cc:	00000000 	andeq	r0, r0, r0
    24d0:	01000000 	mrseq	r0, (UNDEF: 0)
    24d4:	00005500 	andeq	r5, r0, r0, lsl #10
    24d8:	00000000 	andeq	r0, r0, r0
    24dc:	00010000 	andeq	r0, r1, r0
    24e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    24f0:	30000200 	andcc	r0, r0, r0, lsl #4
    24f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24f8:	00000000 	andeq	r0, r0, r0
    24fc:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2508:	00540001 	subseq	r0, r4, r1
	...
    2518:	02000000 	andeq	r0, r0, #0
    251c:	009f3000 	addseq	r3, pc, r0
    2520:	00000000 	andeq	r0, r0, r0
    2524:	01000000 	mrseq	r0, (UNDEF: 0)
    2528:	00005600 	andeq	r5, r0, r0, lsl #12
    252c:	00000000 	andeq	r0, r0, r0
    2530:	00010000 	andeq	r0, r1, r0
    2534:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2544:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2550:	01f30004 	mvnseq	r0, r4
    2554:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2564:	00020000 	andeq	r0, r2, r0
    2568:	00009f30 	andeq	r9, r0, r0, lsr pc
    256c:	00000000 	andeq	r0, r0, r0
    2570:	00010000 	andeq	r0, r1, r0
    2574:	00000053 	andeq	r0, r0, r3, asr r0
    2578:	00000000 	andeq	r0, r0, r0
    257c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2588:	00510001 	subseq	r0, r1, r1
	...
    2598:	01000000 	mrseq	r0, (UNDEF: 0)
    259c:	00005100 	andeq	r5, r0, r0, lsl #2
    25a0:	00000000 	andeq	r0, r0, r0
    25a4:	00040000 	andeq	r0, r4, r0
    25a8:	9f5101f3 	svcls	0x005101f3
	...
    25bc:	9f300002 	svcls	0x00300002
	...
    25c8:	00530001 	subseq	r0, r3, r1
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	01000000 	mrseq	r0, (UNDEF: 0)
    25d4:	00005300 	andeq	r5, r0, r0, lsl #6
    25d8:	00000000 	andeq	r0, r0, r0
    25dc:	00010000 	andeq	r0, r1, r0
    25e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    25f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    25fc:	01f30004 	mvnseq	r0, r4
    2600:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2610:	00020000 	andeq	r0, r2, r0
    2614:	00009f30 	andeq	r9, r0, r0, lsr pc
    2618:	00000000 	andeq	r0, r0, r0
    261c:	00010000 	andeq	r0, r1, r0
    2620:	00000053 	andeq	r0, r0, r3, asr r0
    2624:	00000000 	andeq	r0, r0, r0
    2628:	53000100 	movwpl	r0, #256	; 0x100
	...
    2634:	00510001 	subseq	r0, r1, r1
	...
    2644:	01000000 	mrseq	r0, (UNDEF: 0)
    2648:	00005100 	andeq	r5, r0, r0, lsl #2
    264c:	00000000 	andeq	r0, r0, r0
    2650:	00040000 	andeq	r0, r4, r0
    2654:	9f5101f3 	svcls	0x005101f3
	...
    2668:	9f300002 	svcls	0x00300002
	...
    2674:	00530001 	subseq	r0, r3, r1
    2678:	00000000 	andeq	r0, r0, r0
    267c:	01000000 	mrseq	r0, (UNDEF: 0)
    2680:	00005300 	andeq	r5, r0, r0, lsl #6
    2684:	00000000 	andeq	r0, r0, r0
    2688:	00010000 	andeq	r0, r1, r0
    268c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    269c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    26a8:	01f30004 	mvnseq	r0, r4
    26ac:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    26bc:	00020000 	andeq	r0, r2, r0
    26c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    26c4:	00000000 	andeq	r0, r0, r0
    26c8:	00010000 	andeq	r0, r1, r0
    26cc:	00000053 	andeq	r0, r0, r3, asr r0
    26d0:	00000000 	andeq	r0, r0, r0
    26d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    26e0:	00510001 	subseq	r0, r1, r1
	...
    26f0:	01000000 	mrseq	r0, (UNDEF: 0)
    26f4:	00005100 	andeq	r5, r0, r0, lsl #2
    26f8:	00000000 	andeq	r0, r0, r0
    26fc:	00040000 	andeq	r0, r4, r0
    2700:	9f5101f3 	svcls	0x005101f3
	...
    2714:	9f300002 	svcls	0x00300002
	...
    2720:	00530001 	subseq	r0, r3, r1
    2724:	00000000 	andeq	r0, r0, r0
    2728:	01000000 	mrseq	r0, (UNDEF: 0)
    272c:	00005300 	andeq	r5, r0, r0, lsl #6
    2730:	00000000 	andeq	r0, r0, r0
    2734:	00010000 	andeq	r0, r1, r0
    2738:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2748:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2754:	01f30004 	mvnseq	r0, r4
    2758:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2768:	00020000 	andeq	r0, r2, r0
    276c:	00009f30 	andeq	r9, r0, r0, lsr pc
    2770:	00000000 	andeq	r0, r0, r0
    2774:	00010000 	andeq	r0, r1, r0
    2778:	00000053 	andeq	r0, r0, r3, asr r0
    277c:	00000000 	andeq	r0, r0, r0
    2780:	53000100 	movwpl	r0, #256	; 0x100
	...
    278c:	00510001 	subseq	r0, r1, r1
	...
    279c:	01000000 	mrseq	r0, (UNDEF: 0)
    27a0:	00005100 	andeq	r5, r0, r0, lsl #2
    27a4:	00000000 	andeq	r0, r0, r0
    27a8:	00040000 	andeq	r0, r4, r0
    27ac:	9f5101f3 	svcls	0x005101f3
	...
    27c0:	9f300002 	svcls	0x00300002
	...
    27cc:	00530001 	subseq	r0, r3, r1
    27d0:	00000000 	andeq	r0, r0, r0
    27d4:	01000000 	mrseq	r0, (UNDEF: 0)
    27d8:	00005300 	andeq	r5, r0, r0, lsl #6
    27dc:	00000000 	andeq	r0, r0, r0
    27e0:	00010000 	andeq	r0, r1, r0
    27e4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    27f4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2800:	01f30004 	mvnseq	r0, r4
    2804:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2814:	00020000 	andeq	r0, r2, r0
    2818:	00009f30 	andeq	r9, r0, r0, lsr pc
    281c:	00000000 	andeq	r0, r0, r0
    2820:	00010000 	andeq	r0, r1, r0
    2824:	00000053 	andeq	r0, r0, r3, asr r0
    2828:	00000000 	andeq	r0, r0, r0
    282c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2838:	00510001 	subseq	r0, r1, r1
	...
    2848:	01000000 	mrseq	r0, (UNDEF: 0)
    284c:	00005100 	andeq	r5, r0, r0, lsl #2
    2850:	00000000 	andeq	r0, r0, r0
    2854:	00040000 	andeq	r0, r4, r0
    2858:	9f5101f3 	svcls	0x005101f3
	...
    286c:	9f300002 	svcls	0x00300002
	...
    2878:	00530001 	subseq	r0, r3, r1
    287c:	00000000 	andeq	r0, r0, r0
    2880:	01000000 	mrseq	r0, (UNDEF: 0)
    2884:	00005300 	andeq	r5, r0, r0, lsl #6
    2888:	00000000 	andeq	r0, r0, r0
    288c:	00010000 	andeq	r0, r1, r0
    2890:	00000051 	andeq	r0, r0, r1, asr r0
	...
    28a0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    28ac:	01f30004 	mvnseq	r0, r4
    28b0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    28c0:	00020000 	andeq	r0, r2, r0
    28c4:	00009f30 	andeq	r9, r0, r0, lsr pc
    28c8:	00000000 	andeq	r0, r0, r0
    28cc:	00010000 	andeq	r0, r1, r0
    28d0:	00000053 	andeq	r0, r0, r3, asr r0
    28d4:	00000000 	andeq	r0, r0, r0
    28d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    28e4:	00510001 	subseq	r0, r1, r1
	...
    28f4:	01000000 	mrseq	r0, (UNDEF: 0)
    28f8:	00005100 	andeq	r5, r0, r0, lsl #2
    28fc:	00000000 	andeq	r0, r0, r0
    2900:	00040000 	andeq	r0, r4, r0
    2904:	9f5101f3 	svcls	0x005101f3
	...
    2918:	9f300002 	svcls	0x00300002
	...
    2924:	00530001 	subseq	r0, r3, r1
    2928:	00000000 	andeq	r0, r0, r0
    292c:	01000000 	mrseq	r0, (UNDEF: 0)
    2930:	00005300 	andeq	r5, r0, r0, lsl #6
    2934:	00000000 	andeq	r0, r0, r0
    2938:	00010000 	andeq	r0, r1, r0
    293c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    294c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2958:	01f30004 	mvnseq	r0, r4
    295c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    296c:	00020000 	andeq	r0, r2, r0
    2970:	00009f30 	andeq	r9, r0, r0, lsr pc
    2974:	00000000 	andeq	r0, r0, r0
    2978:	00010000 	andeq	r0, r1, r0
    297c:	00000053 	andeq	r0, r0, r3, asr r0
    2980:	00000000 	andeq	r0, r0, r0
    2984:	53000100 	movwpl	r0, #256	; 0x100
	...
    2990:	00510001 	subseq	r0, r1, r1
	...
    29a0:	01000000 	mrseq	r0, (UNDEF: 0)
    29a4:	00005100 	andeq	r5, r0, r0, lsl #2
    29a8:	00000000 	andeq	r0, r0, r0
    29ac:	00040000 	andeq	r0, r4, r0
    29b0:	9f5101f3 	svcls	0x005101f3
	...
    29c4:	9f300002 	svcls	0x00300002
	...
    29d0:	00530001 	subseq	r0, r3, r1
    29d4:	00000000 	andeq	r0, r0, r0
    29d8:	01000000 	mrseq	r0, (UNDEF: 0)
    29dc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    29ec:	00010000 	andeq	r0, r1, r0
    29f0:	00000051 	andeq	r0, r0, r1, asr r0
    29f4:	00000000 	andeq	r0, r0, r0
    29f8:	f3000400 	vshl.u8	d0, d0, d0
    29fc:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2a0c:	02000000 	andeq	r0, r0, #0
    2a10:	009f3000 	addseq	r3, pc, r0
    2a14:	00000000 	andeq	r0, r0, r0
    2a18:	01000000 	mrseq	r0, (UNDEF: 0)
    2a1c:	00005300 	andeq	r5, r0, r0, lsl #6
    2a20:	00000000 	andeq	r0, r0, r0
    2a24:	00010000 	andeq	r0, r1, r0
    2a28:	00000053 	andeq	r0, r0, r3, asr r0
    2a2c:	00000000 	andeq	r0, r0, r0
    2a30:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2a44:	00510001 	subseq	r0, r1, r1
    2a48:	00000000 	andeq	r0, r0, r0
    2a4c:	04000000 	streq	r0, [r0], #-0
    2a50:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2a54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2a64:	30000200 	andcc	r0, r0, r0, lsl #4
    2a68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a6c:	00000000 	andeq	r0, r0, r0
    2a70:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a7c:	00510001 	subseq	r0, r1, r1
	...
    2a8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a90:	00005100 	andeq	r5, r0, r0, lsl #2
    2a94:	00000000 	andeq	r0, r0, r0
    2a98:	00040000 	andeq	r0, r4, r0
    2a9c:	9f5101f3 	svcls	0x005101f3
	...
    2ab0:	9f300002 	svcls	0x00300002
	...
    2abc:	00530001 	subseq	r0, r3, r1
    2ac0:	00000000 	andeq	r0, r0, r0
    2ac4:	01000000 	mrseq	r0, (UNDEF: 0)
    2ac8:	00005300 	andeq	r5, r0, r0, lsl #6
    2acc:	00000000 	andeq	r0, r0, r0
    2ad0:	00010000 	andeq	r0, r1, r0
    2ad4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2ae4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2af0:	01f30004 	mvnseq	r0, r4
    2af4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2b04:	00020000 	andeq	r0, r2, r0
    2b08:	00009f30 	andeq	r9, r0, r0, lsr pc
    2b0c:	00000000 	andeq	r0, r0, r0
    2b10:	00010000 	andeq	r0, r1, r0
    2b14:	00000053 	andeq	r0, r0, r3, asr r0
    2b18:	00000000 	andeq	r0, r0, r0
    2b1c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b28:	00510001 	subseq	r0, r1, r1
	...
    2b38:	01000000 	mrseq	r0, (UNDEF: 0)
    2b3c:	00005100 	andeq	r5, r0, r0, lsl #2
    2b40:	00000000 	andeq	r0, r0, r0
    2b44:	00040000 	andeq	r0, r4, r0
    2b48:	9f5101f3 	svcls	0x005101f3
	...
    2b5c:	9f300002 	svcls	0x00300002
	...
    2b68:	00530001 	subseq	r0, r3, r1
    2b6c:	00000000 	andeq	r0, r0, r0
    2b70:	01000000 	mrseq	r0, (UNDEF: 0)
    2b74:	00005300 	andeq	r5, r0, r0, lsl #6
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	00010000 	andeq	r0, r1, r0
    2b80:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2b90:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2b9c:	01f30004 	mvnseq	r0, r4
    2ba0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2bb0:	00020000 	andeq	r0, r2, r0
    2bb4:	00009f30 	andeq	r9, r0, r0, lsr pc
    2bb8:	00000000 	andeq	r0, r0, r0
    2bbc:	00010000 	andeq	r0, r1, r0
    2bc0:	00000053 	andeq	r0, r0, r3, asr r0
    2bc4:	00000000 	andeq	r0, r0, r0
    2bc8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2bd4:	00510001 	subseq	r0, r1, r1
	...
    2be4:	01000000 	mrseq	r0, (UNDEF: 0)
    2be8:	00005100 	andeq	r5, r0, r0, lsl #2
    2bec:	00000000 	andeq	r0, r0, r0
    2bf0:	00040000 	andeq	r0, r4, r0
    2bf4:	9f5101f3 	svcls	0x005101f3
	...
    2c08:	9f300002 	svcls	0x00300002
	...
    2c14:	00530001 	subseq	r0, r3, r1
    2c18:	00000000 	andeq	r0, r0, r0
    2c1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c20:	00005300 	andeq	r5, r0, r0, lsl #6
    2c24:	00000000 	andeq	r0, r0, r0
    2c28:	00010000 	andeq	r0, r1, r0
    2c2c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2c3c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2c48:	01f30004 	mvnseq	r0, r4
    2c4c:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2c5c:	00020000 	andeq	r0, r2, r0
    2c60:	00009f30 	andeq	r9, r0, r0, lsr pc
    2c64:	00000000 	andeq	r0, r0, r0
    2c68:	00010000 	andeq	r0, r1, r0
    2c6c:	00000053 	andeq	r0, r0, r3, asr r0
    2c70:	00000000 	andeq	r0, r0, r0
    2c74:	53000100 	movwpl	r0, #256	; 0x100
	...
    2c80:	00510001 	subseq	r0, r1, r1
	...
    2c90:	01000000 	mrseq	r0, (UNDEF: 0)
    2c94:	00005100 	andeq	r5, r0, r0, lsl #2
    2c98:	00000000 	andeq	r0, r0, r0
    2c9c:	00040000 	andeq	r0, r4, r0
    2ca0:	9f5101f3 	svcls	0x005101f3
	...
    2cb4:	9f300002 	svcls	0x00300002
	...
    2cc0:	00530001 	subseq	r0, r3, r1
    2cc4:	00000000 	andeq	r0, r0, r0
    2cc8:	01000000 	mrseq	r0, (UNDEF: 0)
    2ccc:	00005300 	andeq	r5, r0, r0, lsl #6
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	00010000 	andeq	r0, r1, r0
    2cd8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2ce8:	52000100 	andpl	r0, r0, #0, 2
	...
    2cf4:	01f30004 	mvnseq	r0, r4
    2cf8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2d08:	00010000 	andeq	r0, r1, r0
    2d0c:	00000052 	andeq	r0, r0, r2, asr r0
    2d10:	00000000 	andeq	r0, r0, r0
    2d14:	f3000400 	vshl.u8	d0, d0, d0
    2d18:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2d28:	01000000 	mrseq	r0, (UNDEF: 0)
    2d2c:	00005000 	andeq	r5, r0, r0
    2d30:	00000000 	andeq	r0, r0, r0
    2d34:	00030000 	andeq	r0, r3, r0
    2d38:	009f6870 	addseq	r6, pc, r0, ror r8	; <UNPREDICTABLE>
	...
    2d48:	01000000 	mrseq	r0, (UNDEF: 0)
    2d4c:	00005100 	andeq	r5, r0, r0, lsl #2
    2d50:	00000000 	andeq	r0, r0, r0
    2d54:	00040000 	andeq	r0, r4, r0
    2d58:	9f5101f3 	svcls	0x005101f3
	...
    2d64:	00510001 	subseq	r0, r1, r1
    2d68:	00000000 	andeq	r0, r0, r0
    2d6c:	04000000 	streq	r0, [r0], #-0
    2d70:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2d74:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2d84:	52000100 	andpl	r0, r0, #0, 2
	...
    2d90:	01f30004 	mvnseq	r0, r4
    2d94:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2da4:	00010000 	andeq	r0, r1, r0
    2da8:	00000051 	andeq	r0, r0, r1, asr r0
    2dac:	00000000 	andeq	r0, r0, r0
    2db0:	f3000400 	vshl.u8	d0, d0, d0
    2db4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    2dc8:	00005100 	andeq	r5, r0, r0, lsl #2
    2dcc:	00000000 	andeq	r0, r0, r0
    2dd0:	00040000 	andeq	r0, r4, r0
    2dd4:	9f5101f3 	svcls	0x005101f3
	...
    2de8:	00510001 	subseq	r0, r1, r1
    2dec:	00000000 	andeq	r0, r0, r0
    2df0:	04000000 	streq	r0, [r0], #-0
    2df4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e08:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2e14:	01f30004 	mvnseq	r0, r4
    2e18:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2e28:	00010000 	andeq	r0, r1, r0
    2e2c:	00000051 	andeq	r0, r0, r1, asr r0
    2e30:	00000000 	andeq	r0, r0, r0
    2e34:	f3000400 	vshl.u8	d0, d0, d0
    2e38:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2e48:	01000000 	mrseq	r0, (UNDEF: 0)
    2e4c:	00005100 	andeq	r5, r0, r0, lsl #2
    2e50:	00000000 	andeq	r0, r0, r0
    2e54:	00040000 	andeq	r0, r4, r0
    2e58:	9f5101f3 	svcls	0x005101f3
	...
    2e6c:	00500001 	subseq	r0, r0, r1
    2e70:	00000000 	andeq	r0, r0, r0
    2e74:	01000000 	mrseq	r0, (UNDEF: 0)
    2e78:	00005500 	andeq	r5, r0, r0, lsl #10
    2e7c:	00000000 	andeq	r0, r0, r0
    2e80:	00010000 	andeq	r0, r1, r0
    2e84:	00000050 	andeq	r0, r0, r0, asr r0
    2e88:	00000000 	andeq	r0, r0, r0
    2e8c:	f3000400 	vshl.u8	d0, d0, d0
    2e90:	009f5001 	addseq	r5, pc, r1
    2e94:	00000000 	andeq	r0, r0, r0
    2e98:	01000000 	mrseq	r0, (UNDEF: 0)
    2e9c:	00005000 	andeq	r5, r0, r0
    2ea0:	00000000 	andeq	r0, r0, r0
    2ea4:	00010000 	andeq	r0, r1, r0
    2ea8:	00000055 	andeq	r0, r0, r5, asr r0
    2eac:	00000000 	andeq	r0, r0, r0
    2eb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2ebc:	01f30004 	mvnseq	r0, r4
    2ec0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2ed0:	00010000 	andeq	r0, r1, r0
    2ed4:	00000051 	andeq	r0, r0, r1, asr r0
    2ed8:	00000000 	andeq	r0, r0, r0
    2edc:	54000100 	strpl	r0, [r0], #-256	; 0x100
	...
    2ee8:	01f30004 	mvnseq	r0, r4
    2eec:	00009f51 	andeq	r9, r0, r1, asr pc
    2ef0:	00000000 	andeq	r0, r0, r0
    2ef4:	00010000 	andeq	r0, r1, r0
    2ef8:	00000054 	andeq	r0, r0, r4, asr r0
    2efc:	00000000 	andeq	r0, r0, r0
    2f00:	f3000400 	vshl.u8	d0, d0, d0
    2f04:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2f14:	02000000 	andeq	r0, r0, #0
    2f18:	009f3000 	addseq	r3, pc, r0
    2f1c:	00000000 	andeq	r0, r0, r0
    2f20:	01000000 	mrseq	r0, (UNDEF: 0)
    2f24:	00005700 	andeq	r5, r0, r0, lsl #14
    2f28:	00000000 	andeq	r0, r0, r0
    2f2c:	00010000 	andeq	r0, r1, r0
    2f30:	00000057 	andeq	r0, r0, r7, asr r0
	...
    2f40:	31000200 	mrscc	r0, R8_usr
    2f44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f48:	00000000 	andeq	r0, r0, r0
    2f4c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    2f58:	00560001 	subseq	r0, r6, r1
	...
    2f68:	01000000 	mrseq	r0, (UNDEF: 0)
    2f6c:	00005100 	andeq	r5, r0, r0, lsl #2
    2f70:	00000000 	andeq	r0, r0, r0
    2f74:	00040000 	andeq	r0, r4, r0
    2f78:	9f5101f3 	svcls	0x005101f3
	...
    2f8c:	00510001 	subseq	r0, r1, r1
    2f90:	00000000 	andeq	r0, r0, r0
    2f94:	04000000 	streq	r0, [r0], #-0
    2f98:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2f9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2fac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2fb8:	00540001 	subseq	r0, r4, r1
    2fbc:	00000000 	andeq	r0, r0, r0
    2fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    2fc4:	00005000 	andeq	r5, r0, r0
    2fc8:	00000000 	andeq	r0, r0, r0
    2fcc:	00040000 	andeq	r0, r4, r0
    2fd0:	9f5001f3 	svcls	0x005001f3
	...
    2fdc:	00500001 	subseq	r0, r0, r1
    2fe0:	00000000 	andeq	r0, r0, r0
    2fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    2fe8:	00005400 	andeq	r5, r0, r0, lsl #8
    2fec:	00000000 	andeq	r0, r0, r0
    2ff0:	00010000 	andeq	r0, r1, r0
    2ff4:	00000050 	andeq	r0, r0, r0, asr r0
    2ff8:	00000000 	andeq	r0, r0, r0
    2ffc:	f3000400 	vshl.u8	d0, d0, d0
    3000:	009f5001 	addseq	r5, pc, r1
    3004:	00000000 	andeq	r0, r0, r0
    3008:	01000000 	mrseq	r0, (UNDEF: 0)
    300c:	00005000 	andeq	r5, r0, r0
    3010:	00000000 	andeq	r0, r0, r0
    3014:	00040000 	andeq	r0, r4, r0
    3018:	9f5001f3 	svcls	0x005001f3
	...
    3024:	00500001 	subseq	r0, r0, r1
    3028:	00000000 	andeq	r0, r0, r0
    302c:	04000000 	streq	r0, [r0], #-0
    3030:	5001f300 	andpl	pc, r1, r0, lsl #6
    3034:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3044:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3050:	00550001 	subseq	r0, r5, r1
    3054:	00000000 	andeq	r0, r0, r0
    3058:	04000000 	streq	r0, [r0], #-0
    305c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3060:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3064:	00000000 	andeq	r0, r0, r0
    3068:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    3074:	01f30004 	mvnseq	r0, r4
    3078:	00009f51 	andeq	r9, r0, r1, asr pc
    307c:	00000000 	andeq	r0, r0, r0
    3080:	00010000 	andeq	r0, r1, r0
    3084:	00000055 	andeq	r0, r0, r5, asr r0
    3088:	00000000 	andeq	r0, r0, r0
    308c:	f3000400 	vshl.u8	d0, d0, d0
    3090:	009f5101 	addseq	r5, pc, r1, lsl #2
    3094:	00000000 	andeq	r0, r0, r0
    3098:	01000000 	mrseq	r0, (UNDEF: 0)
    309c:	00005500 	andeq	r5, r0, r0, lsl #10
    30a0:	00000000 	andeq	r0, r0, r0
    30a4:	00040000 	andeq	r0, r4, r0
    30a8:	9f5101f3 	svcls	0x005101f3
	...
    30bc:	00530001 	subseq	r0, r3, r1
    30c0:	00000000 	andeq	r0, r0, r0
    30c4:	05000000 	streq	r0, [r0, #-0]
    30c8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    30cc:	00000823 	andeq	r0, r0, r3, lsr #16
	...
    30dc:	00010000 	andeq	r0, r1, r0
    30e0:	00000052 	andeq	r0, r0, r2, asr r0
    30e4:	00000000 	andeq	r0, r0, r0
    30e8:	f3000500 	vrshl.u8	d0, d0, d0
    30ec:	04235101 	strteq	r5, [r3], #-257	; 0x101
	...
    3100:	00510001 	subseq	r0, r1, r1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	05000000 	streq	r0, [r0, #-0]
    310c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3110:	00000223 	andeq	r0, r0, r3, lsr #4
	...
    3120:	00010000 	andeq	r0, r1, r0
    3124:	00000050 	andeq	r0, r0, r0, asr r0
    3128:	00000000 	andeq	r0, r0, r0
    312c:	f3000400 	vshl.u8	d0, d0, d0
    3130:	009f5001 	addseq	r5, pc, r1
	...
    3140:	02000000 	andeq	r0, r0, #0
    3144:	009f3000 	addseq	r3, pc, r0
    3148:	00000000 	andeq	r0, r0, r0
    314c:	01000000 	mrseq	r0, (UNDEF: 0)
    3150:	00005500 	andeq	r5, r0, r0, lsl #10
    3154:	00000000 	andeq	r0, r0, r0
    3158:	00010000 	andeq	r0, r1, r0
    315c:	00000052 	andeq	r0, r0, r2, asr r0
	...
    316c:	30000200 	andcc	r0, r0, r0, lsl #4
    3170:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3174:	00000000 	andeq	r0, r0, r0
    3178:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    3184:	00760007 	rsbseq	r0, r6, r7
    3188:	1afdff0b 	bne	fff82dbc <SCS_BASE+0x1ff74dbc>
    318c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3190:	00000000 	andeq	r0, r0, r0
    3194:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    31a0:	01f30019 	mvnseq	r0, r9, lsl r0
    31a4:	94022351 	strls	r2, [r2], #-849	; 0x351
    31a8:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    31ac:	7324381a 	teqvc	r4, #1703936	; 0x1a0000
    31b0:	ff0a2100 			; <UNDEFINED> instruction: 0xff0a2100
    31b4:	000a1aff 	strdeq	r1, [sl], -pc	; <UNPREDICTABLE>
    31b8:	009f2101 	addseq	r2, pc, r1, lsl #2
	...
    31c8:	02000000 	andeq	r0, r0, #0
    31cc:	009f3000 	addseq	r3, pc, r0
    31d0:	00000000 	andeq	r0, r0, r0
    31d4:	05000000 	streq	r0, [r0, #-0]
    31d8:	38007100 	stmdacc	r0, {r8, ip, sp, lr}
    31dc:	00009f24 	andeq	r9, r0, r4, lsr #30
    31e0:	00000000 	andeq	r0, r0, r0
    31e4:	000a0000 	andeq	r0, sl, r0
    31e8:	235101f3 	cmpcs	r1, #-1073741764	; 0xc000003c
    31ec:	38029402 	stmdacc	r2, {r1, sl, ip, pc}
    31f0:	00009f24 	andeq	r9, r0, r4, lsr #30
	...
    3200:	00010000 	andeq	r0, r1, r0
    3204:	00000053 	andeq	r0, r0, r3, asr r0
    3208:	00000000 	andeq	r0, r0, r0
    320c:	f3000500 	vrshl.u8	d0, d0, d0
    3210:	08235101 	stmdaeq	r3!, {r0, r8, ip, lr}
	...
    3224:	00520001 	subseq	r0, r2, r1
    3228:	00000000 	andeq	r0, r0, r0
    322c:	05000000 	streq	r0, [r0, #-0]
    3230:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3234:	00000423 	andeq	r0, r0, r3, lsr #8
	...
    3244:	00010000 	andeq	r0, r1, r0
    3248:	00000051 	andeq	r0, r0, r1, asr r0
    324c:	00000000 	andeq	r0, r0, r0
    3250:	f3000500 	vrshl.u8	d0, d0, d0
    3254:	02235101 	eoreq	r5, r3, #1073741824	; 0x40000000
	...
    3268:	00500001 	subseq	r0, r0, r1
    326c:	00000000 	andeq	r0, r0, r0
    3270:	04000000 	streq	r0, [r0], #-0
    3274:	5001f300 	andpl	pc, r1, r0, lsl #6
    3278:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3288:	30000200 	andcc	r0, r0, r0, lsl #4
    328c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3290:	00000000 	andeq	r0, r0, r0
    3294:	55000100 	strpl	r0, [r0, #-256]	; 0x100
	...
    32a0:	00530001 	subseq	r0, r3, r1
	...
    32b0:	02000000 	andeq	r0, r0, #0
    32b4:	009f3000 	addseq	r3, pc, r0
    32b8:	00000000 	andeq	r0, r0, r0
    32bc:	01000000 	mrseq	r0, (UNDEF: 0)
    32c0:	00005600 	andeq	r5, r0, r0, lsl #12
    32c4:	00000000 	andeq	r0, r0, r0
    32c8:	00070000 	andeq	r0, r7, r0
    32cc:	ff0b0076 			; <UNDEFINED> instruction: 0xff0b0076
    32d0:	009f1adf 			; <UNDEFINED> instruction: 0x009f1adf
    32d4:	00000000 	andeq	r0, r0, r0
    32d8:	01000000 	mrseq	r0, (UNDEF: 0)
    32dc:	00005100 	andeq	r5, r0, r0, lsl #2
    32e0:	00000000 	andeq	r0, r0, r0
    32e4:	00190000 	andseq	r0, r9, r0
    32e8:	235101f3 	cmpcs	r1, #-1073741764	; 0xc000003c
    32ec:	0a029402 	beq	a82fc <__Stack_Size+0xa7efc>
    32f0:	3c1affff 	ldccc	15, cr15, [sl], {255}	; 0xff
    32f4:	21007224 	tstcs	r0, r4, lsr #4
    32f8:	1affff0a 	bne	2f28 <__Stack_Size+0x2b28>
    32fc:	2110000a 	tstcs	r0, sl
    3300:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3310:	30000200 	andcc	r0, r0, r0, lsl #4
    3314:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3318:	00000000 	andeq	r0, r0, r0
    331c:	71000500 	tstvc	r0, r0, lsl #10
    3320:	9f243c00 	svcls	0x00243c00
	...
    332c:	01f3000a 	mvnseq	r0, sl
    3330:	94022351 	strls	r2, [r2], #-849	; 0x351
    3334:	9f243c02 	svcls	0x00243c02
	...
    3348:	00510001 	subseq	r0, r1, r1
    334c:	00000000 	andeq	r0, r0, r0
    3350:	04000000 	streq	r0, [r0], #-0
    3354:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3358:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3368:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3374:	01f30004 	mvnseq	r0, r4
    3378:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3388:	00010000 	andeq	r0, r1, r0
    338c:	00000050 	andeq	r0, r0, r0, asr r0
    3390:	00000000 	andeq	r0, r0, r0
    3394:	f3000400 	vshl.u8	d0, d0, d0
    3398:	009f5001 	addseq	r5, pc, r1
	...
    33a8:	01000000 	mrseq	r0, (UNDEF: 0)
    33ac:	00005000 	andeq	r5, r0, r0
    33b0:	00000000 	andeq	r0, r0, r0
    33b4:	00040000 	andeq	r0, r4, r0
    33b8:	9f5001f3 	svcls	0x005001f3
	...
    33cc:	00500001 	subseq	r0, r0, r1
    33d0:	00000000 	andeq	r0, r0, r0
    33d4:	04000000 	streq	r0, [r0], #-0
    33d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    33dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    33ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    33f8:	01f30004 	mvnseq	r0, r4
    33fc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    340c:	00010000 	andeq	r0, r1, r0
    3410:	00000050 	andeq	r0, r0, r0, asr r0
    3414:	00000000 	andeq	r0, r0, r0
    3418:	f3000400 	vshl.u8	d0, d0, d0
    341c:	009f5001 	addseq	r5, pc, r1
	...
    342c:	01000000 	mrseq	r0, (UNDEF: 0)
    3430:	00005000 	andeq	r5, r0, r0
    3434:	00000000 	andeq	r0, r0, r0
    3438:	00040000 	andeq	r0, r4, r0
    343c:	9f5001f3 	svcls	0x005001f3
	...
    3450:	9f300002 	svcls	0x00300002
	...
    345c:	0071000a 	rsbseq	r0, r1, sl
    3460:	401a0073 	andsmi	r0, sl, r3, ror r0
    3464:	9f2e3024 	svcls	0x002e3024
	...
    3478:	00510001 	subseq	r0, r1, r1
    347c:	00000000 	andeq	r0, r0, r0
    3480:	04000000 	streq	r0, [r0], #-0
    3484:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3488:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3498:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    34a4:	01f30004 	mvnseq	r0, r4
    34a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    34b8:	00020000 	andeq	r0, r2, r0
    34bc:	00009f30 	andeq	r9, r0, r0, lsr pc
    34c0:	00000000 	andeq	r0, r0, r0
    34c4:	00010000 	andeq	r0, r1, r0
    34c8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    34d8:	30000200 	andcc	r0, r0, r0, lsl #4
    34dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    34e0:	00000000 	andeq	r0, r0, r0
    34e4:	73000600 	movwvc	r0, #1536	; 0x600
    34e8:	1a007100 	bne	1f8f0 <__Stack_Size+0x1f4f0>
    34ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    34fc:	30000200 	andcc	r0, r0, r0, lsl #4
    3500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3504:	00000000 	andeq	r0, r0, r0
    3508:	71000600 	tstvc	r0, r0, lsl #12
    350c:	1a007200 	bne	1fd14 <__Stack_Size+0x1f914>
    3510:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3514:	00000000 	andeq	r0, r0, r0
    3518:	000ae200 	andeq	lr, sl, r0, lsl #4
    351c:	000ae408 	andeq	lr, sl, r8, lsl #8
    3520:	51000108 	tstpl	r0, r8, lsl #2
    3524:	08000ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp}
    3528:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
    352c:	01f30004 	mvnseq	r0, r4
    3530:	00009f51 	andeq	r9, r0, r1, asr pc
    3534:	00000000 	andeq	r0, r0, r0
    3538:	0aec0000 	beq	ffb03540 <SCS_BASE+0x1faf5540>
    353c:	0afc0800 	beq	fff05544 <SCS_BASE+0x1fef7544>
    3540:	00010800 	andeq	r0, r1, r0, lsl #16
    3544:	000afc50 	andeq	pc, sl, r0, asr ip	; <UNPREDICTABLE>
    3548:	000b0408 	andeq	r0, fp, r8, lsl #8
    354c:	70000308 	andvc	r0, r0, r8, lsl #6
    3550:	0b049f7e 	bleq	12b350 <__Stack_Size+0x12af50>
    3554:	0b080800 	bleq	20555c <__Stack_Size+0x20515c>
    3558:	00040800 	andeq	r0, r4, r0, lsl #16
    355c:	9f5001f3 	svcls	0x005001f3
    3560:	08000b08 	stmdaeq	r0, {r3, r8, r9, fp}
    3564:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
    3568:	7e700003 	cdpvc	0, 7, cr0, cr0, cr3, {0}
    356c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    357c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3588:	01f30004 	mvnseq	r0, r4
    358c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    359c:	00020000 	andeq	r0, r2, r0
    35a0:	00009f30 	andeq	r9, r0, r0, lsr pc
    35a4:	00000000 	andeq	r0, r0, r0
    35a8:	00010000 	andeq	r0, r1, r0
    35ac:	00000053 	andeq	r0, r0, r3, asr r0
	...
    35bc:	70000800 	andvc	r0, r0, r0, lsl #16
    35c0:	08253300 	stmdaeq	r5!, {r8, r9, ip, sp}
    35c4:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    35d4:	02000000 	andeq	r0, r0, #0
    35d8:	009f3000 	addseq	r3, pc, r0
    35dc:	00000000 	andeq	r0, r0, r0
    35e0:	0b000000 	bleq	35e8 <__Stack_Size+0x31e8>
    35e4:	70007300 	andvc	r7, r0, r0, lsl #6
    35e8:	1aff0800 	bne	fffc55f0 <SCS_BASE+0x1ffb75f0>
    35ec:	9f1a3125 	svcls	0x001a3125
	...
    3600:	00500001 	subseq	r0, r0, r1
    3604:	00000000 	andeq	r0, r0, r0
    3608:	04000000 	streq	r0, [r0], #-0
    360c:	5001f300 	andpl	pc, r1, r0, lsl #6
    3610:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3614:	00000000 	andeq	r0, r0, r0
    3618:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3624:	01f30004 	mvnseq	r0, r4
    3628:	00009f50 	andeq	r9, r0, r0, asr pc
    362c:	00000000 	andeq	r0, r0, r0
    3630:	00010000 	andeq	r0, r1, r0
    3634:	00000050 	andeq	r0, r0, r0, asr r0
    3638:	00000000 	andeq	r0, r0, r0
    363c:	f3000400 	vshl.u8	d0, d0, d0
    3640:	009f5001 	addseq	r5, pc, r1
    3644:	00000000 	andeq	r0, r0, r0
    3648:	01000000 	mrseq	r0, (UNDEF: 0)
    364c:	00005000 	andeq	r5, r0, r0
    3650:	00000000 	andeq	r0, r0, r0
    3654:	00040000 	andeq	r0, r4, r0
    3658:	9f5001f3 	svcls	0x005001f3
	...
    3664:	00500001 	subseq	r0, r0, r1
    3668:	00000000 	andeq	r0, r0, r0
    366c:	04000000 	streq	r0, [r0], #-0
    3670:	5001f300 	andpl	pc, r1, r0, lsl #6
    3674:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3678:	00000000 	andeq	r0, r0, r0
    367c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3690:	00500001 	subseq	r0, r0, r1
    3694:	00000000 	andeq	r0, r0, r0
    3698:	01000000 	mrseq	r0, (UNDEF: 0)
    369c:	00005400 	andeq	r5, r0, r0, lsl #8
    36a0:	00000000 	andeq	r0, r0, r0
    36a4:	00040000 	andeq	r0, r4, r0
    36a8:	9f5001f3 	svcls	0x005001f3
	...
    36bc:	00510001 	subseq	r0, r1, r1
    36c0:	00000000 	andeq	r0, r0, r0
    36c4:	01000000 	mrseq	r0, (UNDEF: 0)
    36c8:	00005500 	andeq	r5, r0, r0, lsl #10
    36cc:	00000000 	andeq	r0, r0, r0
    36d0:	00040000 	andeq	r0, r4, r0
    36d4:	9f5101f3 	svcls	0x005101f3
	...
    36e8:	9f300002 	svcls	0x00300002
	...
    36f4:	0073000b 	rsbseq	r0, r3, fp
    36f8:	1acfff0b 	bne	ff40332c <SCS_BASE+0x1f3f532c>
    36fc:	1affff0a 	bne	332c <__Stack_Size+0x2f2c>
    3700:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3704:	00000000 	andeq	r0, r0, r0
    3708:	73000700 	movwvc	r0, #1792	; 0x700
    370c:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    3710:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3714:	00000000 	andeq	r0, r0, r0
    3718:	000b0000 	andeq	r0, fp, r0
    371c:	f30b0072 	vqadd.u8	q0, <illegal reg q5.5>, q9
    3720:	ff0a1ae9 			; <UNDEFINED> instruction: 0xff0a1ae9
    3724:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    3728:	00000000 	andeq	r0, r0, r0
    372c:	07000000 	streq	r0, [r0, -r0]
    3730:	0a007300 	beq	20338 <__Stack_Size+0x1ff38>
    3734:	9f1affff 	svcls	0x001affff
	...
    3740:	0875001c 	ldmdaeq	r5!, {r2, r3, r4}^
    3744:	ff0a0294 			; <UNDEFINED> instruction: 0xff0a0294
    3748:	04751aff 	ldrbteq	r1, [r5], #-2815	; 0xaff
    374c:	ff0a0294 			; <UNDEFINED> instruction: 0xff0a0294
    3750:	71211aff 	strdvc	r1, [r1, -pc]!
    3754:	00722100 	rsbseq	r2, r2, r0, lsl #2
    3758:	ffff0a21 			; <UNDEFINED> instruction: 0xffff0a21
    375c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3760:	00000000 	andeq	r0, r0, r0
    3764:	000b0000 	andeq	r0, fp, r0
    3768:	ff0b0073 			; <UNDEFINED> instruction: 0xff0b0073
    376c:	ff0a1afc 			; <UNDEFINED> instruction: 0xff0a1afc
    3770:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    3774:	00000000 	andeq	r0, r0, r0
    3778:	07000000 	streq	r0, [r0, -r0]
    377c:	0a007300 	beq	20384 <__Stack_Size+0x1ff84>
    3780:	9f1affff 	svcls	0x001affff
	...
    378c:	00520001 	subseq	r0, r2, r1
    3790:	00000000 	andeq	r0, r0, r0
    3794:	06000000 	streq	r0, [r0], -r0
    3798:	72007300 	andvc	r7, r0, #0, 6
    379c:	009f2100 	addseq	r2, pc, r0, lsl #2
    37a0:	00000000 	andeq	r0, r0, r0
    37a4:	01000000 	mrseq	r0, (UNDEF: 0)
    37a8:	00005200 	andeq	r5, r0, r0, lsl #4
    37ac:	00000000 	andeq	r0, r0, r0
    37b0:	00300000 	eorseq	r0, r0, r0
    37b4:	91066491 			; <UNDEFINED> instruction: 0x91066491
    37b8:	00740668 	rsbseq	r0, r4, r8, ror #12
    37bc:	0138000c 	teqeq	r8, ip
    37c0:	01282e40 	teqeq	r8, r0, asr #28
    37c4:	49131600 	ldmdbmi	r3, {r9, sl, ip}
    37c8:	7525f71e 	strvc	pc, [r5, #-1822]!	; 0x71e
    37cc:	24320600 	ldrtcs	r0, [r2], #-1536	; 0x600
    37d0:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    37d4:	0825f700 	stmdaeq	r5!, {r8, r9, sl, ip, sp, lr, pc}
    37d8:	1b25f764 	blne	981570 <__Stack_Size+0x981170>
    37dc:	243400f7 	ldrtcs	r0, [r4], #-247	; 0xf7
    37e0:	9f210073 	svcls	0x00210073
	...
    37ec:	647d0032 	ldrbtvs	r0, [sp], #-50	; 0x32
    37f0:	06687d06 	strbteq	r7, [r8], -r6, lsl #26
    37f4:	0c5001f3 	ldfeqe	f0, [r0], {243}	; 0xf3
    37f8:	40013800 	andmi	r3, r1, r0, lsl #16
    37fc:	0001282e 	andeq	r2, r1, lr, lsr #16
    3800:	1e491316 	mcrne	3, 2, r1, cr9, cr6, {0}
    3804:	01f325f7 	ldrsheq	r2, [r3, #87]!	; 0x57
    3808:	24320651 	ldrtcs	r0, [r2], #-1617	; 0x651
    380c:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    3810:	0825f700 	stmdaeq	r5!, {r8, r9, sl, ip, sp, lr, pc}
    3814:	1b25f764 	blne	9815ac <__Stack_Size+0x9811ac>
    3818:	243400f7 	ldrtcs	r0, [r4], #-247	; 0xf7
    381c:	9f210073 	svcls	0x00210073
	...
    3830:	9f300002 	svcls	0x00300002
	...
    383c:	00530001 	subseq	r0, r3, r1
    3840:	00000000 	andeq	r0, r0, r0
    3844:	13000000 	movwne	r0, #0
    3848:	06649100 	strbteq	r9, [r4], -r0, lsl #2
    384c:	00740072 	rsbseq	r0, r4, r2, ror r0
    3850:	0138000c 	teqeq	r8, ip
    3854:	01282e40 	teqeq	r8, r0, asr #28
    3858:	9f131600 	svcls	0x00131600
	...
    3864:	64910014 	ldrvs	r0, [r1], #20
    3868:	06689106 	strbteq	r9, [r8], -r6, lsl #2
    386c:	000c0074 	andeq	r0, ip, r4, ror r0
    3870:	2e400138 	mcrcs	1, 2, r0, cr0, cr8, {1}
    3874:	16000128 	strne	r0, [r0], -r8, lsr #2
    3878:	00009f13 	andeq	r9, r0, r3, lsl pc
    387c:	00000000 	andeq	r0, r0, r0
    3880:	00150000 	andseq	r0, r5, r0
    3884:	7d06647d 	cfstrsvc	mvf6, [r6, #-500]	; 0xfffffe0c
    3888:	01f30668 	mvnseq	r0, r8, ror #12
    388c:	38000c50 	stmdacc	r0, {r4, r6, sl, fp}
    3890:	282e4001 	stmdacs	lr!, {r0, lr}
    3894:	13160001 	tstne	r6, #1
    3898:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    38a8:	30000200 	andcc	r0, r0, r0, lsl #4
    38ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    38b0:	00000000 	andeq	r0, r0, r0
    38b4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    38c0:	64910022 	ldrvs	r0, [r1], #34	; 0x22
    38c4:	06689106 	strbteq	r9, [r8], -r6, lsl #2
    38c8:	000c0074 	andeq	r0, ip, r4, ror r0
    38cc:	2e400138 	mcrcs	1, 2, r0, cr0, cr8, {1}
    38d0:	16000128 	strne	r0, [r0], -r8, lsr #2
    38d4:	f71e4913 			; <UNDEFINED> instruction: 0xf71e4913
    38d8:	06007525 	streq	r7, [r0], -r5, lsr #10
    38dc:	25f72432 	ldrbcs	r2, [r7, #1074]!	; 0x432
    38e0:	9f00f71b 	svcls	0x0000f71b
	...
    38ec:	647d0024 	ldrbtvs	r0, [sp], #-36	; 0x24
    38f0:	06687d06 	strbteq	r7, [r8], -r6, lsl #26
    38f4:	0c5001f3 	ldfeqe	f0, [r0], {243}	; 0xf3
    38f8:	40013800 	andmi	r3, r1, r0, lsl #16
    38fc:	0001282e 	andeq	r2, r1, lr, lsr #16
    3900:	1e491316 	mcrne	3, 2, r1, cr9, cr6, {0}
    3904:	01f325f7 	ldrsheq	r2, [r3, #87]!	; 0x57
    3908:	24320651 	ldrtcs	r0, [r2], #-1617	; 0x651
    390c:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    3910:	00009f00 	andeq	r9, r0, r0, lsl #30
	...
    3920:	00020000 	andeq	r0, r2, r0
    3924:	00009f30 	andeq	r9, r0, r0, lsr pc
    3928:	00000000 	andeq	r0, r0, r0
    392c:	000b0000 	andeq	r0, fp, r0
    3930:	00720071 	rsbseq	r0, r2, r1, ror r0
    3934:	64082534 	strvs	r2, [r8], #-1332	; 0x534
    3938:	009f1c1e 	addseq	r1, pc, lr, lsl ip	; <UNPREDICTABLE>
    393c:	00000000 	andeq	r0, r0, r0
    3940:	01000000 	mrseq	r0, (UNDEF: 0)
    3944:	00005100 	andeq	r5, r0, r0, lsl #2
    3948:	00000000 	andeq	r0, r0, r0
    394c:	002a0000 	eoreq	r0, sl, r0
    3950:	91066491 			; <UNDEFINED> instruction: 0x91066491
    3954:	00740668 	rsbseq	r0, r4, r8, ror #12
    3958:	0138000c 	teqeq	r8, ip
    395c:	01282e40 	teqeq	r8, r0, asr #28
    3960:	49131600 	ldmdbmi	r3, {r9, sl, ip}
    3964:	7525f71e 	strvc	pc, [r5, #-1822]!	; 0x71e
    3968:	24320600 	ldrtcs	r0, [r2], #-1536	; 0x600
    396c:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    3970:	34007200 	strcc	r7, [r0], #-512	; 0x200
    3974:	1e640825 	cdpne	8, 6, cr0, cr4, cr5, {1}
    3978:	00009f1c 	andeq	r9, r0, ip, lsl pc
    397c:	00000000 	andeq	r0, r0, r0
    3980:	00540000 	subseq	r0, r4, r0
    3984:	91066491 			; <UNDEFINED> instruction: 0x91066491
    3988:	00740668 	rsbseq	r0, r4, r8, ror #12
    398c:	0138000c 	teqeq	r8, ip
    3990:	01282e40 	teqeq	r8, r0, asr #28
    3994:	49131600 	ldmdbmi	r3, {r9, sl, ip}
    3998:	7525f71e 	strvc	pc, [r5, #-1822]!	; 0x71e
    399c:	24320600 	ldrtcs	r0, [r2], #-1536	; 0x600
    39a0:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    39a4:	06649100 	strbteq	r9, [r4], -r0, lsl #2
    39a8:	74066891 	strvc	r6, [r6], #-2193	; 0x891
    39ac:	38000c00 	stmdacc	r0, {sl, fp}
    39b0:	282e4001 	stmdacs	lr!, {r0, lr}
    39b4:	13160001 	tstne	r6, #1
    39b8:	25f71e49 	ldrbcs	r1, [r7, #3657]!	; 0xe49
    39bc:	32060075 	andcc	r0, r6, #117	; 0x75
    39c0:	1b25f724 	blne	981658 <__Stack_Size+0x981258>
    39c4:	25f700f7 	ldrbcs	r0, [r7, #247]!	; 0xf7
    39c8:	25f76408 	ldrbcs	r6, [r7, #1032]!	; 0x408
    39cc:	3400f71b 	strcc	pc, [r0], #-1819	; 0x71b
    39d0:	08253424 	stmdaeq	r5!, {r2, r5, sl, ip, sp}
    39d4:	9f1c1e64 	svcls	0x001c1e64
	...
    39e0:	647d0058 	ldrbtvs	r0, [sp], #-88	; 0x58
    39e4:	06687d06 	strbteq	r7, [r8], -r6, lsl #26
    39e8:	0c5001f3 	ldfeqe	f0, [r0], {243}	; 0xf3
    39ec:	40013800 	andmi	r3, r1, r0, lsl #16
    39f0:	0001282e 	andeq	r2, r1, lr, lsr #16
    39f4:	1e491316 	mcrne	3, 2, r1, cr9, cr6, {0}
    39f8:	01f325f7 	ldrsheq	r2, [r3, #87]!	; 0x57
    39fc:	24320651 	ldrtcs	r0, [r2], #-1617	; 0x651
    3a00:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    3a04:	06647d00 	strbteq	r7, [r4], -r0, lsl #26
    3a08:	f306687d 	vceq.i8	q3, q3, <illegal reg q14.5>
    3a0c:	000c5001 	andeq	r5, ip, r1
    3a10:	2e400138 	mcrcs	1, 2, r0, cr0, cr8, {1}
    3a14:	16000128 	strne	r0, [r0], -r8, lsr #2
    3a18:	f71e4913 			; <UNDEFINED> instruction: 0xf71e4913
    3a1c:	5101f325 	tstpl	r1, r5, lsr #6
    3a20:	f7243206 			; <UNDEFINED> instruction: 0xf7243206
    3a24:	00f71b25 	rscseq	r1, r7, r5, lsr #22
    3a28:	640825f7 	strvs	r2, [r8], #-1527	; 0x5f7
    3a2c:	f71b25f7 			; <UNDEFINED> instruction: 0xf71b25f7
    3a30:	34243400 	strtcc	r3, [r4], #-1024	; 0x400
    3a34:	1e640825 	cdpne	8, 6, cr0, cr4, cr5, {1}
    3a38:	00009f1c 	andeq	r9, r0, ip, lsl pc
	...
    3a48:	00010000 	andeq	r0, r1, r0
    3a4c:	00000051 	andeq	r0, r0, r1, asr r0
    3a50:	00000000 	andeq	r0, r0, r0
    3a54:	f3000400 	vshl.u8	d0, d0, d0
    3a58:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3a68:	02000000 	andeq	r0, r0, #0
    3a6c:	009f3000 	addseq	r3, pc, r0
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	0b000000 	bleq	3a7c <__Stack_Size+0x367c>
    3a78:	0b007200 	bleq	20280 <__Stack_Size+0x1fe80>
    3a7c:	0a1af0ff 	beq	6bfe80 <__Stack_Size+0x6bfa80>
    3a80:	9f1affff 	svcls	0x001affff
	...
    3a8c:	00730007 	rsbseq	r0, r3, r7
    3a90:	1affff0a 	bne	36c0 <__Stack_Size+0x32c0>
    3a94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3aa4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ab0:	74700003 	ldrbtvc	r0, [r0], #-3
    3ab4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ac8:	01f30004 	mvnseq	r0, r4
    3acc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3adc:	00010000 	andeq	r0, r1, r0
    3ae0:	00000051 	andeq	r0, r0, r1, asr r0
    3ae4:	00000000 	andeq	r0, r0, r0
    3ae8:	f3000400 	vshl.u8	d0, d0, d0
    3aec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3afc:	02000000 	andeq	r0, r0, #0
    3b00:	009f3000 	addseq	r3, pc, r0
    3b04:	00000000 	andeq	r0, r0, r0
    3b08:	01000000 	mrseq	r0, (UNDEF: 0)
    3b0c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3b1c:	00020000 	andeq	r0, r2, r0
    3b20:	00009f30 	andeq	r9, r0, r0, lsr pc
    3b24:	00000000 	andeq	r0, r0, r0
    3b28:	00090000 	andeq	r0, r9, r0
    3b2c:	1a4f0071 	bne	13c3cf8 <__Stack_Size+0x13c38f8>
    3b30:	1affff0a 	bne	3760 <__Stack_Size+0x3360>
    3b34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3b44:	30000200 	andcc	r0, r0, r0, lsl #4
    3b48:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3b4c:	00000000 	andeq	r0, r0, r0
    3b50:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3b5c:	00510001 	subseq	r0, r1, r1
	...
    3b6c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b70:	00005100 	andeq	r5, r0, r0, lsl #2
    3b74:	00000000 	andeq	r0, r0, r0
    3b78:	00040000 	andeq	r0, r4, r0
    3b7c:	9f5101f3 	svcls	0x005101f3
	...
    3b88:	00510001 	subseq	r0, r1, r1
    3b8c:	00000000 	andeq	r0, r0, r0
    3b90:	04000000 	streq	r0, [r0], #-0
    3b94:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3b98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3ba8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3bb4:	01f30004 	mvnseq	r0, r4
    3bb8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    3bc8:	00010000 	andeq	r0, r1, r0
    3bcc:	00000051 	andeq	r0, r0, r1, asr r0
    3bd0:	00000000 	andeq	r0, r0, r0
    3bd4:	f3000400 	vshl.u8	d0, d0, d0
    3bd8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3be8:	01000000 	mrseq	r0, (UNDEF: 0)
    3bec:	00005100 	andeq	r5, r0, r0, lsl #2
    3bf0:	00000000 	andeq	r0, r0, r0
    3bf4:	00040000 	andeq	r0, r4, r0
    3bf8:	9f5101f3 	svcls	0x005101f3
	...
    3c0c:	00510001 	subseq	r0, r1, r1
    3c10:	00000000 	andeq	r0, r0, r0
    3c14:	04000000 	streq	r0, [r0], #-0
    3c18:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3c1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3c20:	00000000 	andeq	r0, r0, r0
    3c24:	000b1400 	andeq	r1, fp, r0, lsl #8
    3c28:	000b1608 	andeq	r1, fp, r8, lsl #12
    3c2c:	50000108 	andpl	r0, r0, r8, lsl #2
    3c30:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
    3c34:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
    3c38:	01f30004 	mvnseq	r0, r4
    3c3c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3c4c:	00010000 	andeq	r0, r1, r0
    3c50:	00000051 	andeq	r0, r0, r1, asr r0
    3c54:	00000000 	andeq	r0, r0, r0
    3c58:	f3000400 	vshl.u8	d0, d0, d0
    3c5c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3c6c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c70:	00005100 	andeq	r5, r0, r0, lsl #2
    3c74:	00000000 	andeq	r0, r0, r0
    3c78:	00040000 	andeq	r0, r4, r0
    3c7c:	9f5101f3 	svcls	0x005101f3
	...
    3c90:	00510001 	subseq	r0, r1, r1
    3c94:	00000000 	andeq	r0, r0, r0
    3c98:	04000000 	streq	r0, [r0], #-0
    3c9c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3ca0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3cb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3cbc:	01f30004 	mvnseq	r0, r4
    3cc0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3cd0:	00020000 	andeq	r0, r2, r0
    3cd4:	00009f30 	andeq	r9, r0, r0, lsr pc
    3cd8:	00000000 	andeq	r0, r0, r0
    3cdc:	000a0000 	andeq	r0, sl, r0
    3ce0:	00730071 	rsbseq	r0, r3, r1, ror r0
    3ce4:	3024401a 	eorcc	r4, r4, sl, lsl r0
    3ce8:	00009f2e 	andeq	r9, r0, lr, lsr #30
	...
    3cf8:	00010000 	andeq	r0, r1, r0
    3cfc:	00000051 	andeq	r0, r0, r1, asr r0
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	f3000400 	vshl.u8	d0, d0, d0
    3d08:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    3d18:	01000000 	mrseq	r0, (UNDEF: 0)
    3d1c:	00005000 	andeq	r5, r0, r0
    3d20:	00000000 	andeq	r0, r0, r0
    3d24:	00040000 	andeq	r0, r4, r0
    3d28:	9f5001f3 	svcls	0x005001f3
	...
    3d34:	00500001 	subseq	r0, r0, r1
    3d38:	00000000 	andeq	r0, r0, r0
    3d3c:	04000000 	streq	r0, [r0], #-0
    3d40:	5001f300 	andpl	pc, r1, r0, lsl #6
    3d44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3d54:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3d60:	01f30004 	mvnseq	r0, r4
    3d64:	00009f51 	andeq	r9, r0, r1, asr pc
    3d68:	00000000 	andeq	r0, r0, r0
    3d6c:	00010000 	andeq	r0, r1, r0
    3d70:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3d80:	30000200 	andcc	r0, r0, r0, lsl #4
    3d84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d88:	00000000 	andeq	r0, r0, r0
    3d8c:	31000b00 	tstcc	r0, r0, lsl #22
    3d90:	25380071 	ldrcs	r0, [r8, #-113]!	; 0x71
    3d94:	1affff0a 	bne	39c4 <__Stack_Size+0x35c4>
    3d98:	00009f24 	andeq	r9, r0, r4, lsr #30
    3d9c:	00000000 	andeq	r0, r0, r0
    3da0:	00120000 	andseq	r0, r2, r0
    3da4:	38007131 	stmdacc	r0, {r0, r4, r5, r8, ip, sp, lr}
    3da8:	ffff0a25 			; <UNDEFINED> instruction: 0xffff0a25
    3dac:	0072241a 	rsbseq	r2, r2, sl, lsl r4
    3db0:	1affff0a 	bne	39e0 <__Stack_Size+0x35e0>
    3db4:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3db8:	00000000 	andeq	r0, r0, r0
    3dbc:	00120000 	andseq	r0, r2, r0
    3dc0:	38007131 	stmdacc	r0, {r0, r4, r5, r8, ip, sp, lr}
    3dc4:	ffff0a25 			; <UNDEFINED> instruction: 0xffff0a25
    3dc8:	0072241a 	rsbseq	r2, r2, sl, lsl r4
    3dcc:	1affff0a 	bne	39fc <__Stack_Size+0x35fc>
    3dd0:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    3de0:	00020000 	andeq	r0, r2, r0
    3de4:	00009f30 	andeq	r9, r0, r0, lsr pc
    3de8:	00000000 	andeq	r0, r0, r0
    3dec:	00090000 	andeq	r0, r9, r0
    3df0:	1a4f0071 	bne	13c3fbc <__Stack_Size+0x13c3bbc>
    3df4:	1affff0a 	bne	3a24 <__Stack_Size+0x3624>
    3df8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3dfc:	00000000 	andeq	r0, r0, r0
    3e00:	52000100 	andpl	r0, r0, #0, 2
	...
    3e0c:	00530001 	subseq	r0, r3, r1
    3e10:	00000000 	andeq	r0, r0, r0
    3e14:	01000000 	mrseq	r0, (UNDEF: 0)
    3e18:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3e28:	00020000 	andeq	r0, r2, r0
    3e2c:	00009f30 	andeq	r9, r0, r0, lsr pc
    3e30:	00000000 	andeq	r0, r0, r0
    3e34:	00010000 	andeq	r0, r1, r0
    3e38:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3e48:	30000200 	andcc	r0, r0, r0, lsl #4
    3e4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e50:	00000000 	andeq	r0, r0, r0
    3e54:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e68:	00510001 	subseq	r0, r1, r1
    3e6c:	00000000 	andeq	r0, r0, r0
    3e70:	04000000 	streq	r0, [r0], #-0
    3e74:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3e78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3e88:	71000500 	tstvc	r0, r0, lsl #10
    3e8c:	9f253800 	svcls	0x00253800
	...
    3e98:	01f30006 	mvnseq	r0, r6
    3e9c:	9f253851 	svcls	0x00253851
	...
    3ea8:	08000b2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, fp}
    3eac:	08000b32 	stmdaeq	r0, {r1, r4, r5, r8, r9, fp}
    3eb0:	3c500001 	mrrccc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    3eb4:	3e08000b 	cdpcc	0, 0, cr0, cr8, cr11, {0}
    3eb8:	0108000b 	tsteq	r8, fp
    3ebc:	0b3e5000 	bleq	f97ec4 <__Stack_Size+0xf97ac4>
    3ec0:	0b4a0800 	bleq	1285ec8 <__Stack_Size+0x1285ac8>
    3ec4:	00010800 	andeq	r0, r1, r0, lsl #16
    3ec8:	000b4a53 	andeq	r4, fp, r3, asr sl
    3ecc:	000b4c08 	andeq	r4, fp, r8, lsl #24
    3ed0:	73000308 	movwvc	r0, #776	; 0x308
    3ed4:	0b4c9f7c 	bleq	132bccc <__Stack_Size+0x132b8cc>
    3ed8:	0b4f0800 	bleq	13c5ee0 <__Stack_Size+0x13c5ae0>
    3edc:	00010800 	andeq	r0, r1, r0, lsl #16
    3ee0:	00000053 	andeq	r0, r0, r3, asr r0
    3ee4:	00000000 	andeq	r0, r0, r0
    3ee8:	000b6c00 	andeq	r6, fp, r0, lsl #24
    3eec:	000b8108 	andeq	r8, fp, r8, lsl #2
    3ef0:	50000108 	andpl	r0, r0, r8, lsl #2
    3ef4:	08000b81 	stmdaeq	r0, {r0, r7, r8, r9, fp}
    3ef8:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    3efc:	01f30004 	mvnseq	r0, r4
    3f00:	00009f50 	andeq	r9, r0, r0, asr pc
    3f04:	00000000 	andeq	r0, r0, r0
    3f08:	0b900000 	bleq	fe403f10 <SCS_BASE+0x1e3f5f10>
    3f0c:	0ba50800 	bleq	fe945f14 <SCS_BASE+0x1e937f14>
    3f10:	00010800 	andeq	r0, r1, r0, lsl #16
    3f14:	000ba550 	andeq	sl, fp, r0, asr r5
    3f18:	000bb408 	andeq	fp, fp, r8, lsl #8
    3f1c:	f3000408 	vshl.u8	d0, d8, d0
    3f20:	009f5001 	addseq	r5, pc, r1
    3f24:	00000000 	andeq	r0, r0, r0
    3f28:	b4000000 	strlt	r0, [r0], #-0
    3f2c:	c808000b 	stmdagt	r8, {r0, r1, r3}
    3f30:	0108000b 	tsteq	r8, fp
    3f34:	0bc85000 	bleq	ff217f3c <SCS_BASE+0x1f209f3c>
    3f38:	0c440800 	mcrreq	8, 0, r0, r4, cr0
    3f3c:	00040800 	andeq	r0, r4, r0, lsl #16
    3f40:	9f5001f3 	svcls	0x005001f3
	...
    3f4c:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
    3f50:	08000bd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, fp}
    3f54:	09710002 	ldmdbeq	r1!, {r1}^
	...
    3f60:	08000bfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, fp}
    3f64:	08000c00 	stmdaeq	r0, {sl, fp}
    3f68:	00520001 	subseq	r0, r2, r1
    3f6c:	1a08000c 	bne	203fa4 <__Stack_Size+0x203ba4>
    3f70:	0508000c 	streq	r0, [r8, #-12]
    3f74:	3f007100 	svccc	0x00007100
    3f78:	0c1e9f1a 	ldceq	15, cr9, [lr], {26}
    3f7c:	0c280800 	stceq	8, cr0, [r8], #-0
    3f80:	00050800 	andeq	r0, r5, r0, lsl #16
    3f84:	1a3f0071 	bne	fc4150 <__Stack_Size+0xfc3d50>
    3f88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3f8c:	00000000 	andeq	r0, r0, r0
    3f90:	000c4c00 	andeq	r4, ip, r0, lsl #24
    3f94:	000cd208 	andeq	sp, ip, r8, lsl #4
    3f98:	74000308 	strvc	r0, [r0], #-776	; 0x308
    3f9c:	00009f10 	andeq	r9, r0, r0, lsl pc
    3fa0:	00000000 	andeq	r0, r0, r0
    3fa4:	0c500000 	mraeq	r0, r0, acc0
    3fa8:	0c7a0800 	ldcleq	8, cr0, [sl], #-0
    3fac:	00010800 	andeq	r0, r1, r0, lsl #16
    3fb0:	000c7a53 	andeq	r7, ip, r3, asr sl
    3fb4:	000c8008 	andeq	r8, ip, r8
    3fb8:	74000908 	strvc	r0, [r0], #-2312	; 0x908
    3fbc:	0a029410 	beq	a9004 <__Stack_Size+0xa8c04>
    3fc0:	9f1affff 	svcls	0x001affff
    3fc4:	08000c80 	stmdaeq	r0, {r7, sl, fp}
    3fc8:	08000c94 	stmdaeq	r0, {r2, r4, r7, sl, fp}
    3fcc:	94530001 	ldrbls	r0, [r3], #-1
    3fd0:	9508000c 	strls	r0, [r8, #-12]
    3fd4:	0908000c 	stmdbeq	r8, {r2, r3}
    3fd8:	94107400 	ldrls	r7, [r0], #-1024	; 0x400
    3fdc:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    3fe0:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3fe4:	00000000 	andeq	r0, r0, r0
    3fe8:	0c520000 	mraeq	r0, r2, acc0
    3fec:	0c740800 	ldcleq	8, cr0, [r4], #-0
    3ff0:	00060800 	andeq	r0, r6, r0, lsl #16
    3ff4:	ff080076 			; <UNDEFINED> instruction: 0xff080076
    3ff8:	0c749f1a 	ldcleq	15, cr9, [r4], #-104	; 0xffffff98
    3ffc:	0c780800 	ldcleq	8, cr0, [r8], #-0
    4000:	00020800 	andeq	r0, r2, r0, lsl #16
    4004:	0c789f34 	ldcleq	15, cr9, [r8], #-208	; 0xffffff30
    4008:	0c800800 	stceq	8, cr0, [r0], {0}
    400c:	00020800 	andeq	r0, r2, r0, lsl #16
    4010:	0c809f37 	stceq	15, cr9, [r0], {55}	; 0x37
    4014:	0c8a0800 	stceq	8, cr0, [sl], {0}
    4018:	00060800 	andeq	r0, r6, r0, lsl #16
    401c:	ff080076 			; <UNDEFINED> instruction: 0xff080076
    4020:	0c8a9f1a 	stceq	15, cr9, [sl], {26}
    4024:	0cd20800 	ldcleq	8, cr0, [r2], {0}
    4028:	00010800 	andeq	r0, r1, r0, lsl #16
    402c:	00000056 	andeq	r0, r0, r6, asr r0
    4030:	00000000 	andeq	r0, r0, r0
    4034:	000c9800 	andeq	r9, ip, r0, lsl #16
    4038:	000c9a08 	andeq	r9, ip, r8, lsl #20
    403c:	50000108 	andpl	r0, r0, r8, lsl #2
    4040:	08000c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp}
    4044:	08000cc8 	stmdaeq	r0, {r3, r6, r7, sl, fp}
    4048:	00590001 	subseq	r0, r9, r1
    404c:	00000000 	andeq	r0, r0, r0
    4050:	82000000 	andhi	r0, r0, #0
    4054:	8a08000c 	bhi	20408c <__Stack_Size+0x203c8c>
    4058:	0108000c 	tsteq	r8, ip
    405c:	0c8a5500 	cfstr32eq	mvfx5, [sl], {0}
    4060:	0c900800 	ldceq	8, cr0, [r0], {0}
    4064:	00160800 	andseq	r0, r6, r0, lsl #16
    4068:	40120075 	andsmi	r0, r2, r5, ror r0
    406c:	7322244b 	teqvc	r2, #1258291200	; 0x4b000000
    4070:	40141600 	andsmi	r1, r4, r0, lsl #12
    4074:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    4078:	16000128 	strne	r0, [r0], -r8, lsr #2
    407c:	0c909f13 	ldceq	15, cr9, [r0], {19}
    4080:	0cbe0800 	ldceq	8, cr0, [lr]
    4084:	00010800 	andeq	r0, r1, r0, lsl #16
    4088:	00000055 	andeq	r0, r0, r5, asr r0
    408c:	00000000 	andeq	r0, r0, r0
    4090:	000d3600 	andeq	r3, sp, r0, lsl #12
    4094:	000d4d08 	andeq	r4, sp, r8, lsl #26
    4098:	50000108 	andpl	r0, r0, r8, lsl #2
    409c:	08000d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp}
    40a0:	08000d5e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, fp}
    40a4:	00500001 	subseq	r0, r0, r1
    40a8:	00000000 	andeq	r0, r0, r0
    40ac:	74000000 	strvc	r0, [r0], #-0
    40b0:	7808000d 	stmdavc	r8, {r0, r2, r3}
    40b4:	0608000d 	streq	r0, [r8], -sp
    40b8:	08007000 	stmdaeq	r0, {ip, sp, lr}
    40bc:	789f1a7f 	ldmvc	pc, {r0, r1, r2, r3, r4, r5, r6, r9, fp, ip}	; <UNPREDICTABLE>
    40c0:	9c08000d 	stcls	0, cr0, [r8], {13}
    40c4:	0108000d 	tsteq	r8, sp
    40c8:	0d9c5000 	ldceq	0, cr5, [ip]
    40cc:	0dc20800 	stcleq	8, cr0, [r2]
    40d0:	000b0800 	andeq	r0, fp, r0, lsl #16
    40d4:	01940073 	orrseq	r0, r4, r3, ror r0
    40d8:	081a7f08 	ldmdaeq	sl, {r3, r8, r9, sl, fp, ip, sp, lr}
    40dc:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    40e0:	00000000 	andeq	r0, r0, r0
    40e4:	b4000000 	strlt	r0, [r0], #-0
    40e8:	e308000d 	movw	r0, #32781	; 0x800d
    40ec:	0108000d 	tsteq	r8, sp
    40f0:	0dee5100 	stfeqe	f5, [lr]
    40f4:	0e000800 	cdpeq	8, 0, cr0, cr0, cr0, {0}
    40f8:	00010800 	andeq	r0, r1, r0, lsl #16
    40fc:	000e0651 	andeq	r0, lr, r1, asr r6
    4100:	000e0908 	andeq	r0, lr, r8, lsl #18
    4104:	51000108 	tstpl	r0, r8, lsl #2
	...
    4110:	08000d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp}
    4114:	08000de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp}
    4118:	ee500001 	cdp	0, 5, cr0, cr0, cr1, {0}
    411c:	0308000d 	movweq	r0, #32781	; 0x800d
    4120:	0108000e 	tsteq	r8, lr
    4124:	0e065000 	cdpeq	0, 0, cr5, cr6, cr0, {0}
    4128:	0e090800 	cdpeq	8, 0, cr0, cr9, cr0, {0}
    412c:	00010800 	andeq	r0, r1, r0, lsl #16
    4130:	00000050 	andeq	r0, r0, r0, asr r0
    4134:	00000000 	andeq	r0, r0, r0
    4138:	000d9600 	andeq	r9, sp, r0, lsl #12
    413c:	000dd008 	andeq	sp, sp, r8
    4140:	72000608 	andvc	r0, r0, #8, 12	; 0x800000
    4144:	1aff0800 	bne	fffc614c <SCS_BASE+0x1ffb814c>
    4148:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    414c:	00000000 	andeq	r0, r0, r0
    4150:	000e1600 	andeq	r1, lr, r0, lsl #12
    4154:	000e1a08 	andeq	r1, lr, r8, lsl #20
    4158:	73000708 	movwvc	r0, #1800	; 0x708
    415c:	30000a00 	andcc	r0, r0, r0, lsl #20
    4160:	0e1a9f27 	cdpeq	15, 1, cr9, cr10, cr7, {1}
    4164:	0e1e0800 	cdpeq	8, 1, cr0, cr14, cr0, {0}
    4168:	000b0800 	andeq	r0, fp, r0, lsl #16
    416c:	000a0073 	andeq	r0, sl, r3, ror r0
    4170:	000a2730 	andeq	r2, sl, r0, lsr r7
    4174:	009f2730 	addseq	r2, pc, r0, lsr r7	; <UNPREDICTABLE>
    4178:	00000000 	andeq	r0, r0, r0
    417c:	50000000 	andpl	r0, r0, r0
    4180:	8a08000e 	bhi	2041c0 <__Stack_Size+0x203dc0>
    4184:	0608000e 	streq	r0, [r8], -lr
    4188:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    418c:	c09f1aff 			; <UNDEFINED> instruction: 0xc09f1aff
    4190:	d008000e 	andle	r0, r8, lr
    4194:	0608000e 	streq	r0, [r8], -lr
    4198:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    419c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    41a0:	00000000 	andeq	r0, r0, r0
    41a4:	54000000 	strpl	r0, [r0], #-0
    41a8:	7408000e 	strvc	r0, [r8], #-14
    41ac:	0108000e 	tsteq	r8, lr
    41b0:	0e745400 	cdpeq	4, 7, cr5, cr4, cr0, {0}
    41b4:	0e8a0800 	cdpeq	8, 8, cr0, cr10, cr0, {0}
    41b8:	00070800 	andeq	r0, r7, r0, lsl #16
    41bc:	7f0b0072 	svcvc	0x000b0072
    41c0:	c09f1aff 			; <UNDEFINED> instruction: 0xc09f1aff
    41c4:	d008000e 	andle	r0, r8, lr
    41c8:	0708000e 	streq	r0, [r8, -lr]
    41cc:	0b007200 	bleq	209d4 <__Stack_Size+0x205d4>
    41d0:	9f1aff7f 	svcls	0x001aff7f
	...
    41dc:	08000e6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, sl, fp}
    41e0:	08000ebb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r7, r9, sl, fp}
    41e4:	c0500001 	subsgt	r0, r0, r1
    41e8:	c208000e 	andgt	r0, r8, #14
    41ec:	0108000e 	tsteq	r8, lr
    41f0:	00005000 	andeq	r5, r0, r0
    41f4:	00000000 	andeq	r0, r0, r0
    41f8:	0e960000 	cdpeq	0, 9, cr0, cr6, cr0, {0}
    41fc:	0e9a0800 	cdpeq	8, 9, cr0, cr10, cr0, {0}
    4200:	00050800 	andeq	r0, r5, r0, lsl #16
    4204:	27400072 	smlsldxcs	r0, r0, r2, r0	; <UNPREDICTABLE>
    4208:	000e9a9f 	muleq	lr, pc, sl	; <UNPREDICTABLE>
    420c:	000e9c08 	andeq	r9, lr, r8, lsl #24
    4210:	72000708 	andvc	r0, r0, #8, 14	; 0x200000
    4214:	40274000 	eormi	r4, r7, r0
    4218:	00009f27 	andeq	r9, r0, r7, lsr #30
    421c:	00000000 	andeq	r0, r0, r0
    4220:	0ea60000 	cdpeq	0, 10, cr0, cr6, cr0, {0}
    4224:	0eaa0800 	cdpeq	8, 10, cr0, cr10, cr0, {0}
    4228:	00070800 	andeq	r0, r7, r0, lsl #16
    422c:	000a0072 	andeq	r0, sl, r2, ror r0
    4230:	009f2710 	addseq	r2, pc, r0, lsl r7	; <UNPREDICTABLE>
    4234:	00000000 	andeq	r0, r0, r0
    4238:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    423c:	0608000e 	streq	r0, [r8], -lr
    4240:	0108000f 	tsteq	r8, pc
    4244:	0f065000 	svceq	0x00065000
    4248:	0f100800 	svceq	0x00100800
    424c:	00040800 	andeq	r0, r4, r0, lsl #16
    4250:	9f5001f3 	svcls	0x005001f3
	...
    425c:	08000ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp}
    4260:	08000efe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, fp}
    4264:	fe510001 	cdp2	0, 5, cr0, cr1, cr1, {0}
    4268:	0408000e 	streq	r0, [r8], #-14
    426c:	0408000f 	streq	r0, [r8], #-15
    4270:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4274:	000f049f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    4278:	000f1008 	andeq	r1, pc, r8
    427c:	51000108 	tstpl	r0, r8, lsl #2
	...
    4288:	08000efa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, sl, fp}
    428c:	08000f00 	stmdaeq	r0, {r8, r9, sl, fp}
    4290:	00530001 	subseq	r0, r3, r1
    4294:	0408000f 	streq	r0, [r8], #-15
    4298:	0908000f 	stmdbeq	r8, {r0, r1, r2, r3}
    429c:	94127200 	ldrls	r7, [r2], #-512	; 0x200
    42a0:	ffff0a02 			; <UNDEFINED> instruction: 0xffff0a02
    42a4:	0f049f1a 	svceq	0x00049f1a
    42a8:	0f100800 	svceq	0x00100800
    42ac:	00010800 	andeq	r0, r1, r0, lsl #16
    42b0:	00000053 	andeq	r0, r0, r3, asr r0
    42b4:	00000000 	andeq	r0, r0, r0
    42b8:	000f6400 	andeq	r6, pc, r0, lsl #8
    42bc:	000f6c08 	andeq	r6, pc, r8, lsl #24
    42c0:	74001108 	strvc	r1, [r0], #-264	; 0x108
    42c4:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    42c8:	2324311a 	teqcs	r4, #-2147483642	; 0x80000006
    42cc:	8081c080 	addhi	ip, r1, r0, lsl #1
    42d0:	04939f04 	ldreq	r9, [r3], #3844	; 0xf04
    42d4:	08000f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp}
    42d8:	08000f76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, fp}
    42dc:	84720018 	ldrbthi	r0, [r2], #-24
    42e0:	028080e0 	addeq	r8, r0, #224	; 0xe0
    42e4:	0a062431 	beq	18d3b0 <__Stack_Size+0x18cfb0>
    42e8:	311affff 			; <UNDEFINED> instruction: 0x311affff
    42ec:	c0802324 	addgt	r2, r0, r4, lsr #6
    42f0:	9f048081 	svcls	0x00048081
    42f4:	0f760493 	svceq	0x00760493
    42f8:	0f7a0800 	svceq	0x007a0800
    42fc:	00180800 	andseq	r0, r8, r0, lsl #16
    4300:	80e08472 	rschi	r8, r0, r2, ror r4
    4304:	24310280 	ldrtcs	r0, [r1], #-640	; 0x280
    4308:	ffff0a06 			; <UNDEFINED> instruction: 0xffff0a06
    430c:	2324311a 	teqcs	r4, #-2147483642	; 0x80000006
    4310:	8081c081 	addhi	ip, r1, r1, lsl #1
    4314:	04939f04 	ldreq	r9, [r3], #3844	; 0xf04
	...
    4320:	08000fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp}
    4324:	08000fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp}
    4328:	9f320002 	svcls	0x00320002
    432c:	08000fb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, sl, fp}
    4330:	08000fb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, fp}
    4334:	b6500001 	ldrblt	r0, [r0], -r1
    4338:	c208000f 	andgt	r0, r8, #15
    433c:	0208000f 	andeq	r0, r8, #15
    4340:	c69f3200 	ldrgt	r3, [pc], r0, lsl #4
    4344:	e408000f 	str	r0, [r8], #-15
    4348:	0208000f 	andeq	r0, r8, #15
    434c:	ee9f3200 	cdp	2, 9, cr3, cr15, cr0, {0}
    4350:	f408000f 	vst4.8	{d0-d3}, [r8]
    4354:	0108000f 	tsteq	r8, pc
    4358:	0ff45000 	svceq	0x00f45000
    435c:	10040800 	andne	r0, r4, r0, lsl #16
    4360:	00020800 	andeq	r0, r2, r0, lsl #16
    4364:	10049f32 	andne	r9, r4, r2, lsr pc
    4368:	10060800 	andne	r0, r6, r0, lsl #16
    436c:	00010800 	andeq	r0, r1, r0, lsl #16
    4370:	00100650 	andseq	r0, r0, r0, asr r6
    4374:	00102008 	andseq	r2, r0, r8
    4378:	32000208 	andcc	r0, r0, #8, 4	; 0x80000000
    437c:	0010209f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    4380:	00102208 	andseq	r2, r0, r8, lsl #4
    4384:	50000108 	andpl	r0, r0, r8, lsl #2
    4388:	08001022 	stmdaeq	r0, {r1, r5, ip}
    438c:	0800102e 	stmdaeq	r0, {r1, r2, r3, r5, ip}
    4390:	9f320002 	svcls	0x00320002
    4394:	0800102e 	stmdaeq	r0, {r1, r2, r3, r5, ip}
    4398:	08001030 	stmdaeq	r0, {r4, r5, ip}
    439c:	30500001 	subscc	r0, r0, r1
    43a0:	40080010 	andmi	r0, r8, r0, lsl r0
    43a4:	02080010 	andeq	r0, r8, #16
    43a8:	409f3200 	addsmi	r3, pc, r0, lsl #4
    43ac:	48080010 	stmdami	r8, {r4}
    43b0:	01080010 	tsteq	r8, r0, lsl r0
    43b4:	10605000 	rsbne	r5, r0, r0
    43b8:	10620800 	rsbne	r0, r2, r0, lsl #16
    43bc:	00010800 	andeq	r0, r1, r0, lsl #16
    43c0:	00000050 	andeq	r0, r0, r0, asr r0
    43c4:	00000000 	andeq	r0, r0, r0
    43c8:	000fa400 	andeq	sl, pc, r0, lsl #8
    43cc:	00106808 	andseq	r6, r0, r8, lsl #16
    43d0:	54000108 	strpl	r0, [r0], #-264	; 0x108
	...
    43dc:	08001048 	stmdaeq	r0, {r3, r6, ip}
    43e0:	08001060 	stmdaeq	r0, {r5, r6, ip}
    43e4:	9f360002 	svcls	0x00360002
    43e8:	08001062 	stmdaeq	r0, {r1, r5, r6, ip}
    43ec:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
    43f0:	00530001 	subseq	r0, r3, r1
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    43fc:	7e080010 	mcrvc	0, 0, r0, cr8, cr0, {0}
    4400:	02080010 	andeq	r0, r8, #16
    4404:	7e9f3000 	cdpvc	0, 9, cr3, cr15, cr0, {0}
    4408:	80080010 	andhi	r0, r8, r0, lsl r0
    440c:	01080010 	tsteq	r8, r0, lsl r0
    4410:	10805300 	addne	r5, r0, r0, lsl #6
    4414:	10880800 	addne	r0, r8, r0, lsl #16
    4418:	00020800 	andeq	r0, r2, r0, lsl #16
    441c:	10889f30 	addne	r9, r8, r0, lsr pc
    4420:	108a0800 	addne	r0, sl, r0, lsl #16
    4424:	00010800 	andeq	r0, r1, r0, lsl #16
    4428:	00108a53 	andseq	r8, r0, r3, asr sl
    442c:	00109208 	andseq	r9, r0, r8, lsl #4
    4430:	30000208 	andcc	r0, r0, r8, lsl #4
    4434:	0010929f 	mulseq	r0, pc, r2	; <UNPREDICTABLE>
    4438:	00109408 	andseq	r9, r0, r8, lsl #8
    443c:	53000108 	movwpl	r0, #264	; 0x108
    4440:	08001094 	stmdaeq	r0, {r2, r4, r7, ip}
    4444:	08001152 	stmdaeq	r0, {r1, r4, r6, r8, ip}
    4448:	9f300002 	svcls	0x00300002
    444c:	08001152 	stmdaeq	r0, {r1, r4, r6, r8, ip}
    4450:	0800115f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, ip}
    4454:	12530001 	subsne	r0, r3, #1
    4458:	1c080012 	stcne	0, cr0, [r8], {18}
    445c:	02080012 	andeq	r0, r8, #18
    4460:	1c9f3000 	ldcne	0, cr3, [pc], {0}
    4464:	38080012 	stmdacc	r8, {r1, r4}
    4468:	06080012 			; <UNDEFINED> instruction: 0x06080012
    446c:	0b910300 	bleq	fe445074 <SCS_BASE+0x1e437074>
    4470:	009f0800 	addseq	r0, pc, r0, lsl #16
    4474:	00000000 	andeq	r0, r0, r0
    4478:	60000000 	andvs	r0, r0, r0
    447c:	64080011 	strvs	r0, [r8], #-17
    4480:	02080011 	andeq	r0, r8, #17
    4484:	709f3000 	addsvc	r3, pc, r0
    4488:	86080011 			; <UNDEFINED> instruction: 0x86080011
    448c:	01080011 	tsteq	r8, r1, lsl r0
    4490:	118a5000 	orrne	r5, sl, r0
    4494:	11920800 	orrsne	r0, r2, r0, lsl #16
    4498:	00010800 	andeq	r0, r1, r0, lsl #16
    449c:	0011b450 	andseq	fp, r1, r0, asr r4
    44a0:	0011c208 	andseq	ip, r1, r8, lsl #4
    44a4:	50000108 	andpl	r0, r0, r8, lsl #2
    44a8:	080011fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, ip}
    44ac:	0800120a 	stmdaeq	r0, {r1, r3, r9, ip}
    44b0:	00500001 	subseq	r0, r0, r1
    44b4:	00000000 	andeq	r0, r0, r0
    44b8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    44bc:	58080010 	stmdapl	r8, {r4}
    44c0:	01080011 	tsteq	r8, r1, lsl r0
    44c4:	11645400 	cmnne	r4, r0, lsl #8
    44c8:	117a0800 	cmnne	sl, r0, lsl #16
    44cc:	00010800 	andeq	r0, r1, r0, lsl #16
    44d0:	00121254 	andseq	r1, r2, r4, asr r2
    44d4:	00123808 	andseq	r3, r2, r8, lsl #16
    44d8:	54000108 	strpl	r0, [r0], #-264	; 0x108
	...
    44e4:	080010e8 	stmdaeq	r0, {r3, r5, r6, r7, ip}
    44e8:	08001114 	stmdaeq	r0, {r2, r4, r8, ip}
    44ec:	00510001 	subseq	r0, r1, r1
    44f0:	00000000 	andeq	r0, r0, r0
    44f4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    44f8:	14080010 	strne	r0, [r8], #-16
    44fc:	09080011 	stmdbeq	r8, {r0, r4}
    4500:	08007300 	stmdaeq	r0, {r8, r9, ip, sp, lr}
    4504:	ff081a70 			; <UNDEFINED> instruction: 0xff081a70
    4508:	00009f1a 	andeq	r9, r0, sl, lsl pc
    450c:	00000000 	andeq	r0, r0, r0
    4510:	10680000 	rsbne	r0, r8, r0
    4514:	120a0800 	andne	r0, sl, #0, 16
    4518:	00020800 	andeq	r0, r2, r0, lsl #16
    451c:	12129f30 	andsne	r9, r2, #48, 30	; 0xc0
    4520:	12380800 	eorsne	r0, r8, #0, 16
    4524:	00020800 	andeq	r0, r2, r0, lsl #16
    4528:	00009f30 	andeq	r9, r0, r0, lsr pc
    452c:	00000000 	andeq	r0, r0, r0
    4530:	11000000 	mrsne	r0, (UNDEF: 0)
    4534:	11140800 	tstne	r4, r0, lsl #16
    4538:	00010800 	andeq	r0, r1, r0, lsl #16
    453c:	00000052 	andeq	r0, r0, r2, asr r0
    4540:	00000000 	andeq	r0, r0, r0
    4544:	00107400 	andseq	r7, r0, r0, lsl #8
    4548:	00107608 	andseq	r7, r0, r8, lsl #12
    454c:	73000208 	movwvc	r0, #520	; 0x208
    4550:	00107602 	andseq	r7, r0, r2, lsl #12
    4554:	00109408 	andseq	r9, r0, r8, lsl #8
    4558:	75000508 	strvc	r0, [r0, #-1288]	; 0x508
    455c:	02230600 	eoreq	r0, r3, #0, 12
    4560:	08001152 	stmdaeq	r0, {r1, r4, r6, r8, ip}
    4564:	08001154 	stmdaeq	r0, {r2, r4, r6, r8, ip}
    4568:	00750005 	rsbseq	r0, r5, r5
    456c:	00022306 	andeq	r2, r2, r6, lsl #6
    4570:	00000000 	andeq	r0, r0, r0
    4574:	40000000 	andmi	r0, r0, r0
    4578:	52080012 	andpl	r0, r8, #18
    457c:	01080012 	tsteq	r8, r2, lsl r0
    4580:	12525300 	subsne	r5, r2, #0, 6
    4584:	12630800 	rsbne	r0, r3, #0, 16
    4588:	00080800 	andeq	r0, r8, r0, lsl #16
    458c:	01940874 	orrseq	r0, r4, r4, ror r8
    4590:	9f1aff08 	svcls	0x001aff08
    4594:	080012d2 	stmdaeq	r0, {r1, r4, r6, r7, r9, ip}
    4598:	080012da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, ip}
    459c:	da530001 	ble	14c45a8 <__Stack_Size+0x14c41a8>
    45a0:	df080012 	svcle	0x00080012
    45a4:	08080012 	stmdaeq	r8, {r1, r4}
    45a8:	94087400 	strls	r7, [r8], #-1024	; 0x400
    45ac:	1aff0801 	bne	fffc65b8 <SCS_BASE+0x1ffb85b8>
    45b0:	0012e29f 	mulseq	r2, pc, r2	; <UNPREDICTABLE>
    45b4:	0012ea08 	andseq	lr, r2, r8, lsl #20
    45b8:	53000108 	movwpl	r0, #264	; 0x108
	...
    45c4:	08001250 	stmdaeq	r0, {r4, r6, r9, ip}
    45c8:	080012d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, ip}
    45cc:	10740003 	rsbsne	r0, r4, r3
    45d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    45d4:	00000000 	andeq	r0, r0, r0
    45d8:	00125400 	andseq	r5, r2, r0, lsl #8
    45dc:	00126308 	andseq	r6, r2, r8, lsl #6
    45e0:	52000108 	andpl	r0, r0, #8, 2
	...
    45ec:	08001268 	stmdaeq	r0, {r3, r5, r6, r9, ip}
    45f0:	08001270 	stmdaeq	r0, {r4, r5, r6, r9, ip}
    45f4:	70500001 	subsvc	r0, r0, r1
    45f8:	82080012 	andhi	r0, r8, #18
    45fc:	01080012 	tsteq	r8, r2, lsl r0
    4600:	00005700 	andeq	r5, r0, r0, lsl #14
    4604:	00000000 	andeq	r0, r0, r0
    4608:	125a0000 	subsne	r0, sl, #0
    460c:	12600800 	rsbne	r0, r0, #0, 16
    4610:	00160800 	andseq	r0, r6, r0, lsl #16
    4614:	40120076 	andsmi	r0, r2, r6, ror r0
    4618:	7222244b 	eorvc	r2, r2, #1258291200	; 0x4b000000
    461c:	40141600 	andsmi	r1, r4, r0, lsl #12
    4620:	2d22244b 	cfstrscs	mvf2, [r2, #-300]!	; 0xfffffed4
    4624:	16000128 	strne	r0, [r0], -r8, lsr #2
    4628:	12609f13 	rsbne	r9, r0, #19, 30	; 0x4c
    462c:	12820800 	addne	r0, r2, #0, 16
    4630:	00010800 	andeq	r0, r1, r0, lsl #16
    4634:	00000056 	andeq	r0, r0, r6, asr r0
    4638:	00000000 	andeq	r0, r0, r0
    463c:	00130800 	andseq	r0, r3, r0, lsl #16
    4640:	00133c08 	andseq	r3, r3, r8, lsl #24
    4644:	50000108 	andpl	r0, r0, r8, lsl #2
    4648:	0800133c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, ip}
    464c:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
    4650:	01f30004 	mvnseq	r0, r4
    4654:	00009f50 	andeq	r9, r0, r0, asr pc
    4658:	00000000 	andeq	r0, r0, r0
    465c:	130e0000 	movwne	r0, #57344	; 0xe000
    4660:	13100800 	tstne	r0, #0, 16
    4664:	00020800 	andeq	r0, r2, r0, lsl #16
    4668:	13109f30 	tstne	r0, #48, 30	; 0xc0
    466c:	13380800 	teqne	r8, #0, 16
    4670:	00010800 	andeq	r0, r1, r0, lsl #16
    4674:	00000053 	andeq	r0, r0, r3, asr r0
    4678:	00000000 	andeq	r0, r0, r0
    467c:	00130e00 	andseq	r0, r3, r0, lsl #28
    4680:	00134008 	andseq	r4, r3, r8
    4684:	55000108 	strpl	r0, [r0, #-264]	; 0x108
	...
    4690:	08001350 	stmdaeq	r0, {r4, r6, r8, r9, ip}
    4694:	0800135b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, ip}
    4698:	60520001 	subsvs	r0, r2, r1
    469c:	62080013 	andvs	r0, r8, #19
    46a0:	01080013 	tsteq	r8, r3, lsl r0
    46a4:	13625300 	cmnne	r2, #0, 6
    46a8:	13680800 	cmnne	r8, #0, 16
    46ac:	00010800 	andeq	r0, r1, r0, lsl #16
    46b0:	00136852 	andseq	r6, r3, r2, asr r8
    46b4:	00137708 	andseq	r7, r3, r8, lsl #14
    46b8:	73000808 	movwvc	r0, #2056	; 0x808
    46bc:	08019408 	stmdaeq	r1, {r3, sl, ip, pc}
    46c0:	8a9f1aff 	bhi	fe7cb2c4 <SCS_BASE+0x1e7bd2c4>
    46c4:	95080013 	strls	r0, [r8, #-19]
    46c8:	01080013 	tsteq	r8, r3, lsl r0
    46cc:	00005300 	andeq	r5, r0, r0, lsl #6
    46d0:	00000000 	andeq	r0, r0, r0
    46d4:	13a60000 			; <UNDEFINED> instruction: 0x13a60000
    46d8:	13be0800 			; <UNDEFINED> instruction: 0x13be0800
    46dc:	00010800 	andeq	r0, r1, r0, lsl #16
    46e0:	0013be50 	andseq	fp, r3, r0, asr lr
    46e4:	0013c008 	andseq	ip, r3, r8
    46e8:	70000308 	andvc	r0, r0, r8, lsl #6
    46ec:	13c09f7e 	bicne	r9, r0, #504	; 0x1f8
    46f0:	13d00800 	bicsne	r0, r0, #0, 16
    46f4:	00030800 	andeq	r0, r3, r0, lsl #16
    46f8:	d09f7f70 	addsle	r7, pc, r0, ror pc	; <UNPREDICTABLE>
    46fc:	d4080013 	strle	r0, [r8], #-19
    4700:	01080013 	tsteq	r8, r3, lsl r0
    4704:	13d45000 	bicsne	r5, r4, #0
    4708:	13d60800 	bicsne	r0, r6, #0, 16
    470c:	00030800 	andeq	r0, r3, r0, lsl #16
    4710:	009f7e70 	addseq	r7, pc, r0, ror lr	; <UNPREDICTABLE>
    4714:	00000000 	andeq	r0, r0, r0
    4718:	a6000000 	strge	r0, [r0], -r0
    471c:	ac080013 	stcge	0, cr0, [r8], {19}
    4720:	01080013 	tsteq	r8, r3, lsl r0
    4724:	13ac5100 			; <UNDEFINED> instruction: 0x13ac5100
    4728:	13d60800 	bicsne	r0, r6, #0, 16
    472c:	00040800 	andeq	r0, r4, r0, lsl #16
    4730:	9f5101f3 	svcls	0x005101f3
	...
    473c:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
    4740:	080013ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, ip}
    4744:	ae520001 	cdpge	0, 5, cr0, cr2, cr1, {0}
    4748:	d6080013 			; <UNDEFINED> instruction: 0xd6080013
    474c:	04080013 	streq	r0, [r8], #-19
    4750:	5201f300 	andpl	pc, r1, #0, 6
    4754:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4758:	00000000 	andeq	r0, r0, r0
    475c:	0013b600 	andseq	fp, r3, r0, lsl #12
    4760:	0013b808 	andseq	fp, r3, r8, lsl #16
    4764:	52000108 	andpl	r0, r0, #8, 2
    4768:	080013b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip}
    476c:	080013d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, ip}
    4770:	01f3000f 	mvnseq	r0, pc
    4774:	ffff0a52 			; <UNDEFINED> instruction: 0xffff0a52
    4778:	3101231a 	tstcc	r1, sl, lsl r3
    477c:	1c007326 	stcne	3, cr7, [r0], {38}	; 0x26
    4780:	0013d09f 	mulseq	r3, pc, r0	; <UNPREDICTABLE>
    4784:	0013d208 	andseq	sp, r3, r8, lsl #4
    4788:	f3001008 	vhadd.u8	d1, d0, d8
    478c:	ff0a5201 			; <UNDEFINED> instruction: 0xff0a5201
    4790:	01231aff 	strdeq	r1, [r3, -pc]!
    4794:	00732631 	rsbseq	r2, r3, r1, lsr r6
    4798:	d29f2220 	addsle	r2, pc, #32, 4
    479c:	d6080013 			; <UNDEFINED> instruction: 0xd6080013
    47a0:	0f080013 	svceq	0x00080013
    47a4:	5201f300 	andpl	pc, r1, #0, 6
    47a8:	1affff0a 	bne	43d8 <__Stack_Size+0x3fd8>
    47ac:	26310123 	ldrtcs	r0, [r1], -r3, lsr #2
    47b0:	9f1c0073 	svcls	0x001c0073
	...
    47bc:	080013c0 	stmdaeq	r0, {r6, r7, r8, r9, ip}
    47c0:	080013c8 	stmdaeq	r0, {r3, r6, r7, r8, r9, ip}
    47c4:	7e700008 	cdpvc	0, 7, cr0, cr0, cr8, {0}
    47c8:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    47cc:	13c89f1a 	bicne	r9, r8, #26, 30	; 0x68
    47d0:	13cc0800 	bicne	r0, ip, #0, 16
    47d4:	00010800 	andeq	r0, r1, r0, lsl #16
    47d8:	0013cc54 	andseq	ip, r3, r4, asr ip
    47dc:	0013d008 	andseq	sp, r3, r8
    47e0:	70000808 	andvc	r0, r0, r8, lsl #16
    47e4:	0801947e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, ip, pc}
    47e8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    47ec:	00000000 	andeq	r0, r0, r0
    47f0:	c0000000 	andgt	r0, r0, r0
    47f4:	d0080013 	andle	r0, r8, r3, lsl r0
    47f8:	12080013 	andne	r0, r8, #19
    47fc:	947f7000 	ldrbtls	r7, [pc], #-0	; 4804 <__Stack_Size+0x4404>
    4800:	1aff0801 	bne	fffc680c <SCS_BASE+0x1ffb880c>
    4804:	7e702438 	mrcvc	4, 3, r2, cr0, cr8, {1}
    4808:	ff080194 			; <UNDEFINED> instruction: 0xff080194
    480c:	009f211a 	addseq	r2, pc, sl, lsl r1	; <UNPREDICTABLE>
    4810:	00000000 	andeq	r0, r0, r0
    4814:	b6000000 	strlt	r0, [r0], -r0
    4818:	b8080013 	stmdalt	r8, {r0, r1, r4}
    481c:	01080013 	tsteq	r8, r3, lsl r0
    4820:	13d05100 	bicsne	r5, r0, #0, 2
    4824:	13d20800 	bicsne	r0, r2, #0, 16
    4828:	000a0800 	andeq	r0, sl, r0, lsl #16
    482c:	24320073 	ldrtcs	r0, [r2], #-115	; 0x73
    4830:	23220071 	teqcs	r2, #113	; 0x71
    4834:	13d29f04 	bicsne	r9, r2, #4, 30
    4838:	13d40800 	bicsne	r0, r4, #0, 16
    483c:	000a0800 	andeq	r0, sl, r0, lsl #16
    4840:	24327f73 	ldrtcs	r7, [r2], #-3955	; 0xf73
    4844:	23220071 	teqcs	r2, #113	; 0x71
    4848:	00009f04 	andeq	r9, r0, r4, lsl #30
    484c:	00000000 	andeq	r0, r0, r0
    4850:	13d60000 	bicsne	r0, r6, #0
    4854:	13e80800 	mvnne	r0, #0, 16
    4858:	00010800 	andeq	r0, r1, r0, lsl #16
    485c:	0013f450 	andseq	pc, r3, r0, asr r4	; <UNPREDICTABLE>
    4860:	0013f608 	andseq	pc, r3, r8, lsl #12
    4864:	73000a08 	movwvc	r0, #2568	; 0xa08
    4868:	70243100 	eorvc	r3, r4, r0, lsl #2
    486c:	02232200 	eoreq	r2, r3, #0, 4
    4870:	0013f69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
    4874:	0013f808 	andseq	pc, r3, r8, lsl #16
    4878:	73000a08 	movwvc	r0, #2568	; 0xa08
    487c:	7024317f 	eorvc	r3, r4, pc, ror r1
    4880:	02232200 	eoreq	r2, r3, #0, 4
    4884:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4888:	00000000 	andeq	r0, r0, r0
    488c:	0013d600 	andseq	sp, r3, r0, lsl #12
    4890:	0013dc08 	andseq	sp, r3, r8, lsl #24
    4894:	51000108 	tstpl	r0, r8, lsl #2
    4898:	080013dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, ip}
    489c:	080013fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, ip}
    48a0:	01f30004 	mvnseq	r0, r4
    48a4:	00009f51 	andeq	r9, r0, r1, asr pc
    48a8:	00000000 	andeq	r0, r0, r0
    48ac:	13d60000 	bicsne	r0, r6, #0
    48b0:	13de0800 	bicsne	r0, lr, #0, 16
    48b4:	00010800 	andeq	r0, r1, r0, lsl #16
    48b8:	0013de52 	andseq	sp, r3, r2, asr lr
    48bc:	0013fa08 	andseq	pc, r3, r8, lsl #20
    48c0:	f3000408 	vshl.u8	d0, d8, d0
    48c4:	009f5201 	addseq	r5, pc, r1, lsl #4
    48c8:	00000000 	andeq	r0, r0, r0
    48cc:	e6000000 	str	r0, [r0], -r0
    48d0:	e8080013 	stmda	r8, {r0, r1, r4}
    48d4:	01080013 	tsteq	r8, r3, lsl r0
    48d8:	13e85200 	mvnne	r5, #0, 4
    48dc:	13f40800 	mvnsne	r0, #0, 16
    48e0:	000f0800 	andeq	r0, pc, r0, lsl #16
    48e4:	0a5201f3 	beq	14850b8 <__Stack_Size+0x1484cb8>
    48e8:	231affff 	tstcs	sl, #1020	; 0x3fc
    48ec:	73263101 	teqvc	r6, #1073741824	; 0x40000000
    48f0:	f49f1c00 			; <UNDEFINED> instruction: 0xf49f1c00
    48f4:	f6080013 			; <UNDEFINED> instruction: 0xf6080013
    48f8:	10080013 	andne	r0, r8, r3, lsl r0
    48fc:	5201f300 	andpl	pc, r1, #0, 6
    4900:	1affff0a 	bne	4530 <__Stack_Size+0x4130>
    4904:	26310123 	ldrtcs	r0, [r1], -r3, lsr #2
    4908:	22200073 	eorcs	r0, r0, #115	; 0x73
    490c:	0013f69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
    4910:	0013fa08 	andseq	pc, r3, r8, lsl #20
    4914:	f3000f08 	vpmax.f32	d0, d0, d8
    4918:	ff0a5201 			; <UNDEFINED> instruction: 0xff0a5201
    491c:	01231aff 	strdeq	r1, [r3, -pc]!
    4920:	00732631 	rsbseq	r2, r3, r1, lsr r6
    4924:	00009f1c 	andeq	r9, r0, ip, lsl pc
    4928:	00000000 	andeq	r0, r0, r0
    492c:	13e60000 	mvnne	r0, #0
    4930:	13e80800 	mvnne	r0, #0, 16
    4934:	00010800 	andeq	r0, r1, r0, lsl #16
    4938:	0013ec51 	andseq	lr, r3, r1, asr ip
    493c:	0013f608 	andseq	pc, r3, r8, lsl #12
    4940:	73000a08 	movwvc	r0, #2568	; 0xa08
    4944:	71243200 	teqvc	r4, r0, lsl #4
    4948:	04232200 	strteq	r2, [r3], #-512	; 0x200
    494c:	0013f69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
    4950:	0013f808 	andseq	pc, r3, r8, lsl #16
    4954:	73000a08 	movwvc	r0, #2568	; 0xa08
    4958:	7124327f 	teqvc	r4, pc, ror r2
    495c:	04232200 	strteq	r2, [r3], #-512	; 0x200
    4960:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4970:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    497c:	01f30004 	mvnseq	r0, r4
    4980:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4990:	00010000 	andeq	r0, r1, r0
    4994:	00000050 	andeq	r0, r0, r0, asr r0
    4998:	00000000 	andeq	r0, r0, r0
    499c:	f3000400 	vshl.u8	d0, d0, d0
    49a0:	009f5001 	addseq	r5, pc, r1
    49a4:	00000000 	andeq	r0, r0, r0
    49a8:	0c000000 	stceq	0, cr0, [r0], {-0}
    49ac:	0e080014 	mcreq	0, 0, r0, cr8, cr4, {0}
    49b0:	01080014 	tsteq	r8, r4, lsl r0
    49b4:	140e5000 	strne	r5, [lr], #-0
    49b8:	14280800 	strtne	r0, [r8], #-2048	; 0x800
    49bc:	00040800 	andeq	r0, r4, r0, lsl #16
    49c0:	9f5001f3 	svcls	0x005001f3
	...
    49cc:	0800140c 	stmdaeq	r0, {r2, r3, sl, ip}
    49d0:	08001422 	stmdaeq	r0, {r1, r5, sl, ip}
    49d4:	22510001 	subscs	r0, r1, #1
    49d8:	28080014 	stmdacs	r8, {r2, r4}
    49dc:	04080014 	streq	r0, [r8], #-20
    49e0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    49e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    49f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a00:	01f30004 	mvnseq	r0, r4
    4a04:	00009f50 	andeq	r9, r0, r0, asr pc
    4a08:	00000000 	andeq	r0, r0, r0
    4a0c:	14280000 	strtne	r0, [r8], #-0
    4a10:	142a0800 	strtne	r0, [sl], #-2048	; 0x800
    4a14:	00010800 	andeq	r0, r1, r0, lsl #16
    4a18:	00142a50 	andseq	r2, r4, r0, asr sl
    4a1c:	00145a08 	andseq	r5, r4, r8, lsl #20
    4a20:	f3000408 	vshl.u8	d0, d8, d0
    4a24:	009f5001 	addseq	r5, pc, r1
    4a28:	00000000 	andeq	r0, r0, r0
    4a2c:	40000000 	andmi	r0, r0, r0
    4a30:	52080014 	andpl	r0, r8, #20
    4a34:	01080014 	tsteq	r8, r4, lsl r0
    4a38:	00005300 	andeq	r5, r0, r0, lsl #6
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	145a0000 	ldrbne	r0, [sl], #-0
    4a44:	145c0800 	ldrbne	r0, [ip], #-2048	; 0x800
    4a48:	00010800 	andeq	r0, r1, r0, lsl #16
    4a4c:	00145c50 	andseq	r5, r4, r0, asr ip
    4a50:	00148c08 	andseq	r8, r4, r8, lsl #24
    4a54:	f3000408 	vshl.u8	d0, d8, d0
    4a58:	009f5001 	addseq	r5, pc, r1
    4a5c:	00000000 	andeq	r0, r0, r0
    4a60:	72000000 	andvc	r0, r0, #0
    4a64:	84080014 	strhi	r0, [r8], #-20
    4a68:	01080014 	tsteq	r8, r4, lsl r0
    4a6c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4a7c:	00010000 	andeq	r0, r1, r0
    4a80:	00000050 	andeq	r0, r0, r0, asr r0
    4a84:	00000000 	andeq	r0, r0, r0
    4a88:	f3000400 	vshl.u8	d0, d0, d0
    4a8c:	009f5001 	addseq	r5, pc, r1
	...
    4a9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4aa0:	00005000 	andeq	r5, r0, r0
    4aa4:	00000000 	andeq	r0, r0, r0
    4aa8:	00040000 	andeq	r0, r4, r0
    4aac:	9f5001f3 	svcls	0x005001f3
	...
    4ac0:	00500001 	subseq	r0, r0, r1
    4ac4:	00000000 	andeq	r0, r0, r0
    4ac8:	04000000 	streq	r0, [r0], #-0
    4acc:	5001f300 	andpl	pc, r1, r0, lsl #6
    4ad0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ad4:	00000000 	andeq	r0, r0, r0
    4ad8:	00148c00 	andseq	r8, r4, r0, lsl #24
    4adc:	00148e08 	andseq	r8, r4, r8, lsl #28
    4ae0:	50000108 	andpl	r0, r0, r8, lsl #2
    4ae4:	0800148e 	stmdaeq	r0, {r1, r2, r3, r7, sl, ip}
    4ae8:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
    4aec:	01f30004 	mvnseq	r0, r4
    4af0:	00009f50 	andeq	r9, r0, r0, asr pc
    4af4:	00000000 	andeq	r0, r0, r0
    4af8:	14a20000 	strtne	r0, [r2], #0
    4afc:	14a60800 	strtne	r0, [r6], #2048	; 0x800
    4b00:	00060800 	andeq	r0, r6, r0, lsl #16
    4b04:	30080073 	andcc	r0, r8, r3, ror r0
    4b08:	14a69f27 	strtne	r9, [r6], #3879	; 0xf27
    4b0c:	14aa0800 	strtne	r0, [sl], #2048	; 0x800
    4b10:	00090800 	andeq	r0, r9, r0, lsl #16
    4b14:	30080073 	andcc	r0, r8, r3, ror r0
    4b18:	27300827 	ldrcs	r0, [r0, -r7, lsr #16]!
    4b1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b20:	00000000 	andeq	r0, r0, r0
    4b24:	0014b200 	andseq	fp, r4, r0, lsl #4
    4b28:	0014b408 	andseq	fp, r4, r8, lsl #8
    4b2c:	50000108 	andpl	r0, r0, r8, lsl #2
    4b30:	080014b4 	stmdaeq	r0, {r2, r4, r5, r7, sl, ip}
    4b34:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
    4b38:	01f30004 	mvnseq	r0, r4
    4b3c:	00009f50 	andeq	r9, r0, r0, asr pc
    4b40:	00000000 	andeq	r0, r0, r0
    4b44:	14c80000 	strbne	r0, [r8], #0
    4b48:	14cc0800 	strbne	r0, [ip], #2048	; 0x800
    4b4c:	00070800 	andeq	r0, r7, r0, lsl #16
    4b50:	000a0073 	andeq	r0, sl, r3, ror r0
    4b54:	cc9f2730 	ldcgt	7, cr2, [pc], {48}	; 0x30
    4b58:	d0080014 	andle	r0, r8, r4, lsl r0
    4b5c:	0b080014 	bleq	204bb4 <__Stack_Size+0x2047b4>
    4b60:	0a007300 	beq	21768 <__Stack_Size+0x21368>
    4b64:	0a273000 	beq	9d0b6c <__Stack_Size+0x9d076c>
    4b68:	9f273000 	svcls	0x00273000
	...
    4b7c:	00500001 	subseq	r0, r0, r1
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	04000000 	streq	r0, [r0], #-0
    4b88:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4b9c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4ba8:	01f30004 	mvnseq	r0, r4
    4bac:	00009f50 	andeq	r9, r0, r0, asr pc
    4bb0:	00000000 	andeq	r0, r0, r0
    4bb4:	14d80000 	ldrbne	r0, [r8], #0
    4bb8:	14da0800 	ldrbne	r0, [sl], #2048	; 0x800
    4bbc:	00010800 	andeq	r0, r1, r0, lsl #16
    4bc0:	0014da50 	andseq	sp, r4, r0, asr sl
    4bc4:	0014f808 	andseq	pc, r4, r8, lsl #16
    4bc8:	f3000408 	vshl.u8	d0, d8, d0
    4bcc:	009f5001 	addseq	r5, pc, r1
	...
    4bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    4be0:	00005000 	andeq	r5, r0, r0
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	00040000 	andeq	r0, r4, r0
    4bec:	9f5001f3 	svcls	0x005001f3
	...
    4c00:	00500001 	subseq	r0, r0, r1
    4c04:	00000000 	andeq	r0, r0, r0
    4c08:	04000000 	streq	r0, [r0], #-0
    4c0c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c10:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4c20:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4c2c:	01f30004 	mvnseq	r0, r4
    4c30:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4c40:	00010000 	andeq	r0, r1, r0
    4c44:	00000050 	andeq	r0, r0, r0, asr r0
    4c48:	00000000 	andeq	r0, r0, r0
    4c4c:	f3000400 	vshl.u8	d0, d0, d0
    4c50:	009f5001 	addseq	r5, pc, r1
	...
    4c60:	01000000 	mrseq	r0, (UNDEF: 0)
    4c64:	00005000 	andeq	r5, r0, r0
    4c68:	00000000 	andeq	r0, r0, r0
    4c6c:	00040000 	andeq	r0, r4, r0
    4c70:	9f5001f3 	svcls	0x005001f3
	...
    4c84:	00500001 	subseq	r0, r0, r1
    4c88:	00000000 	andeq	r0, r0, r0
    4c8c:	04000000 	streq	r0, [r0], #-0
    4c90:	5001f300 	andpl	pc, r1, r0, lsl #6
    4c94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ca4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4cb0:	01f30004 	mvnseq	r0, r4
    4cb4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4cc4:	00010000 	andeq	r0, r1, r0
    4cc8:	00000050 	andeq	r0, r0, r0, asr r0
    4ccc:	00000000 	andeq	r0, r0, r0
    4cd0:	f3000400 	vshl.u8	d0, d0, d0
    4cd4:	009f5001 	addseq	r5, pc, r1
	...
    4ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ce8:	00005000 	andeq	r5, r0, r0
    4cec:	00000000 	andeq	r0, r0, r0
    4cf0:	00040000 	andeq	r0, r4, r0
    4cf4:	9f5001f3 	svcls	0x005001f3
	...
    4d00:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
    4d04:	080014fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, ip}
    4d08:	fa500001 	blx	1404d14 <__Stack_Size+0x1404914>
    4d0c:	1c080014 	stcne	0, cr0, [r8], {20}
    4d10:	04080015 	streq	r0, [r8], #-21
    4d14:	5001f300 	andpl	pc, r1, r0, lsl #6
    4d18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4d1c:	00000000 	andeq	r0, r0, r0
    4d20:	00151c00 	andseq	r1, r5, r0, lsl #24
    4d24:	00151e08 	andseq	r1, r5, r8, lsl #28
    4d28:	50000108 	andpl	r0, r0, r8, lsl #2
    4d2c:	0800151e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl, ip}
    4d30:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
    4d34:	01f30004 	mvnseq	r0, r4
    4d38:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4d48:	00010000 	andeq	r0, r1, r0
    4d4c:	00000050 	andeq	r0, r0, r0, asr r0
    4d50:	00000000 	andeq	r0, r0, r0
    4d54:	f3000400 	vshl.u8	d0, d0, d0
    4d58:	009f5001 	addseq	r5, pc, r1
	...
    4d68:	01000000 	mrseq	r0, (UNDEF: 0)
    4d6c:	00005100 	andeq	r5, r0, r0, lsl #2
    4d70:	00000000 	andeq	r0, r0, r0
    4d74:	00040000 	andeq	r0, r4, r0
    4d78:	9f5101f3 	svcls	0x005101f3
	...
    4d8c:	00500001 	subseq	r0, r0, r1
    4d90:	00000000 	andeq	r0, r0, r0
    4d94:	04000000 	streq	r0, [r0], #-0
    4d98:	5001f300 	andpl	pc, r1, r0, lsl #6
    4d9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4da0:	00000000 	andeq	r0, r0, r0
    4da4:	00154000 	andseq	r4, r5, r0
    4da8:	00154e08 	andseq	r4, r5, r8, lsl #28
    4dac:	50000108 	andpl	r0, r0, r8, lsl #2
    4db0:	0800154e 	stmdaeq	r0, {r1, r2, r3, r6, r8, sl, ip}
    4db4:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
    4db8:	01f30004 	mvnseq	r0, r4
    4dbc:	00009f50 	andeq	r9, r0, r0, asr pc
    4dc0:	00000000 	andeq	r0, r0, r0
    4dc4:	15400000 	strbne	r0, [r0, #-0]
    4dc8:	15440800 	strbne	r0, [r4, #-2048]	; 0x800
    4dcc:	00010800 	andeq	r0, r1, r0, lsl #16
    4dd0:	00154451 	andseq	r4, r5, r1, asr r4
    4dd4:	00156008 	andseq	r6, r5, r8
    4dd8:	f3000408 	vshl.u8	d0, d8, d0
    4ddc:	009f5101 	addseq	r5, pc, r1, lsl #2
    4de0:	00000000 	andeq	r0, r0, r0
    4de4:	60000000 	andvs	r0, r0, r0
    4de8:	6e080015 	mcrvs	0, 0, r0, cr8, cr5, {0}
    4dec:	01080015 	tsteq	r8, r5, lsl r0
    4df0:	156e5000 	strbne	r5, [lr, #-0]!
    4df4:	15800800 	strne	r0, [r0, #2048]	; 0x800
    4df8:	00040800 	andeq	r0, r4, r0, lsl #16
    4dfc:	9f5001f3 	svcls	0x005001f3
	...
    4e08:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
    4e0c:	08001564 	stmdaeq	r0, {r2, r5, r6, r8, sl, ip}
    4e10:	64510001 	ldrbvs	r0, [r1], #-1
    4e14:	80080015 	andhi	r0, r8, r5, lsl r0
    4e18:	04080015 	streq	r0, [r8], #-21
    4e1c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4e20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e24:	00000000 	andeq	r0, r0, r0
    4e28:	00158000 	andseq	r8, r5, r0
    4e2c:	00158a08 	andseq	r8, r5, r8, lsl #20
    4e30:	50000108 	andpl	r0, r0, r8, lsl #2
    4e34:	0800158a 	stmdaeq	r0, {r1, r3, r7, r8, sl, ip}
    4e38:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
    4e3c:	01f30004 	mvnseq	r0, r4
    4e40:	00009f50 	andeq	r9, r0, r0, asr pc
    4e44:	00000000 	andeq	r0, r0, r0
    4e48:	159c0000 	ldrne	r0, [ip]
    4e4c:	15a60800 	strne	r0, [r6, #2048]!	; 0x800
    4e50:	00010800 	andeq	r0, r1, r0, lsl #16
    4e54:	0015a650 	andseq	sl, r5, r0, asr r6
    4e58:	0015b808 	andseq	fp, r5, r8, lsl #16
    4e5c:	f3000408 	vshl.u8	d0, d8, d0
    4e60:	009f5001 	addseq	r5, pc, r1
    4e64:	00000000 	andeq	r0, r0, r0
    4e68:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    4e6c:	c2080015 	andgt	r0, r8, #21
    4e70:	01080015 	tsteq	r8, r5, lsl r0
    4e74:	15c25000 	strbne	r5, [r2]
    4e78:	15d40800 	ldrbne	r0, [r4, #2048]	; 0x800
    4e7c:	00040800 	andeq	r0, r4, r0, lsl #16
    4e80:	9f5001f3 	svcls	0x005001f3
	...
    4e94:	00510001 	subseq	r0, r1, r1
    4e98:	00000000 	andeq	r0, r0, r0
    4e9c:	04000000 	streq	r0, [r0], #-0
    4ea0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4ea4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ea8:	00000000 	andeq	r0, r0, r0
    4eac:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4eb8:	01f30004 	mvnseq	r0, r4
    4ebc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    4ecc:	00010000 	andeq	r0, r1, r0
    4ed0:	00000053 	andeq	r0, r0, r3, asr r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	53000100 	movwpl	r0, #256	; 0x100
	...
    4ee4:	00530001 	subseq	r0, r3, r1
    4ee8:	00000000 	andeq	r0, r0, r0
    4eec:	d4000000 	strle	r0, [r0], #-0
    4ef0:	e0080015 	and	r0, r8, r5, lsl r0
    4ef4:	01080015 	tsteq	r8, r5, lsl r0
    4ef8:	15e05000 	strbne	r5, [r0, #0]!
    4efc:	16140800 	ldrne	r0, [r4], -r0, lsl #16
    4f00:	00040800 	andeq	r0, r4, r0, lsl #16
    4f04:	9f5001f3 	svcls	0x005001f3
	...
    4f10:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
    4f14:	08001602 	stmdaeq	r0, {r1, r9, sl, ip}
    4f18:	02510001 	subseq	r0, r1, #1
    4f1c:	14080016 	strne	r0, [r8], #-22
    4f20:	04080016 	streq	r0, [r8], #-22
    4f24:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4f28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4f2c:	00000000 	andeq	r0, r0, r0
    4f30:	0015ec00 	andseq	lr, r5, r0, lsl #24
    4f34:	0015f408 	andseq	pc, r5, r8, lsl #8
    4f38:	53000108 	movwpl	r0, #264	; 0x108
    4f3c:	080015f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, ip}
    4f40:	080015f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl, ip}
    4f44:	00710005 	rsbseq	r0, r1, r5
    4f48:	f69f2535 			; <UNDEFINED> instruction: 0xf69f2535
    4f4c:	f8080015 			; <UNDEFINED> instruction: 0xf8080015
    4f50:	01080015 	tsteq	r8, r5, lsl r0
    4f54:	16005300 	strne	r5, [r0], -r0, lsl #6
    4f58:	16080800 	strne	r0, [r8], -r0, lsl #16
    4f5c:	00010800 	andeq	r0, r1, r0, lsl #16
    4f60:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4f70:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4f7c:	01f30004 	mvnseq	r0, r4
    4f80:	00009f50 	andeq	r9, r0, r0, asr pc
    4f84:	00000000 	andeq	r0, r0, r0
    4f88:	16140000 	ldrne	r0, [r4], -r0
    4f8c:	161e0800 	ldrne	r0, [lr], -r0, lsl #16
    4f90:	00010800 	andeq	r0, r1, r0, lsl #16
    4f94:	00161e50 	andseq	r1, r6, r0, asr lr
    4f98:	00163408 	andseq	r3, r6, r8, lsl #8
    4f9c:	f3000408 	vshl.u8	d0, d8, d0
    4fa0:	009f5001 	addseq	r5, pc, r1
	...
    4fb0:	01000000 	mrseq	r0, (UNDEF: 0)
    4fb4:	00005000 	andeq	r5, r0, r0
    4fb8:	00000000 	andeq	r0, r0, r0
    4fbc:	00040000 	andeq	r0, r4, r0
    4fc0:	9f5001f3 	svcls	0x005001f3
	...
    4fd4:	00510001 	subseq	r0, r1, r1
    4fd8:	00000000 	andeq	r0, r0, r0
    4fdc:	04000000 	streq	r0, [r0], #-0
    4fe0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4fe4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ff4:	52000100 	andpl	r0, r0, #0, 2
	...
    5000:	01f30004 	mvnseq	r0, r4
    5004:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    5014:	00010000 	andeq	r0, r1, r0
    5018:	00000050 	andeq	r0, r0, r0, asr r0
    501c:	00000000 	andeq	r0, r0, r0
    5020:	f3000400 	vshl.u8	d0, d0, d0
    5024:	009f5001 	addseq	r5, pc, r1
	...
    5034:	01000000 	mrseq	r0, (UNDEF: 0)
    5038:	00005100 	andeq	r5, r0, r0, lsl #2
    503c:	00000000 	andeq	r0, r0, r0
    5040:	00040000 	andeq	r0, r4, r0
    5044:	9f5101f3 	svcls	0x005101f3
	...
    5058:	00500001 	subseq	r0, r0, r1
    505c:	00000000 	andeq	r0, r0, r0
    5060:	04000000 	streq	r0, [r0], #-0
    5064:	5001f300 	andpl	pc, r1, r0, lsl #6
    5068:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5078:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5084:	01f30004 	mvnseq	r0, r4
    5088:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5098:	00010000 	andeq	r0, r1, r0
    509c:	00000050 	andeq	r0, r0, r0, asr r0
    50a0:	00000000 	andeq	r0, r0, r0
    50a4:	f3000400 	vshl.u8	d0, d0, d0
    50a8:	009f5001 	addseq	r5, pc, r1
	...
    50b8:	01000000 	mrseq	r0, (UNDEF: 0)
    50bc:	00005000 	andeq	r5, r0, r0
    50c0:	00000000 	andeq	r0, r0, r0
    50c4:	00040000 	andeq	r0, r4, r0
    50c8:	9f5001f3 	svcls	0x005001f3
	...
    50dc:	00500001 	subseq	r0, r0, r1
    50e0:	00000000 	andeq	r0, r0, r0
    50e4:	04000000 	streq	r0, [r0], #-0
    50e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    50ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    50f0:	00000000 	andeq	r0, r0, r0
    50f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5100:	01f30004 	mvnseq	r0, r4
    5104:	00009f50 	andeq	r9, r0, r0, asr pc
    5108:	00000000 	andeq	r0, r0, r0
    510c:	00010000 	andeq	r0, r1, r0
    5110:	00000050 	andeq	r0, r0, r0, asr r0
	...
    5120:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    512c:	01f30004 	mvnseq	r0, r4
    5130:	00009f51 	andeq	r9, r0, r1, asr pc
    5134:	00000000 	andeq	r0, r0, r0
    5138:	00010000 	andeq	r0, r1, r0
    513c:	00000051 	andeq	r0, r0, r1, asr r0
    5140:	00000000 	andeq	r0, r0, r0
    5144:	f3000400 	vshl.u8	d0, d0, d0
    5148:	009f5101 	addseq	r5, pc, r1, lsl #2
    514c:	00000000 	andeq	r0, r0, r0
    5150:	01000000 	mrseq	r0, (UNDEF: 0)
    5154:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5164:	00010000 	andeq	r0, r1, r0
    5168:	00000052 	andeq	r0, r0, r2, asr r0
    516c:	00000000 	andeq	r0, r0, r0
    5170:	f3000400 	vshl.u8	d0, d0, d0
    5174:	009f5201 	addseq	r5, pc, r1, lsl #4
    5178:	00000000 	andeq	r0, r0, r0
    517c:	01000000 	mrseq	r0, (UNDEF: 0)
    5180:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5190:	00010000 	andeq	r0, r1, r0
    5194:	00000051 	andeq	r0, r0, r1, asr r0
    5198:	00000000 	andeq	r0, r0, r0
    519c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    51b0:	00530001 	subseq	r0, r3, r1
    51b4:	00000000 	andeq	r0, r0, r0
    51b8:	05000000 	streq	r0, [r0, #-0]
    51bc:	35007200 	strcc	r7, [r0, #-512]	; 0x200
    51c0:	00009f25 	andeq	r9, r0, r5, lsr #30
    51c4:	00000000 	andeq	r0, r0, r0
    51c8:	00010000 	andeq	r0, r1, r0
    51cc:	00000053 	andeq	r0, r0, r3, asr r0
    51d0:	00000000 	andeq	r0, r0, r0
    51d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    51e8:	00530001 	subseq	r0, r3, r1
    51ec:	00000000 	andeq	r0, r0, r0
    51f0:	01000000 	mrseq	r0, (UNDEF: 0)
    51f4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5204:	00010000 	andeq	r0, r1, r0
    5208:	00000051 	andeq	r0, r0, r1, asr r0
    520c:	00000000 	andeq	r0, r0, r0
    5210:	72000500 	andvc	r0, r0, #0, 10
    5214:	9f253500 	svcls	0x00253500
	...
    5220:	00510001 	subseq	r0, r1, r1
    5224:	00000000 	andeq	r0, r0, r0
    5228:	01000000 	mrseq	r0, (UNDEF: 0)
    522c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    523c:	00010000 	andeq	r0, r1, r0
    5240:	00000050 	andeq	r0, r0, r0, asr r0
    5244:	00000000 	andeq	r0, r0, r0
    5248:	f3000400 	vshl.u8	d0, d0, d0
    524c:	009f5001 	addseq	r5, pc, r1
    5250:	00000000 	andeq	r0, r0, r0
    5254:	01000000 	mrseq	r0, (UNDEF: 0)
    5258:	00005000 	andeq	r5, r0, r0
    525c:	00000000 	andeq	r0, r0, r0
    5260:	00040000 	andeq	r0, r4, r0
    5264:	9f5001f3 	svcls	0x005001f3
	...
    5278:	00510001 	subseq	r0, r1, r1
    527c:	00000000 	andeq	r0, r0, r0
    5280:	04000000 	streq	r0, [r0], #-0
    5284:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5288:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    528c:	00000000 	andeq	r0, r0, r0
    5290:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    52a4:	00520001 	subseq	r0, r2, r1
    52a8:	00000000 	andeq	r0, r0, r0
    52ac:	04000000 	streq	r0, [r0], #-0
    52b0:	5201f300 	andpl	pc, r1, #0, 6
    52b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    52b8:	00000000 	andeq	r0, r0, r0
    52bc:	52000100 	andpl	r0, r0, #0, 2
	...
    52d0:	00510001 	subseq	r0, r1, r1
	...
    52e0:	01000000 	mrseq	r0, (UNDEF: 0)
    52e4:	00005300 	andeq	r5, r0, r0, lsl #6
    52e8:	00000000 	andeq	r0, r0, r0
    52ec:	00050000 	andeq	r0, r5, r0
    52f0:	25350072 	ldrcs	r0, [r5, #-114]!	; 0x72
    52f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    52f8:	00000000 	andeq	r0, r0, r0
    52fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    5308:	00530001 	subseq	r0, r3, r1
	...
    5318:	01000000 	mrseq	r0, (UNDEF: 0)
    531c:	00005000 	andeq	r5, r0, r0
    5320:	00000000 	andeq	r0, r0, r0
    5324:	00040000 	andeq	r0, r4, r0
    5328:	9f5001f3 	svcls	0x005001f3
	...
    5334:	00500001 	subseq	r0, r0, r1
    5338:	00000000 	andeq	r0, r0, r0
    533c:	04000000 	streq	r0, [r0], #-0
    5340:	5001f300 	andpl	pc, r1, r0, lsl #6
    5344:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5354:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5360:	01f30004 	mvnseq	r0, r4
    5364:	00009f51 	andeq	r9, r0, r1, asr pc
    5368:	00000000 	andeq	r0, r0, r0
    536c:	00010000 	andeq	r0, r1, r0
    5370:	00000051 	andeq	r0, r0, r1, asr r0
	...
    5380:	52000100 	andpl	r0, r0, #0, 2
	...
    538c:	01f30004 	mvnseq	r0, r4
    5390:	00009f52 	andeq	r9, r0, r2, asr pc
    5394:	00000000 	andeq	r0, r0, r0
    5398:	00010000 	andeq	r0, r1, r0
    539c:	00000052 	andeq	r0, r0, r2, asr r0
	...
    53ac:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    53c0:	00530001 	subseq	r0, r3, r1
    53c4:	00000000 	andeq	r0, r0, r0
    53c8:	05000000 	streq	r0, [r0, #-0]
    53cc:	35007200 	strcc	r7, [r0, #-512]	; 0x200
    53d0:	00009f25 	andeq	r9, r0, r5, lsr #30
    53d4:	00000000 	andeq	r0, r0, r0
    53d8:	00010000 	andeq	r0, r1, r0
    53dc:	00000053 	andeq	r0, r0, r3, asr r0
    53e0:	00000000 	andeq	r0, r0, r0
    53e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    53f8:	00500001 	subseq	r0, r0, r1
    53fc:	00000000 	andeq	r0, r0, r0
    5400:	04000000 	streq	r0, [r0], #-0
    5404:	5001f300 	andpl	pc, r1, r0, lsl #6
    5408:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5418:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5424:	01f30004 	mvnseq	r0, r4
    5428:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5438:	00010000 	andeq	r0, r1, r0
    543c:	00000050 	andeq	r0, r0, r0, asr r0
    5440:	00000000 	andeq	r0, r0, r0
    5444:	f3000400 	vshl.u8	d0, d0, d0
    5448:	009f5001 	addseq	r5, pc, r1
	...
    5458:	01000000 	mrseq	r0, (UNDEF: 0)
    545c:	00005000 	andeq	r5, r0, r0
    5460:	00000000 	andeq	r0, r0, r0
    5464:	00040000 	andeq	r0, r4, r0
    5468:	9f5001f3 	svcls	0x005001f3
	...
    5474:	00500001 	subseq	r0, r0, r1
    5478:	00000000 	andeq	r0, r0, r0
    547c:	04000000 	streq	r0, [r0], #-0
    5480:	5001f300 	andpl	pc, r1, r0, lsl #6
    5484:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5494:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54a0:	01f30004 	mvnseq	r0, r4
    54a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    54b4:	000e0000 	andeq	r0, lr, r0
    54b8:	ff080070 			; <UNDEFINED> instruction: 0xff080070
    54bc:	7124381a 	teqvc	r4, sl, lsl r8
    54c0:	1aff0800 	bne	fffc74c8 <SCS_BASE+0x1ffb94c8>
    54c4:	00009f21 	andeq	r9, r0, r1, lsr #30
    54c8:	00000000 	andeq	r0, r0, r0
    54cc:	000f0000 	andeq	r0, pc, r0
    54d0:	085001f3 	ldmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8}^
    54d4:	24381aff 	ldrtcs	r1, [r8], #-2815	; 0xaff
    54d8:	ff080071 			; <UNDEFINED> instruction: 0xff080071
    54dc:	009f211a 	addseq	r2, pc, sl, lsl r1	; <UNPREDICTABLE>
    54e0:	00000000 	andeq	r0, r0, r0
    54e4:	34000000 	strcc	r0, [r0], #-0
    54e8:	38080016 	stmdacc	r8, {r1, r2, r4}
    54ec:	01080016 	tsteq	r8, r6, lsl r0
    54f0:	16385000 	ldrtne	r5, [r8], -r0
    54f4:	163e0800 	ldrtne	r0, [lr], -r0, lsl #16
    54f8:	00040800 	andeq	r0, r4, r0, lsl #16
    54fc:	9f5001f3 	svcls	0x005001f3
	...
    5508:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
    550c:	08001638 	stmdaeq	r0, {r3, r4, r5, r9, sl, ip}
    5510:	00500001 	subseq	r0, r0, r1
    5514:	00000000 	andeq	r0, r0, r0
    5518:	34000000 	strcc	r0, [r0], #-0
    551c:	38080016 	stmdacc	r8, {r1, r2, r4}
    5520:	0d080016 	stceq	0, cr0, [r8, #-88]	; 0xffffffa8
    5524:	38007000 	stmdacc	r0, {ip, sp, lr}
    5528:	08007025 	stmdaeq	r0, {r0, r2, r5, ip, sp, lr}
    552c:	24381aff 	ldrtcs	r1, [r8], #-2815	; 0xaff
    5530:	00009f21 	andeq	r9, r0, r1, lsr #30
    5534:	00000000 	andeq	r0, r0, r0
    5538:	16600000 	strbtne	r0, [r0], -r0
    553c:	16680800 	strbtne	r0, [r8], -r0, lsl #16
    5540:	00010800 	andeq	r0, r1, r0, lsl #16
    5544:	00166850 	andseq	r6, r6, r0, asr r8
    5548:	00168408 	andseq	r8, r6, r8, lsl #8
    554c:	f3000408 	vshl.u8	d0, d8, d0
    5550:	009f5001 	addseq	r5, pc, r1
    5554:	00000000 	andeq	r0, r0, r0
    5558:	60000000 	andvs	r0, r0, r0
    555c:	6d080016 	stcvs	0, cr0, [r8, #-88]	; 0xffffffa8
    5560:	01080016 	tsteq	r8, r6, lsl r0
    5564:	166d5100 	strbtne	r5, [sp], -r0, lsl #2
    5568:	16840800 	strne	r0, [r4], r0, lsl #16
    556c:	00010800 	andeq	r0, r1, r0, lsl #16
    5570:	00000056 	andeq	r0, r0, r6, asr r0
    5574:	00000000 	andeq	r0, r0, r0
    5578:	00166000 	andseq	r6, r6, r0
    557c:	00167008 	andseq	r7, r6, r8
    5580:	30000208 	andcc	r0, r0, r8, lsl #4
    5584:	0016709f 	mulseq	r6, pc, r0	; <UNPREDICTABLE>
    5588:	00167208 	andseq	r7, r6, r8, lsl #4
    558c:	70000708 	andvc	r0, r0, r8, lsl #14
    5590:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    5594:	16729f1a 	uhadd16ne	r9, r2, sl
    5598:	16840800 	strne	r0, [r4], r0, lsl #16
    559c:	00070800 	andeq	r0, r7, r0, lsl #16
    55a0:	ff0a0074 			; <UNDEFINED> instruction: 0xff0a0074
    55a4:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    55a8:	00000000 	andeq	r0, r0, r0
    55ac:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    55b0:	d2080016 	andle	r0, r8, #22
    55b4:	07080016 	smladeq	r8, r6, r0, r0
    55b8:	0a007200 	beq	21dc0 <__Stack_Size+0x219c0>
    55bc:	9f272020 	svcls	0x00272020
    55c0:	080016d2 	stmdaeq	r0, {r1, r4, r6, r7, r9, sl, ip}
    55c4:	080016d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, sl, ip}
    55c8:	00720006 	rsbseq	r0, r2, r6
    55cc:	9f272008 	svcls	0x00272008
    55d0:	080016d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, sl, ip}
    55d4:	080016da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r9, sl, ip}
    55d8:	da520001 	ble	14855e4 <__Stack_Size+0x14851e4>
    55dc:	f3080016 	vqadd.u8	d0, d8, d6
    55e0:	0b080016 	bleq	205640 <__Stack_Size+0x205240>
    55e4:	0a007100 	beq	219ec <__Stack_Size+0x215ec>
    55e8:	0a1abfbf 	beq	6b54ec <__Stack_Size+0x6b50ec>
    55ec:	9f272020 	svcls	0x00272020
    55f0:	080016f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl, ip}
    55f4:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    55f8:	0071000b 	rsbseq	r0, r1, fp
    55fc:	1abfbf0a 	bne	feff522c <SCS_BASE+0x1efe722c>
    5600:	2720200a 	strcs	r2, [r0, -sl]!
    5604:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5608:	00000000 	andeq	r0, r0, r0
    560c:	00173600 	andseq	r3, r7, r0, lsl #12
    5610:	00176208 	andseq	r6, r7, r8, lsl #4
    5614:	53000108 	movwpl	r0, #264	; 0x108
	...
    5628:	9f300002 	svcls	0x00300002
	...
    5634:	00710007 	rsbseq	r0, r1, r7
    5638:	1affff0a 	bne	5268 <__Stack_Size+0x4e68>
    563c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5640:	00000000 	andeq	r0, r0, r0
    5644:	71000700 	tstvc	r0, r0, lsl #14
    5648:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
    564c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    5650:	00000000 	andeq	r0, r0, r0
    5654:	00020000 	andeq	r0, r2, r0
    5658:	00009f30 	andeq	r9, r0, r0, lsr pc
    565c:	00000000 	andeq	r0, r0, r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000134 	stmdaeq	r0, {r2, r4, r5, r8}
  assert_param(IS_SYSTICK_FLAG(SysTick_FLAG));

  /* Get the SysTick register index */
  tmp = SysTick_FLAG >> 3;

  if (tmp == 2) /* The flag to check is in CTRL register */
   4:	08000140 	stmdaeq	r0, {r6, r8}
  {
    statusreg = SysTick->CTRL;
   8:	00000001 	andeq	r0, r0, r1
  else          /* The flag to check is in CALIB register */
  {
    statusreg = SysTick->CALIB;
  }

  if ((statusreg & ((u32)1 << SysTick_FLAG)) != (u32)RESET)
   c:	00000001 	andeq	r0, r0, r1
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
  10:	08000140 	stmdaeq	r0, {r6, r8}
  14:	08000150 	stmdaeq	r0, {r4, r6, r8}
  18:	00000001 	andeq	r0, r0, r1
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
  30:	00000001 	andeq	r0, r0, r1
  34:	00000001 	andeq	r0, r0, r1
    /* process related endpoint register */
    wEPVal = _GetENDPOINT(EPindex);
    if ((wEPVal & EP_CTR_RX) != 0)
    {
      /* clear int flag */
      _ClearEP_CTR_RX(EPindex);
  38:	00000001 	andeq	r0, r0, r1

      /* call OUT service function */
      (*pEpInt_OUT[EPindex-1])();
  3c:	00000001 	andeq	r0, r0, r1

    } /* if((wEPVal & EP_CTR_RX) */
    else if ((wEPVal & EP_CTR_TX) != 0)
  40:	00000001 	andeq	r0, r0, r1
    {
      /* clear int flag */
      _ClearEP_CTR_TX(EPindex);
  44:	00000001 	andeq	r0, r0, r1
  48:	00000001 	andeq	r0, r0, r1
  4c:	00000001 	andeq	r0, r0, r1

      /* call IN service function */
      (*pEpInt_IN[EPindex-1])();
  50:	00000001 	andeq	r0, r0, r1
  54:	00000001 	andeq	r0, r0, r1
  58:	08000150 	stmdaeq	r0, {r4, r6, r8}
  5c:	08000162 	stmdaeq	r0, {r1, r5, r6, r8}
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	00000001 	andeq	r0, r0, r1
  6c:	00000001 	andeq	r0, r0, r1
  70:	00000001 	andeq	r0, r0, r1
  74:	00000001 	andeq	r0, r0, r1
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
  80:	08000164 	stmdaeq	r0, {r2, r5, r6, r8}
      break;            

    default:
      break;
  }
}
  84:	08000190 	stmdaeq	r0, {r4, r7, r8}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
      break;
    
    case UART5_BASE:
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
  88:	00000001 	andeq	r0, r0, r1
  8c:	00000001 	andeq	r0, r0, r1
  90:	00000001 	andeq	r0, r0, r1
  94:	00000001 	andeq	r0, r0, r1
  98:	00000001 	andeq	r0, r0, r1
  9c:	00000001 	andeq	r0, r0, r1
  a0:	00000001 	andeq	r0, r0, r1
  a4:	00000001 	andeq	r0, r0, r1
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
  a8:	00000001 	andeq	r0, r0, r1
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  ac:	00000001 	andeq	r0, r0, r1
  b0:	08000190 	stmdaeq	r0, {r4, r7, r8}
      break; 
      
    default:
      break;
  }
}
  b4:	08000238 	stmdaeq	r0, {r3, r4, r5, r9}
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
      break;
      
    case TIM8_BASE:
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
  b8:	08000238 	stmdaeq	r0, {r3, r4, r5, r9}
  bc:	0800023e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9}
  c0:	00000001 	andeq	r0, r0, r1
  c4:	00000001 	andeq	r0, r0, r1
				//USB_TxD_Dec_U8(100);
				//USB_TxDString("\%");
				//TxDString("complete!\r\n");


				if( FLASHStatus != FLASH_COMPLETE )
  c8:	00000001 	andeq	r0, r0, r1
  cc:	00000001 	andeq	r0, r0, r1
	...
				{
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
  d8:	0800023e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9}
				gbFlashDownloadStart = TRUE;
				TIM_Cmd(TIM2, ENABLE);
  dc:	08000240 	stmdaeq	r0, {r6, r9}
					FLASH_Lock();
					continue;
				}
				//USB_TxDString("\r\n Write Address : ");USB_TxDHex32(gwAddressPointer);
				USB_TxDString("Ready..\n");
				gbFlashDownloadStart = TRUE;
  e0:	08000240 	stmdaeq	r0, {r6, r9}
				TIM_Cmd(TIM2, ENABLE);
  e4:	08000242 	stmdaeq	r0, {r1, r6, r9}
				Delay(100); // some delay is needed because PC have some time to prepare data.
  e8:	08000242 	stmdaeq	r0, {r1, r6, r9}

				while(1){
					//wait until flash-download is finished
					//flash-download code is located EP3_OUT_Callback() in usb_endp.c
					//getting checksum data from Host PC(IDE)
					if(USB_Rx_Cnt != 0x0)
  ec:	08000244 	stmdaeq	r0, {r2, r6, r9}
  f0:	08000244 	stmdaeq	r0, {r2, r6, r9}
						usbRxCount = USB_Rx_Cnt;
  f4:	08000246 	stmdaeq	r0, {r1, r2, r6, r9}
  f8:	08000246 	stmdaeq	r0, {r1, r2, r6, r9}
  fc:	08000248 	stmdaeq	r0, {r3, r6, r9}
					if(CheckTimeOut()){
 100:	08000248 	stmdaeq	r0, {r3, r6, r9}
 104:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 108:	0800024a 	stmdaeq	r0, {r1, r3, r6, r9}
 10c:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
	Jump_To_Application();
	return 0;
}
void ClearTimeOutBuffer(void){

	gu32TimingCounter1ms =0;
 110:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}
					if(USB_Rx_Cnt != 0x0)
						usbRxCount = USB_Rx_Cnt;
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
 114:	0800024e 	stmdaeq	r0, {r1, r2, r3, r6, r9}
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
 118:	08000250 	stmdaeq	r0, {r4, r6, r9}
				}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
 11c:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
					if(CheckTimeOut()){
						gbFlashDownloadStart = FALSE;
						ClearTimeOutBuffer();
						TIM_Cmd(TIM2, DISABLE);
						//TxDString("\r\n Flash writing finished\r\n");
						USART_BUFFER_CLEAR
 120:	08000264 	stmdaeq	r0, {r2, r5, r6, r9}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("usbRxCount = ");	TxDHex8(usbRxCount);	TxDString("\r\n");
				TxDString("USB_Rx_Buffer = ");	TxDByte(USB_Rx_Buffer[usbRxCount-1]);	TxDString("\r\n");
#endif
				gwReceivedCheckSumFromHost = USB_Rx_Buffer[usbRxCount-1];
				gwCalculatedCheckSum = gwCalculatedCheckSum - gwReceivedCheckSumFromHost;
 124:	08000266 	stmdaeq	r0, {r1, r2, r5, r6, r9}
 128:	08000266 	stmdaeq	r0, {r1, r2, r5, r6, r9}
				/*while(!RXD_BUFFER_READY); //wait until check-sum data is received from PC
				gwReceivedCheckSumFromHost = RxDBufferFromHost();
				TxDString("\r\n gwReceivedCheckSumFromHost = ");	TxDHex32(gwReceivedCheckSumFromHost);	TxDString("\r\n");
				*/
				/* Lock again the Flash Program Erase controller */
				FLASH_Lock();
 12c:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
				gbIsFlashLock = TRUE;
 130:	08000268 	stmdaeq	r0, {r3, r5, r6, r9}
 134:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
			//	TxDString("\r\n Size:0X");TxDHex16(gwRxTotalCount);
			//	TxDString("  Checksum:"); TxDHex16((u8)(gwCalculatedCheckSum&0xff));TxDString("-");TxDHex16(gwReceivedCheckSumFromHost);
				if((gwCalculatedCheckSum&0xff) == gwReceivedCheckSumFromHost || gwReceivedCheckSumFromHost == '*' ){
 138:	0800026a 	stmdaeq	r0, {r1, r3, r5, r6, r9}
 13c:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
 140:	0800026c 	stmdaeq	r0, {r2, r3, r5, r6, r9}
 144:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
					USB_TxDString("Success..\n");
 148:	0800026e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r9}
				}
				else
					USB_TxDString("Fail..\n");
 14c:	08000270 	stmdaeq	r0, {r4, r5, r6, r9}
 150:	08000270 	stmdaeq	r0, {r4, r5, r6, r9}
			//WDTCR = 0x08;
				Delay(100);
 154:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}
 158:	08000272 	stmdaeq	r0, {r1, r4, r5, r6, r9}

			}
			else if(StringCompare(bpCommand,"AT&GO"))//else if(StringCompare(bpCommand,"GO")|| StringCompare(bpCommand,"G") || bRxData == 'g' )
 15c:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
 160:	08000274 	stmdaeq	r0, {r2, r4, r5, r6, r9}
				/*if(bParaNum == 2){
					JumpAddress =  *(u32 *)(ulpParameter[0] + 4);
				}
				else*/
				{
					JumpAddress =  *(u32 *)(FLASH_START_ADDRESS + 4);
 164:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
					USB_TxDString("\r\n Go: ");
					USB_TxDHex32(JumpAddress);
					USB_TxDString("\r\n");
				}*/

				UsbVcpDisconnect();
 168:	08000276 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9}
#ifdef DEBUG_ENABLE_BY_USART2
				TxDString("USB Power Off!\r\n");
#endif
				Delay(500);
 16c:	08000278 	stmdaeq	r0, {r3, r4, r5, r6, r9}
 170:	08000278 	stmdaeq	r0, {r3, r4, r5, r6, r9}

				Jump_To_Application();
 174:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
			}
			else{
				TxDString("No IDE Command!\r\n");
			}
			gbCount = 0;
 178:	00000001 	andeq	r0, r0, r1
			bpCommand[0]='\0';bpCommand[1]='\0';bpCommand[2]='\0';bpCommand[3]='\0';bpCommand[4]='\0';
 17c:	00000001 	andeq	r0, r0, r1
 180:	00000001 	andeq	r0, r0, r1
 184:	00000001 	andeq	r0, r0, r1
 188:	00000001 	andeq	r0, r0, r1
 18c:	00000001 	andeq	r0, r0, r1

		}
		USART_BUFFER_CLEAR;
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
		gwpUSARTBuffer[0]='\0';
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	0800027a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9}
 1b4:	0800027c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9}
 1b8:	0800027c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9}
 1bc:	0800027e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9}
 1c0:	0800027e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9}
 1c4:	08000282 	stmdaeq	r0, {r1, r7, r9}
 1c8:	08000282 	stmdaeq	r0, {r1, r7, r9}
 1cc:	08000284 	stmdaeq	r0, {r2, r7, r9}
 1d0:	08000284 	stmdaeq	r0, {r2, r7, r9}
 1d4:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
 1d8:	08000286 	stmdaeq	r0, {r1, r2, r7, r9}
 1dc:	08000288 	stmdaeq	r0, {r3, r7, r9}
 1e0:	08000288 	stmdaeq	r0, {r3, r7, r9}
 1e4:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
 1e8:	0800028a 	stmdaeq	r0, {r1, r3, r7, r9}
 1ec:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
 1f0:	0800028c 	stmdaeq	r0, {r2, r3, r7, r9}
 1f4:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
 1f8:	0800028e 	stmdaeq	r0, {r1, r2, r3, r7, r9}
 1fc:	08000290 	stmdaeq	r0, {r4, r7, r9}
 200:	08000290 	stmdaeq	r0, {r4, r7, r9}
 204:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
 208:	080002a4 	stmdaeq	r0, {r2, r5, r7, r9}
 20c:	080002a6 	stmdaeq	r0, {r1, r2, r5, r7, r9}
 210:	080002a6 	stmdaeq	r0, {r1, r2, r5, r7, r9}
 214:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
 218:	080002a8 	stmdaeq	r0, {r3, r5, r7, r9}
 21c:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
 220:	080002aa 	stmdaeq	r0, {r1, r3, r5, r7, r9}
 224:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
 228:	080002ac 	stmdaeq	r0, {r2, r3, r5, r7, r9}
 22c:	080002ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9}
 230:	080002ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9}
 234:	080002b0 	stmdaeq	r0, {r4, r5, r7, r9}
 238:	080002b0 	stmdaeq	r0, {r4, r5, r7, r9}
 23c:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
 240:	080002b2 	stmdaeq	r0, {r1, r4, r5, r7, r9}
 244:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
 248:	080002b4 	stmdaeq	r0, {r2, r4, r5, r7, r9}
 24c:	080002b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r9}
 250:	080002b8 	stmdaeq	r0, {r3, r4, r5, r7, r9}
 254:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
 258:	080002f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9}
 25c:	080002f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9}
 260:	080002f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9}
 264:	080002f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9}
 268:	080002f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9}
 26c:	080002fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9}
 270:	080002fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9}
 274:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
 278:	080002fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9}
 27c:	080002fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9}
 280:	080002fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9}
 284:	08000300 	stmdaeq	r0, {r8, r9}
 288:	08000300 	stmdaeq	r0, {r8, r9}
 28c:	08000302 	stmdaeq	r0, {r1, r8, r9}
 290:	08000302 	stmdaeq	r0, {r1, r8, r9}
 294:	08000304 	stmdaeq	r0, {r2, r8, r9}
 298:	08000304 	stmdaeq	r0, {r2, r8, r9}
 29c:	08000306 	stmdaeq	r0, {r1, r2, r8, r9}
 2a0:	08000306 	stmdaeq	r0, {r1, r2, r8, r9}
 2a4:	08000308 	stmdaeq	r0, {r3, r8, r9}
 2a8:	08000308 	stmdaeq	r0, {r3, r8, r9}
 2ac:	0800030a 	stmdaeq	r0, {r1, r3, r8, r9}
 2b0:	0800030a 	stmdaeq	r0, {r1, r3, r8, r9}
 2b4:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
 2b8:	0800030c 	stmdaeq	r0, {r2, r3, r8, r9}
 2bc:	0800030e 	stmdaeq	r0, {r1, r2, r3, r8, r9}
 2c0:	0800030e 	stmdaeq	r0, {r1, r2, r3, r8, r9}
 2c4:	08000310 	stmdaeq	r0, {r4, r8, r9}
 2c8:	08000310 	stmdaeq	r0, {r4, r8, r9}
 2cc:	08000312 	stmdaeq	r0, {r1, r4, r8, r9}
 2d0:	08000312 	stmdaeq	r0, {r1, r4, r8, r9}
 2d4:	08000314 	stmdaeq	r0, {r2, r4, r8, r9}
 2d8:	08000314 	stmdaeq	r0, {r2, r4, r8, r9}
 2dc:	08000316 	stmdaeq	r0, {r1, r2, r4, r8, r9}
 2e0:	08000316 	stmdaeq	r0, {r1, r2, r4, r8, r9}
 2e4:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
 2e8:	08000318 	stmdaeq	r0, {r3, r4, r8, r9}
 2ec:	0800031a 	stmdaeq	r0, {r1, r3, r4, r8, r9}
 2f0:	0800031a 	stmdaeq	r0, {r1, r3, r4, r8, r9}
 2f4:	0800031c 	stmdaeq	r0, {r2, r3, r4, r8, r9}
 2f8:	0800031c 	stmdaeq	r0, {r2, r3, r4, r8, r9}
 2fc:	0800031e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9}
	...
 308:	08000342 	stmdaeq	r0, {r1, r6, r8, r9}
 30c:	080003aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, r9}
 310:	080003ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9}
 314:	080003c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9}
 318:	080003c8 	stmdaeq	r0, {r3, r6, r7, r8, r9}
 31c:	080003d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9}
	...
 328:	0800031e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9}
 32c:	08000320 	stmdaeq	r0, {r5, r8, r9}
 330:	08000320 	stmdaeq	r0, {r5, r8, r9}
 334:	08000420 	stmdaeq	r0, {r5, sl}
 338:	08000420 	stmdaeq	r0, {r5, sl}
 33c:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
	...
 350:	0800047c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl}
 354:	080004e8 	stmdaeq	r0, {r3, r5, r6, r7, sl}
	...
 360:	080004e8 	stmdaeq	r0, {r3, r5, r6, r7, sl}
 364:	08000500 	stmdaeq	r0, {r8, sl}
 368:	08000500 	stmdaeq	r0, {r8, sl}
 36c:	0800050c 	stmdaeq	r0, {r2, r3, r8, sl}
 370:	0800050c 	stmdaeq	r0, {r2, r3, r8, sl}
 374:	08000520 	stmdaeq	r0, {r5, r8, sl}
 378:	08000520 	stmdaeq	r0, {r5, r8, sl}
 37c:	08000522 	stmdaeq	r0, {r1, r5, r8, sl}
 380:	08000524 	stmdaeq	r0, {r2, r5, r8, sl}
 384:	08000580 	stmdaeq	r0, {r7, r8, sl}
 388:	08000580 	stmdaeq	r0, {r7, r8, sl}
 38c:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
 390:	080005a4 	stmdaeq	r0, {r2, r5, r7, r8, sl}
 394:	080005b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl}
 398:	080005b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sl}
 39c:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
 3a0:	080005cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl}
 3a4:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 3a8:	080005f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl}
 3ac:	0800061c 	stmdaeq	r0, {r2, r3, r4, r9, sl}
 3b0:	0800061c 	stmdaeq	r0, {r2, r3, r4, r9, sl}
 3b4:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
 3b8:	080006fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl}
 3bc:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
 3c0:	08000708 	stmdaeq	r0, {r3, r8, r9, sl}
 3c4:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
 3c8:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
 3cc:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
	...
 3d8:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
 3dc:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 3e0:	08000758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl}
 3e4:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
 408:	08000790 	stmdaeq	r0, {r4, r7, r8, r9, sl}
 40c:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
 410:	080007cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl}
 414:	080007f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, sl}
	...
 420:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
 424:	08000810 	stmdaeq	r0, {r4, fp}
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
 430:	08000810 	stmdaeq	r0, {r4, fp}
 434:	08000828 	stmdaeq	r0, {r3, r5, fp}
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
 448:	00000001 	andeq	r0, r0, r1
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
 458:	00000001 	andeq	r0, r0, r1
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
 474:	00000001 	andeq	r0, r0, r1
 478:	00000001 	andeq	r0, r0, r1
 47c:	00000001 	andeq	r0, r0, r1
 480:	08000828 	stmdaeq	r0, {r3, r5, fp}
 484:	08000850 	stmdaeq	r0, {r4, r6, fp}
 488:	08000850 	stmdaeq	r0, {r4, r6, fp}
 48c:	08000886 	stmdaeq	r0, {r1, r2, r7, fp}
 490:	00000001 	andeq	r0, r0, r1
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	08000888 	stmdaeq	r0, {r3, r7, fp}
 4ac:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 4b0:	00000001 	andeq	r0, r0, r1
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
 4c4:	00000001 	andeq	r0, r0, r1
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
 4d4:	00000001 	andeq	r0, r0, r1
	...
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	080008d0 	stmdaeq	r0, {r4, r6, r7, fp}
 4f4:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	00000001 	andeq	r0, r0, r1
 504:	00000001 	andeq	r0, r0, r1
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	0800096c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp}
 524:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
 528:	08000970 	stmdaeq	r0, {r4, r5, r6, r8, fp}
 52c:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
	...
 570:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
 574:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
 578:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
 57c:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
 590:	080009e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp}
 594:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
 598:	080009fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp}
 59c:	08000a08 	stmdaeq	r0, {r3, r9, fp}
 5a0:	08000a08 	stmdaeq	r0, {r3, r9, fp}
 5a4:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
 5a8:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
 5ac:	08000a2c 	stmdaeq	r0, {r2, r3, r5, r9, fp}
 5b0:	08000a2c 	stmdaeq	r0, {r2, r3, r5, r9, fp}
 5b4:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 5b8:	08000a40 	stmdaeq	r0, {r6, r9, fp}
 5bc:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 5c0:	08000a54 	stmdaeq	r0, {r2, r4, r6, r9, fp}
 5c4:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	08000a68 	stmdaeq	r0, {r3, r5, r6, r9, fp}
 5d4:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	00000001 	andeq	r0, r0, r1
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
 614:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
 640:	00000001 	andeq	r0, r0, r1
 644:	00000001 	andeq	r0, r0, r1
 648:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
 64c:	08000ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp}
 650:	08000ab4 	stmdaeq	r0, {r2, r4, r5, r7, r9, fp}
 654:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	00000001 	andeq	r0, r0, r1
 664:	00000001 	andeq	r0, r0, r1
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
	...
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000001 	andeq	r0, r0, r1
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
	...
 690:	00000001 	andeq	r0, r0, r1
 694:	00000001 	andeq	r0, r0, r1
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
 6f0:	00000001 	andeq	r0, r0, r1
 6f4:	00000001 	andeq	r0, r0, r1
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
 720:	00000001 	andeq	r0, r0, r1
 724:	00000001 	andeq	r0, r0, r1
 728:	00000001 	andeq	r0, r0, r1
 72c:	00000001 	andeq	r0, r0, r1
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
 738:	00000001 	andeq	r0, r0, r1
 73c:	00000001 	andeq	r0, r0, r1
 740:	00000001 	andeq	r0, r0, r1
 744:	00000001 	andeq	r0, r0, r1
 748:	00000001 	andeq	r0, r0, r1
 74c:	00000001 	andeq	r0, r0, r1
 750:	00000001 	andeq	r0, r0, r1
 754:	00000001 	andeq	r0, r0, r1
 758:	00000001 	andeq	r0, r0, r1
 75c:	00000001 	andeq	r0, r0, r1
 760:	00000001 	andeq	r0, r0, r1
 764:	00000001 	andeq	r0, r0, r1
 768:	00000001 	andeq	r0, r0, r1
 76c:	00000001 	andeq	r0, r0, r1
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
 780:	00000001 	andeq	r0, r0, r1
 784:	00000001 	andeq	r0, r0, r1
 788:	00000001 	andeq	r0, r0, r1
 78c:	00000001 	andeq	r0, r0, r1
 790:	00000001 	andeq	r0, r0, r1
 794:	00000001 	andeq	r0, r0, r1
 798:	00000001 	andeq	r0, r0, r1
 79c:	00000001 	andeq	r0, r0, r1
 7a0:	00000001 	andeq	r0, r0, r1
 7a4:	00000001 	andeq	r0, r0, r1
 7a8:	00000001 	andeq	r0, r0, r1
 7ac:	00000001 	andeq	r0, r0, r1
 7b0:	00000001 	andeq	r0, r0, r1
 7b4:	00000001 	andeq	r0, r0, r1
 7b8:	00000001 	andeq	r0, r0, r1
 7bc:	00000001 	andeq	r0, r0, r1
 7c0:	00000001 	andeq	r0, r0, r1
 7c4:	00000001 	andeq	r0, r0, r1
 7c8:	00000001 	andeq	r0, r0, r1
 7cc:	00000001 	andeq	r0, r0, r1
 7d0:	00000001 	andeq	r0, r0, r1
 7d4:	00000001 	andeq	r0, r0, r1
 7d8:	00000001 	andeq	r0, r0, r1
 7dc:	00000001 	andeq	r0, r0, r1
 7e0:	00000001 	andeq	r0, r0, r1
 7e4:	00000001 	andeq	r0, r0, r1
 7e8:	00000001 	andeq	r0, r0, r1
 7ec:	00000001 	andeq	r0, r0, r1
 7f0:	00000001 	andeq	r0, r0, r1
 7f4:	00000001 	andeq	r0, r0, r1
 7f8:	00000001 	andeq	r0, r0, r1
 7fc:	00000001 	andeq	r0, r0, r1
 800:	00000001 	andeq	r0, r0, r1
 804:	00000001 	andeq	r0, r0, r1
 808:	00000001 	andeq	r0, r0, r1
 80c:	00000001 	andeq	r0, r0, r1
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	00000001 	andeq	r0, r0, r1
 81c:	00000001 	andeq	r0, r0, r1
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	00000001 	andeq	r0, r0, r1
 83c:	00000001 	andeq	r0, r0, r1
 840:	00000001 	andeq	r0, r0, r1
 844:	00000001 	andeq	r0, r0, r1
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	00000001 	andeq	r0, r0, r1
 854:	00000001 	andeq	r0, r0, r1
 858:	00000001 	andeq	r0, r0, r1
 85c:	00000001 	andeq	r0, r0, r1
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	00000001 	andeq	r0, r0, r1
 86c:	00000001 	andeq	r0, r0, r1
 870:	00000001 	andeq	r0, r0, r1
 874:	00000001 	andeq	r0, r0, r1
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	00000001 	andeq	r0, r0, r1
 88c:	00000001 	andeq	r0, r0, r1
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	00000001 	andeq	r0, r0, r1
 89c:	00000001 	andeq	r0, r0, r1
 8a0:	00000001 	andeq	r0, r0, r1
 8a4:	00000001 	andeq	r0, r0, r1
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	00000001 	andeq	r0, r0, r1
 8bc:	00000001 	andeq	r0, r0, r1
 8c0:	00000001 	andeq	r0, r0, r1
 8c4:	00000001 	andeq	r0, r0, r1
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
 8d0:	00000001 	andeq	r0, r0, r1
 8d4:	00000001 	andeq	r0, r0, r1
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	00000001 	andeq	r0, r0, r1
 904:	00000001 	andeq	r0, r0, r1
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	00000001 	andeq	r0, r0, r1
 914:	00000001 	andeq	r0, r0, r1
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	00000001 	andeq	r0, r0, r1
 92c:	00000001 	andeq	r0, r0, r1
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	00000001 	andeq	r0, r0, r1
 944:	00000001 	andeq	r0, r0, r1
 948:	00000001 	andeq	r0, r0, r1
 94c:	00000001 	andeq	r0, r0, r1
 950:	08000ae2 	stmdaeq	r0, {r1, r5, r6, r7, r9, fp}
 954:	08000aea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, fp}
	...
 960:	00000001 	andeq	r0, r0, r1
 964:	00000001 	andeq	r0, r0, r1
 968:	00000001 	andeq	r0, r0, r1
 96c:	00000001 	andeq	r0, r0, r1
 970:	08000aec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, fp}
 974:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 978:	00000001 	andeq	r0, r0, r1
 97c:	00000001 	andeq	r0, r0, r1
 980:	00000001 	andeq	r0, r0, r1
 984:	00000001 	andeq	r0, r0, r1
 988:	00000001 	andeq	r0, r0, r1
 98c:	00000001 	andeq	r0, r0, r1
	...
 998:	00000001 	andeq	r0, r0, r1
 99c:	00000001 	andeq	r0, r0, r1
 9a0:	00000001 	andeq	r0, r0, r1
 9a4:	00000001 	andeq	r0, r0, r1
 9a8:	00000001 	andeq	r0, r0, r1
 9ac:	00000001 	andeq	r0, r0, r1
 9b0:	00000001 	andeq	r0, r0, r1
 9b4:	00000001 	andeq	r0, r0, r1
 9b8:	00000001 	andeq	r0, r0, r1
 9bc:	00000001 	andeq	r0, r0, r1
 9c0:	00000001 	andeq	r0, r0, r1
 9c4:	00000001 	andeq	r0, r0, r1
 9c8:	00000001 	andeq	r0, r0, r1
 9cc:	00000001 	andeq	r0, r0, r1
 9d0:	00000001 	andeq	r0, r0, r1
 9d4:	00000001 	andeq	r0, r0, r1
 9d8:	00000001 	andeq	r0, r0, r1
 9dc:	00000001 	andeq	r0, r0, r1
 9e0:	00000001 	andeq	r0, r0, r1
 9e4:	00000001 	andeq	r0, r0, r1
 9e8:	00000001 	andeq	r0, r0, r1
 9ec:	00000001 	andeq	r0, r0, r1
 9f0:	00000001 	andeq	r0, r0, r1
 9f4:	00000001 	andeq	r0, r0, r1
 9f8:	00000001 	andeq	r0, r0, r1
 9fc:	00000001 	andeq	r0, r0, r1
 a00:	00000001 	andeq	r0, r0, r1
 a04:	00000001 	andeq	r0, r0, r1
 a08:	08000b14 	stmdaeq	r0, {r2, r4, r8, r9, fp}
 a0c:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
 a10:	00000001 	andeq	r0, r0, r1
 a14:	00000001 	andeq	r0, r0, r1
 a18:	00000001 	andeq	r0, r0, r1
 a1c:	00000001 	andeq	r0, r0, r1
 a20:	00000001 	andeq	r0, r0, r1
 a24:	00000001 	andeq	r0, r0, r1
 a28:	00000001 	andeq	r0, r0, r1
 a2c:	00000001 	andeq	r0, r0, r1
 a30:	00000001 	andeq	r0, r0, r1
 a34:	00000001 	andeq	r0, r0, r1
 a38:	00000001 	andeq	r0, r0, r1
 a3c:	00000001 	andeq	r0, r0, r1
 a40:	00000001 	andeq	r0, r0, r1
 a44:	00000001 	andeq	r0, r0, r1
 a48:	00000001 	andeq	r0, r0, r1
 a4c:	00000001 	andeq	r0, r0, r1
 a50:	00000001 	andeq	r0, r0, r1
 a54:	00000001 	andeq	r0, r0, r1
 a58:	00000001 	andeq	r0, r0, r1
 a5c:	00000001 	andeq	r0, r0, r1
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
 a68:	00000001 	andeq	r0, r0, r1
 a6c:	00000001 	andeq	r0, r0, r1
	...
 a78:	08000b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp}
 a7c:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
	...
 a88:	00000001 	andeq	r0, r0, r1
 a8c:	00000001 	andeq	r0, r0, r1
	...
 a98:	08000e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp}
 a9c:	08000e84 	stmdaeq	r0, {r2, r7, r9, sl, fp}
 aa0:	08000e88 	stmdaeq	r0, {r3, r7, r9, sl, fp}
 aa4:	08000e8a 	stmdaeq	r0, {r1, r3, r7, r9, sl, fp}
 aa8:	08000e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp}
 aac:	08000e9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, fp}
	...
 ab8:	08001068 	stmdaeq	r0, {r3, r5, r6, ip}
 abc:	0800120a 	stmdaeq	r0, {r1, r3, r9, ip}
 ac0:	08001212 	stmdaeq	r0, {r1, r4, r9, ip}
 ac4:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
	...
 ad0:	08000b6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, fp}
 ad4:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 ad8:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 adc:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 ae0:	08000bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp}
 ae4:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
 ae8:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
 aec:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}
 af0:	08000cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp}
 af4:	08000d24 	stmdaeq	r0, {r2, r5, r8, sl, fp}
 af8:	08000d24 	stmdaeq	r0, {r2, r5, r8, sl, fp}
 afc:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
 b00:	08000d6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, sl, fp}
 b04:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
 b08:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
 b0c:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
 b10:	08000ed0 	stmdaeq	r0, {r4, r6, r7, r9, sl, fp}
 b14:	08000ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp}
 b18:	08000ef4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, fp}
 b1c:	08000f10 	stmdaeq	r0, {r4, r8, r9, sl, fp}
 b20:	08000f10 	stmdaeq	r0, {r4, r8, r9, sl, fp}
 b24:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
 b28:	08000f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp}
 b2c:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
 b30:	08001238 	stmdaeq	r0, {r3, r4, r5, r9, ip}
 b34:	08001308 	stmdaeq	r0, {r3, r8, r9, ip}
 b38:	08001308 	stmdaeq	r0, {r3, r8, r9, ip}
 b3c:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
 b40:	08001348 	stmdaeq	r0, {r3, r6, r8, r9, ip}
 b44:	080013a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip}
 b48:	080013a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip}
 b4c:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
	...
 b58:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
 b5c:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
 b60:	080013d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, ip}
 b64:	080013fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, ip}
	...
 b70:	00000001 	andeq	r0, r0, r1
 b74:	00000001 	andeq	r0, r0, r1
 b78:	00000001 	andeq	r0, r0, r1
 b7c:	00000001 	andeq	r0, r0, r1
	...
 b88:	080015d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, sl, ip}
 b8c:	080015d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, ip}
 b90:	080015e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl, ip}
 b94:	08001614 	stmdaeq	r0, {r2, r4, r9, sl, ip}
	...
 ba0:	00000001 	andeq	r0, r0, r1
 ba4:	00000001 	andeq	r0, r0, r1
 ba8:	00000001 	andeq	r0, r0, r1
 bac:	00000001 	andeq	r0, r0, r1
	...
 bb8:	00000001 	andeq	r0, r0, r1
 bbc:	00000001 	andeq	r0, r0, r1
 bc0:	00000001 	andeq	r0, r0, r1
 bc4:	00000001 	andeq	r0, r0, r1
	...
 bd0:	00000001 	andeq	r0, r0, r1
 bd4:	00000001 	andeq	r0, r0, r1
 bd8:	00000001 	andeq	r0, r0, r1
 bdc:	00000001 	andeq	r0, r0, r1
 be0:	00000001 	andeq	r0, r0, r1
 be4:	00000001 	andeq	r0, r0, r1
	...
 bf0:	00000001 	andeq	r0, r0, r1
 bf4:	00000001 	andeq	r0, r0, r1
 bf8:	00000001 	andeq	r0, r0, r1
 bfc:	00000001 	andeq	r0, r0, r1
	...
 c08:	00000001 	andeq	r0, r0, r1
 c0c:	00000001 	andeq	r0, r0, r1
 c10:	00000001 	andeq	r0, r0, r1
 c14:	00000001 	andeq	r0, r0, r1
	...
 c20:	00000001 	andeq	r0, r0, r1
 c24:	00000001 	andeq	r0, r0, r1
 c28:	00000001 	andeq	r0, r0, r1
 c2c:	00000001 	andeq	r0, r0, r1
 c30:	00000001 	andeq	r0, r0, r1
 c34:	00000001 	andeq	r0, r0, r1
 c38:	00000001 	andeq	r0, r0, r1
 c3c:	00000001 	andeq	r0, r0, r1
 c40:	00000001 	andeq	r0, r0, r1
 c44:	00000001 	andeq	r0, r0, r1
 c48:	00000001 	andeq	r0, r0, r1
 c4c:	00000001 	andeq	r0, r0, r1
 c50:	00000001 	andeq	r0, r0, r1
 c54:	00000001 	andeq	r0, r0, r1
 c58:	080013fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, ip}
 c5c:	0800140c 	stmdaeq	r0, {r2, r3, sl, ip}
 c60:	00000001 	andeq	r0, r0, r1
 c64:	00000001 	andeq	r0, r0, r1
 c68:	00000001 	andeq	r0, r0, r1
 c6c:	00000001 	andeq	r0, r0, r1
 c70:	00000001 	andeq	r0, r0, r1
 c74:	00000001 	andeq	r0, r0, r1
 c78:	0800140c 	stmdaeq	r0, {r2, r3, sl, ip}
 c7c:	08001428 	stmdaeq	r0, {r3, r5, sl, ip}
 c80:	00000001 	andeq	r0, r0, r1
 c84:	00000001 	andeq	r0, r0, r1
 c88:	08001428 	stmdaeq	r0, {r3, r5, sl, ip}
 c8c:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
 c90:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
 c94:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
 c98:	00000001 	andeq	r0, r0, r1
 c9c:	00000001 	andeq	r0, r0, r1
 ca0:	00000001 	andeq	r0, r0, r1
 ca4:	00000001 	andeq	r0, r0, r1
 ca8:	00000001 	andeq	r0, r0, r1
 cac:	00000001 	andeq	r0, r0, r1
 cb0:	0800148c 	stmdaeq	r0, {r2, r3, r7, sl, ip}
 cb4:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
 cb8:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
 cbc:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
 cc0:	00000001 	andeq	r0, r0, r1
 cc4:	00000001 	andeq	r0, r0, r1
 cc8:	00000001 	andeq	r0, r0, r1
 ccc:	00000001 	andeq	r0, r0, r1
 cd0:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
 cd4:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 cd8:	00000001 	andeq	r0, r0, r1
 cdc:	00000001 	andeq	r0, r0, r1
 ce0:	00000001 	andeq	r0, r0, r1
 ce4:	00000001 	andeq	r0, r0, r1
 ce8:	00000001 	andeq	r0, r0, r1
 cec:	00000001 	andeq	r0, r0, r1
 cf0:	00000001 	andeq	r0, r0, r1
 cf4:	00000001 	andeq	r0, r0, r1
 cf8:	00000001 	andeq	r0, r0, r1
 cfc:	00000001 	andeq	r0, r0, r1
 d00:	00000001 	andeq	r0, r0, r1
 d04:	00000001 	andeq	r0, r0, r1
 d08:	00000001 	andeq	r0, r0, r1
 d0c:	00000001 	andeq	r0, r0, r1
 d10:	00000001 	andeq	r0, r0, r1
 d14:	00000001 	andeq	r0, r0, r1
 d18:	00000001 	andeq	r0, r0, r1
 d1c:	00000001 	andeq	r0, r0, r1
 d20:	080014f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip}
 d24:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
 d28:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
 d2c:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 d30:	00000001 	andeq	r0, r0, r1
 d34:	00000001 	andeq	r0, r0, r1
 d38:	00000001 	andeq	r0, r0, r1
 d3c:	00000001 	andeq	r0, r0, r1
 d40:	08001540 	stmdaeq	r0, {r6, r8, sl, ip}
 d44:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
 d48:	08001560 	stmdaeq	r0, {r5, r6, r8, sl, ip}
 d4c:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
 d50:	08001580 	stmdaeq	r0, {r7, r8, sl, ip}
 d54:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
 d58:	0800159c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, ip}
 d5c:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
 d60:	080015b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, ip}
 d64:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
 d68:	00000001 	andeq	r0, r0, r1
 d6c:	00000001 	andeq	r0, r0, r1
 d70:	080015d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, ip}
 d74:	08001614 	stmdaeq	r0, {r2, r4, r9, sl, ip}
 d78:	00000001 	andeq	r0, r0, r1
 d7c:	00000001 	andeq	r0, r0, r1
 d80:	08001614 	stmdaeq	r0, {r2, r4, r9, sl, ip}
 d84:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
 d88:	00000001 	andeq	r0, r0, r1
 d8c:	00000001 	andeq	r0, r0, r1
 d90:	00000001 	andeq	r0, r0, r1
 d94:	00000001 	andeq	r0, r0, r1
 d98:	00000001 	andeq	r0, r0, r1
 d9c:	00000001 	andeq	r0, r0, r1
 da0:	00000001 	andeq	r0, r0, r1
 da4:	00000001 	andeq	r0, r0, r1
 da8:	00000001 	andeq	r0, r0, r1
 dac:	00000001 	andeq	r0, r0, r1
 db0:	00000001 	andeq	r0, r0, r1
 db4:	00000001 	andeq	r0, r0, r1
 db8:	00000001 	andeq	r0, r0, r1
 dbc:	00000001 	andeq	r0, r0, r1
 dc0:	00000001 	andeq	r0, r0, r1
 dc4:	00000001 	andeq	r0, r0, r1
 dc8:	00000001 	andeq	r0, r0, r1
 dcc:	00000001 	andeq	r0, r0, r1
 dd0:	00000001 	andeq	r0, r0, r1
 dd4:	00000001 	andeq	r0, r0, r1
 dd8:	00000001 	andeq	r0, r0, r1
 ddc:	00000001 	andeq	r0, r0, r1
 de0:	00000001 	andeq	r0, r0, r1
 de4:	00000001 	andeq	r0, r0, r1
 de8:	00000001 	andeq	r0, r0, r1
 dec:	00000001 	andeq	r0, r0, r1
 df0:	08001634 	stmdaeq	r0, {r2, r4, r5, r9, sl, ip}
 df4:	0800163e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, sl, ip}
	...
 e00:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
 e04:	08001660 	stmdaeq	r0, {r5, r6, r9, sl, ip}
 e08:	08001660 	stmdaeq	r0, {r5, r6, r9, sl, ip}
 e0c:	08001684 	stmdaeq	r0, {r2, r7, r9, sl, ip}
	...
 e18:	08001684 	stmdaeq	r0, {r2, r7, r9, sl, ip}
 e1c:	080017f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, ip}
 e20:	00000001 	andeq	r0, r0, r1
 e24:	00000001 	andeq	r0, r0, r1
	...
